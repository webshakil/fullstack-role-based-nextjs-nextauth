/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/auth/[...nextauth]/route";
exports.ids = ["app/api/auth/[...nextauth]/route"];
exports.modules = {

/***/ "mongoose":
/*!***************************!*\
  !*** external "mongoose" ***!
  \***************************/
/***/ ((module) => {

"use strict";
module.exports = require("mongoose");

/***/ }),

/***/ "next/dist/compiled/@edge-runtime/cookies":
/*!***********************************************************!*\
  !*** external "next/dist/compiled/@edge-runtime/cookies" ***!
  \***********************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/@edge-runtime/cookies");

/***/ }),

/***/ "next/dist/compiled/@opentelemetry/api":
/*!********************************************************!*\
  !*** external "next/dist/compiled/@opentelemetry/api" ***!
  \********************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/@opentelemetry/api");

/***/ }),

/***/ "next/dist/compiled/chalk":
/*!*******************************************!*\
  !*** external "next/dist/compiled/chalk" ***!
  \*******************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/chalk");

/***/ }),

/***/ "next/dist/compiled/cookie":
/*!********************************************!*\
  !*** external "next/dist/compiled/cookie" ***!
  \********************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/cookie");

/***/ }),

/***/ "assert":
/*!*************************!*\
  !*** external "assert" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("assert");

/***/ }),

/***/ "buffer":
/*!*************************!*\
  !*** external "buffer" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("buffer");

/***/ }),

/***/ "crypto":
/*!*************************!*\
  !*** external "crypto" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("crypto");

/***/ }),

/***/ "events":
/*!*************************!*\
  !*** external "events" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("events");

/***/ }),

/***/ "http":
/*!***********************!*\
  !*** external "http" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("http");

/***/ }),

/***/ "https":
/*!************************!*\
  !*** external "https" ***!
  \************************/
/***/ ((module) => {

"use strict";
module.exports = require("https");

/***/ }),

/***/ "querystring":
/*!******************************!*\
  !*** external "querystring" ***!
  \******************************/
/***/ ((module) => {

"use strict";
module.exports = require("querystring");

/***/ }),

/***/ "url":
/*!**********************!*\
  !*** external "url" ***!
  \**********************/
/***/ ((module) => {

"use strict";
module.exports = require("url");

/***/ }),

/***/ "util":
/*!***********************!*\
  !*** external "util" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("util");

/***/ }),

/***/ "zlib":
/*!***********************!*\
  !*** external "zlib" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("zlib");

/***/ }),

/***/ "(sc_server)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fauth%2F%5B...nextauth%5D%2Froute&page=%2Fapi%2Fauth%2F%5B...nextauth%5D%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fauth%2F%5B...nextauth%5D%2Froute.js&appDir=%2Fhome%2Fubuntu%2FDesktop%2Fall-mern-stack%2Ffullstack-role-based-nextjs-nextauth%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2Fhome%2Fubuntu%2FDesktop%2Fall-mern-stack%2Ffullstack-role-based-nextjs-nextauth&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fauth%2F%5B...nextauth%5D%2Froute&page=%2Fapi%2Fauth%2F%5B...nextauth%5D%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fauth%2F%5B...nextauth%5D%2Froute.js&appDir=%2Fhome%2Fubuntu%2FDesktop%2Fall-mern-stack%2Ffullstack-role-based-nextjs-nextauth%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2Fhome%2Fubuntu%2FDesktop%2Fall-mern-stack%2Ffullstack-role-based-nextjs-nextauth&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=! ***!

/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   headerHooks: () => (/* binding */ headerHooks),\n/* harmony export */   originalPathname: () => (/* binding */ originalPathname),\n/* harmony export */   requestAsyncStorage: () => (/* binding */ requestAsyncStorage),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   staticGenerationAsyncStorage: () => (/* binding */ staticGenerationAsyncStorage),\n/* harmony export */   staticGenerationBailout: () => (/* binding */ staticGenerationBailout)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_node_polyfill_headers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/node-polyfill-headers */ \"(sc_server)/./node_modules/next/dist/server/node-polyfill-headers.js\");\n/* harmony import */ var next_dist_server_node_polyfill_headers__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_node_polyfill_headers__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-modules/app-route/module */ \"(sc_server)/./node_modules/next/dist/server/future/route-modules/app-route/module.js\");\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_app_route_module__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _home_ubuntu_Desktop_all_mern_stack_fullstack_role_based_nextjs_nextauth_app_api_auth_nextauth_route_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./app/api/auth/[...nextauth]/route.js */ \"(sc_server)/./app/api/auth/[...nextauth]/route.js\");\n\n    \n\n    \n\n    \n\n    const options = {\"definition\":{\"kind\":\"APP_ROUTE\",\"page\":\"/api/auth/[...nextauth]/route\",\"pathname\":\"/api/auth/[...nextauth]\",\"filename\":\"route\",\"bundlePath\":\"app/api/auth/[...nextauth]/route\"},\"resolvedPagePath\":\"/home/ubuntu/Desktop/all-mern-stack/fullstack-role-based-nextjs-nextauth/app/api/auth/[...nextauth]/route.js\",\"nextConfigOutput\":\"\"}\n    const routeModule = new (next_dist_server_future_route_modules_app_route_module__WEBPACK_IMPORTED_MODULE_1___default())({\n      ...options,\n      userland: _home_ubuntu_Desktop_all_mern_stack_fullstack_role_based_nextjs_nextauth_app_api_auth_nextauth_route_js__WEBPACK_IMPORTED_MODULE_2__,\n    })\n\n    // Pull out the exports that we need to expose from the module. This should\n    // be eliminated when we've moved the other routes to the new format. These\n    // are used to hook into the route.\n    const {\n      requestAsyncStorage,\n      staticGenerationAsyncStorage,\n      serverHooks,\n      headerHooks,\n      staticGenerationBailout\n    } = routeModule\n\n    const originalPathname = \"/api/auth/[...nextauth]/route\"\n\n    //# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIuanM/bmFtZT1hcHAlMkZhcGklMkZhdXRoJTJGJTVCLi4ubmV4dGF1dGglNUQlMkZyb3V0ZSZwYWdlPSUyRmFwaSUyRmF1dGglMkYlNUIuLi5uZXh0YXV0aCU1RCUyRnJvdXRlJmFwcFBhdGhzPSZwYWdlUGF0aD1wcml2YXRlLW5leHQtYXBwLWRpciUyRmFwaSUyRmF1dGglMkYlNUIuLi5uZXh0YXV0aCU1RCUyRnJvdXRlLmpzJmFwcERpcj0lMkZob21lJTJGdWJ1bnR1JTJGRGVza3RvcCUyRmFsbC1tZXJuLXN0YWNrJTJGZnVsbHN0YWNrLXJvbGUtYmFzZWQtbmV4dGpzLW5leHRhdXRoJTJGYXBwJnBhZ2VFeHRlbnNpb25zPXRzeCZwYWdlRXh0ZW5zaW9ucz10cyZwYWdlRXh0ZW5zaW9ucz1qc3gmcGFnZUV4dGVuc2lvbnM9anMmcm9vdERpcj0lMkZob21lJTJGdWJ1bnR1JTJGRGVza3RvcCUyRmFsbC1tZXJuLXN0YWNrJTJGZnVsbHN0YWNrLXJvbGUtYmFzZWQtbmV4dGpzLW5leHRhdXRoJmlzRGV2PXRydWUmdHNjb25maWdQYXRoPXRzY29uZmlnLmpzb24mYmFzZVBhdGg9JmFzc2V0UHJlZml4PSZuZXh0Q29uZmlnT3V0cHV0PSZwcmVmZXJyZWRSZWdpb249ISIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7O0FBQ0EsSUFBbUQ7O0FBRW5ELElBQW9GOztBQUVwRixJQUE0STs7QUFFNUkscUJBQXFCLGNBQWMsa0tBQWtLO0FBQ3JNLDRCQUE0QiwrRkFBVztBQUN2QztBQUNBLGNBQWM7QUFDZCxLQUFLOztBQUVMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07O0FBRU47O0FBRUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mdWxsc3RhY2stcm9sZS1iYXNlZC1uZXh0anMtMi8/OTk0MyJdLCJzb3VyY2VzQ29udGVudCI6WyJcbiAgICBpbXBvcnQgJ25leHQvZGlzdC9zZXJ2ZXIvbm9kZS1wb2x5ZmlsbC1oZWFkZXJzJ1xuXG4gICAgaW1wb3J0IFJvdXRlTW9kdWxlIGZyb20gJ25leHQvZGlzdC9zZXJ2ZXIvZnV0dXJlL3JvdXRlLW1vZHVsZXMvYXBwLXJvdXRlL21vZHVsZSdcblxuICAgIGltcG9ydCAqIGFzIHVzZXJsYW5kIGZyb20gXCIvaG9tZS91YnVudHUvRGVza3RvcC9hbGwtbWVybi1zdGFjay9mdWxsc3RhY2stcm9sZS1iYXNlZC1uZXh0anMtbmV4dGF1dGgvYXBwL2FwaS9hdXRoL1suLi5uZXh0YXV0aF0vcm91dGUuanNcIlxuXG4gICAgY29uc3Qgb3B0aW9ucyA9IHtcImRlZmluaXRpb25cIjp7XCJraW5kXCI6XCJBUFBfUk9VVEVcIixcInBhZ2VcIjpcIi9hcGkvYXV0aC9bLi4ubmV4dGF1dGhdL3JvdXRlXCIsXCJwYXRobmFtZVwiOlwiL2FwaS9hdXRoL1suLi5uZXh0YXV0aF1cIixcImZpbGVuYW1lXCI6XCJyb3V0ZVwiLFwiYnVuZGxlUGF0aFwiOlwiYXBwL2FwaS9hdXRoL1suLi5uZXh0YXV0aF0vcm91dGVcIn0sXCJyZXNvbHZlZFBhZ2VQYXRoXCI6XCIvaG9tZS91YnVudHUvRGVza3RvcC9hbGwtbWVybi1zdGFjay9mdWxsc3RhY2stcm9sZS1iYXNlZC1uZXh0anMtbmV4dGF1dGgvYXBwL2FwaS9hdXRoL1suLi5uZXh0YXV0aF0vcm91dGUuanNcIixcIm5leHRDb25maWdPdXRwdXRcIjpcIlwifVxuICAgIGNvbnN0IHJvdXRlTW9kdWxlID0gbmV3IFJvdXRlTW9kdWxlKHtcbiAgICAgIC4uLm9wdGlvbnMsXG4gICAgICB1c2VybGFuZCxcbiAgICB9KVxuXG4gICAgLy8gUHVsbCBvdXQgdGhlIGV4cG9ydHMgdGhhdCB3ZSBuZWVkIHRvIGV4cG9zZSBmcm9tIHRoZSBtb2R1bGUuIFRoaXMgc2hvdWxkXG4gICAgLy8gYmUgZWxpbWluYXRlZCB3aGVuIHdlJ3ZlIG1vdmVkIHRoZSBvdGhlciByb3V0ZXMgdG8gdGhlIG5ldyBmb3JtYXQuIFRoZXNlXG4gICAgLy8gYXJlIHVzZWQgdG8gaG9vayBpbnRvIHRoZSByb3V0ZS5cbiAgICBjb25zdCB7XG4gICAgICByZXF1ZXN0QXN5bmNTdG9yYWdlLFxuICAgICAgc3RhdGljR2VuZXJhdGlvbkFzeW5jU3RvcmFnZSxcbiAgICAgIHNlcnZlckhvb2tzLFxuICAgICAgaGVhZGVySG9va3MsXG4gICAgICBzdGF0aWNHZW5lcmF0aW9uQmFpbG91dFxuICAgIH0gPSByb3V0ZU1vZHVsZVxuXG4gICAgY29uc3Qgb3JpZ2luYWxQYXRobmFtZSA9IFwiL2FwaS9hdXRoL1suLi5uZXh0YXV0aF0vcm91dGVcIlxuXG4gICAgZXhwb3J0IHtcbiAgICAgIHJvdXRlTW9kdWxlLFxuICAgICAgcmVxdWVzdEFzeW5jU3RvcmFnZSxcbiAgICAgIHN0YXRpY0dlbmVyYXRpb25Bc3luY1N0b3JhZ2UsXG4gICAgICBzZXJ2ZXJIb29rcyxcbiAgICAgIGhlYWRlckhvb2tzLFxuICAgICAgc3RhdGljR2VuZXJhdGlvbkJhaWxvdXQsXG4gICAgICBvcmlnaW5hbFBhdGhuYW1lXG4gICAgfSJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fauth%2F%5B...nextauth%5D%2Froute&page=%2Fapi%2Fauth%2F%5B...nextauth%5D%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fauth%2F%5B...nextauth%5D%2Froute.js&appDir=%2Fhome%2Fubuntu%2FDesktop%2Fall-mern-stack%2Ffullstack-role-based-nextjs-nextauth%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2Fhome%2Fubuntu%2FDesktop%2Fall-mern-stack%2Ffullstack-role-based-nextjs-nextauth&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=!\n");

/***/ }),

/***/ "(sc_server)/./app/api/auth/[...nextauth]/route.js":
/*!*********************************************!*\
  !*** ./app/api/auth/[...nextauth]/route.js ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GET: () => (/* binding */ handler),\n/* harmony export */   POST: () => (/* binding */ handler)\n/* harmony export */ });\n/* harmony import */ var next_auth__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next-auth */ \"(sc_server)/./node_modules/next-auth/index.js\");\n/* harmony import */ var next_auth__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_auth__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_auth_providers_credentials__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next-auth/providers/credentials */ \"(sc_server)/./node_modules/next-auth/providers/credentials.js\");\n/* harmony import */ var next_auth_providers_google__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next-auth/providers/google */ \"(sc_server)/./node_modules/next-auth/providers/google.js\");\n/* harmony import */ var bcryptjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! bcryptjs */ \"(sc_server)/./node_modules/bcryptjs/index.js\");\n/* harmony import */ var bcryptjs__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(bcryptjs__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _backend_models_user__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @/backend/models/user */ \"(sc_server)/./backend/models/user.js\");\n/* harmony import */ var _backend_config_dbConnect__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @/backend/config/dbConnect */ \"(sc_server)/./backend/config/dbConnect.js\");\n\n\n\n\n\n\nconst handler = next_auth__WEBPACK_IMPORTED_MODULE_0___default()({\n    session: {\n        strategy: \"jwt\"\n    },\n    providers: [\n        (0,next_auth_providers_credentials__WEBPACK_IMPORTED_MODULE_1__[\"default\"])({\n            async authorize (credentials, req) {\n                (0,_backend_config_dbConnect__WEBPACK_IMPORTED_MODULE_5__[\"default\"])();\n                const { email , password  } = credentials;\n                const user = await _backend_models_user__WEBPACK_IMPORTED_MODULE_4__[\"default\"].findOne({\n                    email\n                }).select(\"+password\");\n                if (!user) {\n                    throw new Error(\"Invalid Email or Password\");\n                }\n                const isPasswordMatched = await bcryptjs__WEBPACK_IMPORTED_MODULE_3___default().compare(password, user.password);\n                if (!isPasswordMatched) {\n                    throw new Error(\"Invalid Email or Password\");\n                }\n                return user;\n            }\n        }),\n        (0,next_auth_providers_google__WEBPACK_IMPORTED_MODULE_2__[\"default\"])({\n            clientId: \"707582940430-pgttavl8uvv6cb5gb686b37p2o0mbkv7.apps.googleusercontent.com\",\n            clientSecret: \"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\"\n        })\n    ],\n    callbacks: {\n        jwt: async ({ token , user  })=>{\n            user && (token.user = user);\n            return token;\n        },\n        session: async ({ session , token  })=>{\n            session.user = token.user;\n            // delete password from session\n            delete session?.user?.password;\n            return session;\n        }\n    },\n    pages: {\n        signIn: \"/login\"\n    },\n    secret: \"Coding with shakil\"\n});\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9hcHAvYXBpL2F1dGgvWy4uLm5leHRhdXRoXS9yb3V0ZS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7O0FBQWlDO0FBQ2lDO0FBQ1Y7QUFDMUI7QUFDVztBQUNVO0FBR25ELE1BQU1NLFVBQVNOLGdEQUFRQSxDQUFFO0lBQ3JCTyxTQUFTO1FBQ1BDLFVBQVU7SUFDWjtJQUNBQyxXQUFXO1FBQ1RSLDJFQUFtQkEsQ0FBQztZQUNsQixNQUFNUyxXQUFVQyxXQUFXLEVBQUVDLEdBQUc7Z0JBQzlCUCxxRUFBU0E7Z0JBRVQsTUFBTSxFQUFFUSxNQUFLLEVBQUVDLFNBQVEsRUFBRSxHQUFHSDtnQkFFNUIsTUFBTUksT0FBTyxNQUFNWCw0REFBSUEsQ0FBQ1ksUUFBUTtvQkFBRUg7Z0JBQU0sR0FBR0ksT0FBTztnQkFFbEQsSUFBSSxDQUFDRixNQUFNO29CQUNULE1BQU0sSUFBSUcsTUFBTTtnQkFDbEI7Z0JBRUEsTUFBTUMsb0JBQW9CLE1BQU1oQix1REFBY2lCLENBQzVDTixVQUNBQyxLQUFLRDtnQkFHUCxJQUFJLENBQUNLLG1CQUFtQjtvQkFDdEIsTUFBTSxJQUFJRCxNQUFNO2dCQUNsQjtnQkFFQSxPQUFPSDtZQUNUO1FBQ0Y7UUFDQWIsc0VBQWNBLENBQUM7WUFDUm1CLFVBQVVDLDBFQUE0QkU7WUFDckNDLGNBQWNILHFDQUFnQ0k7UUFDL0M7S0FDUjtJQUNEQyxXQUFXO1FBQ1RDLEtBQUssT0FBTyxFQUFFQyxNQUFLLEVBQUVkLEtBQUksRUFBRTtZQUN6QkEsUUFBU2MsQ0FBQUEsTUFBTWQsT0FBT0EsSUFBRztZQUV6QixPQUFPYztRQUNUO1FBQ0F0QixTQUFTLE9BQU8sRUFBRUEsUUFBTyxFQUFFc0IsTUFBSyxFQUFFO1lBQ2hDdEIsUUFBUVEsT0FBT2MsTUFBTWQ7WUFFckIsK0JBQStCO1lBQy9CLE9BQU9SLFNBQVNRLE1BQU1EO1lBRXRCLE9BQU9QO1FBQ1Q7SUFDRjtJQUNBdUIsT0FBTztRQUNMQyxRQUFRO0lBQ1Y7SUFDQUMsUUFBUVYsb0JBQTJCVztBQUNyQztBQUMyQyIsInNvdXJjZXMiOlsid2VicGFjazovL2Z1bGxzdGFjay1yb2xlLWJhc2VkLW5leHRqcy0yLy4vYXBwL2FwaS9hdXRoL1suLi5uZXh0YXV0aF0vcm91dGUuanM/ZGExYSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgTmV4dEF1dGggZnJvbSBcIm5leHQtYXV0aFwiO1xuaW1wb3J0IENyZWRlbnRpYWxzUHJvdmlkZXIgZnJvbSBcIm5leHQtYXV0aC9wcm92aWRlcnMvY3JlZGVudGlhbHNcIjtcbmltcG9ydCBHb29nbGVQcm92aWRlciBmcm9tIFwibmV4dC1hdXRoL3Byb3ZpZGVycy9nb29nbGVcIjtcbmltcG9ydCBiY3J5cHQgZnJvbSBcImJjcnlwdGpzXCI7XG5pbXBvcnQgVXNlciBmcm9tIFwiQC9iYWNrZW5kL21vZGVscy91c2VyXCI7XG5pbXBvcnQgZGJDb25uZWN0IGZyb20gXCJAL2JhY2tlbmQvY29uZmlnL2RiQ29ubmVjdFwiO1xuXG5cbmNvbnN0IGhhbmRsZXI9IE5leHRBdXRoKCB7XG4gICAgc2Vzc2lvbjoge1xuICAgICAgc3RyYXRlZ3k6IFwiand0XCIsXG4gICAgfSxcbiAgICBwcm92aWRlcnM6IFtcbiAgICAgIENyZWRlbnRpYWxzUHJvdmlkZXIoe1xuICAgICAgICBhc3luYyBhdXRob3JpemUoY3JlZGVudGlhbHMsIHJlcSkge1xuICAgICAgICAgIGRiQ29ubmVjdCgpO1xuXG4gICAgICAgICAgY29uc3QgeyBlbWFpbCwgcGFzc3dvcmQgfSA9IGNyZWRlbnRpYWxzO1xuXG4gICAgICAgICAgY29uc3QgdXNlciA9IGF3YWl0IFVzZXIuZmluZE9uZSh7IGVtYWlsIH0pLnNlbGVjdChcIitwYXNzd29yZFwiKTtcblxuICAgICAgICAgIGlmICghdXNlcikge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiSW52YWxpZCBFbWFpbCBvciBQYXNzd29yZFwiKTtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICBjb25zdCBpc1Bhc3N3b3JkTWF0Y2hlZCA9IGF3YWl0IGJjcnlwdC5jb21wYXJlKFxuICAgICAgICAgICAgcGFzc3dvcmQsXG4gICAgICAgICAgICB1c2VyLnBhc3N3b3JkXG4gICAgICAgICAgKTtcblxuICAgICAgICAgIGlmICghaXNQYXNzd29yZE1hdGNoZWQpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcIkludmFsaWQgRW1haWwgb3IgUGFzc3dvcmRcIik7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgcmV0dXJuIHVzZXI7XG4gICAgICAgIH0sXG4gICAgICB9KSxcbiAgICAgIEdvb2dsZVByb3ZpZGVyKHtcbiAgICAgICAgICAgICBjbGllbnRJZDogcHJvY2Vzcy5lbnYuR09PR0xFX0NMSUVOVF9JRCxcbiAgICAgICAgICAgICAgY2xpZW50U2VjcmV0OiBwcm9jZXNzLmVudi5HT09HTEVfQ0xJRU5UX1NFQ1JFVCxcbiAgICAgICAgICAgICB9KSxcbiAgICBdLFxuICAgIGNhbGxiYWNrczoge1xuICAgICAgand0OiBhc3luYyAoeyB0b2tlbiwgdXNlciB9KSA9PiB7XG4gICAgICAgIHVzZXIgJiYgKHRva2VuLnVzZXIgPSB1c2VyKTtcblxuICAgICAgICByZXR1cm4gdG9rZW47XG4gICAgICB9LFxuICAgICAgc2Vzc2lvbjogYXN5bmMgKHsgc2Vzc2lvbiwgdG9rZW4gfSkgPT4ge1xuICAgICAgICBzZXNzaW9uLnVzZXIgPSB0b2tlbi51c2VyO1xuXG4gICAgICAgIC8vIGRlbGV0ZSBwYXNzd29yZCBmcm9tIHNlc3Npb25cbiAgICAgICAgZGVsZXRlIHNlc3Npb24/LnVzZXI/LnBhc3N3b3JkO1xuXG4gICAgICAgIHJldHVybiBzZXNzaW9uO1xuICAgICAgfSxcbiAgICB9LFxuICAgIHBhZ2VzOiB7XG4gICAgICBzaWduSW46IFwiL2xvZ2luXCIsXG4gICAgfSxcbiAgICBzZWNyZXQ6IHByb2Nlc3MuZW52Lk5FWFRBVVRIX1NFQ1JFVCxcbiAgfSk7XG4gIGV4cG9ydCB7IGhhbmRsZXIgYXMgR0VULCBoYW5kbGVyIGFzIFBPU1QgfTsiXSwibmFtZXMiOlsiTmV4dEF1dGgiLCJDcmVkZW50aWFsc1Byb3ZpZGVyIiwiR29vZ2xlUHJvdmlkZXIiLCJiY3J5cHQiLCJVc2VyIiwiZGJDb25uZWN0IiwiaGFuZGxlciIsInNlc3Npb24iLCJzdHJhdGVneSIsInByb3ZpZGVycyIsImF1dGhvcml6ZSIsImNyZWRlbnRpYWxzIiwicmVxIiwiZW1haWwiLCJwYXNzd29yZCIsInVzZXIiLCJmaW5kT25lIiwic2VsZWN0IiwiRXJyb3IiLCJpc1Bhc3N3b3JkTWF0Y2hlZCIsImNvbXBhcmUiLCJjbGllbnRJZCIsInByb2Nlc3MiLCJlbnYiLCJHT09HTEVfQ0xJRU5UX0lEIiwiY2xpZW50U2VjcmV0IiwiR09PR0xFX0NMSUVOVF9TRUNSRVQiLCJjYWxsYmFja3MiLCJqd3QiLCJ0b2tlbiIsInBhZ2VzIiwic2lnbkluIiwic2VjcmV0IiwiTkVYVEFVVEhfU0VDUkVUIiwiR0VUIiwiUE9TVCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(sc_server)/./app/api/auth/[...nextauth]/route.js\n");

/***/ }),

/***/ "(sc_server)/./backend/config/dbConnect.js":
/*!*************************************!*\
  !*** ./backend/config/dbConnect.js ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var mongoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! mongoose */ \"mongoose\");\n/* harmony import */ var mongoose__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(mongoose__WEBPACK_IMPORTED_MODULE_0__);\n\nconst MONGODB_URL = \"mongodb+srv://topu:Hphp2010f@mernstack-pagination.dmkoc.mongodb.net/fullstack-role-based-nextjs-nextauth?retryWrites=true&w=majority\";\nif (!MONGODB_URL) {\n    throw new Error(\"Please define the MONGODB_URI environment variable inside .env.local\");\n}\nlet cached = global.mongoose;\nif (!cached) {\n    cached = global.mongoose = {\n        con: null,\n        promise: null\n    };\n}\nconst dbConnect = async ()=>{\n    if (cached.conn) {\n        return cached.conn;\n    }\n    // If a connection does not exist, we check if a promise is already in progress. If a promise is already in progress, we wait for it to resolve to get the connection\n    if (!cached.promise) {\n        const opts = {\n            bufferCommands: false\n        };\n        cached.promise = mongoose__WEBPACK_IMPORTED_MODULE_0___default().connect(MONGODB_URL, opts).then((mongoose)=>{\n            return mongoose;\n        });\n    }\n    try {\n        cached.conn = await cached.promise;\n    } catch (e) {\n        cached.promise = null;\n        throw e;\n    }\n    return cached.conn;\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (dbConnect);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9iYWNrZW5kL2NvbmZpZy9kYkNvbm5lY3QuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQStCO0FBRS9CLE1BQU1DLGNBQWNDLHNJQUF1QkQ7QUFFM0MsSUFBSSxDQUFDQSxhQUFhO0lBQ2QsTUFBTSxJQUFJRyxNQUNOO0FBRVI7QUFHQSxJQUFJQyxTQUFTQyxPQUFPTjtBQUVwQixJQUFJLENBQUNLLFFBQVE7SUFDVEEsU0FBU0MsT0FBT04sV0FBVztRQUFDTyxLQUFLO1FBQU1DLFNBQVM7SUFBSTtBQUN4RDtBQUVBLE1BQU1DLFlBQVk7SUFDZCxJQUFJSixPQUFPSyxNQUFNO1FBQ2IsT0FBT0wsT0FBT0s7SUFDbEI7SUFHSixxS0FBcUs7SUFDakssSUFBSSxDQUFDTCxPQUFPRyxTQUFTO1FBQ2pCLE1BQU1HLE9BQU87WUFDVEMsZ0JBQWlCO1FBQ3JCO1FBRUFQLE9BQU9HLFVBQVVSLHVEQUFnQmEsQ0FBQ1osYUFBYVUsTUFBTUcsS0FBSyxDQUFDZDtZQUN2RCxPQUFPQTtRQUNYO0lBQ0o7SUFFQSxJQUFJO1FBQ0FLLE9BQU9LLE9BQU8sTUFBTUwsT0FBT0c7SUFDL0IsRUFBRSxPQUFPTyxHQUFHO1FBQ1JWLE9BQU9HLFVBQVU7UUFDakIsTUFBTU87SUFDVjtJQUVBLE9BQU9WLE9BQU9LO0FBQ2xCO0FBRUEsaUVBQWVELFNBQVNBLEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mdWxsc3RhY2stcm9sZS1iYXNlZC1uZXh0anMtMi8uL2JhY2tlbmQvY29uZmlnL2RiQ29ubmVjdC5qcz9mMjc1Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBtb25nb29zZSBmcm9tIFwibW9uZ29vc2VcIlxuXG5jb25zdCBNT05HT0RCX1VSTCA9IHByb2Nlc3MuZW52Lk1PTkdPREJfVVJMO1xuXG5pZiAoIU1PTkdPREJfVVJMKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKFxuICAgICAgICBcIlBsZWFzZSBkZWZpbmUgdGhlIE1PTkdPREJfVVJJIGVudmlyb25tZW50IHZhcmlhYmxlIGluc2lkZSAuZW52LmxvY2FsXCJcbiAgICApXG59XG5cblxubGV0IGNhY2hlZCA9IGdsb2JhbC5tb25nb29zZTtcblxuaWYgKCFjYWNoZWQpIHtcbiAgICBjYWNoZWQgPSBnbG9iYWwubW9uZ29vc2UgPSB7Y29uOiBudWxsLCBwcm9taXNlOiBudWxsfVxufVxuXG5jb25zdCBkYkNvbm5lY3QgPSBhc3luYyAoKSA9PiB7XG4gICAgaWYgKGNhY2hlZC5jb25uKSB7XG4gICAgICAgIHJldHVybiBjYWNoZWQuY29ubjtcbiAgICB9XG5cblxuLy8gSWYgYSBjb25uZWN0aW9uIGRvZXMgbm90IGV4aXN0LCB3ZSBjaGVjayBpZiBhIHByb21pc2UgaXMgYWxyZWFkeSBpbiBwcm9ncmVzcy4gSWYgYSBwcm9taXNlIGlzIGFscmVhZHkgaW4gcHJvZ3Jlc3MsIHdlIHdhaXQgZm9yIGl0IHRvIHJlc29sdmUgdG8gZ2V0IHRoZSBjb25uZWN0aW9uXG4gICAgaWYgKCFjYWNoZWQucHJvbWlzZSkge1xuICAgICAgICBjb25zdCBvcHRzID0ge1xuICAgICAgICAgICAgYnVmZmVyQ29tbWFuZHMgOiBmYWxzZVxuICAgICAgICB9O1xuXG4gICAgICAgIGNhY2hlZC5wcm9taXNlID0gbW9uZ29vc2UuY29ubmVjdChNT05HT0RCX1VSTCwgb3B0cykudGhlbigobW9uZ29vc2UpID0+IHtcbiAgICAgICAgICAgIHJldHVybiBtb25nb29zZVxuICAgICAgICB9KVxuICAgIH1cblxuICAgIHRyeSB7XG4gICAgICAgIGNhY2hlZC5jb25uID0gYXdhaXQgY2FjaGVkLnByb21pc2U7XG4gICAgfSBjYXRjaCAoZSkge1xuICAgICAgICBjYWNoZWQucHJvbWlzZSA9IG51bGw7XG4gICAgICAgIHRocm93IGU7XG4gICAgfVxuXG4gICAgcmV0dXJuIGNhY2hlZC5jb25uO1xufVxuXG5leHBvcnQgZGVmYXVsdCBkYkNvbm5lY3Q7Il0sIm5hbWVzIjpbIm1vbmdvb3NlIiwiTU9OR09EQl9VUkwiLCJwcm9jZXNzIiwiZW52IiwiRXJyb3IiLCJjYWNoZWQiLCJnbG9iYWwiLCJjb24iLCJwcm9taXNlIiwiZGJDb25uZWN0IiwiY29ubiIsIm9wdHMiLCJidWZmZXJDb21tYW5kcyIsImNvbm5lY3QiLCJ0aGVuIiwiZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(sc_server)/./backend/config/dbConnect.js\n");

/***/ }),

/***/ "(sc_server)/./backend/models/user.js":
/*!********************************!*\
  !*** ./backend/models/user.js ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var mongoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! mongoose */ \"mongoose\");\n/* harmony import */ var mongoose__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(mongoose__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var bcryptjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! bcryptjs */ \"(sc_server)/./node_modules/bcryptjs/index.js\");\n/* harmony import */ var bcryptjs__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(bcryptjs__WEBPACK_IMPORTED_MODULE_1__);\n\n\nconst userSchema = new (mongoose__WEBPACK_IMPORTED_MODULE_0___default().Schema)({\n    name: {\n        type: String,\n        required: [\n            true,\n            \"Please enter your name\"\n        ]\n    },\n    email: {\n        type: String,\n        required: [\n            true,\n            \"Please enter your email\"\n        ],\n        unique: true\n    },\n    password: {\n        type: String,\n        required: [\n            true,\n            \"Please enter your password\"\n        ],\n        minLength: [\n            6,\n            \"Your password must be longer than 6 characters\"\n        ],\n        select: false\n    },\n    avatar: {\n        public_id: String,\n        url: String\n    },\n    role: {\n        type: String,\n        default: \"user\"\n    },\n    createdAt: {\n        type: Date,\n        default: Date.now\n    }\n});\nuserSchema.pre(\"save\", async function(next) {\n    if (!this.isModified(\"password\")) {\n        next();\n    }\n    this.password = await bcryptjs__WEBPACK_IMPORTED_MODULE_1___default().hash(this.password, 10);\n});\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((mongoose__WEBPACK_IMPORTED_MODULE_0___default().models).User || mongoose__WEBPACK_IMPORTED_MODULE_0___default().model(\"User\", userSchema));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9iYWNrZW5kL21vZGVscy91c2VyLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQWdDO0FBQ0Y7QUFFOUIsTUFBTUUsYUFBYSxJQUFJRix3REFBZUcsQ0FBQztJQUNyQ0MsTUFBTTtRQUNKQyxNQUFNQztRQUNOQyxVQUFVO1lBQUM7WUFBTTtTQUF5QjtJQUM1QztJQUNBQyxPQUFPO1FBQ0xILE1BQU1DO1FBQ05DLFVBQVU7WUFBQztZQUFNO1NBQTBCO1FBQzNDRSxRQUFRO0lBQ1Y7SUFDQUMsVUFBVTtRQUNSTCxNQUFNQztRQUNOQyxVQUFVO1lBQUM7WUFBTTtTQUE2QjtRQUM5Q0ksV0FBVztZQUFDO1lBQUc7U0FBaUQ7UUFDaEVDLFFBQVE7SUFDVjtJQUNBQyxRQUFRO1FBQ05DLFdBQVdSO1FBQ1hTLEtBQUtUO0lBQ1A7SUFDQVUsTUFBTTtRQUNKWCxNQUFNQztRQUNOVyxTQUFTO0lBQ1g7SUFDQUMsV0FBVztRQUNUYixNQUFNYztRQUNORixTQUFTRSxLQUFLQztJQUNoQjtBQUNGO0FBRUFsQixXQUFXbUIsSUFBSSxRQUFRLGVBQWdCQyxJQUFJO0lBQ3pDLElBQUksQ0FBQyxJQUFJLENBQUNDLFdBQVcsYUFBYTtRQUNoQ0Q7SUFDRjtJQUVBLElBQUksQ0FBQ1osV0FBVyxNQUFNVCxvREFBV3VCLENBQUMsSUFBSSxDQUFDZCxVQUFVO0FBQ25EO0FBRUEsaUVBQWVWLHdEQUFleUIsQ0FBQ0MsUUFBUTFCLHFEQUFjMkIsQ0FBQyxRQUFRekIsV0FBV0EsRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL2Z1bGxzdGFjay1yb2xlLWJhc2VkLW5leHRqcy0yLy4vYmFja2VuZC9tb2RlbHMvdXNlci5qcz8wMDA5Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBtb25nb29zZSBmcm9tIFwibW9uZ29vc2VcIjtcbmltcG9ydCBiY3J5cHQgZnJvbSBcImJjcnlwdGpzXCI7XG5cbmNvbnN0IHVzZXJTY2hlbWEgPSBuZXcgbW9uZ29vc2UuU2NoZW1hKHtcbiAgbmFtZToge1xuICAgIHR5cGU6IFN0cmluZyxcbiAgICByZXF1aXJlZDogW3RydWUsIFwiUGxlYXNlIGVudGVyIHlvdXIgbmFtZVwiXSxcbiAgfSxcbiAgZW1haWw6IHtcbiAgICB0eXBlOiBTdHJpbmcsXG4gICAgcmVxdWlyZWQ6IFt0cnVlLCBcIlBsZWFzZSBlbnRlciB5b3VyIGVtYWlsXCJdLFxuICAgIHVuaXF1ZTogdHJ1ZSxcbiAgfSxcbiAgcGFzc3dvcmQ6IHtcbiAgICB0eXBlOiBTdHJpbmcsXG4gICAgcmVxdWlyZWQ6IFt0cnVlLCBcIlBsZWFzZSBlbnRlciB5b3VyIHBhc3N3b3JkXCJdLFxuICAgIG1pbkxlbmd0aDogWzYsIFwiWW91ciBwYXNzd29yZCBtdXN0IGJlIGxvbmdlciB0aGFuIDYgY2hhcmFjdGVyc1wiXSxcbiAgICBzZWxlY3Q6IGZhbHNlLFxuICB9LFxuICBhdmF0YXI6IHtcbiAgICBwdWJsaWNfaWQ6IFN0cmluZyxcbiAgICB1cmw6IFN0cmluZyxcbiAgfSxcbiAgcm9sZToge1xuICAgIHR5cGU6IFN0cmluZyxcbiAgICBkZWZhdWx0OiBcInVzZXJcIixcbiAgfSxcbiAgY3JlYXRlZEF0OiB7XG4gICAgdHlwZTogRGF0ZSxcbiAgICBkZWZhdWx0OiBEYXRlLm5vdyxcbiAgfSxcbn0pO1xuXG51c2VyU2NoZW1hLnByZShcInNhdmVcIiwgYXN5bmMgZnVuY3Rpb24gKG5leHQpIHtcbiAgaWYgKCF0aGlzLmlzTW9kaWZpZWQoXCJwYXNzd29yZFwiKSkge1xuICAgIG5leHQoKTtcbiAgfVxuXG4gIHRoaXMucGFzc3dvcmQgPSBhd2FpdCBiY3J5cHQuaGFzaCh0aGlzLnBhc3N3b3JkLCAxMCk7XG59KTtcblxuZXhwb3J0IGRlZmF1bHQgbW9uZ29vc2UubW9kZWxzLlVzZXIgfHwgbW9uZ29vc2UubW9kZWwoXCJVc2VyXCIsIHVzZXJTY2hlbWEpO1xuIl0sIm5hbWVzIjpbIm1vbmdvb3NlIiwiYmNyeXB0IiwidXNlclNjaGVtYSIsIlNjaGVtYSIsIm5hbWUiLCJ0eXBlIiwiU3RyaW5nIiwicmVxdWlyZWQiLCJlbWFpbCIsInVuaXF1ZSIsInBhc3N3b3JkIiwibWluTGVuZ3RoIiwic2VsZWN0IiwiYXZhdGFyIiwicHVibGljX2lkIiwidXJsIiwicm9sZSIsImRlZmF1bHQiLCJjcmVhdGVkQXQiLCJEYXRlIiwibm93IiwicHJlIiwibmV4dCIsImlzTW9kaWZpZWQiLCJoYXNoIiwibW9kZWxzIiwiVXNlciIsIm1vZGVsIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(sc_server)/./backend/models/user.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/@panva/hkdf/dist/node/cjs/index.js":
/*!*********************************************************!*\
  !*** ./node_modules/@panva/hkdf/dist/node/cjs/index.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports[\"default\"] = exports.hkdf = void 0;\nconst hkdf_js_1 = __webpack_require__(/*! ./runtime/hkdf.js */ \"(sc_server)/./node_modules/@panva/hkdf/dist/node/cjs/runtime/hkdf.js\");\nfunction normalizeDigest(digest) {\n    switch(digest){\n        case \"sha256\":\n        case \"sha384\":\n        case \"sha512\":\n        case \"sha1\":\n            return digest;\n        default:\n            throw new TypeError('unsupported \"digest\" value');\n    }\n}\nfunction normalizeUint8Array(input, label) {\n    if (typeof input === \"string\") return new TextEncoder().encode(input);\n    if (!(input instanceof Uint8Array)) throw new TypeError(`\"${label}\"\" must be an instance of Uint8Array or a string`);\n    return input;\n}\nfunction normalizeIkm(input) {\n    const ikm = normalizeUint8Array(input, \"ikm\");\n    if (!ikm.byteLength) throw new TypeError(`\"ikm\" must be at least one byte in length`);\n    return ikm;\n}\nfunction normalizeInfo(input) {\n    const info = normalizeUint8Array(input, \"info\");\n    if (info.byteLength > 1024) {\n        throw TypeError('\"info\" must not contain more than 1024 bytes');\n    }\n    return info;\n}\nfunction normalizeKeylen(input, digest) {\n    if (typeof input !== \"number\" || !Number.isInteger(input) || input < 1) {\n        throw new TypeError('\"keylen\" must be a positive integer');\n    }\n    const hashlen = parseInt(digest.substr(3), 10) >> 3 || 20;\n    if (input > 255 * hashlen) {\n        throw new TypeError('\"keylen\" too large');\n    }\n    return input;\n}\nasync function hkdf(digest, ikm, salt, info, keylen) {\n    return (0, hkdf_js_1.default)(normalizeDigest(digest), normalizeIkm(ikm), normalizeUint8Array(salt, \"salt\"), normalizeInfo(info), normalizeKeylen(keylen, digest));\n}\nexports.hkdf = hkdf;\nexports[\"default\"] = hkdf;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvQHBhbnZhL2hrZGYvZGlzdC9ub2RlL2Nqcy9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFBRUcsT0FBTztBQUFLLENBQUMsRUFBQztBQUM3REQsa0JBQWVFLEdBQUdGLFlBQVlHLEdBQUcsS0FBSztBQUN0QyxNQUFNQyxZQUFZQyxtQkFBT0EsQ0FBQywrRkFBbUI7QUFDN0MsU0FBU0MsZ0JBQWdCQyxNQUFNO0lBQzNCLE9BQVFBO1FBQ0osS0FBSztRQUNMLEtBQUs7UUFDTCxLQUFLO1FBQ0wsS0FBSztZQUNELE9BQU9BO1FBQ1g7WUFDSSxNQUFNLElBQUlDLFVBQVU7SUFDNUI7QUFDSjtBQUNBLFNBQVNDLG9CQUFvQkMsS0FBSyxFQUFFQyxLQUFLO0lBQ3JDLElBQUksT0FBT0QsVUFBVSxVQUNqQixPQUFPLElBQUlFLGNBQWNDLE9BQU9IO0lBQ3BDLElBQUksQ0FBRUEsQ0FBQUEsaUJBQWlCSSxVQUFTLEdBQzVCLE1BQU0sSUFBSU4sVUFBVSxDQUFDLENBQUMsRUFBRUcsTUFBTSxnREFBZ0QsQ0FBQztJQUNuRixPQUFPRDtBQUNYO0FBQ0EsU0FBU0ssYUFBYUwsS0FBSztJQUN2QixNQUFNTSxNQUFNUCxvQkFBb0JDLE9BQU87SUFDdkMsSUFBSSxDQUFDTSxJQUFJQyxZQUNMLE1BQU0sSUFBSVQsVUFBVSxDQUFDLHlDQUF5QyxDQUFDO0lBQ25FLE9BQU9RO0FBQ1g7QUFDQSxTQUFTRSxjQUFjUixLQUFLO0lBQ3hCLE1BQU1TLE9BQU9WLG9CQUFvQkMsT0FBTztJQUN4QyxJQUFJUyxLQUFLRixhQUFhLE1BQU07UUFDeEIsTUFBTVQsVUFBVTtJQUNwQjtJQUNBLE9BQU9XO0FBQ1g7QUFDQSxTQUFTQyxnQkFBZ0JWLEtBQUssRUFBRUgsTUFBTTtJQUNsQyxJQUFJLE9BQU9HLFVBQVUsWUFBWSxDQUFDVyxPQUFPQyxVQUFVWixVQUFVQSxRQUFRLEdBQUc7UUFDcEUsTUFBTSxJQUFJRixVQUFVO0lBQ3hCO0lBQ0EsTUFBTWUsVUFBVUMsU0FBU2pCLE9BQU9rQixPQUFPLElBQUksT0FBTyxLQUFLO0lBQ3ZELElBQUlmLFFBQVEsTUFBTWEsU0FBUztRQUN2QixNQUFNLElBQUlmLFVBQVU7SUFDeEI7SUFDQSxPQUFPRTtBQUNYO0FBQ0EsZUFBZVAsS0FBS0ksTUFBTSxFQUFFUyxHQUFHLEVBQUVVLElBQUksRUFBRVAsSUFBSSxFQUFFUSxNQUFNO0lBQy9DLE9BQU8sQ0FBQyxHQUFHdkIsVUFBVUYsT0FBTSxFQUFHSSxnQkFBZ0JDLFNBQVNRLGFBQWFDLE1BQU1QLG9CQUFvQmlCLE1BQU0sU0FBU1IsY0FBY0MsT0FBT0MsZ0JBQWdCTyxRQUFRcEI7QUFDOUo7QUFDQVAsWUFBWUcsR0FBR0E7QUFDZkgsa0JBQWVFLEdBQUdDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZnVsbHN0YWNrLXJvbGUtYmFzZWQtbmV4dGpzLTIvLi9ub2RlX21vZHVsZXMvQHBhbnZhL2hrZGYvZGlzdC9ub2RlL2Nqcy9pbmRleC5qcz8xZTk4Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5kZWZhdWx0ID0gZXhwb3J0cy5oa2RmID0gdm9pZCAwO1xuY29uc3QgaGtkZl9qc18xID0gcmVxdWlyZShcIi4vcnVudGltZS9oa2RmLmpzXCIpO1xuZnVuY3Rpb24gbm9ybWFsaXplRGlnZXN0KGRpZ2VzdCkge1xuICAgIHN3aXRjaCAoZGlnZXN0KSB7XG4gICAgICAgIGNhc2UgJ3NoYTI1Nic6XG4gICAgICAgIGNhc2UgJ3NoYTM4NCc6XG4gICAgICAgIGNhc2UgJ3NoYTUxMic6XG4gICAgICAgIGNhc2UgJ3NoYTEnOlxuICAgICAgICAgICAgcmV0dXJuIGRpZ2VzdDtcbiAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ3Vuc3VwcG9ydGVkIFwiZGlnZXN0XCIgdmFsdWUnKTtcbiAgICB9XG59XG5mdW5jdGlvbiBub3JtYWxpemVVaW50OEFycmF5KGlucHV0LCBsYWJlbCkge1xuICAgIGlmICh0eXBlb2YgaW5wdXQgPT09ICdzdHJpbmcnKVxuICAgICAgICByZXR1cm4gbmV3IFRleHRFbmNvZGVyKCkuZW5jb2RlKGlucHV0KTtcbiAgICBpZiAoIShpbnB1dCBpbnN0YW5jZW9mIFVpbnQ4QXJyYXkpKVxuICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKGBcIiR7bGFiZWx9XCJcIiBtdXN0IGJlIGFuIGluc3RhbmNlIG9mIFVpbnQ4QXJyYXkgb3IgYSBzdHJpbmdgKTtcbiAgICByZXR1cm4gaW5wdXQ7XG59XG5mdW5jdGlvbiBub3JtYWxpemVJa20oaW5wdXQpIHtcbiAgICBjb25zdCBpa20gPSBub3JtYWxpemVVaW50OEFycmF5KGlucHV0LCAnaWttJyk7XG4gICAgaWYgKCFpa20uYnl0ZUxlbmd0aClcbiAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcihgXCJpa21cIiBtdXN0IGJlIGF0IGxlYXN0IG9uZSBieXRlIGluIGxlbmd0aGApO1xuICAgIHJldHVybiBpa207XG59XG5mdW5jdGlvbiBub3JtYWxpemVJbmZvKGlucHV0KSB7XG4gICAgY29uc3QgaW5mbyA9IG5vcm1hbGl6ZVVpbnQ4QXJyYXkoaW5wdXQsICdpbmZvJyk7XG4gICAgaWYgKGluZm8uYnl0ZUxlbmd0aCA+IDEwMjQpIHtcbiAgICAgICAgdGhyb3cgVHlwZUVycm9yKCdcImluZm9cIiBtdXN0IG5vdCBjb250YWluIG1vcmUgdGhhbiAxMDI0IGJ5dGVzJyk7XG4gICAgfVxuICAgIHJldHVybiBpbmZvO1xufVxuZnVuY3Rpb24gbm9ybWFsaXplS2V5bGVuKGlucHV0LCBkaWdlc3QpIHtcbiAgICBpZiAodHlwZW9mIGlucHV0ICE9PSAnbnVtYmVyJyB8fCAhTnVtYmVyLmlzSW50ZWdlcihpbnB1dCkgfHwgaW5wdXQgPCAxKSB7XG4gICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ1wia2V5bGVuXCIgbXVzdCBiZSBhIHBvc2l0aXZlIGludGVnZXInKTtcbiAgICB9XG4gICAgY29uc3QgaGFzaGxlbiA9IHBhcnNlSW50KGRpZ2VzdC5zdWJzdHIoMyksIDEwKSA+PiAzIHx8IDIwO1xuICAgIGlmIChpbnB1dCA+IDI1NSAqIGhhc2hsZW4pIHtcbiAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcignXCJrZXlsZW5cIiB0b28gbGFyZ2UnKTtcbiAgICB9XG4gICAgcmV0dXJuIGlucHV0O1xufVxuYXN5bmMgZnVuY3Rpb24gaGtkZihkaWdlc3QsIGlrbSwgc2FsdCwgaW5mbywga2V5bGVuKSB7XG4gICAgcmV0dXJuICgwLCBoa2RmX2pzXzEuZGVmYXVsdCkobm9ybWFsaXplRGlnZXN0KGRpZ2VzdCksIG5vcm1hbGl6ZUlrbShpa20pLCBub3JtYWxpemVVaW50OEFycmF5KHNhbHQsICdzYWx0JyksIG5vcm1hbGl6ZUluZm8oaW5mbyksIG5vcm1hbGl6ZUtleWxlbihrZXlsZW4sIGRpZ2VzdCkpO1xufVxuZXhwb3J0cy5oa2RmID0gaGtkZjtcbmV4cG9ydHMuZGVmYXVsdCA9IGhrZGY7XG4iXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJkZWZhdWx0IiwiaGtkZiIsImhrZGZfanNfMSIsInJlcXVpcmUiLCJub3JtYWxpemVEaWdlc3QiLCJkaWdlc3QiLCJUeXBlRXJyb3IiLCJub3JtYWxpemVVaW50OEFycmF5IiwiaW5wdXQiLCJsYWJlbCIsIlRleHRFbmNvZGVyIiwiZW5jb2RlIiwiVWludDhBcnJheSIsIm5vcm1hbGl6ZUlrbSIsImlrbSIsImJ5dGVMZW5ndGgiLCJub3JtYWxpemVJbmZvIiwiaW5mbyIsIm5vcm1hbGl6ZUtleWxlbiIsIk51bWJlciIsImlzSW50ZWdlciIsImhhc2hsZW4iLCJwYXJzZUludCIsInN1YnN0ciIsInNhbHQiLCJrZXlsZW4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/@panva/hkdf/dist/node/cjs/index.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/@panva/hkdf/dist/node/cjs/runtime/fallback.js":
/*!********************************************************************!*\
  !*** ./node_modules/@panva/hkdf/dist/node/cjs/runtime/fallback.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nconst crypto_1 = __webpack_require__(/*! crypto */ \"crypto\");\nexports[\"default\"] = (digest, ikm, salt, info, keylen)=>{\n    const hashlen = parseInt(digest.substr(3), 10) >> 3 || 20;\n    const prk = (0, crypto_1.createHmac)(digest, salt.byteLength ? salt : new Uint8Array(hashlen)).update(ikm).digest();\n    const N = Math.ceil(keylen / hashlen);\n    const T = new Uint8Array(hashlen * N + info.byteLength + 1);\n    let prev = 0;\n    let start = 0;\n    for(let c = 1; c <= N; c++){\n        T.set(info, start);\n        T[start + info.byteLength] = c;\n        T.set((0, crypto_1.createHmac)(digest, prk).update(T.subarray(prev, start + info.byteLength + 1)).digest(), start);\n        prev = start;\n        start += hashlen;\n    }\n    return T.slice(0, keylen);\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvQHBhbnZhL2hrZGYvZGlzdC9ub2RlL2Nqcy9ydW50aW1lL2ZhbGxiYWNrLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2JBLDhDQUE2QztJQUFFRyxPQUFPO0FBQUssQ0FBQyxFQUFDO0FBQzdELE1BQU1DLFdBQVdDLG1CQUFPQSxDQUFDLHNCQUFRO0FBQ2pDSCxrQkFBZUksR0FBRyxDQUFDQyxRQUFRQyxLQUFLQyxNQUFNQyxNQUFNQztJQUN4QyxNQUFNQyxVQUFVQyxTQUFTTixPQUFPTyxPQUFPLElBQUksT0FBTyxLQUFLO0lBQ3ZELE1BQU1DLE1BQU0sQ0FBQyxHQUFHWCxTQUFTWSxVQUFTLEVBQUdULFFBQVFFLEtBQUtRLGFBQWFSLE9BQU8sSUFBSVMsV0FBV04sVUFDaEZPLE9BQU9YLEtBQ1BEO0lBQ0wsTUFBTWEsSUFBSUMsS0FBS0MsS0FBS1gsU0FBU0M7SUFDN0IsTUFBTVcsSUFBSSxJQUFJTCxXQUFXTixVQUFVUSxJQUFJVixLQUFLTyxhQUFhO0lBQ3pELElBQUlPLE9BQU87SUFDWCxJQUFJQyxRQUFRO0lBQ1osSUFBSyxJQUFJQyxJQUFJLEdBQUdBLEtBQUtOLEdBQUdNLElBQUs7UUFDekJILEVBQUVJLElBQUlqQixNQUFNZTtRQUNaRixDQUFDLENBQUNFLFFBQVFmLEtBQUtPLFdBQVcsR0FBR1M7UUFDN0JILEVBQUVJLElBQUksQ0FBQyxHQUFHdkIsU0FBU1ksVUFBUyxFQUFHVCxRQUFRUSxLQUNsQ0ksT0FBT0ksRUFBRUssU0FBU0osTUFBTUMsUUFBUWYsS0FBS08sYUFBYSxJQUNsRFYsVUFBVWtCO1FBQ2ZELE9BQU9DO1FBQ1BBLFNBQVNiO0lBQ2I7SUFDQSxPQUFPVyxFQUFFTSxNQUFNLEdBQUdsQjtBQUN0QiIsInNvdXJjZXMiOlsid2VicGFjazovL2Z1bGxzdGFjay1yb2xlLWJhc2VkLW5leHRqcy0yLy4vbm9kZV9tb2R1bGVzL0BwYW52YS9oa2RmL2Rpc3Qvbm9kZS9janMvcnVudGltZS9mYWxsYmFjay5qcz8wN2ExIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuY29uc3QgY3J5cHRvXzEgPSByZXF1aXJlKFwiY3J5cHRvXCIpO1xuZXhwb3J0cy5kZWZhdWx0ID0gKGRpZ2VzdCwgaWttLCBzYWx0LCBpbmZvLCBrZXlsZW4pID0+IHtcbiAgICBjb25zdCBoYXNobGVuID0gcGFyc2VJbnQoZGlnZXN0LnN1YnN0cigzKSwgMTApID4+IDMgfHwgMjA7XG4gICAgY29uc3QgcHJrID0gKDAsIGNyeXB0b18xLmNyZWF0ZUhtYWMpKGRpZ2VzdCwgc2FsdC5ieXRlTGVuZ3RoID8gc2FsdCA6IG5ldyBVaW50OEFycmF5KGhhc2hsZW4pKVxuICAgICAgICAudXBkYXRlKGlrbSlcbiAgICAgICAgLmRpZ2VzdCgpO1xuICAgIGNvbnN0IE4gPSBNYXRoLmNlaWwoa2V5bGVuIC8gaGFzaGxlbik7XG4gICAgY29uc3QgVCA9IG5ldyBVaW50OEFycmF5KGhhc2hsZW4gKiBOICsgaW5mby5ieXRlTGVuZ3RoICsgMSk7XG4gICAgbGV0IHByZXYgPSAwO1xuICAgIGxldCBzdGFydCA9IDA7XG4gICAgZm9yIChsZXQgYyA9IDE7IGMgPD0gTjsgYysrKSB7XG4gICAgICAgIFQuc2V0KGluZm8sIHN0YXJ0KTtcbiAgICAgICAgVFtzdGFydCArIGluZm8uYnl0ZUxlbmd0aF0gPSBjO1xuICAgICAgICBULnNldCgoMCwgY3J5cHRvXzEuY3JlYXRlSG1hYykoZGlnZXN0LCBwcmspXG4gICAgICAgICAgICAudXBkYXRlKFQuc3ViYXJyYXkocHJldiwgc3RhcnQgKyBpbmZvLmJ5dGVMZW5ndGggKyAxKSlcbiAgICAgICAgICAgIC5kaWdlc3QoKSwgc3RhcnQpO1xuICAgICAgICBwcmV2ID0gc3RhcnQ7XG4gICAgICAgIHN0YXJ0ICs9IGhhc2hsZW47XG4gICAgfVxuICAgIHJldHVybiBULnNsaWNlKDAsIGtleWxlbik7XG59O1xuIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiY3J5cHRvXzEiLCJyZXF1aXJlIiwiZGVmYXVsdCIsImRpZ2VzdCIsImlrbSIsInNhbHQiLCJpbmZvIiwia2V5bGVuIiwiaGFzaGxlbiIsInBhcnNlSW50Iiwic3Vic3RyIiwicHJrIiwiY3JlYXRlSG1hYyIsImJ5dGVMZW5ndGgiLCJVaW50OEFycmF5IiwidXBkYXRlIiwiTiIsIk1hdGgiLCJjZWlsIiwiVCIsInByZXYiLCJzdGFydCIsImMiLCJzZXQiLCJzdWJhcnJheSIsInNsaWNlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/@panva/hkdf/dist/node/cjs/runtime/fallback.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/@panva/hkdf/dist/node/cjs/runtime/hkdf.js":
/*!****************************************************************!*\
  !*** ./node_modules/@panva/hkdf/dist/node/cjs/runtime/hkdf.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nconst crypto = __webpack_require__(/*! crypto */ \"crypto\");\nconst fallback_js_1 = __webpack_require__(/*! ./fallback.js */ \"(sc_server)/./node_modules/@panva/hkdf/dist/node/cjs/runtime/fallback.js\");\nlet hkdf;\nif (typeof crypto.hkdf === \"function\" && !process.versions.electron) {\n    hkdf = async (...args)=>new Promise((resolve, reject)=>{\n            crypto.hkdf(...args, (err, arrayBuffer)=>{\n                if (err) reject(err);\n                else resolve(new Uint8Array(arrayBuffer));\n            });\n        });\n}\nexports[\"default\"] = async (digest, ikm, salt, info, keylen)=>(hkdf || fallback_js_1.default)(digest, ikm, salt, info, keylen);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvQHBhbnZhL2hrZGYvZGlzdC9ub2RlL2Nqcy9ydW50aW1lL2hrZGYuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYkEsOENBQTZDO0lBQUVHLE9BQU87QUFBSyxDQUFDLEVBQUM7QUFDN0QsTUFBTUMsU0FBU0MsbUJBQU9BLENBQUMsc0JBQVE7QUFDL0IsTUFBTUMsZ0JBQWdCRCxtQkFBT0EsQ0FBQywrRkFBZTtBQUM3QyxJQUFJRTtBQUNKLElBQUksT0FBT0gsT0FBT0csU0FBUyxjQUFjLENBQUNDLFFBQVFDLFNBQVNDLFVBQVU7SUFDakVILE9BQU8sT0FBTyxHQUFHSSxPQUFTLElBQUlDLFFBQVEsQ0FBQ0MsU0FBU0M7WUFDNUNWLE9BQU9HLFFBQVFJLE1BQU0sQ0FBQ0ksS0FBS0M7Z0JBQ3ZCLElBQUlELEtBQ0FELE9BQU9DO3FCQUVQRixRQUFRLElBQUlJLFdBQVdEO1lBQy9CO1FBQ0o7QUFDSjtBQUNBZCxrQkFBZWdCLEdBQUcsT0FBT0MsUUFBUUMsS0FBS0MsTUFBTUMsTUFBTUMsU0FBVyxDQUFDaEIsUUFBUUQsY0FBY1ksT0FBTSxFQUFHQyxRQUFRQyxLQUFLQyxNQUFNQyxNQUFNQyIsInNvdXJjZXMiOlsid2VicGFjazovL2Z1bGxzdGFjay1yb2xlLWJhc2VkLW5leHRqcy0yLy4vbm9kZV9tb2R1bGVzL0BwYW52YS9oa2RmL2Rpc3Qvbm9kZS9janMvcnVudGltZS9oa2RmLmpzPzllOGYiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5jb25zdCBjcnlwdG8gPSByZXF1aXJlKFwiY3J5cHRvXCIpO1xuY29uc3QgZmFsbGJhY2tfanNfMSA9IHJlcXVpcmUoXCIuL2ZhbGxiYWNrLmpzXCIpO1xubGV0IGhrZGY7XG5pZiAodHlwZW9mIGNyeXB0by5oa2RmID09PSAnZnVuY3Rpb24nICYmICFwcm9jZXNzLnZlcnNpb25zLmVsZWN0cm9uKSB7XG4gICAgaGtkZiA9IGFzeW5jICguLi5hcmdzKSA9PiBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XG4gICAgICAgIGNyeXB0by5oa2RmKC4uLmFyZ3MsIChlcnIsIGFycmF5QnVmZmVyKSA9PiB7XG4gICAgICAgICAgICBpZiAoZXJyKVxuICAgICAgICAgICAgICAgIHJlamVjdChlcnIpO1xuICAgICAgICAgICAgZWxzZVxuICAgICAgICAgICAgICAgIHJlc29sdmUobmV3IFVpbnQ4QXJyYXkoYXJyYXlCdWZmZXIpKTtcbiAgICAgICAgfSk7XG4gICAgfSk7XG59XG5leHBvcnRzLmRlZmF1bHQgPSBhc3luYyAoZGlnZXN0LCBpa20sIHNhbHQsIGluZm8sIGtleWxlbikgPT4gKGhrZGYgfHwgZmFsbGJhY2tfanNfMS5kZWZhdWx0KShkaWdlc3QsIGlrbSwgc2FsdCwgaW5mbywga2V5bGVuKTtcbiJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsImNyeXB0byIsInJlcXVpcmUiLCJmYWxsYmFja19qc18xIiwiaGtkZiIsInByb2Nlc3MiLCJ2ZXJzaW9ucyIsImVsZWN0cm9uIiwiYXJncyIsIlByb21pc2UiLCJyZXNvbHZlIiwicmVqZWN0IiwiZXJyIiwiYXJyYXlCdWZmZXIiLCJVaW50OEFycmF5IiwiZGVmYXVsdCIsImRpZ2VzdCIsImlrbSIsInNhbHQiLCJpbmZvIiwia2V5bGVuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/@panva/hkdf/dist/node/cjs/runtime/hkdf.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/bcryptjs/dist/bcrypt.js":
/*!**********************************************!*\
  !*** ./node_modules/bcryptjs/dist/bcrypt.js ***!
  \**********************************************/
/***/ (function(module, exports, __webpack_require__) {

eval("/* module decorator */ module = __webpack_require__.nmd(module);\nvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*\r\n Copyright (c) 2012 Nevins Bartolomeo <nevins.bartolomeo@gmail.com>\r\n Copyright (c) 2012 Shane Girish <shaneGirish@gmail.com>\r\n Copyright (c) 2014 Daniel Wirtz <dcode@dcode.io>\r\n\r\n Redistribution and use in source and binary forms, with or without\r\n modification, are permitted provided that the following conditions\r\n are met:\r\n 1. Redistributions of source code must retain the above copyright\r\n notice, this list of conditions and the following disclaimer.\r\n 2. Redistributions in binary form must reproduce the above copyright\r\n notice, this list of conditions and the following disclaimer in the\r\n documentation and/or other materials provided with the distribution.\r\n 3. The name of the author may not be used to endorse or promote products\r\n derived from this software without specific prior written permission.\r\n\r\n THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR\r\n IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\r\n OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,\r\n INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\r\n DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\r\n THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\r\n (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\r\n THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n */ /**\r\n * @license bcrypt.js (c) 2013 Daniel Wirtz <dcode@dcode.io>\r\n * Released under the Apache License, Version 2.0\r\n * see: https://github.com/dcodeIO/bcrypt.js for details\r\n */ (function(global, factory) {\n    /* AMD */ if (true) !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n    else {}\n})(this, function() {\n    \"use strict\";\n    /**\r\n     * bcrypt namespace.\r\n     * @type {Object.<string,*>}\r\n     */ var bcrypt = {};\n    /**\r\n     * The random implementation to use as a fallback.\r\n     * @type {?function(number):!Array.<number>}\r\n     * @inner\r\n     */ var randomFallback = null;\n    /**\r\n     * Generates cryptographically secure random bytes.\r\n     * @function\r\n     * @param {number} len Bytes length\r\n     * @returns {!Array.<number>} Random bytes\r\n     * @throws {Error} If no random implementation is available\r\n     * @inner\r\n     */ function random(len) {\n        /* node */ if ( true && module && module[\"exports\"]) try {\n            return (__webpack_require__(/*! crypto */ \"crypto\").randomBytes)(len);\n        } catch (e) {}\n        /* WCA */ try {\n            var a;\n            (self[\"crypto\"] || self[\"msCrypto\"])[\"getRandomValues\"](a = new Uint32Array(len));\n            return Array.prototype.slice.call(a);\n        } catch (e) {}\n        /* fallback */ if (!randomFallback) throw Error(\"Neither WebCryptoAPI nor a crypto module is available. Use bcrypt.setRandomFallback to set an alternative\");\n        return randomFallback(len);\n    }\n    // Test if any secure randomness source is available\n    var randomAvailable = false;\n    try {\n        random(1);\n        randomAvailable = true;\n    } catch (e) {}\n    // Default fallback, if any\n    randomFallback = null;\n    /**\r\n     * Sets the pseudo random number generator to use as a fallback if neither node's `crypto` module nor the Web Crypto\r\n     *  API is available. Please note: It is highly important that the PRNG used is cryptographically secure and that it\r\n     *  is seeded properly!\r\n     * @param {?function(number):!Array.<number>} random Function taking the number of bytes to generate as its\r\n     *  sole argument, returning the corresponding array of cryptographically secure random byte values.\r\n     * @see http://nodejs.org/api/crypto.html\r\n     * @see http://www.w3.org/TR/WebCryptoAPI/\r\n     */ bcrypt.setRandomFallback = function(random) {\n        randomFallback = random;\n    };\n    /**\r\n     * Synchronously generates a salt.\r\n     * @param {number=} rounds Number of rounds to use, defaults to 10 if omitted\r\n     * @param {number=} seed_length Not supported.\r\n     * @returns {string} Resulting salt\r\n     * @throws {Error} If a random fallback is required but not set\r\n     * @expose\r\n     */ bcrypt.genSaltSync = function(rounds, seed_length) {\n        rounds = rounds || GENSALT_DEFAULT_LOG2_ROUNDS;\n        if (typeof rounds !== \"number\") throw Error(\"Illegal arguments: \" + typeof rounds + \", \" + typeof seed_length);\n        if (rounds < 4) rounds = 4;\n        else if (rounds > 31) rounds = 31;\n        var salt = [];\n        salt.push(\"$2a$\");\n        if (rounds < 10) salt.push(\"0\");\n        salt.push(rounds.toString());\n        salt.push(\"$\");\n        salt.push(base64_encode(random(BCRYPT_SALT_LEN), BCRYPT_SALT_LEN)); // May throw\n        return salt.join(\"\");\n    };\n    /**\r\n     * Asynchronously generates a salt.\r\n     * @param {(number|function(Error, string=))=} rounds Number of rounds to use, defaults to 10 if omitted\r\n     * @param {(number|function(Error, string=))=} seed_length Not supported.\r\n     * @param {function(Error, string=)=} callback Callback receiving the error, if any, and the resulting salt\r\n     * @returns {!Promise} If `callback` has been omitted\r\n     * @throws {Error} If `callback` is present but not a function\r\n     * @expose\r\n     */ bcrypt.genSalt = function(rounds, seed_length, callback) {\n        if (typeof seed_length === \"function\") callback = seed_length, seed_length = undefined; // Not supported.\n        if (typeof rounds === \"function\") callback = rounds, rounds = undefined;\n        if (typeof rounds === \"undefined\") rounds = GENSALT_DEFAULT_LOG2_ROUNDS;\n        else if (typeof rounds !== \"number\") throw Error(\"illegal arguments: \" + typeof rounds);\n        function _async(callback) {\n            nextTick(function() {\n                try {\n                    callback(null, bcrypt.genSaltSync(rounds));\n                } catch (err) {\n                    callback(err);\n                }\n            });\n        }\n        if (callback) {\n            if (typeof callback !== \"function\") throw Error(\"Illegal callback: \" + typeof callback);\n            _async(callback);\n        } else return new Promise(function(resolve, reject) {\n            _async(function(err, res) {\n                if (err) {\n                    reject(err);\n                    return;\n                }\n                resolve(res);\n            });\n        });\n    };\n    /**\r\n     * Synchronously generates a hash for the given string.\r\n     * @param {string} s String to hash\r\n     * @param {(number|string)=} salt Salt length to generate or salt to use, default to 10\r\n     * @returns {string} Resulting hash\r\n     * @expose\r\n     */ bcrypt.hashSync = function(s, salt) {\n        if (typeof salt === \"undefined\") salt = GENSALT_DEFAULT_LOG2_ROUNDS;\n        if (typeof salt === \"number\") salt = bcrypt.genSaltSync(salt);\n        if (typeof s !== \"string\" || typeof salt !== \"string\") throw Error(\"Illegal arguments: \" + typeof s + \", \" + typeof salt);\n        return _hash(s, salt);\n    };\n    /**\r\n     * Asynchronously generates a hash for the given string.\r\n     * @param {string} s String to hash\r\n     * @param {number|string} salt Salt length to generate or salt to use\r\n     * @param {function(Error, string=)=} callback Callback receiving the error, if any, and the resulting hash\r\n     * @param {function(number)=} progressCallback Callback successively called with the percentage of rounds completed\r\n     *  (0.0 - 1.0), maximally once per `MAX_EXECUTION_TIME = 100` ms.\r\n     * @returns {!Promise} If `callback` has been omitted\r\n     * @throws {Error} If `callback` is present but not a function\r\n     * @expose\r\n     */ bcrypt.hash = function(s, salt, callback, progressCallback) {\n        function _async(callback) {\n            if (typeof s === \"string\" && typeof salt === \"number\") bcrypt.genSalt(salt, function(err, salt) {\n                _hash(s, salt, callback, progressCallback);\n            });\n            else if (typeof s === \"string\" && typeof salt === \"string\") _hash(s, salt, callback, progressCallback);\n            else nextTick(callback.bind(this, Error(\"Illegal arguments: \" + typeof s + \", \" + typeof salt)));\n        }\n        if (callback) {\n            if (typeof callback !== \"function\") throw Error(\"Illegal callback: \" + typeof callback);\n            _async(callback);\n        } else return new Promise(function(resolve, reject) {\n            _async(function(err, res) {\n                if (err) {\n                    reject(err);\n                    return;\n                }\n                resolve(res);\n            });\n        });\n    };\n    /**\r\n     * Compares two strings of the same length in constant time.\r\n     * @param {string} known Must be of the correct length\r\n     * @param {string} unknown Must be the same length as `known`\r\n     * @returns {boolean}\r\n     * @inner\r\n     */ function safeStringCompare(known, unknown) {\n        var right = 0, wrong = 0;\n        for(var i = 0, k = known.length; i < k; ++i){\n            if (known.charCodeAt(i) === unknown.charCodeAt(i)) ++right;\n            else ++wrong;\n        }\n        // Prevent removal of unused variables (never true, actually)\n        if (right < 0) return false;\n        return wrong === 0;\n    }\n    /**\r\n     * Synchronously tests a string against a hash.\r\n     * @param {string} s String to compare\r\n     * @param {string} hash Hash to test against\r\n     * @returns {boolean} true if matching, otherwise false\r\n     * @throws {Error} If an argument is illegal\r\n     * @expose\r\n     */ bcrypt.compareSync = function(s, hash) {\n        if (typeof s !== \"string\" || typeof hash !== \"string\") throw Error(\"Illegal arguments: \" + typeof s + \", \" + typeof hash);\n        if (hash.length !== 60) return false;\n        return safeStringCompare(bcrypt.hashSync(s, hash.substr(0, hash.length - 31)), hash);\n    };\n    /**\r\n     * Asynchronously compares the given data against the given hash.\r\n     * @param {string} s Data to compare\r\n     * @param {string} hash Data to be compared to\r\n     * @param {function(Error, boolean)=} callback Callback receiving the error, if any, otherwise the result\r\n     * @param {function(number)=} progressCallback Callback successively called with the percentage of rounds completed\r\n     *  (0.0 - 1.0), maximally once per `MAX_EXECUTION_TIME = 100` ms.\r\n     * @returns {!Promise} If `callback` has been omitted\r\n     * @throws {Error} If `callback` is present but not a function\r\n     * @expose\r\n     */ bcrypt.compare = function(s, hash, callback, progressCallback) {\n        function _async(callback) {\n            if (typeof s !== \"string\" || typeof hash !== \"string\") {\n                nextTick(callback.bind(this, Error(\"Illegal arguments: \" + typeof s + \", \" + typeof hash)));\n                return;\n            }\n            if (hash.length !== 60) {\n                nextTick(callback.bind(this, null, false));\n                return;\n            }\n            bcrypt.hash(s, hash.substr(0, 29), function(err, comp) {\n                if (err) callback(err);\n                else callback(null, safeStringCompare(comp, hash));\n            }, progressCallback);\n        }\n        if (callback) {\n            if (typeof callback !== \"function\") throw Error(\"Illegal callback: \" + typeof callback);\n            _async(callback);\n        } else return new Promise(function(resolve, reject) {\n            _async(function(err, res) {\n                if (err) {\n                    reject(err);\n                    return;\n                }\n                resolve(res);\n            });\n        });\n    };\n    /**\r\n     * Gets the number of rounds used to encrypt the specified hash.\r\n     * @param {string} hash Hash to extract the used number of rounds from\r\n     * @returns {number} Number of rounds used\r\n     * @throws {Error} If `hash` is not a string\r\n     * @expose\r\n     */ bcrypt.getRounds = function(hash) {\n        if (typeof hash !== \"string\") throw Error(\"Illegal arguments: \" + typeof hash);\n        return parseInt(hash.split(\"$\")[2], 10);\n    };\n    /**\r\n     * Gets the salt portion from a hash. Does not validate the hash.\r\n     * @param {string} hash Hash to extract the salt from\r\n     * @returns {string} Extracted salt part\r\n     * @throws {Error} If `hash` is not a string or otherwise invalid\r\n     * @expose\r\n     */ bcrypt.getSalt = function(hash) {\n        if (typeof hash !== \"string\") throw Error(\"Illegal arguments: \" + typeof hash);\n        if (hash.length !== 60) throw Error(\"Illegal hash length: \" + hash.length + \" != 60\");\n        return hash.substring(0, 29);\n    };\n    /**\r\n     * Continues with the callback on the next tick.\r\n     * @function\r\n     * @param {function(...[*])} callback Callback to execute\r\n     * @inner\r\n     */ var nextTick = typeof process !== \"undefined\" && process && typeof process.nextTick === \"function\" ? typeof setImmediate === \"function\" ? setImmediate : process.nextTick : setTimeout;\n    /**\r\n     * Converts a JavaScript string to UTF8 bytes.\r\n     * @param {string} str String\r\n     * @returns {!Array.<number>} UTF8 bytes\r\n     * @inner\r\n     */ function stringToBytes(str) {\n        var out = [], i = 0;\n        utfx.encodeUTF16toUTF8(function() {\n            if (i >= str.length) return null;\n            return str.charCodeAt(i++);\n        }, function(b) {\n            out.push(b);\n        });\n        return out;\n    }\n    // A base64 implementation for the bcrypt algorithm. This is partly non-standard.\n    /**\r\n     * bcrypt's own non-standard base64 dictionary.\r\n     * @type {!Array.<string>}\r\n     * @const\r\n     * @inner\r\n     **/ var BASE64_CODE = \"./ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\".split(\"\");\n    /**\r\n     * @type {!Array.<number>}\r\n     * @const\r\n     * @inner\r\n     **/ var BASE64_INDEX = [\n        -1,\n        -1,\n        -1,\n        -1,\n        -1,\n        -1,\n        -1,\n        -1,\n        -1,\n        -1,\n        -1,\n        -1,\n        -1,\n        -1,\n        -1,\n        -1,\n        -1,\n        -1,\n        -1,\n        -1,\n        -1,\n        -1,\n        -1,\n        -1,\n        -1,\n        -1,\n        -1,\n        -1,\n        -1,\n        -1,\n        -1,\n        -1,\n        -1,\n        -1,\n        -1,\n        -1,\n        -1,\n        -1,\n        -1,\n        -1,\n        -1,\n        -1,\n        -1,\n        -1,\n        -1,\n        -1,\n        0,\n        1,\n        54,\n        55,\n        56,\n        57,\n        58,\n        59,\n        60,\n        61,\n        62,\n        63,\n        -1,\n        -1,\n        -1,\n        -1,\n        -1,\n        -1,\n        -1,\n        2,\n        3,\n        4,\n        5,\n        6,\n        7,\n        8,\n        9,\n        10,\n        11,\n        12,\n        13,\n        14,\n        15,\n        16,\n        17,\n        18,\n        19,\n        20,\n        21,\n        22,\n        23,\n        24,\n        25,\n        26,\n        27,\n        -1,\n        -1,\n        -1,\n        -1,\n        -1,\n        -1,\n        28,\n        29,\n        30,\n        31,\n        32,\n        33,\n        34,\n        35,\n        36,\n        37,\n        38,\n        39,\n        40,\n        41,\n        42,\n        43,\n        44,\n        45,\n        46,\n        47,\n        48,\n        49,\n        50,\n        51,\n        52,\n        53,\n        -1,\n        -1,\n        -1,\n        -1,\n        -1\n    ];\n    /**\r\n     * @type {!function(...number):string}\r\n     * @inner\r\n     */ var stringFromCharCode = String.fromCharCode;\n    /**\r\n     * Encodes a byte array to base64 with up to len bytes of input.\r\n     * @param {!Array.<number>} b Byte array\r\n     * @param {number} len Maximum input length\r\n     * @returns {string}\r\n     * @inner\r\n     */ function base64_encode(b, len) {\n        var off = 0, rs = [], c1, c2;\n        if (len <= 0 || len > b.length) throw Error(\"Illegal len: \" + len);\n        while(off < len){\n            c1 = b[off++] & 0xff;\n            rs.push(BASE64_CODE[c1 >> 2 & 0x3f]);\n            c1 = (c1 & 0x03) << 4;\n            if (off >= len) {\n                rs.push(BASE64_CODE[c1 & 0x3f]);\n                break;\n            }\n            c2 = b[off++] & 0xff;\n            c1 |= c2 >> 4 & 0x0f;\n            rs.push(BASE64_CODE[c1 & 0x3f]);\n            c1 = (c2 & 0x0f) << 2;\n            if (off >= len) {\n                rs.push(BASE64_CODE[c1 & 0x3f]);\n                break;\n            }\n            c2 = b[off++] & 0xff;\n            c1 |= c2 >> 6 & 0x03;\n            rs.push(BASE64_CODE[c1 & 0x3f]);\n            rs.push(BASE64_CODE[c2 & 0x3f]);\n        }\n        return rs.join(\"\");\n    }\n    /**\r\n     * Decodes a base64 encoded string to up to len bytes of output.\r\n     * @param {string} s String to decode\r\n     * @param {number} len Maximum output length\r\n     * @returns {!Array.<number>}\r\n     * @inner\r\n     */ function base64_decode(s, len) {\n        var off = 0, slen = s.length, olen = 0, rs = [], c1, c2, c3, c4, o, code;\n        if (len <= 0) throw Error(\"Illegal len: \" + len);\n        while(off < slen - 1 && olen < len){\n            code = s.charCodeAt(off++);\n            c1 = code < BASE64_INDEX.length ? BASE64_INDEX[code] : -1;\n            code = s.charCodeAt(off++);\n            c2 = code < BASE64_INDEX.length ? BASE64_INDEX[code] : -1;\n            if (c1 == -1 || c2 == -1) break;\n            o = c1 << 2 >>> 0;\n            o |= (c2 & 0x30) >> 4;\n            rs.push(stringFromCharCode(o));\n            if (++olen >= len || off >= slen) break;\n            code = s.charCodeAt(off++);\n            c3 = code < BASE64_INDEX.length ? BASE64_INDEX[code] : -1;\n            if (c3 == -1) break;\n            o = (c2 & 0x0f) << 4 >>> 0;\n            o |= (c3 & 0x3c) >> 2;\n            rs.push(stringFromCharCode(o));\n            if (++olen >= len || off >= slen) break;\n            code = s.charCodeAt(off++);\n            c4 = code < BASE64_INDEX.length ? BASE64_INDEX[code] : -1;\n            o = (c3 & 0x03) << 6 >>> 0;\n            o |= c4;\n            rs.push(stringFromCharCode(o));\n            ++olen;\n        }\n        var res = [];\n        for(off = 0; off < olen; off++)res.push(rs[off].charCodeAt(0));\n        return res;\n    }\n    /**\r\n     * utfx-embeddable (c) 2014 Daniel Wirtz <dcode@dcode.io>\r\n     * Released under the Apache License, Version 2.0\r\n     * see: https://github.com/dcodeIO/utfx for details\r\n     */ var utfx = function() {\n        \"use strict\";\n        /**\r\n         * utfx namespace.\r\n         * @inner\r\n         * @type {!Object.<string,*>}\r\n         */ var utfx = {};\n        /**\r\n         * Maximum valid code point.\r\n         * @type {number}\r\n         * @const\r\n         */ utfx.MAX_CODEPOINT = 0x10FFFF;\n        /**\r\n         * Encodes UTF8 code points to UTF8 bytes.\r\n         * @param {(!function():number|null) | number} src Code points source, either as a function returning the next code point\r\n         *  respectively `null` if there are no more code points left or a single numeric code point.\r\n         * @param {!function(number)} dst Bytes destination as a function successively called with the next byte\r\n         */ utfx.encodeUTF8 = function(src, dst) {\n            var cp = null;\n            if (typeof src === \"number\") cp = src, src = function() {\n                return null;\n            };\n            while(cp !== null || (cp = src()) !== null){\n                if (cp < 0x80) dst(cp & 0x7F);\n                else if (cp < 0x800) dst(cp >> 6 & 0x1F | 0xC0), dst(cp & 0x3F | 0x80);\n                else if (cp < 0x10000) dst(cp >> 12 & 0x0F | 0xE0), dst(cp >> 6 & 0x3F | 0x80), dst(cp & 0x3F | 0x80);\n                else dst(cp >> 18 & 0x07 | 0xF0), dst(cp >> 12 & 0x3F | 0x80), dst(cp >> 6 & 0x3F | 0x80), dst(cp & 0x3F | 0x80);\n                cp = null;\n            }\n        };\n        /**\r\n         * Decodes UTF8 bytes to UTF8 code points.\r\n         * @param {!function():number|null} src Bytes source as a function returning the next byte respectively `null` if there\r\n         *  are no more bytes left.\r\n         * @param {!function(number)} dst Code points destination as a function successively called with each decoded code point.\r\n         * @throws {RangeError} If a starting byte is invalid in UTF8\r\n         * @throws {Error} If the last sequence is truncated. Has an array property `bytes` holding the\r\n         *  remaining bytes.\r\n         */ utfx.decodeUTF8 = function(src, dst) {\n            var a, b, c, d, fail = function(b) {\n                b = b.slice(0, b.indexOf(null));\n                var err = Error(b.toString());\n                err.name = \"TruncatedError\";\n                err[\"bytes\"] = b;\n                throw err;\n            };\n            while((a = src()) !== null){\n                if ((a & 0x80) === 0) dst(a);\n                else if ((a & 0xE0) === 0xC0) (b = src()) === null && fail([\n                    a,\n                    b\n                ]), dst((a & 0x1F) << 6 | b & 0x3F);\n                else if ((a & 0xF0) === 0xE0) ((b = src()) === null || (c = src()) === null) && fail([\n                    a,\n                    b,\n                    c\n                ]), dst((a & 0x0F) << 12 | (b & 0x3F) << 6 | c & 0x3F);\n                else if ((a & 0xF8) === 0xF0) ((b = src()) === null || (c = src()) === null || (d = src()) === null) && fail([\n                    a,\n                    b,\n                    c,\n                    d\n                ]), dst((a & 0x07) << 18 | (b & 0x3F) << 12 | (c & 0x3F) << 6 | d & 0x3F);\n                else throw RangeError(\"Illegal starting byte: \" + a);\n            }\n        };\n        /**\r\n         * Converts UTF16 characters to UTF8 code points.\r\n         * @param {!function():number|null} src Characters source as a function returning the next char code respectively\r\n         *  `null` if there are no more characters left.\r\n         * @param {!function(number)} dst Code points destination as a function successively called with each converted code\r\n         *  point.\r\n         */ utfx.UTF16toUTF8 = function(src, dst) {\n            var c1, c2 = null;\n            while(true){\n                if ((c1 = c2 !== null ? c2 : src()) === null) break;\n                if (c1 >= 0xD800 && c1 <= 0xDFFF) {\n                    if ((c2 = src()) !== null) {\n                        if (c2 >= 0xDC00 && c2 <= 0xDFFF) {\n                            dst((c1 - 0xD800) * 0x400 + c2 - 0xDC00 + 0x10000);\n                            c2 = null;\n                            continue;\n                        }\n                    }\n                }\n                dst(c1);\n            }\n            if (c2 !== null) dst(c2);\n        };\n        /**\r\n         * Converts UTF8 code points to UTF16 characters.\r\n         * @param {(!function():number|null) | number} src Code points source, either as a function returning the next code point\r\n         *  respectively `null` if there are no more code points left or a single numeric code point.\r\n         * @param {!function(number)} dst Characters destination as a function successively called with each converted char code.\r\n         * @throws {RangeError} If a code point is out of range\r\n         */ utfx.UTF8toUTF16 = function(src, dst) {\n            var cp = null;\n            if (typeof src === \"number\") cp = src, src = function() {\n                return null;\n            };\n            while(cp !== null || (cp = src()) !== null){\n                if (cp <= 0xFFFF) dst(cp);\n                else cp -= 0x10000, dst((cp >> 10) + 0xD800), dst(cp % 0x400 + 0xDC00);\n                cp = null;\n            }\n        };\n        /**\r\n         * Converts and encodes UTF16 characters to UTF8 bytes.\r\n         * @param {!function():number|null} src Characters source as a function returning the next char code respectively `null`\r\n         *  if there are no more characters left.\r\n         * @param {!function(number)} dst Bytes destination as a function successively called with the next byte.\r\n         */ utfx.encodeUTF16toUTF8 = function(src, dst) {\n            utfx.UTF16toUTF8(src, function(cp) {\n                utfx.encodeUTF8(cp, dst);\n            });\n        };\n        /**\r\n         * Decodes and converts UTF8 bytes to UTF16 characters.\r\n         * @param {!function():number|null} src Bytes source as a function returning the next byte respectively `null` if there\r\n         *  are no more bytes left.\r\n         * @param {!function(number)} dst Characters destination as a function successively called with each converted char code.\r\n         * @throws {RangeError} If a starting byte is invalid in UTF8\r\n         * @throws {Error} If the last sequence is truncated. Has an array property `bytes` holding the remaining bytes.\r\n         */ utfx.decodeUTF8toUTF16 = function(src, dst) {\n            utfx.decodeUTF8(src, function(cp) {\n                utfx.UTF8toUTF16(cp, dst);\n            });\n        };\n        /**\r\n         * Calculates the byte length of an UTF8 code point.\r\n         * @param {number} cp UTF8 code point\r\n         * @returns {number} Byte length\r\n         */ utfx.calculateCodePoint = function(cp) {\n            return cp < 0x80 ? 1 : cp < 0x800 ? 2 : cp < 0x10000 ? 3 : 4;\n        };\n        /**\r\n         * Calculates the number of UTF8 bytes required to store UTF8 code points.\r\n         * @param {(!function():number|null)} src Code points source as a function returning the next code point respectively\r\n         *  `null` if there are no more code points left.\r\n         * @returns {number} The number of UTF8 bytes required\r\n         */ utfx.calculateUTF8 = function(src) {\n            var cp, l = 0;\n            while((cp = src()) !== null)l += utfx.calculateCodePoint(cp);\n            return l;\n        };\n        /**\r\n         * Calculates the number of UTF8 code points respectively UTF8 bytes required to store UTF16 char codes.\r\n         * @param {(!function():number|null)} src Characters source as a function returning the next char code respectively\r\n         *  `null` if there are no more characters left.\r\n         * @returns {!Array.<number>} The number of UTF8 code points at index 0 and the number of UTF8 bytes required at index 1.\r\n         */ utfx.calculateUTF16asUTF8 = function(src) {\n            var n = 0, l = 0;\n            utfx.UTF16toUTF8(src, function(cp) {\n                ++n;\n                l += utfx.calculateCodePoint(cp);\n            });\n            return [\n                n,\n                l\n            ];\n        };\n        return utfx;\n    }();\n    Date.now = Date.now || function() {\n        return +new Date;\n    };\n    /**\r\n     * @type {number}\r\n     * @const\r\n     * @inner\r\n     */ var BCRYPT_SALT_LEN = 16;\n    /**\r\n     * @type {number}\r\n     * @const\r\n     * @inner\r\n     */ var GENSALT_DEFAULT_LOG2_ROUNDS = 10;\n    /**\r\n     * @type {number}\r\n     * @const\r\n     * @inner\r\n     */ var BLOWFISH_NUM_ROUNDS = 16;\n    /**\r\n     * @type {number}\r\n     * @const\r\n     * @inner\r\n     */ var MAX_EXECUTION_TIME = 100;\n    /**\r\n     * @type {Array.<number>}\r\n     * @const\r\n     * @inner\r\n     */ var P_ORIG = [\n        0x243f6a88,\n        0x85a308d3,\n        0x13198a2e,\n        0x03707344,\n        0xa4093822,\n        0x299f31d0,\n        0x082efa98,\n        0xec4e6c89,\n        0x452821e6,\n        0x38d01377,\n        0xbe5466cf,\n        0x34e90c6c,\n        0xc0ac29b7,\n        0xc97c50dd,\n        0x3f84d5b5,\n        0xb5470917,\n        0x9216d5d9,\n        0x8979fb1b\n    ];\n    /**\r\n     * @type {Array.<number>}\r\n     * @const\r\n     * @inner\r\n     */ var S_ORIG = [\n        0xd1310ba6,\n        0x98dfb5ac,\n        0x2ffd72db,\n        0xd01adfb7,\n        0xb8e1afed,\n        0x6a267e96,\n        0xba7c9045,\n        0xf12c7f99,\n        0x24a19947,\n        0xb3916cf7,\n        0x0801f2e2,\n        0x858efc16,\n        0x636920d8,\n        0x71574e69,\n        0xa458fea3,\n        0xf4933d7e,\n        0x0d95748f,\n        0x728eb658,\n        0x718bcd58,\n        0x82154aee,\n        0x7b54a41d,\n        0xc25a59b5,\n        0x9c30d539,\n        0x2af26013,\n        0xc5d1b023,\n        0x286085f0,\n        0xca417918,\n        0xb8db38ef,\n        0x8e79dcb0,\n        0x603a180e,\n        0x6c9e0e8b,\n        0xb01e8a3e,\n        0xd71577c1,\n        0xbd314b27,\n        0x78af2fda,\n        0x55605c60,\n        0xe65525f3,\n        0xaa55ab94,\n        0x57489862,\n        0x63e81440,\n        0x55ca396a,\n        0x2aab10b6,\n        0xb4cc5c34,\n        0x1141e8ce,\n        0xa15486af,\n        0x7c72e993,\n        0xb3ee1411,\n        0x636fbc2a,\n        0x2ba9c55d,\n        0x741831f6,\n        0xce5c3e16,\n        0x9b87931e,\n        0xafd6ba33,\n        0x6c24cf5c,\n        0x7a325381,\n        0x28958677,\n        0x3b8f4898,\n        0x6b4bb9af,\n        0xc4bfe81b,\n        0x66282193,\n        0x61d809cc,\n        0xfb21a991,\n        0x487cac60,\n        0x5dec8032,\n        0xef845d5d,\n        0xe98575b1,\n        0xdc262302,\n        0xeb651b88,\n        0x23893e81,\n        0xd396acc5,\n        0x0f6d6ff3,\n        0x83f44239,\n        0x2e0b4482,\n        0xa4842004,\n        0x69c8f04a,\n        0x9e1f9b5e,\n        0x21c66842,\n        0xf6e96c9a,\n        0x670c9c61,\n        0xabd388f0,\n        0x6a51a0d2,\n        0xd8542f68,\n        0x960fa728,\n        0xab5133a3,\n        0x6eef0b6c,\n        0x137a3be4,\n        0xba3bf050,\n        0x7efb2a98,\n        0xa1f1651d,\n        0x39af0176,\n        0x66ca593e,\n        0x82430e88,\n        0x8cee8619,\n        0x456f9fb4,\n        0x7d84a5c3,\n        0x3b8b5ebe,\n        0xe06f75d8,\n        0x85c12073,\n        0x401a449f,\n        0x56c16aa6,\n        0x4ed3aa62,\n        0x363f7706,\n        0x1bfedf72,\n        0x429b023d,\n        0x37d0d724,\n        0xd00a1248,\n        0xdb0fead3,\n        0x49f1c09b,\n        0x075372c9,\n        0x80991b7b,\n        0x25d479d8,\n        0xf6e8def7,\n        0xe3fe501a,\n        0xb6794c3b,\n        0x976ce0bd,\n        0x04c006ba,\n        0xc1a94fb6,\n        0x409f60c4,\n        0x5e5c9ec2,\n        0x196a2463,\n        0x68fb6faf,\n        0x3e6c53b5,\n        0x1339b2eb,\n        0x3b52ec6f,\n        0x6dfc511f,\n        0x9b30952c,\n        0xcc814544,\n        0xaf5ebd09,\n        0xbee3d004,\n        0xde334afd,\n        0x660f2807,\n        0x192e4bb3,\n        0xc0cba857,\n        0x45c8740f,\n        0xd20b5f39,\n        0xb9d3fbdb,\n        0x5579c0bd,\n        0x1a60320a,\n        0xd6a100c6,\n        0x402c7279,\n        0x679f25fe,\n        0xfb1fa3cc,\n        0x8ea5e9f8,\n        0xdb3222f8,\n        0x3c7516df,\n        0xfd616b15,\n        0x2f501ec8,\n        0xad0552ab,\n        0x323db5fa,\n        0xfd238760,\n        0x53317b48,\n        0x3e00df82,\n        0x9e5c57bb,\n        0xca6f8ca0,\n        0x1a87562e,\n        0xdf1769db,\n        0xd542a8f6,\n        0x287effc3,\n        0xac6732c6,\n        0x8c4f5573,\n        0x695b27b0,\n        0xbbca58c8,\n        0xe1ffa35d,\n        0xb8f011a0,\n        0x10fa3d98,\n        0xfd2183b8,\n        0x4afcb56c,\n        0x2dd1d35b,\n        0x9a53e479,\n        0xb6f84565,\n        0xd28e49bc,\n        0x4bfb9790,\n        0xe1ddf2da,\n        0xa4cb7e33,\n        0x62fb1341,\n        0xcee4c6e8,\n        0xef20cada,\n        0x36774c01,\n        0xd07e9efe,\n        0x2bf11fb4,\n        0x95dbda4d,\n        0xae909198,\n        0xeaad8e71,\n        0x6b93d5a0,\n        0xd08ed1d0,\n        0xafc725e0,\n        0x8e3c5b2f,\n        0x8e7594b7,\n        0x8ff6e2fb,\n        0xf2122b64,\n        0x8888b812,\n        0x900df01c,\n        0x4fad5ea0,\n        0x688fc31c,\n        0xd1cff191,\n        0xb3a8c1ad,\n        0x2f2f2218,\n        0xbe0e1777,\n        0xea752dfe,\n        0x8b021fa1,\n        0xe5a0cc0f,\n        0xb56f74e8,\n        0x18acf3d6,\n        0xce89e299,\n        0xb4a84fe0,\n        0xfd13e0b7,\n        0x7cc43b81,\n        0xd2ada8d9,\n        0x165fa266,\n        0x80957705,\n        0x93cc7314,\n        0x211a1477,\n        0xe6ad2065,\n        0x77b5fa86,\n        0xc75442f5,\n        0xfb9d35cf,\n        0xebcdaf0c,\n        0x7b3e89a0,\n        0xd6411bd3,\n        0xae1e7e49,\n        0x00250e2d,\n        0x2071b35e,\n        0x226800bb,\n        0x57b8e0af,\n        0x2464369b,\n        0xf009b91e,\n        0x5563911d,\n        0x59dfa6aa,\n        0x78c14389,\n        0xd95a537f,\n        0x207d5ba2,\n        0x02e5b9c5,\n        0x83260376,\n        0x6295cfa9,\n        0x11c81968,\n        0x4e734a41,\n        0xb3472dca,\n        0x7b14a94a,\n        0x1b510052,\n        0x9a532915,\n        0xd60f573f,\n        0xbc9bc6e4,\n        0x2b60a476,\n        0x81e67400,\n        0x08ba6fb5,\n        0x571be91f,\n        0xf296ec6b,\n        0x2a0dd915,\n        0xb6636521,\n        0xe7b9f9b6,\n        0xff34052e,\n        0xc5855664,\n        0x53b02d5d,\n        0xa99f8fa1,\n        0x08ba4799,\n        0x6e85076a,\n        0x4b7a70e9,\n        0xb5b32944,\n        0xdb75092e,\n        0xc4192623,\n        0xad6ea6b0,\n        0x49a7df7d,\n        0x9cee60b8,\n        0x8fedb266,\n        0xecaa8c71,\n        0x699a17ff,\n        0x5664526c,\n        0xc2b19ee1,\n        0x193602a5,\n        0x75094c29,\n        0xa0591340,\n        0xe4183a3e,\n        0x3f54989a,\n        0x5b429d65,\n        0x6b8fe4d6,\n        0x99f73fd6,\n        0xa1d29c07,\n        0xefe830f5,\n        0x4d2d38e6,\n        0xf0255dc1,\n        0x4cdd2086,\n        0x8470eb26,\n        0x6382e9c6,\n        0x021ecc5e,\n        0x09686b3f,\n        0x3ebaefc9,\n        0x3c971814,\n        0x6b6a70a1,\n        0x687f3584,\n        0x52a0e286,\n        0xb79c5305,\n        0xaa500737,\n        0x3e07841c,\n        0x7fdeae5c,\n        0x8e7d44ec,\n        0x5716f2b8,\n        0xb03ada37,\n        0xf0500c0d,\n        0xf01c1f04,\n        0x0200b3ff,\n        0xae0cf51a,\n        0x3cb574b2,\n        0x25837a58,\n        0xdc0921bd,\n        0xd19113f9,\n        0x7ca92ff6,\n        0x94324773,\n        0x22f54701,\n        0x3ae5e581,\n        0x37c2dadc,\n        0xc8b57634,\n        0x9af3dda7,\n        0xa9446146,\n        0x0fd0030e,\n        0xecc8c73e,\n        0xa4751e41,\n        0xe238cd99,\n        0x3bea0e2f,\n        0x3280bba1,\n        0x183eb331,\n        0x4e548b38,\n        0x4f6db908,\n        0x6f420d03,\n        0xf60a04bf,\n        0x2cb81290,\n        0x24977c79,\n        0x5679b072,\n        0xbcaf89af,\n        0xde9a771f,\n        0xd9930810,\n        0xb38bae12,\n        0xdccf3f2e,\n        0x5512721f,\n        0x2e6b7124,\n        0x501adde6,\n        0x9f84cd87,\n        0x7a584718,\n        0x7408da17,\n        0xbc9f9abc,\n        0xe94b7d8c,\n        0xec7aec3a,\n        0xdb851dfa,\n        0x63094366,\n        0xc464c3d2,\n        0xef1c1847,\n        0x3215d908,\n        0xdd433b37,\n        0x24c2ba16,\n        0x12a14d43,\n        0x2a65c451,\n        0x50940002,\n        0x133ae4dd,\n        0x71dff89e,\n        0x10314e55,\n        0x81ac77d6,\n        0x5f11199b,\n        0x043556f1,\n        0xd7a3c76b,\n        0x3c11183b,\n        0x5924a509,\n        0xf28fe6ed,\n        0x97f1fbfa,\n        0x9ebabf2c,\n        0x1e153c6e,\n        0x86e34570,\n        0xeae96fb1,\n        0x860e5e0a,\n        0x5a3e2ab3,\n        0x771fe71c,\n        0x4e3d06fa,\n        0x2965dcb9,\n        0x99e71d0f,\n        0x803e89d6,\n        0x5266c825,\n        0x2e4cc978,\n        0x9c10b36a,\n        0xc6150eba,\n        0x94e2ea78,\n        0xa5fc3c53,\n        0x1e0a2df4,\n        0xf2f74ea7,\n        0x361d2b3d,\n        0x1939260f,\n        0x19c27960,\n        0x5223a708,\n        0xf71312b6,\n        0xebadfe6e,\n        0xeac31f66,\n        0xe3bc4595,\n        0xa67bc883,\n        0xb17f37d1,\n        0x018cff28,\n        0xc332ddef,\n        0xbe6c5aa5,\n        0x65582185,\n        0x68ab9802,\n        0xeecea50f,\n        0xdb2f953b,\n        0x2aef7dad,\n        0x5b6e2f84,\n        0x1521b628,\n        0x29076170,\n        0xecdd4775,\n        0x619f1510,\n        0x13cca830,\n        0xeb61bd96,\n        0x0334fe1e,\n        0xaa0363cf,\n        0xb5735c90,\n        0x4c70a239,\n        0xd59e9e0b,\n        0xcbaade14,\n        0xeecc86bc,\n        0x60622ca7,\n        0x9cab5cab,\n        0xb2f3846e,\n        0x648b1eaf,\n        0x19bdf0ca,\n        0xa02369b9,\n        0x655abb50,\n        0x40685a32,\n        0x3c2ab4b3,\n        0x319ee9d5,\n        0xc021b8f7,\n        0x9b540b19,\n        0x875fa099,\n        0x95f7997e,\n        0x623d7da8,\n        0xf837889a,\n        0x97e32d77,\n        0x11ed935f,\n        0x16681281,\n        0x0e358829,\n        0xc7e61fd6,\n        0x96dedfa1,\n        0x7858ba99,\n        0x57f584a5,\n        0x1b227263,\n        0x9b83c3ff,\n        0x1ac24696,\n        0xcdb30aeb,\n        0x532e3054,\n        0x8fd948e4,\n        0x6dbc3128,\n        0x58ebf2ef,\n        0x34c6ffea,\n        0xfe28ed61,\n        0xee7c3c73,\n        0x5d4a14d9,\n        0xe864b7e3,\n        0x42105d14,\n        0x203e13e0,\n        0x45eee2b6,\n        0xa3aaabea,\n        0xdb6c4f15,\n        0xfacb4fd0,\n        0xc742f442,\n        0xef6abbb5,\n        0x654f3b1d,\n        0x41cd2105,\n        0xd81e799e,\n        0x86854dc7,\n        0xe44b476a,\n        0x3d816250,\n        0xcf62a1f2,\n        0x5b8d2646,\n        0xfc8883a0,\n        0xc1c7b6a3,\n        0x7f1524c3,\n        0x69cb7492,\n        0x47848a0b,\n        0x5692b285,\n        0x095bbf00,\n        0xad19489d,\n        0x1462b174,\n        0x23820e00,\n        0x58428d2a,\n        0x0c55f5ea,\n        0x1dadf43e,\n        0x233f7061,\n        0x3372f092,\n        0x8d937e41,\n        0xd65fecf1,\n        0x6c223bdb,\n        0x7cde3759,\n        0xcbee7460,\n        0x4085f2a7,\n        0xce77326e,\n        0xa6078084,\n        0x19f8509e,\n        0xe8efd855,\n        0x61d99735,\n        0xa969a7aa,\n        0xc50c06c2,\n        0x5a04abfc,\n        0x800bcadc,\n        0x9e447a2e,\n        0xc3453484,\n        0xfdd56705,\n        0x0e1e9ec9,\n        0xdb73dbd3,\n        0x105588cd,\n        0x675fda79,\n        0xe3674340,\n        0xc5c43465,\n        0x713e38d8,\n        0x3d28f89e,\n        0xf16dff20,\n        0x153e21e7,\n        0x8fb03d4a,\n        0xe6e39f2b,\n        0xdb83adf7,\n        0xe93d5a68,\n        0x948140f7,\n        0xf64c261c,\n        0x94692934,\n        0x411520f7,\n        0x7602d4f7,\n        0xbcf46b2e,\n        0xd4a20068,\n        0xd4082471,\n        0x3320f46a,\n        0x43b7d4b7,\n        0x500061af,\n        0x1e39f62e,\n        0x97244546,\n        0x14214f74,\n        0xbf8b8840,\n        0x4d95fc1d,\n        0x96b591af,\n        0x70f4ddd3,\n        0x66a02f45,\n        0xbfbc09ec,\n        0x03bd9785,\n        0x7fac6dd0,\n        0x31cb8504,\n        0x96eb27b3,\n        0x55fd3941,\n        0xda2547e6,\n        0xabca0a9a,\n        0x28507825,\n        0x530429f4,\n        0x0a2c86da,\n        0xe9b66dfb,\n        0x68dc1462,\n        0xd7486900,\n        0x680ec0a4,\n        0x27a18dee,\n        0x4f3ffea2,\n        0xe887ad8c,\n        0xb58ce006,\n        0x7af4d6b6,\n        0xaace1e7c,\n        0xd3375fec,\n        0xce78a399,\n        0x406b2a42,\n        0x20fe9e35,\n        0xd9f385b9,\n        0xee39d7ab,\n        0x3b124e8b,\n        0x1dc9faf7,\n        0x4b6d1856,\n        0x26a36631,\n        0xeae397b2,\n        0x3a6efa74,\n        0xdd5b4332,\n        0x6841e7f7,\n        0xca7820fb,\n        0xfb0af54e,\n        0xd8feb397,\n        0x454056ac,\n        0xba489527,\n        0x55533a3a,\n        0x20838d87,\n        0xfe6ba9b7,\n        0xd096954b,\n        0x55a867bc,\n        0xa1159a58,\n        0xcca92963,\n        0x99e1db33,\n        0xa62a4a56,\n        0x3f3125f9,\n        0x5ef47e1c,\n        0x9029317c,\n        0xfdf8e802,\n        0x04272f70,\n        0x80bb155c,\n        0x05282ce3,\n        0x95c11548,\n        0xe4c66d22,\n        0x48c1133f,\n        0xc70f86dc,\n        0x07f9c9ee,\n        0x41041f0f,\n        0x404779a4,\n        0x5d886e17,\n        0x325f51eb,\n        0xd59bc0d1,\n        0xf2bcc18f,\n        0x41113564,\n        0x257b7834,\n        0x602a9c60,\n        0xdff8e8a3,\n        0x1f636c1b,\n        0x0e12b4c2,\n        0x02e1329e,\n        0xaf664fd1,\n        0xcad18115,\n        0x6b2395e0,\n        0x333e92e1,\n        0x3b240b62,\n        0xeebeb922,\n        0x85b2a20e,\n        0xe6ba0d99,\n        0xde720c8c,\n        0x2da2f728,\n        0xd0127845,\n        0x95b794fd,\n        0x647d0862,\n        0xe7ccf5f0,\n        0x5449a36f,\n        0x877d48fa,\n        0xc39dfd27,\n        0xf33e8d1e,\n        0x0a476341,\n        0x992eff74,\n        0x3a6f6eab,\n        0xf4f8fd37,\n        0xa812dc60,\n        0xa1ebddf8,\n        0x991be14c,\n        0xdb6e6b0d,\n        0xc67b5510,\n        0x6d672c37,\n        0x2765d43b,\n        0xdcd0e804,\n        0xf1290dc7,\n        0xcc00ffa3,\n        0xb5390f92,\n        0x690fed0b,\n        0x667b9ffb,\n        0xcedb7d9c,\n        0xa091cf0b,\n        0xd9155ea3,\n        0xbb132f88,\n        0x515bad24,\n        0x7b9479bf,\n        0x763bd6eb,\n        0x37392eb3,\n        0xcc115979,\n        0x8026e297,\n        0xf42e312d,\n        0x6842ada7,\n        0xc66a2b3b,\n        0x12754ccc,\n        0x782ef11c,\n        0x6a124237,\n        0xb79251e7,\n        0x06a1bbe6,\n        0x4bfb6350,\n        0x1a6b1018,\n        0x11caedfa,\n        0x3d25bdd8,\n        0xe2e1c3c9,\n        0x44421659,\n        0x0a121386,\n        0xd90cec6e,\n        0xd5abea2a,\n        0x64af674e,\n        0xda86a85f,\n        0xbebfe988,\n        0x64e4c3fe,\n        0x9dbc8057,\n        0xf0f7c086,\n        0x60787bf8,\n        0x6003604d,\n        0xd1fd8346,\n        0xf6381fb0,\n        0x7745ae04,\n        0xd736fccc,\n        0x83426b33,\n        0xf01eab71,\n        0xb0804187,\n        0x3c005e5f,\n        0x77a057be,\n        0xbde8ae24,\n        0x55464299,\n        0xbf582e61,\n        0x4e58f48f,\n        0xf2ddfda2,\n        0xf474ef38,\n        0x8789bdc2,\n        0x5366f9c3,\n        0xc8b38e74,\n        0xb475f255,\n        0x46fcd9b9,\n        0x7aeb2661,\n        0x8b1ddf84,\n        0x846a0e79,\n        0x915f95e2,\n        0x466e598e,\n        0x20b45770,\n        0x8cd55591,\n        0xc902de4c,\n        0xb90bace1,\n        0xbb8205d0,\n        0x11a86248,\n        0x7574a99e,\n        0xb77f19b6,\n        0xe0a9dc09,\n        0x662d09a1,\n        0xc4324633,\n        0xe85a1f02,\n        0x09f0be8c,\n        0x4a99a025,\n        0x1d6efe10,\n        0x1ab93d1d,\n        0x0ba5a4df,\n        0xa186f20f,\n        0x2868f169,\n        0xdcb7da83,\n        0x573906fe,\n        0xa1e2ce9b,\n        0x4fcd7f52,\n        0x50115e01,\n        0xa70683fa,\n        0xa002b5c4,\n        0x0de6d027,\n        0x9af88c27,\n        0x773f8641,\n        0xc3604c06,\n        0x61a806b5,\n        0xf0177a28,\n        0xc0f586e0,\n        0x006058aa,\n        0x30dc7d62,\n        0x11e69ed7,\n        0x2338ea63,\n        0x53c2dd94,\n        0xc2c21634,\n        0xbbcbee56,\n        0x90bcb6de,\n        0xebfc7da1,\n        0xce591d76,\n        0x6f05e409,\n        0x4b7c0188,\n        0x39720a3d,\n        0x7c927c24,\n        0x86e3725f,\n        0x724d9db9,\n        0x1ac15bb4,\n        0xd39eb8fc,\n        0xed545578,\n        0x08fca5b5,\n        0xd83d7cd3,\n        0x4dad0fc4,\n        0x1e50ef5e,\n        0xb161e6f8,\n        0xa28514d9,\n        0x6c51133c,\n        0x6fd5c7e7,\n        0x56e14ec4,\n        0x362abfce,\n        0xddc6c837,\n        0xd79a3234,\n        0x92638212,\n        0x670efa8e,\n        0x406000e0,\n        0x3a39ce37,\n        0xd3faf5cf,\n        0xabc27737,\n        0x5ac52d1b,\n        0x5cb0679e,\n        0x4fa33742,\n        0xd3822740,\n        0x99bc9bbe,\n        0xd5118e9d,\n        0xbf0f7315,\n        0xd62d1c7e,\n        0xc700c47b,\n        0xb78c1b6b,\n        0x21a19045,\n        0xb26eb1be,\n        0x6a366eb4,\n        0x5748ab2f,\n        0xbc946e79,\n        0xc6a376d2,\n        0x6549c2c8,\n        0x530ff8ee,\n        0x468dde7d,\n        0xd5730a1d,\n        0x4cd04dc6,\n        0x2939bbdb,\n        0xa9ba4650,\n        0xac9526e8,\n        0xbe5ee304,\n        0xa1fad5f0,\n        0x6a2d519a,\n        0x63ef8ce2,\n        0x9a86ee22,\n        0xc089c2b8,\n        0x43242ef6,\n        0xa51e03aa,\n        0x9cf2d0a4,\n        0x83c061ba,\n        0x9be96a4d,\n        0x8fe51550,\n        0xba645bd6,\n        0x2826a2f9,\n        0xa73a3ae1,\n        0x4ba99586,\n        0xef5562e9,\n        0xc72fefd3,\n        0xf752f7da,\n        0x3f046f69,\n        0x77fa0a59,\n        0x80e4a915,\n        0x87b08601,\n        0x9b09e6ad,\n        0x3b3ee593,\n        0xe990fd5a,\n        0x9e34d797,\n        0x2cf0b7d9,\n        0x022b8b51,\n        0x96d5ac3a,\n        0x017da67d,\n        0xd1cf3ed6,\n        0x7c7d2d28,\n        0x1f9f25cf,\n        0xadf2b89b,\n        0x5ad6b472,\n        0x5a88f54c,\n        0xe029ac71,\n        0xe019a5e6,\n        0x47b0acfd,\n        0xed93fa9b,\n        0xe8d3c48d,\n        0x283b57cc,\n        0xf8d56629,\n        0x79132e28,\n        0x785f0191,\n        0xed756055,\n        0xf7960e44,\n        0xe3d35e8c,\n        0x15056dd4,\n        0x88f46dba,\n        0x03a16125,\n        0x0564f0bd,\n        0xc3eb9e15,\n        0x3c9057a2,\n        0x97271aec,\n        0xa93a072a,\n        0x1b3f6d9b,\n        0x1e6321f5,\n        0xf59c66fb,\n        0x26dcf319,\n        0x7533d928,\n        0xb155fdf5,\n        0x03563482,\n        0x8aba3cbb,\n        0x28517711,\n        0xc20ad9f8,\n        0xabcc5167,\n        0xccad925f,\n        0x4de81751,\n        0x3830dc8e,\n        0x379d5862,\n        0x9320f991,\n        0xea7a90c2,\n        0xfb3e7bce,\n        0x5121ce64,\n        0x774fbe32,\n        0xa8b6e37e,\n        0xc3293d46,\n        0x48de5369,\n        0x6413e680,\n        0xa2ae0810,\n        0xdd6db224,\n        0x69852dfd,\n        0x09072166,\n        0xb39a460a,\n        0x6445c0dd,\n        0x586cdecf,\n        0x1c20c8ae,\n        0x5bbef7dd,\n        0x1b588d40,\n        0xccd2017f,\n        0x6bb4e3bb,\n        0xdda26a7e,\n        0x3a59ff45,\n        0x3e350a44,\n        0xbcb4cdd5,\n        0x72eacea8,\n        0xfa6484bb,\n        0x8d6612ae,\n        0xbf3c6f47,\n        0xd29be463,\n        0x542f5d9e,\n        0xaec2771b,\n        0xf64e6370,\n        0x740e0d8d,\n        0xe75b1357,\n        0xf8721671,\n        0xaf537d5d,\n        0x4040cb08,\n        0x4eb4e2cc,\n        0x34d2466a,\n        0x0115af84,\n        0xe1b00428,\n        0x95983a1d,\n        0x06b89fb4,\n        0xce6ea048,\n        0x6f3f3b82,\n        0x3520ab82,\n        0x011a1d4b,\n        0x277227f8,\n        0x611560b1,\n        0xe7933fdc,\n        0xbb3a792b,\n        0x344525bd,\n        0xa08839e1,\n        0x51ce794b,\n        0x2f32c9b7,\n        0xa01fbac9,\n        0xe01cc87e,\n        0xbcc7d1f6,\n        0xcf0111c3,\n        0xa1e8aac7,\n        0x1a908749,\n        0xd44fbd9a,\n        0xd0dadecb,\n        0xd50ada38,\n        0x0339c32a,\n        0xc6913667,\n        0x8df9317c,\n        0xe0b12b4f,\n        0xf79e59b7,\n        0x43f5bb3a,\n        0xf2d519ff,\n        0x27d9459c,\n        0xbf97222c,\n        0x15e6fc2a,\n        0x0f91fc71,\n        0x9b941525,\n        0xfae59361,\n        0xceb69ceb,\n        0xc2a86459,\n        0x12baa8d1,\n        0xb6c1075e,\n        0xe3056a0c,\n        0x10d25065,\n        0xcb03a442,\n        0xe0ec6e0e,\n        0x1698db3b,\n        0x4c98a0be,\n        0x3278e964,\n        0x9f1f9532,\n        0xe0d392df,\n        0xd3a0342b,\n        0x8971f21e,\n        0x1b0a7441,\n        0x4ba3348c,\n        0xc5be7120,\n        0xc37632d8,\n        0xdf359f8d,\n        0x9b992f2e,\n        0xe60b6f47,\n        0x0fe3f11d,\n        0xe54cda54,\n        0x1edad891,\n        0xce6279cf,\n        0xcd3e7e6f,\n        0x1618b166,\n        0xfd2c1d05,\n        0x848fd2c5,\n        0xf6fb2299,\n        0xf523f357,\n        0xa6327623,\n        0x93a83531,\n        0x56cccd02,\n        0xacf08162,\n        0x5a75ebb5,\n        0x6e163697,\n        0x88d273cc,\n        0xde966292,\n        0x81b949d0,\n        0x4c50901b,\n        0x71c65614,\n        0xe6c6c7bd,\n        0x327a140a,\n        0x45e1d006,\n        0xc3f27b9a,\n        0xc9aa53fd,\n        0x62a80f00,\n        0xbb25bfe2,\n        0x35bdd2f6,\n        0x71126905,\n        0xb2040222,\n        0xb6cbcf7c,\n        0xcd769c2b,\n        0x53113ec0,\n        0x1640e3d3,\n        0x38abbd60,\n        0x2547adf0,\n        0xba38209c,\n        0xf746ce76,\n        0x77afa1c5,\n        0x20756060,\n        0x85cbfe4e,\n        0x8ae88dd8,\n        0x7aaaf9b0,\n        0x4cf9aa7e,\n        0x1948c25c,\n        0x02fb8a8c,\n        0x01c36ae4,\n        0xd6ebe1f9,\n        0x90d4f869,\n        0xa65cdea0,\n        0x3f09252d,\n        0xc208e69f,\n        0xb74e6132,\n        0xce77e25b,\n        0x578fdfe3,\n        0x3ac372e6\n    ];\n    /**\r\n     * @type {Array.<number>}\r\n     * @const\r\n     * @inner\r\n     */ var C_ORIG = [\n        0x4f727068,\n        0x65616e42,\n        0x65686f6c,\n        0x64657253,\n        0x63727944,\n        0x6f756274\n    ];\n    /**\r\n     * @param {Array.<number>} lr\r\n     * @param {number} off\r\n     * @param {Array.<number>} P\r\n     * @param {Array.<number>} S\r\n     * @returns {Array.<number>}\r\n     * @inner\r\n     */ function _encipher(lr, off, P, S) {\n        var n, l = lr[off], r = lr[off + 1];\n        l ^= P[0];\n        /*\r\n        for (var i=0, k=BLOWFISH_NUM_ROUNDS-2; i<=k;)\r\n            // Feistel substitution on left word\r\n            n  = S[l >>> 24],\r\n            n += S[0x100 | ((l >> 16) & 0xff)],\r\n            n ^= S[0x200 | ((l >> 8) & 0xff)],\r\n            n += S[0x300 | (l & 0xff)],\r\n            r ^= n ^ P[++i],\r\n            // Feistel substitution on right word\r\n            n  = S[r >>> 24],\r\n            n += S[0x100 | ((r >> 16) & 0xff)],\r\n            n ^= S[0x200 | ((r >> 8) & 0xff)],\r\n            n += S[0x300 | (r & 0xff)],\r\n            l ^= n ^ P[++i];\r\n        */ //The following is an unrolled version of the above loop.\n        //Iteration 0\n        n = S[l >>> 24];\n        n += S[0x100 | l >> 16 & 0xff];\n        n ^= S[0x200 | l >> 8 & 0xff];\n        n += S[0x300 | l & 0xff];\n        r ^= n ^ P[1];\n        n = S[r >>> 24];\n        n += S[0x100 | r >> 16 & 0xff];\n        n ^= S[0x200 | r >> 8 & 0xff];\n        n += S[0x300 | r & 0xff];\n        l ^= n ^ P[2];\n        //Iteration 1\n        n = S[l >>> 24];\n        n += S[0x100 | l >> 16 & 0xff];\n        n ^= S[0x200 | l >> 8 & 0xff];\n        n += S[0x300 | l & 0xff];\n        r ^= n ^ P[3];\n        n = S[r >>> 24];\n        n += S[0x100 | r >> 16 & 0xff];\n        n ^= S[0x200 | r >> 8 & 0xff];\n        n += S[0x300 | r & 0xff];\n        l ^= n ^ P[4];\n        //Iteration 2\n        n = S[l >>> 24];\n        n += S[0x100 | l >> 16 & 0xff];\n        n ^= S[0x200 | l >> 8 & 0xff];\n        n += S[0x300 | l & 0xff];\n        r ^= n ^ P[5];\n        n = S[r >>> 24];\n        n += S[0x100 | r >> 16 & 0xff];\n        n ^= S[0x200 | r >> 8 & 0xff];\n        n += S[0x300 | r & 0xff];\n        l ^= n ^ P[6];\n        //Iteration 3\n        n = S[l >>> 24];\n        n += S[0x100 | l >> 16 & 0xff];\n        n ^= S[0x200 | l >> 8 & 0xff];\n        n += S[0x300 | l & 0xff];\n        r ^= n ^ P[7];\n        n = S[r >>> 24];\n        n += S[0x100 | r >> 16 & 0xff];\n        n ^= S[0x200 | r >> 8 & 0xff];\n        n += S[0x300 | r & 0xff];\n        l ^= n ^ P[8];\n        //Iteration 4\n        n = S[l >>> 24];\n        n += S[0x100 | l >> 16 & 0xff];\n        n ^= S[0x200 | l >> 8 & 0xff];\n        n += S[0x300 | l & 0xff];\n        r ^= n ^ P[9];\n        n = S[r >>> 24];\n        n += S[0x100 | r >> 16 & 0xff];\n        n ^= S[0x200 | r >> 8 & 0xff];\n        n += S[0x300 | r & 0xff];\n        l ^= n ^ P[10];\n        //Iteration 5\n        n = S[l >>> 24];\n        n += S[0x100 | l >> 16 & 0xff];\n        n ^= S[0x200 | l >> 8 & 0xff];\n        n += S[0x300 | l & 0xff];\n        r ^= n ^ P[11];\n        n = S[r >>> 24];\n        n += S[0x100 | r >> 16 & 0xff];\n        n ^= S[0x200 | r >> 8 & 0xff];\n        n += S[0x300 | r & 0xff];\n        l ^= n ^ P[12];\n        //Iteration 6\n        n = S[l >>> 24];\n        n += S[0x100 | l >> 16 & 0xff];\n        n ^= S[0x200 | l >> 8 & 0xff];\n        n += S[0x300 | l & 0xff];\n        r ^= n ^ P[13];\n        n = S[r >>> 24];\n        n += S[0x100 | r >> 16 & 0xff];\n        n ^= S[0x200 | r >> 8 & 0xff];\n        n += S[0x300 | r & 0xff];\n        l ^= n ^ P[14];\n        //Iteration 7\n        n = S[l >>> 24];\n        n += S[0x100 | l >> 16 & 0xff];\n        n ^= S[0x200 | l >> 8 & 0xff];\n        n += S[0x300 | l & 0xff];\n        r ^= n ^ P[15];\n        n = S[r >>> 24];\n        n += S[0x100 | r >> 16 & 0xff];\n        n ^= S[0x200 | r >> 8 & 0xff];\n        n += S[0x300 | r & 0xff];\n        l ^= n ^ P[16];\n        lr[off] = r ^ P[BLOWFISH_NUM_ROUNDS + 1];\n        lr[off + 1] = l;\n        return lr;\n    }\n    /**\r\n     * @param {Array.<number>} data\r\n     * @param {number} offp\r\n     * @returns {{key: number, offp: number}}\r\n     * @inner\r\n     */ function _streamtoword(data, offp) {\n        for(var i = 0, word = 0; i < 4; ++i)word = word << 8 | data[offp] & 0xff, offp = (offp + 1) % data.length;\n        return {\n            key: word,\n            offp: offp\n        };\n    }\n    /**\r\n     * @param {Array.<number>} key\r\n     * @param {Array.<number>} P\r\n     * @param {Array.<number>} S\r\n     * @inner\r\n     */ function _key(key, P, S) {\n        var offset = 0, lr = [\n            0,\n            0\n        ], plen = P.length, slen = S.length, sw;\n        for(var i = 0; i < plen; i++)sw = _streamtoword(key, offset), offset = sw.offp, P[i] = P[i] ^ sw.key;\n        for(i = 0; i < plen; i += 2)lr = _encipher(lr, 0, P, S), P[i] = lr[0], P[i + 1] = lr[1];\n        for(i = 0; i < slen; i += 2)lr = _encipher(lr, 0, P, S), S[i] = lr[0], S[i + 1] = lr[1];\n    }\n    /**\r\n     * Expensive key schedule Blowfish.\r\n     * @param {Array.<number>} data\r\n     * @param {Array.<number>} key\r\n     * @param {Array.<number>} P\r\n     * @param {Array.<number>} S\r\n     * @inner\r\n     */ function _ekskey(data, key, P, S) {\n        var offp = 0, lr = [\n            0,\n            0\n        ], plen = P.length, slen = S.length, sw;\n        for(var i = 0; i < plen; i++)sw = _streamtoword(key, offp), offp = sw.offp, P[i] = P[i] ^ sw.key;\n        offp = 0;\n        for(i = 0; i < plen; i += 2)sw = _streamtoword(data, offp), offp = sw.offp, lr[0] ^= sw.key, sw = _streamtoword(data, offp), offp = sw.offp, lr[1] ^= sw.key, lr = _encipher(lr, 0, P, S), P[i] = lr[0], P[i + 1] = lr[1];\n        for(i = 0; i < slen; i += 2)sw = _streamtoword(data, offp), offp = sw.offp, lr[0] ^= sw.key, sw = _streamtoword(data, offp), offp = sw.offp, lr[1] ^= sw.key, lr = _encipher(lr, 0, P, S), S[i] = lr[0], S[i + 1] = lr[1];\n    }\n    /**\r\n     * Internaly crypts a string.\r\n     * @param {Array.<number>} b Bytes to crypt\r\n     * @param {Array.<number>} salt Salt bytes to use\r\n     * @param {number} rounds Number of rounds\r\n     * @param {function(Error, Array.<number>=)=} callback Callback receiving the error, if any, and the resulting bytes. If\r\n     *  omitted, the operation will be performed synchronously.\r\n     *  @param {function(number)=} progressCallback Callback called with the current progress\r\n     * @returns {!Array.<number>|undefined} Resulting bytes if callback has been omitted, otherwise `undefined`\r\n     * @inner\r\n     */ function _crypt(b, salt, rounds, callback, progressCallback) {\n        var cdata = C_ORIG.slice(), clen = cdata.length, err;\n        // Validate\n        if (rounds < 4 || rounds > 31) {\n            err = Error(\"Illegal number of rounds (4-31): \" + rounds);\n            if (callback) {\n                nextTick(callback.bind(this, err));\n                return;\n            } else throw err;\n        }\n        if (salt.length !== BCRYPT_SALT_LEN) {\n            err = Error(\"Illegal salt length: \" + salt.length + \" != \" + BCRYPT_SALT_LEN);\n            if (callback) {\n                nextTick(callback.bind(this, err));\n                return;\n            } else throw err;\n        }\n        rounds = 1 << rounds >>> 0;\n        var P, S, i = 0, j;\n        //Use typed arrays when available - huge speedup!\n        if (Int32Array) {\n            P = new Int32Array(P_ORIG);\n            S = new Int32Array(S_ORIG);\n        } else {\n            P = P_ORIG.slice();\n            S = S_ORIG.slice();\n        }\n        _ekskey(salt, b, P, S);\n        /**\r\n         * Calcualtes the next round.\r\n         * @returns {Array.<number>|undefined} Resulting array if callback has been omitted, otherwise `undefined`\r\n         * @inner\r\n         */ function next() {\n            if (progressCallback) progressCallback(i / rounds);\n            if (i < rounds) {\n                var start = Date.now();\n                for(; i < rounds;){\n                    i = i + 1;\n                    _key(b, P, S);\n                    _key(salt, P, S);\n                    if (Date.now() - start > MAX_EXECUTION_TIME) break;\n                }\n            } else {\n                for(i = 0; i < 64; i++)for(j = 0; j < clen >> 1; j++)_encipher(cdata, j << 1, P, S);\n                var ret = [];\n                for(i = 0; i < clen; i++)ret.push((cdata[i] >> 24 & 0xff) >>> 0), ret.push((cdata[i] >> 16 & 0xff) >>> 0), ret.push((cdata[i] >> 8 & 0xff) >>> 0), ret.push((cdata[i] & 0xff) >>> 0);\n                if (callback) {\n                    callback(null, ret);\n                    return;\n                } else return ret;\n            }\n            if (callback) nextTick(next);\n        }\n        // Async\n        if (typeof callback !== \"undefined\") {\n            next();\n        // Sync\n        } else {\n            var res;\n            while(true)if (typeof (res = next()) !== \"undefined\") return res || [];\n        }\n    }\n    /**\r\n     * Internally hashes a string.\r\n     * @param {string} s String to hash\r\n     * @param {?string} salt Salt to use, actually never null\r\n     * @param {function(Error, string=)=} callback Callback receiving the error, if any, and the resulting hash. If omitted,\r\n     *  hashing is perormed synchronously.\r\n     *  @param {function(number)=} progressCallback Callback called with the current progress\r\n     * @returns {string|undefined} Resulting hash if callback has been omitted, otherwise `undefined`\r\n     * @inner\r\n     */ function _hash(s, salt, callback, progressCallback) {\n        var err;\n        if (typeof s !== \"string\" || typeof salt !== \"string\") {\n            err = Error(\"Invalid string / salt: Not a string\");\n            if (callback) {\n                nextTick(callback.bind(this, err));\n                return;\n            } else throw err;\n        }\n        // Validate the salt\n        var minor, offset;\n        if (salt.charAt(0) !== \"$\" || salt.charAt(1) !== \"2\") {\n            err = Error(\"Invalid salt version: \" + salt.substring(0, 2));\n            if (callback) {\n                nextTick(callback.bind(this, err));\n                return;\n            } else throw err;\n        }\n        if (salt.charAt(2) === \"$\") minor = String.fromCharCode(0), offset = 3;\n        else {\n            minor = salt.charAt(2);\n            if (minor !== \"a\" && minor !== \"b\" && minor !== \"y\" || salt.charAt(3) !== \"$\") {\n                err = Error(\"Invalid salt revision: \" + salt.substring(2, 4));\n                if (callback) {\n                    nextTick(callback.bind(this, err));\n                    return;\n                } else throw err;\n            }\n            offset = 4;\n        }\n        // Extract number of rounds\n        if (salt.charAt(offset + 2) > \"$\") {\n            err = Error(\"Missing salt rounds\");\n            if (callback) {\n                nextTick(callback.bind(this, err));\n                return;\n            } else throw err;\n        }\n        var r1 = parseInt(salt.substring(offset, offset + 1), 10) * 10, r2 = parseInt(salt.substring(offset + 1, offset + 2), 10), rounds = r1 + r2, real_salt = salt.substring(offset + 3, offset + 25);\n        s += minor >= \"a\" ? \"\\x00\" : \"\";\n        var passwordb = stringToBytes(s), saltb = base64_decode(real_salt, BCRYPT_SALT_LEN);\n        /**\r\n         * Finishes hashing.\r\n         * @param {Array.<number>} bytes Byte array\r\n         * @returns {string}\r\n         * @inner\r\n         */ function finish(bytes) {\n            var res = [];\n            res.push(\"$2\");\n            if (minor >= \"a\") res.push(minor);\n            res.push(\"$\");\n            if (rounds < 10) res.push(\"0\");\n            res.push(rounds.toString());\n            res.push(\"$\");\n            res.push(base64_encode(saltb, saltb.length));\n            res.push(base64_encode(bytes, C_ORIG.length * 4 - 1));\n            return res.join(\"\");\n        }\n        // Sync\n        if (typeof callback == \"undefined\") return finish(_crypt(passwordb, saltb, rounds));\n        else {\n            _crypt(passwordb, saltb, rounds, function(err, bytes) {\n                if (err) callback(err, null);\n                else callback(null, finish(bytes));\n            }, progressCallback);\n        }\n    }\n    /**\r\n     * Encodes a byte array to base64 with up to len bytes of input, using the custom bcrypt alphabet.\r\n     * @function\r\n     * @param {!Array.<number>} b Byte array\r\n     * @param {number} len Maximum input length\r\n     * @returns {string}\r\n     * @expose\r\n     */ bcrypt.encodeBase64 = base64_encode;\n    /**\r\n     * Decodes a base64 encoded string to up to len bytes of output, using the custom bcrypt alphabet.\r\n     * @function\r\n     * @param {string} s String to decode\r\n     * @param {number} len Maximum output length\r\n     * @returns {!Array.<number>}\r\n     * @expose\r\n     */ bcrypt.decodeBase64 = base64_decode;\n    return bcrypt;\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/bcryptjs/dist/bcrypt.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/bcryptjs/index.js":
/*!****************************************!*\
  !*** ./node_modules/bcryptjs/index.js ***!
  \****************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("/*\r\n Copyright (c) 2012 Nevins Bartolomeo <nevins.bartolomeo@gmail.com>\r\n Copyright (c) 2012 Shane Girish <shaneGirish@gmail.com>\r\n Copyright (c) 2013 Daniel Wirtz <dcode@dcode.io>\r\n\r\n Redistribution and use in source and binary forms, with or without\r\n modification, are permitted provided that the following conditions\r\n are met:\r\n 1. Redistributions of source code must retain the above copyright\r\n notice, this list of conditions and the following disclaimer.\r\n 2. Redistributions in binary form must reproduce the above copyright\r\n notice, this list of conditions and the following disclaimer in the\r\n documentation and/or other materials provided with the distribution.\r\n 3. The name of the author may not be used to endorse or promote products\r\n derived from this software without specific prior written permission.\r\n\r\n THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR\r\n IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\r\n OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,\r\n INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\r\n DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\r\n THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\r\n (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\r\n THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n */ \nmodule.exports = __webpack_require__(/*! ./dist/bcrypt.js */ \"(sc_server)/./node_modules/bcryptjs/dist/bcrypt.js\");\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvYmNyeXB0anMvaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0NBMEJDO0FBRURBLGtIQUE0QyIsInNvdXJjZXMiOlsid2VicGFjazovL2Z1bGxzdGFjay1yb2xlLWJhc2VkLW5leHRqcy0yLy4vbm9kZV9tb2R1bGVzL2JjcnlwdGpzL2luZGV4LmpzPzNhOTIiXSwic291cmNlc0NvbnRlbnQiOlsiLypcclxuIENvcHlyaWdodCAoYykgMjAxMiBOZXZpbnMgQmFydG9sb21lbyA8bmV2aW5zLmJhcnRvbG9tZW9AZ21haWwuY29tPlxyXG4gQ29weXJpZ2h0IChjKSAyMDEyIFNoYW5lIEdpcmlzaCA8c2hhbmVHaXJpc2hAZ21haWwuY29tPlxyXG4gQ29weXJpZ2h0IChjKSAyMDEzIERhbmllbCBXaXJ0eiA8ZGNvZGVAZGNvZGUuaW8+XHJcblxyXG4gUmVkaXN0cmlidXRpb24gYW5kIHVzZSBpbiBzb3VyY2UgYW5kIGJpbmFyeSBmb3Jtcywgd2l0aCBvciB3aXRob3V0XHJcbiBtb2RpZmljYXRpb24sIGFyZSBwZXJtaXR0ZWQgcHJvdmlkZWQgdGhhdCB0aGUgZm9sbG93aW5nIGNvbmRpdGlvbnNcclxuIGFyZSBtZXQ6XHJcbiAxLiBSZWRpc3RyaWJ1dGlvbnMgb2Ygc291cmNlIGNvZGUgbXVzdCByZXRhaW4gdGhlIGFib3ZlIGNvcHlyaWdodFxyXG4gbm90aWNlLCB0aGlzIGxpc3Qgb2YgY29uZGl0aW9ucyBhbmQgdGhlIGZvbGxvd2luZyBkaXNjbGFpbWVyLlxyXG4gMi4gUmVkaXN0cmlidXRpb25zIGluIGJpbmFyeSBmb3JtIG11c3QgcmVwcm9kdWNlIHRoZSBhYm92ZSBjb3B5cmlnaHRcclxuIG5vdGljZSwgdGhpcyBsaXN0IG9mIGNvbmRpdGlvbnMgYW5kIHRoZSBmb2xsb3dpbmcgZGlzY2xhaW1lciBpbiB0aGVcclxuIGRvY3VtZW50YXRpb24gYW5kL29yIG90aGVyIG1hdGVyaWFscyBwcm92aWRlZCB3aXRoIHRoZSBkaXN0cmlidXRpb24uXHJcbiAzLiBUaGUgbmFtZSBvZiB0aGUgYXV0aG9yIG1heSBub3QgYmUgdXNlZCB0byBlbmRvcnNlIG9yIHByb21vdGUgcHJvZHVjdHNcclxuIGRlcml2ZWQgZnJvbSB0aGlzIHNvZnR3YXJlIHdpdGhvdXQgc3BlY2lmaWMgcHJpb3Igd3JpdHRlbiBwZXJtaXNzaW9uLlxyXG5cclxuIFRISVMgU09GVFdBUkUgSVMgUFJPVklERUQgQlkgVEhFIEFVVEhPUiBgYEFTIElTJycgQU5EIEFOWSBFWFBSRVNTIE9SXHJcbiBJTVBMSUVEIFdBUlJBTlRJRVMsIElOQ0xVRElORywgQlVUIE5PVCBMSU1JVEVEIFRPLCBUSEUgSU1QTElFRCBXQVJSQU5USUVTXHJcbiBPRiBNRVJDSEFOVEFCSUxJVFkgQU5EIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFIEFSRSBESVNDTEFJTUVELlxyXG4gSU4gTk8gRVZFTlQgU0hBTEwgVEhFIEFVVEhPUiBCRSBMSUFCTEUgRk9SIEFOWSBESVJFQ1QsIElORElSRUNULFxyXG4gSU5DSURFTlRBTCwgU1BFQ0lBTCwgRVhFTVBMQVJZLCBPUiBDT05TRVFVRU5USUFMIERBTUFHRVMgKElOQ0xVRElORywgQlVUXHJcbiBOT1QgTElNSVRFRCBUTywgUFJPQ1VSRU1FTlQgT0YgU1VCU1RJVFVURSBHT09EUyBPUiBTRVJWSUNFUzsgTE9TUyBPRiBVU0UsXHJcbiBEQVRBLCBPUiBQUk9GSVRTOyBPUiBCVVNJTkVTUyBJTlRFUlJVUFRJT04pIEhPV0VWRVIgQ0FVU0VEIEFORCBPTiBBTllcclxuIFRIRU9SWSBPRiBMSUFCSUxJVFksIFdIRVRIRVIgSU4gQ09OVFJBQ1QsIFNUUklDVCBMSUFCSUxJVFksIE9SIFRPUlRcclxuIChJTkNMVURJTkcgTkVHTElHRU5DRSBPUiBPVEhFUldJU0UpIEFSSVNJTkcgSU4gQU5ZIFdBWSBPVVQgT0YgVEhFIFVTRSBPRlxyXG4gVEhJUyBTT0ZUV0FSRSwgRVZFTiBJRiBBRFZJU0VEIE9GIFRIRSBQT1NTSUJJTElUWSBPRiBTVUNIIERBTUFHRS5cclxuICovXHJcblxyXG5tb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCIuL2Rpc3QvYmNyeXB0LmpzXCIpO1xyXG4iXSwibmFtZXMiOlsibW9kdWxlIiwiZXhwb3J0cyIsInJlcXVpcmUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/bcryptjs/index.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/cookie/index.js":
/*!**************************************!*\
  !*** ./node_modules/cookie/index.js ***!
  \**************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("/*!\n * cookie\n * Copyright(c) 2012-2014 Roman Shtylman\n * Copyright(c) 2015 Douglas Christopher Wilson\n * MIT Licensed\n */ \n/**\n * Module exports.\n * @public\n */ exports.parse = parse;\nexports.serialize = serialize;\n/**\n * Module variables.\n * @private\n */ var __toString = Object.prototype.toString;\n/**\n * RegExp to match field-content in RFC 7230 sec 3.2\n *\n * field-content = field-vchar [ 1*( SP / HTAB ) field-vchar ]\n * field-vchar   = VCHAR / obs-text\n * obs-text      = %x80-FF\n */ var fieldContentRegExp = /^[\\u0009\\u0020-\\u007e\\u0080-\\u00ff]+$/;\n/**\n * Parse a cookie header.\n *\n * Parse the given cookie header string into an object\n * The object has the various cookies as keys(names) => values\n *\n * @param {string} str\n * @param {object} [options]\n * @return {object}\n * @public\n */ function parse(str, options) {\n    if (typeof str !== \"string\") {\n        throw new TypeError(\"argument str must be a string\");\n    }\n    var obj = {};\n    var opt = options || {};\n    var dec = opt.decode || decode;\n    var index = 0;\n    while(index < str.length){\n        var eqIdx = str.indexOf(\"=\", index);\n        // no more cookie pairs\n        if (eqIdx === -1) {\n            break;\n        }\n        var endIdx = str.indexOf(\";\", index);\n        if (endIdx === -1) {\n            endIdx = str.length;\n        } else if (endIdx < eqIdx) {\n            // backtrack on prior semicolon\n            index = str.lastIndexOf(\";\", eqIdx - 1) + 1;\n            continue;\n        }\n        var key = str.slice(index, eqIdx).trim();\n        // only assign once\n        if (undefined === obj[key]) {\n            var val = str.slice(eqIdx + 1, endIdx).trim();\n            // quoted values\n            if (val.charCodeAt(0) === 0x22) {\n                val = val.slice(1, -1);\n            }\n            obj[key] = tryDecode(val, dec);\n        }\n        index = endIdx + 1;\n    }\n    return obj;\n}\n/**\n * Serialize data into a cookie header.\n *\n * Serialize the a name value pair into a cookie string suitable for\n * http headers. An optional options object specified cookie parameters.\n *\n * serialize('foo', 'bar', { httpOnly: true })\n *   => \"foo=bar; httpOnly\"\n *\n * @param {string} name\n * @param {string} val\n * @param {object} [options]\n * @return {string}\n * @public\n */ function serialize(name, val, options) {\n    var opt = options || {};\n    var enc = opt.encode || encode;\n    if (typeof enc !== \"function\") {\n        throw new TypeError(\"option encode is invalid\");\n    }\n    if (!fieldContentRegExp.test(name)) {\n        throw new TypeError(\"argument name is invalid\");\n    }\n    var value = enc(val);\n    if (value && !fieldContentRegExp.test(value)) {\n        throw new TypeError(\"argument val is invalid\");\n    }\n    var str = name + \"=\" + value;\n    if (null != opt.maxAge) {\n        var maxAge = opt.maxAge - 0;\n        if (isNaN(maxAge) || !isFinite(maxAge)) {\n            throw new TypeError(\"option maxAge is invalid\");\n        }\n        str += \"; Max-Age=\" + Math.floor(maxAge);\n    }\n    if (opt.domain) {\n        if (!fieldContentRegExp.test(opt.domain)) {\n            throw new TypeError(\"option domain is invalid\");\n        }\n        str += \"; Domain=\" + opt.domain;\n    }\n    if (opt.path) {\n        if (!fieldContentRegExp.test(opt.path)) {\n            throw new TypeError(\"option path is invalid\");\n        }\n        str += \"; Path=\" + opt.path;\n    }\n    if (opt.expires) {\n        var expires = opt.expires;\n        if (!isDate(expires) || isNaN(expires.valueOf())) {\n            throw new TypeError(\"option expires is invalid\");\n        }\n        str += \"; Expires=\" + expires.toUTCString();\n    }\n    if (opt.httpOnly) {\n        str += \"; HttpOnly\";\n    }\n    if (opt.secure) {\n        str += \"; Secure\";\n    }\n    if (opt.priority) {\n        var priority = typeof opt.priority === \"string\" ? opt.priority.toLowerCase() : opt.priority;\n        switch(priority){\n            case \"low\":\n                str += \"; Priority=Low\";\n                break;\n            case \"medium\":\n                str += \"; Priority=Medium\";\n                break;\n            case \"high\":\n                str += \"; Priority=High\";\n                break;\n            default:\n                throw new TypeError(\"option priority is invalid\");\n        }\n    }\n    if (opt.sameSite) {\n        var sameSite = typeof opt.sameSite === \"string\" ? opt.sameSite.toLowerCase() : opt.sameSite;\n        switch(sameSite){\n            case true:\n                str += \"; SameSite=Strict\";\n                break;\n            case \"lax\":\n                str += \"; SameSite=Lax\";\n                break;\n            case \"strict\":\n                str += \"; SameSite=Strict\";\n                break;\n            case \"none\":\n                str += \"; SameSite=None\";\n                break;\n            default:\n                throw new TypeError(\"option sameSite is invalid\");\n        }\n    }\n    return str;\n}\n/**\n * URL-decode string value. Optimized to skip native call when no %.\n *\n * @param {string} str\n * @returns {string}\n */ function decode(str) {\n    return str.indexOf(\"%\") !== -1 ? decodeURIComponent(str) : str;\n}\n/**\n * URL-encode value.\n *\n * @param {string} str\n * @returns {string}\n */ function encode(val) {\n    return encodeURIComponent(val);\n}\n/**\n * Determine if value is a Date.\n *\n * @param {*} val\n * @private\n */ function isDate(val) {\n    return __toString.call(val) === \"[object Date]\" || val instanceof Date;\n}\n/**\n * Try decoding a string using a decoding function.\n *\n * @param {string} str\n * @param {function} decode\n * @private\n */ function tryDecode(str, decode) {\n    try {\n        return decode(str);\n    } catch (e) {\n        return str;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/cookie/index.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/jose/dist/node/cjs/index.js":
/*!**************************************************!*\
  !*** ./node_modules/jose/dist/node/cjs/index.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.base64url = exports.generateSecret = exports.generateKeyPair = exports.errors = exports.decodeJwt = exports.decodeProtectedHeader = exports.importJWK = exports.importX509 = exports.importPKCS8 = exports.importSPKI = exports.exportJWK = exports.exportSPKI = exports.exportPKCS8 = exports.UnsecuredJWT = exports.createRemoteJWKSet = exports.createLocalJWKSet = exports.EmbeddedJWK = exports.calculateJwkThumbprintUri = exports.calculateJwkThumbprint = exports.EncryptJWT = exports.SignJWT = exports.GeneralSign = exports.FlattenedSign = exports.CompactSign = exports.FlattenedEncrypt = exports.CompactEncrypt = exports.jwtDecrypt = exports.jwtVerify = exports.generalVerify = exports.flattenedVerify = exports.compactVerify = exports.GeneralEncrypt = exports.generalDecrypt = exports.flattenedDecrypt = exports.compactDecrypt = void 0;\nvar decrypt_js_1 = __webpack_require__(/*! ./jwe/compact/decrypt.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/jwe/compact/decrypt.js\");\nObject.defineProperty(exports, \"compactDecrypt\", ({\n    enumerable: true,\n    get: function() {\n        return decrypt_js_1.compactDecrypt;\n    }\n}));\nvar decrypt_js_2 = __webpack_require__(/*! ./jwe/flattened/decrypt.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/jwe/flattened/decrypt.js\");\nObject.defineProperty(exports, \"flattenedDecrypt\", ({\n    enumerable: true,\n    get: function() {\n        return decrypt_js_2.flattenedDecrypt;\n    }\n}));\nvar decrypt_js_3 = __webpack_require__(/*! ./jwe/general/decrypt.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/jwe/general/decrypt.js\");\nObject.defineProperty(exports, \"generalDecrypt\", ({\n    enumerable: true,\n    get: function() {\n        return decrypt_js_3.generalDecrypt;\n    }\n}));\nvar encrypt_js_1 = __webpack_require__(/*! ./jwe/general/encrypt.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/jwe/general/encrypt.js\");\nObject.defineProperty(exports, \"GeneralEncrypt\", ({\n    enumerable: true,\n    get: function() {\n        return encrypt_js_1.GeneralEncrypt;\n    }\n}));\nvar verify_js_1 = __webpack_require__(/*! ./jws/compact/verify.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/jws/compact/verify.js\");\nObject.defineProperty(exports, \"compactVerify\", ({\n    enumerable: true,\n    get: function() {\n        return verify_js_1.compactVerify;\n    }\n}));\nvar verify_js_2 = __webpack_require__(/*! ./jws/flattened/verify.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/jws/flattened/verify.js\");\nObject.defineProperty(exports, \"flattenedVerify\", ({\n    enumerable: true,\n    get: function() {\n        return verify_js_2.flattenedVerify;\n    }\n}));\nvar verify_js_3 = __webpack_require__(/*! ./jws/general/verify.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/jws/general/verify.js\");\nObject.defineProperty(exports, \"generalVerify\", ({\n    enumerable: true,\n    get: function() {\n        return verify_js_3.generalVerify;\n    }\n}));\nvar verify_js_4 = __webpack_require__(/*! ./jwt/verify.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/jwt/verify.js\");\nObject.defineProperty(exports, \"jwtVerify\", ({\n    enumerable: true,\n    get: function() {\n        return verify_js_4.jwtVerify;\n    }\n}));\nvar decrypt_js_4 = __webpack_require__(/*! ./jwt/decrypt.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/jwt/decrypt.js\");\nObject.defineProperty(exports, \"jwtDecrypt\", ({\n    enumerable: true,\n    get: function() {\n        return decrypt_js_4.jwtDecrypt;\n    }\n}));\nvar encrypt_js_2 = __webpack_require__(/*! ./jwe/compact/encrypt.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/jwe/compact/encrypt.js\");\nObject.defineProperty(exports, \"CompactEncrypt\", ({\n    enumerable: true,\n    get: function() {\n        return encrypt_js_2.CompactEncrypt;\n    }\n}));\nvar encrypt_js_3 = __webpack_require__(/*! ./jwe/flattened/encrypt.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/jwe/flattened/encrypt.js\");\nObject.defineProperty(exports, \"FlattenedEncrypt\", ({\n    enumerable: true,\n    get: function() {\n        return encrypt_js_3.FlattenedEncrypt;\n    }\n}));\nvar sign_js_1 = __webpack_require__(/*! ./jws/compact/sign.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/jws/compact/sign.js\");\nObject.defineProperty(exports, \"CompactSign\", ({\n    enumerable: true,\n    get: function() {\n        return sign_js_1.CompactSign;\n    }\n}));\nvar sign_js_2 = __webpack_require__(/*! ./jws/flattened/sign.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/jws/flattened/sign.js\");\nObject.defineProperty(exports, \"FlattenedSign\", ({\n    enumerable: true,\n    get: function() {\n        return sign_js_2.FlattenedSign;\n    }\n}));\nvar sign_js_3 = __webpack_require__(/*! ./jws/general/sign.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/jws/general/sign.js\");\nObject.defineProperty(exports, \"GeneralSign\", ({\n    enumerable: true,\n    get: function() {\n        return sign_js_3.GeneralSign;\n    }\n}));\nvar sign_js_4 = __webpack_require__(/*! ./jwt/sign.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/jwt/sign.js\");\nObject.defineProperty(exports, \"SignJWT\", ({\n    enumerable: true,\n    get: function() {\n        return sign_js_4.SignJWT;\n    }\n}));\nvar encrypt_js_4 = __webpack_require__(/*! ./jwt/encrypt.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/jwt/encrypt.js\");\nObject.defineProperty(exports, \"EncryptJWT\", ({\n    enumerable: true,\n    get: function() {\n        return encrypt_js_4.EncryptJWT;\n    }\n}));\nvar thumbprint_js_1 = __webpack_require__(/*! ./jwk/thumbprint.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/jwk/thumbprint.js\");\nObject.defineProperty(exports, \"calculateJwkThumbprint\", ({\n    enumerable: true,\n    get: function() {\n        return thumbprint_js_1.calculateJwkThumbprint;\n    }\n}));\nObject.defineProperty(exports, \"calculateJwkThumbprintUri\", ({\n    enumerable: true,\n    get: function() {\n        return thumbprint_js_1.calculateJwkThumbprintUri;\n    }\n}));\nvar embedded_js_1 = __webpack_require__(/*! ./jwk/embedded.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/jwk/embedded.js\");\nObject.defineProperty(exports, \"EmbeddedJWK\", ({\n    enumerable: true,\n    get: function() {\n        return embedded_js_1.EmbeddedJWK;\n    }\n}));\nvar local_js_1 = __webpack_require__(/*! ./jwks/local.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/jwks/local.js\");\nObject.defineProperty(exports, \"createLocalJWKSet\", ({\n    enumerable: true,\n    get: function() {\n        return local_js_1.createLocalJWKSet;\n    }\n}));\nvar remote_js_1 = __webpack_require__(/*! ./jwks/remote.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/jwks/remote.js\");\nObject.defineProperty(exports, \"createRemoteJWKSet\", ({\n    enumerable: true,\n    get: function() {\n        return remote_js_1.createRemoteJWKSet;\n    }\n}));\nvar unsecured_js_1 = __webpack_require__(/*! ./jwt/unsecured.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/jwt/unsecured.js\");\nObject.defineProperty(exports, \"UnsecuredJWT\", ({\n    enumerable: true,\n    get: function() {\n        return unsecured_js_1.UnsecuredJWT;\n    }\n}));\nvar export_js_1 = __webpack_require__(/*! ./key/export.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/key/export.js\");\nObject.defineProperty(exports, \"exportPKCS8\", ({\n    enumerable: true,\n    get: function() {\n        return export_js_1.exportPKCS8;\n    }\n}));\nObject.defineProperty(exports, \"exportSPKI\", ({\n    enumerable: true,\n    get: function() {\n        return export_js_1.exportSPKI;\n    }\n}));\nObject.defineProperty(exports, \"exportJWK\", ({\n    enumerable: true,\n    get: function() {\n        return export_js_1.exportJWK;\n    }\n}));\nvar import_js_1 = __webpack_require__(/*! ./key/import.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/key/import.js\");\nObject.defineProperty(exports, \"importSPKI\", ({\n    enumerable: true,\n    get: function() {\n        return import_js_1.importSPKI;\n    }\n}));\nObject.defineProperty(exports, \"importPKCS8\", ({\n    enumerable: true,\n    get: function() {\n        return import_js_1.importPKCS8;\n    }\n}));\nObject.defineProperty(exports, \"importX509\", ({\n    enumerable: true,\n    get: function() {\n        return import_js_1.importX509;\n    }\n}));\nObject.defineProperty(exports, \"importJWK\", ({\n    enumerable: true,\n    get: function() {\n        return import_js_1.importJWK;\n    }\n}));\nvar decode_protected_header_js_1 = __webpack_require__(/*! ./util/decode_protected_header.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/util/decode_protected_header.js\");\nObject.defineProperty(exports, \"decodeProtectedHeader\", ({\n    enumerable: true,\n    get: function() {\n        return decode_protected_header_js_1.decodeProtectedHeader;\n    }\n}));\nvar decode_jwt_js_1 = __webpack_require__(/*! ./util/decode_jwt.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/util/decode_jwt.js\");\nObject.defineProperty(exports, \"decodeJwt\", ({\n    enumerable: true,\n    get: function() {\n        return decode_jwt_js_1.decodeJwt;\n    }\n}));\nexports.errors = __webpack_require__(/*! ./util/errors.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/util/errors.js\");\nvar generate_key_pair_js_1 = __webpack_require__(/*! ./key/generate_key_pair.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/key/generate_key_pair.js\");\nObject.defineProperty(exports, \"generateKeyPair\", ({\n    enumerable: true,\n    get: function() {\n        return generate_key_pair_js_1.generateKeyPair;\n    }\n}));\nvar generate_secret_js_1 = __webpack_require__(/*! ./key/generate_secret.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/key/generate_secret.js\");\nObject.defineProperty(exports, \"generateSecret\", ({\n    enumerable: true,\n    get: function() {\n        return generate_secret_js_1.generateSecret;\n    }\n}));\nexports.base64url = __webpack_require__(/*! ./util/base64url.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/util/base64url.js\");\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/jose/dist/node/cjs/index.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/jose/dist/node/cjs/jwe/compact/decrypt.js":
/*!****************************************************************!*\
  !*** ./node_modules/jose/dist/node/cjs/jwe/compact/decrypt.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.compactDecrypt = void 0;\nconst decrypt_js_1 = __webpack_require__(/*! ../flattened/decrypt.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/jwe/flattened/decrypt.js\");\nconst errors_js_1 = __webpack_require__(/*! ../../util/errors.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/util/errors.js\");\nconst buffer_utils_js_1 = __webpack_require__(/*! ../../lib/buffer_utils.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/lib/buffer_utils.js\");\nasync function compactDecrypt(jwe, key, options) {\n    if (jwe instanceof Uint8Array) {\n        jwe = buffer_utils_js_1.decoder.decode(jwe);\n    }\n    if (typeof jwe !== \"string\") {\n        throw new errors_js_1.JWEInvalid(\"Compact JWE must be a string or Uint8Array\");\n    }\n    const { 0: protectedHeader , 1: encryptedKey , 2: iv , 3: ciphertext , 4: tag , length  } = jwe.split(\".\");\n    if (length !== 5) {\n        throw new errors_js_1.JWEInvalid(\"Invalid Compact JWE\");\n    }\n    const decrypted = await (0, decrypt_js_1.flattenedDecrypt)({\n        ciphertext,\n        iv: iv || undefined,\n        protected: protectedHeader || undefined,\n        tag: tag || undefined,\n        encrypted_key: encryptedKey || undefined\n    }, key, options);\n    const result = {\n        plaintext: decrypted.plaintext,\n        protectedHeader: decrypted.protectedHeader\n    };\n    if (typeof key === \"function\") {\n        return {\n            ...result,\n            key: decrypted.key\n        };\n    }\n    return result;\n}\nexports.compactDecrypt = compactDecrypt;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvam9zZS9kaXN0L25vZGUvY2pzL2p3ZS9jb21wYWN0L2RlY3J5cHQuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYkEsOENBQTZDO0lBQUVHLE9BQU87QUFBSyxDQUFDLEVBQUM7QUFDN0RELHNCQUFzQkUsR0FBRyxLQUFLO0FBQzlCLE1BQU1DLGVBQWVDLG1CQUFPQSxDQUFDLHVHQUF5QjtBQUN0RCxNQUFNQyxjQUFjRCxtQkFBT0EsQ0FBQywwRkFBc0I7QUFDbEQsTUFBTUUsb0JBQW9CRixtQkFBT0EsQ0FBQyxvR0FBMkI7QUFDN0QsZUFBZUYsZUFBZUssR0FBRyxFQUFFQyxHQUFHLEVBQUVDLE9BQU87SUFDM0MsSUFBSUYsZUFBZUcsWUFBWTtRQUMzQkgsTUFBTUQsa0JBQWtCSyxRQUFRQyxPQUFPTDtJQUMzQztJQUNBLElBQUksT0FBT0EsUUFBUSxVQUFVO1FBQ3pCLE1BQU0sSUFBSUYsWUFBWVEsV0FBVztJQUNyQztJQUNBLE1BQU0sRUFBRSxHQUFHQyxnQkFBZSxFQUFFLEdBQUdDLGFBQVksRUFBRSxHQUFHQyxHQUFFLEVBQUUsR0FBR0MsV0FBVSxFQUFFLEdBQUdDLElBQUcsRUFBRUMsT0FBTSxFQUFHLEdBQUdaLElBQUlhLE1BQU07SUFDakcsSUFBSUQsV0FBVyxHQUFHO1FBQ2QsTUFBTSxJQUFJZCxZQUFZUSxXQUFXO0lBQ3JDO0lBQ0EsTUFBTVEsWUFBWSxNQUFNLENBQUMsR0FBR2xCLGFBQWFtQixnQkFBZSxFQUFHO1FBQ3ZETDtRQUNBRCxJQUFLQSxNQUFNTztRQUNYQyxXQUFXVixtQkFBbUJTO1FBQzlCTCxLQUFNQSxPQUFPSztRQUNiRSxlQUFlVixnQkFBZ0JRO0lBQ25DLEdBQUdmLEtBQUtDO0lBQ1IsTUFBTWlCLFNBQVM7UUFBRUMsV0FBV04sVUFBVU07UUFBV2IsaUJBQWlCTyxVQUFVUDtJQUFnQjtJQUM1RixJQUFJLE9BQU9OLFFBQVEsWUFBWTtRQUMzQixPQUFPO1lBQUUsR0FBR2tCLE1BQU07WUFBRWxCLEtBQUthLFVBQVViO1FBQUk7SUFDM0M7SUFDQSxPQUFPa0I7QUFDWDtBQUNBMUIsc0JBQXNCRSxHQUFHQSIsInNvdXJjZXMiOlsid2VicGFjazovL2Z1bGxzdGFjay1yb2xlLWJhc2VkLW5leHRqcy0yLy4vbm9kZV9tb2R1bGVzL2pvc2UvZGlzdC9ub2RlL2Nqcy9qd2UvY29tcGFjdC9kZWNyeXB0LmpzPzM5M2EiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmNvbXBhY3REZWNyeXB0ID0gdm9pZCAwO1xuY29uc3QgZGVjcnlwdF9qc18xID0gcmVxdWlyZShcIi4uL2ZsYXR0ZW5lZC9kZWNyeXB0LmpzXCIpO1xuY29uc3QgZXJyb3JzX2pzXzEgPSByZXF1aXJlKFwiLi4vLi4vdXRpbC9lcnJvcnMuanNcIik7XG5jb25zdCBidWZmZXJfdXRpbHNfanNfMSA9IHJlcXVpcmUoXCIuLi8uLi9saWIvYnVmZmVyX3V0aWxzLmpzXCIpO1xuYXN5bmMgZnVuY3Rpb24gY29tcGFjdERlY3J5cHQoandlLCBrZXksIG9wdGlvbnMpIHtcbiAgICBpZiAoandlIGluc3RhbmNlb2YgVWludDhBcnJheSkge1xuICAgICAgICBqd2UgPSBidWZmZXJfdXRpbHNfanNfMS5kZWNvZGVyLmRlY29kZShqd2UpO1xuICAgIH1cbiAgICBpZiAodHlwZW9mIGp3ZSAhPT0gJ3N0cmluZycpIHtcbiAgICAgICAgdGhyb3cgbmV3IGVycm9yc19qc18xLkpXRUludmFsaWQoJ0NvbXBhY3QgSldFIG11c3QgYmUgYSBzdHJpbmcgb3IgVWludDhBcnJheScpO1xuICAgIH1cbiAgICBjb25zdCB7IDA6IHByb3RlY3RlZEhlYWRlciwgMTogZW5jcnlwdGVkS2V5LCAyOiBpdiwgMzogY2lwaGVydGV4dCwgNDogdGFnLCBsZW5ndGgsIH0gPSBqd2Uuc3BsaXQoJy4nKTtcbiAgICBpZiAobGVuZ3RoICE9PSA1KSB7XG4gICAgICAgIHRocm93IG5ldyBlcnJvcnNfanNfMS5KV0VJbnZhbGlkKCdJbnZhbGlkIENvbXBhY3QgSldFJyk7XG4gICAgfVxuICAgIGNvbnN0IGRlY3J5cHRlZCA9IGF3YWl0ICgwLCBkZWNyeXB0X2pzXzEuZmxhdHRlbmVkRGVjcnlwdCkoe1xuICAgICAgICBjaXBoZXJ0ZXh0LFxuICAgICAgICBpdjogKGl2IHx8IHVuZGVmaW5lZCksXG4gICAgICAgIHByb3RlY3RlZDogcHJvdGVjdGVkSGVhZGVyIHx8IHVuZGVmaW5lZCxcbiAgICAgICAgdGFnOiAodGFnIHx8IHVuZGVmaW5lZCksXG4gICAgICAgIGVuY3J5cHRlZF9rZXk6IGVuY3J5cHRlZEtleSB8fCB1bmRlZmluZWQsXG4gICAgfSwga2V5LCBvcHRpb25zKTtcbiAgICBjb25zdCByZXN1bHQgPSB7IHBsYWludGV4dDogZGVjcnlwdGVkLnBsYWludGV4dCwgcHJvdGVjdGVkSGVhZGVyOiBkZWNyeXB0ZWQucHJvdGVjdGVkSGVhZGVyIH07XG4gICAgaWYgKHR5cGVvZiBrZXkgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgcmV0dXJuIHsgLi4ucmVzdWx0LCBrZXk6IGRlY3J5cHRlZC5rZXkgfTtcbiAgICB9XG4gICAgcmV0dXJuIHJlc3VsdDtcbn1cbmV4cG9ydHMuY29tcGFjdERlY3J5cHQgPSBjb21wYWN0RGVjcnlwdDtcbiJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsImNvbXBhY3REZWNyeXB0IiwiZGVjcnlwdF9qc18xIiwicmVxdWlyZSIsImVycm9yc19qc18xIiwiYnVmZmVyX3V0aWxzX2pzXzEiLCJqd2UiLCJrZXkiLCJvcHRpb25zIiwiVWludDhBcnJheSIsImRlY29kZXIiLCJkZWNvZGUiLCJKV0VJbnZhbGlkIiwicHJvdGVjdGVkSGVhZGVyIiwiZW5jcnlwdGVkS2V5IiwiaXYiLCJjaXBoZXJ0ZXh0IiwidGFnIiwibGVuZ3RoIiwic3BsaXQiLCJkZWNyeXB0ZWQiLCJmbGF0dGVuZWREZWNyeXB0IiwidW5kZWZpbmVkIiwicHJvdGVjdGVkIiwiZW5jcnlwdGVkX2tleSIsInJlc3VsdCIsInBsYWludGV4dCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/jose/dist/node/cjs/jwe/compact/decrypt.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/jose/dist/node/cjs/jwe/compact/encrypt.js":
/*!****************************************************************!*\
  !*** ./node_modules/jose/dist/node/cjs/jwe/compact/encrypt.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.CompactEncrypt = void 0;\nconst encrypt_js_1 = __webpack_require__(/*! ../flattened/encrypt.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/jwe/flattened/encrypt.js\");\nclass CompactEncrypt {\n    constructor(plaintext){\n        this._flattened = new encrypt_js_1.FlattenedEncrypt(plaintext);\n    }\n    setContentEncryptionKey(cek) {\n        this._flattened.setContentEncryptionKey(cek);\n        return this;\n    }\n    setInitializationVector(iv) {\n        this._flattened.setInitializationVector(iv);\n        return this;\n    }\n    setProtectedHeader(protectedHeader) {\n        this._flattened.setProtectedHeader(protectedHeader);\n        return this;\n    }\n    setKeyManagementParameters(parameters) {\n        this._flattened.setKeyManagementParameters(parameters);\n        return this;\n    }\n    async encrypt(key, options) {\n        const jwe = await this._flattened.encrypt(key, options);\n        return [\n            jwe.protected,\n            jwe.encrypted_key,\n            jwe.iv,\n            jwe.ciphertext,\n            jwe.tag\n        ].join(\".\");\n    }\n}\nexports.CompactEncrypt = CompactEncrypt;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvam9zZS9kaXN0L25vZGUvY2pzL2p3ZS9jb21wYWN0L2VuY3J5cHQuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYkEsOENBQTZDO0lBQUVHLE9BQU87QUFBSyxDQUFDLEVBQUM7QUFDN0RELHNCQUFzQkUsR0FBRyxLQUFLO0FBQzlCLE1BQU1DLGVBQWVDLG1CQUFPQSxDQUFDLHVHQUF5QjtBQUN0RCxNQUFNRjtJQUNGRyxZQUFZQyxTQUFTLENBQUU7UUFDbkIsSUFBSSxDQUFDQyxhQUFhLElBQUlKLGFBQWFLLGlCQUFpQkY7SUFDeEQ7SUFDQUcsd0JBQXdCQyxHQUFHLEVBQUU7UUFDekIsSUFBSSxDQUFDSCxXQUFXRSx3QkFBd0JDO1FBQ3hDLE9BQU8sSUFBSTtJQUNmO0lBQ0FDLHdCQUF3QkMsRUFBRSxFQUFFO1FBQ3hCLElBQUksQ0FBQ0wsV0FBV0ksd0JBQXdCQztRQUN4QyxPQUFPLElBQUk7SUFDZjtJQUNBQyxtQkFBbUJDLGVBQWUsRUFBRTtRQUNoQyxJQUFJLENBQUNQLFdBQVdNLG1CQUFtQkM7UUFDbkMsT0FBTyxJQUFJO0lBQ2Y7SUFDQUMsMkJBQTJCQyxVQUFVLEVBQUU7UUFDbkMsSUFBSSxDQUFDVCxXQUFXUSwyQkFBMkJDO1FBQzNDLE9BQU8sSUFBSTtJQUNmO0lBQ0EsTUFBTUMsUUFBUUMsR0FBRyxFQUFFQyxPQUFPLEVBQUU7UUFDeEIsTUFBTUMsTUFBTSxNQUFNLElBQUksQ0FBQ2IsV0FBV1UsUUFBUUMsS0FBS0M7UUFDL0MsT0FBTztZQUFDQyxJQUFJQztZQUFXRCxJQUFJRTtZQUFlRixJQUFJUjtZQUFJUSxJQUFJRztZQUFZSCxJQUFJSTtTQUFJLENBQUNDLEtBQUs7SUFDcEY7QUFDSjtBQUNBekIsc0JBQXNCRSxHQUFHQSIsInNvdXJjZXMiOlsid2VicGFjazovL2Z1bGxzdGFjay1yb2xlLWJhc2VkLW5leHRqcy0yLy4vbm9kZV9tb2R1bGVzL2pvc2UvZGlzdC9ub2RlL2Nqcy9qd2UvY29tcGFjdC9lbmNyeXB0LmpzP2U1YWQiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLkNvbXBhY3RFbmNyeXB0ID0gdm9pZCAwO1xuY29uc3QgZW5jcnlwdF9qc18xID0gcmVxdWlyZShcIi4uL2ZsYXR0ZW5lZC9lbmNyeXB0LmpzXCIpO1xuY2xhc3MgQ29tcGFjdEVuY3J5cHQge1xuICAgIGNvbnN0cnVjdG9yKHBsYWludGV4dCkge1xuICAgICAgICB0aGlzLl9mbGF0dGVuZWQgPSBuZXcgZW5jcnlwdF9qc18xLkZsYXR0ZW5lZEVuY3J5cHQocGxhaW50ZXh0KTtcbiAgICB9XG4gICAgc2V0Q29udGVudEVuY3J5cHRpb25LZXkoY2VrKSB7XG4gICAgICAgIHRoaXMuX2ZsYXR0ZW5lZC5zZXRDb250ZW50RW5jcnlwdGlvbktleShjZWspO1xuICAgICAgICByZXR1cm4gdGhpcztcbiAgICB9XG4gICAgc2V0SW5pdGlhbGl6YXRpb25WZWN0b3IoaXYpIHtcbiAgICAgICAgdGhpcy5fZmxhdHRlbmVkLnNldEluaXRpYWxpemF0aW9uVmVjdG9yKGl2KTtcbiAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfVxuICAgIHNldFByb3RlY3RlZEhlYWRlcihwcm90ZWN0ZWRIZWFkZXIpIHtcbiAgICAgICAgdGhpcy5fZmxhdHRlbmVkLnNldFByb3RlY3RlZEhlYWRlcihwcm90ZWN0ZWRIZWFkZXIpO1xuICAgICAgICByZXR1cm4gdGhpcztcbiAgICB9XG4gICAgc2V0S2V5TWFuYWdlbWVudFBhcmFtZXRlcnMocGFyYW1ldGVycykge1xuICAgICAgICB0aGlzLl9mbGF0dGVuZWQuc2V0S2V5TWFuYWdlbWVudFBhcmFtZXRlcnMocGFyYW1ldGVycyk7XG4gICAgICAgIHJldHVybiB0aGlzO1xuICAgIH1cbiAgICBhc3luYyBlbmNyeXB0KGtleSwgb3B0aW9ucykge1xuICAgICAgICBjb25zdCBqd2UgPSBhd2FpdCB0aGlzLl9mbGF0dGVuZWQuZW5jcnlwdChrZXksIG9wdGlvbnMpO1xuICAgICAgICByZXR1cm4gW2p3ZS5wcm90ZWN0ZWQsIGp3ZS5lbmNyeXB0ZWRfa2V5LCBqd2UuaXYsIGp3ZS5jaXBoZXJ0ZXh0LCBqd2UudGFnXS5qb2luKCcuJyk7XG4gICAgfVxufVxuZXhwb3J0cy5Db21wYWN0RW5jcnlwdCA9IENvbXBhY3RFbmNyeXB0O1xuIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiQ29tcGFjdEVuY3J5cHQiLCJlbmNyeXB0X2pzXzEiLCJyZXF1aXJlIiwiY29uc3RydWN0b3IiLCJwbGFpbnRleHQiLCJfZmxhdHRlbmVkIiwiRmxhdHRlbmVkRW5jcnlwdCIsInNldENvbnRlbnRFbmNyeXB0aW9uS2V5IiwiY2VrIiwic2V0SW5pdGlhbGl6YXRpb25WZWN0b3IiLCJpdiIsInNldFByb3RlY3RlZEhlYWRlciIsInByb3RlY3RlZEhlYWRlciIsInNldEtleU1hbmFnZW1lbnRQYXJhbWV0ZXJzIiwicGFyYW1ldGVycyIsImVuY3J5cHQiLCJrZXkiLCJvcHRpb25zIiwiandlIiwicHJvdGVjdGVkIiwiZW5jcnlwdGVkX2tleSIsImNpcGhlcnRleHQiLCJ0YWciLCJqb2luIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/jose/dist/node/cjs/jwe/compact/encrypt.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/jose/dist/node/cjs/jwe/flattened/decrypt.js":
/*!******************************************************************!*\
  !*** ./node_modules/jose/dist/node/cjs/jwe/flattened/decrypt.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.flattenedDecrypt = void 0;\nconst base64url_js_1 = __webpack_require__(/*! ../../runtime/base64url.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/runtime/base64url.js\");\nconst decrypt_js_1 = __webpack_require__(/*! ../../runtime/decrypt.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/runtime/decrypt.js\");\nconst zlib_js_1 = __webpack_require__(/*! ../../runtime/zlib.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/runtime/zlib.js\");\nconst errors_js_1 = __webpack_require__(/*! ../../util/errors.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/util/errors.js\");\nconst is_disjoint_js_1 = __webpack_require__(/*! ../../lib/is_disjoint.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/lib/is_disjoint.js\");\nconst is_object_js_1 = __webpack_require__(/*! ../../lib/is_object.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/lib/is_object.js\");\nconst decrypt_key_management_js_1 = __webpack_require__(/*! ../../lib/decrypt_key_management.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/lib/decrypt_key_management.js\");\nconst buffer_utils_js_1 = __webpack_require__(/*! ../../lib/buffer_utils.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/lib/buffer_utils.js\");\nconst cek_js_1 = __webpack_require__(/*! ../../lib/cek.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/lib/cek.js\");\nconst validate_crit_js_1 = __webpack_require__(/*! ../../lib/validate_crit.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/lib/validate_crit.js\");\nconst validate_algorithms_js_1 = __webpack_require__(/*! ../../lib/validate_algorithms.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/lib/validate_algorithms.js\");\nasync function flattenedDecrypt(jwe, key, options) {\n    var _a;\n    if (!(0, is_object_js_1.default)(jwe)) {\n        throw new errors_js_1.JWEInvalid(\"Flattened JWE must be an object\");\n    }\n    if (jwe.protected === undefined && jwe.header === undefined && jwe.unprotected === undefined) {\n        throw new errors_js_1.JWEInvalid(\"JOSE Header missing\");\n    }\n    if (typeof jwe.iv !== \"string\") {\n        throw new errors_js_1.JWEInvalid(\"JWE Initialization Vector missing or incorrect type\");\n    }\n    if (typeof jwe.ciphertext !== \"string\") {\n        throw new errors_js_1.JWEInvalid(\"JWE Ciphertext missing or incorrect type\");\n    }\n    if (typeof jwe.tag !== \"string\") {\n        throw new errors_js_1.JWEInvalid(\"JWE Authentication Tag missing or incorrect type\");\n    }\n    if (jwe.protected !== undefined && typeof jwe.protected !== \"string\") {\n        throw new errors_js_1.JWEInvalid(\"JWE Protected Header incorrect type\");\n    }\n    if (jwe.encrypted_key !== undefined && typeof jwe.encrypted_key !== \"string\") {\n        throw new errors_js_1.JWEInvalid(\"JWE Encrypted Key incorrect type\");\n    }\n    if (jwe.aad !== undefined && typeof jwe.aad !== \"string\") {\n        throw new errors_js_1.JWEInvalid(\"JWE AAD incorrect type\");\n    }\n    if (jwe.header !== undefined && !(0, is_object_js_1.default)(jwe.header)) {\n        throw new errors_js_1.JWEInvalid(\"JWE Shared Unprotected Header incorrect type\");\n    }\n    if (jwe.unprotected !== undefined && !(0, is_object_js_1.default)(jwe.unprotected)) {\n        throw new errors_js_1.JWEInvalid(\"JWE Per-Recipient Unprotected Header incorrect type\");\n    }\n    let parsedProt;\n    if (jwe.protected) {\n        try {\n            const protectedHeader = (0, base64url_js_1.decode)(jwe.protected);\n            parsedProt = JSON.parse(buffer_utils_js_1.decoder.decode(protectedHeader));\n        } catch  {\n            throw new errors_js_1.JWEInvalid(\"JWE Protected Header is invalid\");\n        }\n    }\n    if (!(0, is_disjoint_js_1.default)(parsedProt, jwe.header, jwe.unprotected)) {\n        throw new errors_js_1.JWEInvalid(\"JWE Protected, JWE Unprotected Header, and JWE Per-Recipient Unprotected Header Parameter names must be disjoint\");\n    }\n    const joseHeader = {\n        ...parsedProt,\n        ...jwe.header,\n        ...jwe.unprotected\n    };\n    (0, validate_crit_js_1.default)(errors_js_1.JWEInvalid, new Map(), options === null || options === void 0 ? void 0 : options.crit, parsedProt, joseHeader);\n    if (joseHeader.zip !== undefined) {\n        if (!parsedProt || !parsedProt.zip) {\n            throw new errors_js_1.JWEInvalid('JWE \"zip\" (Compression Algorithm) Header MUST be integrity protected');\n        }\n        if (joseHeader.zip !== \"DEF\") {\n            throw new errors_js_1.JOSENotSupported('Unsupported JWE \"zip\" (Compression Algorithm) Header Parameter value');\n        }\n    }\n    const { alg , enc  } = joseHeader;\n    if (typeof alg !== \"string\" || !alg) {\n        throw new errors_js_1.JWEInvalid(\"missing JWE Algorithm (alg) in JWE Header\");\n    }\n    if (typeof enc !== \"string\" || !enc) {\n        throw new errors_js_1.JWEInvalid(\"missing JWE Encryption Algorithm (enc) in JWE Header\");\n    }\n    const keyManagementAlgorithms = options && (0, validate_algorithms_js_1.default)(\"keyManagementAlgorithms\", options.keyManagementAlgorithms);\n    const contentEncryptionAlgorithms = options && (0, validate_algorithms_js_1.default)(\"contentEncryptionAlgorithms\", options.contentEncryptionAlgorithms);\n    if (keyManagementAlgorithms && !keyManagementAlgorithms.has(alg)) {\n        throw new errors_js_1.JOSEAlgNotAllowed('\"alg\" (Algorithm) Header Parameter not allowed');\n    }\n    if (contentEncryptionAlgorithms && !contentEncryptionAlgorithms.has(enc)) {\n        throw new errors_js_1.JOSEAlgNotAllowed('\"enc\" (Encryption Algorithm) Header Parameter not allowed');\n    }\n    let encryptedKey;\n    if (jwe.encrypted_key !== undefined) {\n        encryptedKey = (0, base64url_js_1.decode)(jwe.encrypted_key);\n    }\n    let resolvedKey = false;\n    if (typeof key === \"function\") {\n        key = await key(parsedProt, jwe);\n        resolvedKey = true;\n    }\n    let cek;\n    try {\n        cek = await (0, decrypt_key_management_js_1.default)(alg, key, encryptedKey, joseHeader, options);\n    } catch (err) {\n        if (err instanceof TypeError || err instanceof errors_js_1.JWEInvalid || err instanceof errors_js_1.JOSENotSupported) {\n            throw err;\n        }\n        cek = (0, cek_js_1.default)(enc);\n    }\n    const iv = (0, base64url_js_1.decode)(jwe.iv);\n    const tag = (0, base64url_js_1.decode)(jwe.tag);\n    const protectedHeader = buffer_utils_js_1.encoder.encode((_a = jwe.protected) !== null && _a !== void 0 ? _a : \"\");\n    let additionalData;\n    if (jwe.aad !== undefined) {\n        additionalData = (0, buffer_utils_js_1.concat)(protectedHeader, buffer_utils_js_1.encoder.encode(\".\"), buffer_utils_js_1.encoder.encode(jwe.aad));\n    } else {\n        additionalData = protectedHeader;\n    }\n    let plaintext = await (0, decrypt_js_1.default)(enc, cek, (0, base64url_js_1.decode)(jwe.ciphertext), iv, tag, additionalData);\n    if (joseHeader.zip === \"DEF\") {\n        plaintext = await ((options === null || options === void 0 ? void 0 : options.inflateRaw) || zlib_js_1.inflate)(plaintext);\n    }\n    const result = {\n        plaintext\n    };\n    if (jwe.protected !== undefined) {\n        result.protectedHeader = parsedProt;\n    }\n    if (jwe.aad !== undefined) {\n        result.additionalAuthenticatedData = (0, base64url_js_1.decode)(jwe.aad);\n    }\n    if (jwe.unprotected !== undefined) {\n        result.sharedUnprotectedHeader = jwe.unprotected;\n    }\n    if (jwe.header !== undefined) {\n        result.unprotectedHeader = jwe.header;\n    }\n    if (resolvedKey) {\n        return {\n            ...result,\n            key\n        };\n    }\n    return result;\n}\nexports.flattenedDecrypt = flattenedDecrypt;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/jose/dist/node/cjs/jwe/flattened/decrypt.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/jose/dist/node/cjs/jwe/flattened/encrypt.js":
/*!******************************************************************!*\
  !*** ./node_modules/jose/dist/node/cjs/jwe/flattened/encrypt.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.FlattenedEncrypt = exports.unprotected = void 0;\nconst base64url_js_1 = __webpack_require__(/*! ../../runtime/base64url.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/runtime/base64url.js\");\nconst encrypt_js_1 = __webpack_require__(/*! ../../runtime/encrypt.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/runtime/encrypt.js\");\nconst zlib_js_1 = __webpack_require__(/*! ../../runtime/zlib.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/runtime/zlib.js\");\nconst iv_js_1 = __webpack_require__(/*! ../../lib/iv.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/lib/iv.js\");\nconst encrypt_key_management_js_1 = __webpack_require__(/*! ../../lib/encrypt_key_management.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/lib/encrypt_key_management.js\");\nconst errors_js_1 = __webpack_require__(/*! ../../util/errors.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/util/errors.js\");\nconst is_disjoint_js_1 = __webpack_require__(/*! ../../lib/is_disjoint.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/lib/is_disjoint.js\");\nconst buffer_utils_js_1 = __webpack_require__(/*! ../../lib/buffer_utils.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/lib/buffer_utils.js\");\nconst validate_crit_js_1 = __webpack_require__(/*! ../../lib/validate_crit.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/lib/validate_crit.js\");\nexports.unprotected = Symbol();\nclass FlattenedEncrypt {\n    constructor(plaintext){\n        if (!(plaintext instanceof Uint8Array)) {\n            throw new TypeError(\"plaintext must be an instance of Uint8Array\");\n        }\n        this._plaintext = plaintext;\n    }\n    setKeyManagementParameters(parameters) {\n        if (this._keyManagementParameters) {\n            throw new TypeError(\"setKeyManagementParameters can only be called once\");\n        }\n        this._keyManagementParameters = parameters;\n        return this;\n    }\n    setProtectedHeader(protectedHeader) {\n        if (this._protectedHeader) {\n            throw new TypeError(\"setProtectedHeader can only be called once\");\n        }\n        this._protectedHeader = protectedHeader;\n        return this;\n    }\n    setSharedUnprotectedHeader(sharedUnprotectedHeader) {\n        if (this._sharedUnprotectedHeader) {\n            throw new TypeError(\"setSharedUnprotectedHeader can only be called once\");\n        }\n        this._sharedUnprotectedHeader = sharedUnprotectedHeader;\n        return this;\n    }\n    setUnprotectedHeader(unprotectedHeader) {\n        if (this._unprotectedHeader) {\n            throw new TypeError(\"setUnprotectedHeader can only be called once\");\n        }\n        this._unprotectedHeader = unprotectedHeader;\n        return this;\n    }\n    setAdditionalAuthenticatedData(aad) {\n        this._aad = aad;\n        return this;\n    }\n    setContentEncryptionKey(cek) {\n        if (this._cek) {\n            throw new TypeError(\"setContentEncryptionKey can only be called once\");\n        }\n        this._cek = cek;\n        return this;\n    }\n    setInitializationVector(iv) {\n        if (this._iv) {\n            throw new TypeError(\"setInitializationVector can only be called once\");\n        }\n        this._iv = iv;\n        return this;\n    }\n    async encrypt(key, options) {\n        if (!this._protectedHeader && !this._unprotectedHeader && !this._sharedUnprotectedHeader) {\n            throw new errors_js_1.JWEInvalid(\"either setProtectedHeader, setUnprotectedHeader, or sharedUnprotectedHeader must be called before #encrypt()\");\n        }\n        if (!(0, is_disjoint_js_1.default)(this._protectedHeader, this._unprotectedHeader, this._sharedUnprotectedHeader)) {\n            throw new errors_js_1.JWEInvalid(\"JWE Protected, JWE Shared Unprotected and JWE Per-Recipient Header Parameter names must be disjoint\");\n        }\n        const joseHeader = {\n            ...this._protectedHeader,\n            ...this._unprotectedHeader,\n            ...this._sharedUnprotectedHeader\n        };\n        (0, validate_crit_js_1.default)(errors_js_1.JWEInvalid, new Map(), options === null || options === void 0 ? void 0 : options.crit, this._protectedHeader, joseHeader);\n        if (joseHeader.zip !== undefined) {\n            if (!this._protectedHeader || !this._protectedHeader.zip) {\n                throw new errors_js_1.JWEInvalid('JWE \"zip\" (Compression Algorithm) Header MUST be integrity protected');\n            }\n            if (joseHeader.zip !== \"DEF\") {\n                throw new errors_js_1.JOSENotSupported('Unsupported JWE \"zip\" (Compression Algorithm) Header Parameter value');\n            }\n        }\n        const { alg , enc  } = joseHeader;\n        if (typeof alg !== \"string\" || !alg) {\n            throw new errors_js_1.JWEInvalid('JWE \"alg\" (Algorithm) Header Parameter missing or invalid');\n        }\n        if (typeof enc !== \"string\" || !enc) {\n            throw new errors_js_1.JWEInvalid('JWE \"enc\" (Encryption Algorithm) Header Parameter missing or invalid');\n        }\n        let encryptedKey;\n        if (alg === \"dir\") {\n            if (this._cek) {\n                throw new TypeError(\"setContentEncryptionKey cannot be called when using Direct Encryption\");\n            }\n        } else if (alg === \"ECDH-ES\") {\n            if (this._cek) {\n                throw new TypeError(\"setContentEncryptionKey cannot be called when using Direct Key Agreement\");\n            }\n        }\n        let cek;\n        {\n            let parameters;\n            ({ cek , encryptedKey , parameters  } = await (0, encrypt_key_management_js_1.default)(alg, enc, key, this._cek, this._keyManagementParameters));\n            if (parameters) {\n                if (options && exports.unprotected in options) {\n                    if (!this._unprotectedHeader) {\n                        this.setUnprotectedHeader(parameters);\n                    } else {\n                        this._unprotectedHeader = {\n                            ...this._unprotectedHeader,\n                            ...parameters\n                        };\n                    }\n                } else {\n                    if (!this._protectedHeader) {\n                        this.setProtectedHeader(parameters);\n                    } else {\n                        this._protectedHeader = {\n                            ...this._protectedHeader,\n                            ...parameters\n                        };\n                    }\n                }\n            }\n        }\n        this._iv || (this._iv = (0, iv_js_1.default)(enc));\n        let additionalData;\n        let protectedHeader;\n        let aadMember;\n        if (this._protectedHeader) {\n            protectedHeader = buffer_utils_js_1.encoder.encode((0, base64url_js_1.encode)(JSON.stringify(this._protectedHeader)));\n        } else {\n            protectedHeader = buffer_utils_js_1.encoder.encode(\"\");\n        }\n        if (this._aad) {\n            aadMember = (0, base64url_js_1.encode)(this._aad);\n            additionalData = (0, buffer_utils_js_1.concat)(protectedHeader, buffer_utils_js_1.encoder.encode(\".\"), buffer_utils_js_1.encoder.encode(aadMember));\n        } else {\n            additionalData = protectedHeader;\n        }\n        let ciphertext;\n        let tag;\n        if (joseHeader.zip === \"DEF\") {\n            const deflated = await ((options === null || options === void 0 ? void 0 : options.deflateRaw) || zlib_js_1.deflate)(this._plaintext);\n            ({ ciphertext , tag  } = await (0, encrypt_js_1.default)(enc, deflated, cek, this._iv, additionalData));\n        } else {\n            ;\n            ({ ciphertext , tag  } = await (0, encrypt_js_1.default)(enc, this._plaintext, cek, this._iv, additionalData));\n        }\n        const jwe = {\n            ciphertext: (0, base64url_js_1.encode)(ciphertext),\n            iv: (0, base64url_js_1.encode)(this._iv),\n            tag: (0, base64url_js_1.encode)(tag)\n        };\n        if (encryptedKey) {\n            jwe.encrypted_key = (0, base64url_js_1.encode)(encryptedKey);\n        }\n        if (aadMember) {\n            jwe.aad = aadMember;\n        }\n        if (this._protectedHeader) {\n            jwe.protected = buffer_utils_js_1.decoder.decode(protectedHeader);\n        }\n        if (this._sharedUnprotectedHeader) {\n            jwe.unprotected = this._sharedUnprotectedHeader;\n        }\n        if (this._unprotectedHeader) {\n            jwe.header = this._unprotectedHeader;\n        }\n        return jwe;\n    }\n}\nexports.FlattenedEncrypt = FlattenedEncrypt;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/jose/dist/node/cjs/jwe/flattened/encrypt.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/jose/dist/node/cjs/jwe/general/decrypt.js":
/*!****************************************************************!*\
  !*** ./node_modules/jose/dist/node/cjs/jwe/general/decrypt.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.generalDecrypt = void 0;\nconst decrypt_js_1 = __webpack_require__(/*! ../flattened/decrypt.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/jwe/flattened/decrypt.js\");\nconst errors_js_1 = __webpack_require__(/*! ../../util/errors.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/util/errors.js\");\nconst is_object_js_1 = __webpack_require__(/*! ../../lib/is_object.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/lib/is_object.js\");\nasync function generalDecrypt(jwe, key, options) {\n    if (!(0, is_object_js_1.default)(jwe)) {\n        throw new errors_js_1.JWEInvalid(\"General JWE must be an object\");\n    }\n    if (!Array.isArray(jwe.recipients) || !jwe.recipients.every(is_object_js_1.default)) {\n        throw new errors_js_1.JWEInvalid(\"JWE Recipients missing or incorrect type\");\n    }\n    if (!jwe.recipients.length) {\n        throw new errors_js_1.JWEInvalid(\"JWE Recipients has no members\");\n    }\n    for (const recipient of jwe.recipients){\n        try {\n            return await (0, decrypt_js_1.flattenedDecrypt)({\n                aad: jwe.aad,\n                ciphertext: jwe.ciphertext,\n                encrypted_key: recipient.encrypted_key,\n                header: recipient.header,\n                iv: jwe.iv,\n                protected: jwe.protected,\n                tag: jwe.tag,\n                unprotected: jwe.unprotected\n            }, key, options);\n        } catch  {}\n    }\n    throw new errors_js_1.JWEDecryptionFailed();\n}\nexports.generalDecrypt = generalDecrypt;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvam9zZS9kaXN0L25vZGUvY2pzL2p3ZS9nZW5lcmFsL2RlY3J5cHQuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYkEsOENBQTZDO0lBQUVHLE9BQU87QUFBSyxDQUFDLEVBQUM7QUFDN0RELHNCQUFzQkUsR0FBRyxLQUFLO0FBQzlCLE1BQU1DLGVBQWVDLG1CQUFPQSxDQUFDLHVHQUF5QjtBQUN0RCxNQUFNQyxjQUFjRCxtQkFBT0EsQ0FBQywwRkFBc0I7QUFDbEQsTUFBTUUsaUJBQWlCRixtQkFBT0EsQ0FBQyw4RkFBd0I7QUFDdkQsZUFBZUYsZUFBZUssR0FBRyxFQUFFQyxHQUFHLEVBQUVDLE9BQU87SUFDM0MsSUFBSSxDQUFDLENBQUMsR0FBR0gsZUFBZUksT0FBTSxFQUFHSCxNQUFNO1FBQ25DLE1BQU0sSUFBSUYsWUFBWU0sV0FBVztJQUNyQztJQUNBLElBQUksQ0FBQ0MsTUFBTUMsUUFBUU4sSUFBSU8sZUFBZSxDQUFDUCxJQUFJTyxXQUFXQyxNQUFNVCxlQUFlSSxVQUFVO1FBQ2pGLE1BQU0sSUFBSUwsWUFBWU0sV0FBVztJQUNyQztJQUNBLElBQUksQ0FBQ0osSUFBSU8sV0FBV0UsUUFBUTtRQUN4QixNQUFNLElBQUlYLFlBQVlNLFdBQVc7SUFDckM7SUFDQSxLQUFLLE1BQU1NLGFBQWFWLElBQUlPLFdBQVk7UUFDcEMsSUFBSTtZQUNBLE9BQU8sTUFBTSxDQUFDLEdBQUdYLGFBQWFlLGdCQUFlLEVBQUc7Z0JBQzVDQyxLQUFLWixJQUFJWTtnQkFDVEMsWUFBWWIsSUFBSWE7Z0JBQ2hCQyxlQUFlSixVQUFVSTtnQkFDekJDLFFBQVFMLFVBQVVLO2dCQUNsQkMsSUFBSWhCLElBQUlnQjtnQkFDUkMsV0FBV2pCLElBQUlpQjtnQkFDZkMsS0FBS2xCLElBQUlrQjtnQkFDVEMsYUFBYW5CLElBQUltQjtZQUNyQixHQUFHbEIsS0FBS0M7UUFDWixFQUNBLE9BQU0sQ0FDTjtJQUNKO0lBQ0EsTUFBTSxJQUFJSixZQUFZc0I7QUFDMUI7QUFDQTNCLHNCQUFzQkUsR0FBR0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mdWxsc3RhY2stcm9sZS1iYXNlZC1uZXh0anMtMi8uL25vZGVfbW9kdWxlcy9qb3NlL2Rpc3Qvbm9kZS9janMvandlL2dlbmVyYWwvZGVjcnlwdC5qcz83NGZmIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5nZW5lcmFsRGVjcnlwdCA9IHZvaWQgMDtcbmNvbnN0IGRlY3J5cHRfanNfMSA9IHJlcXVpcmUoXCIuLi9mbGF0dGVuZWQvZGVjcnlwdC5qc1wiKTtcbmNvbnN0IGVycm9yc19qc18xID0gcmVxdWlyZShcIi4uLy4uL3V0aWwvZXJyb3JzLmpzXCIpO1xuY29uc3QgaXNfb2JqZWN0X2pzXzEgPSByZXF1aXJlKFwiLi4vLi4vbGliL2lzX29iamVjdC5qc1wiKTtcbmFzeW5jIGZ1bmN0aW9uIGdlbmVyYWxEZWNyeXB0KGp3ZSwga2V5LCBvcHRpb25zKSB7XG4gICAgaWYgKCEoMCwgaXNfb2JqZWN0X2pzXzEuZGVmYXVsdCkoandlKSkge1xuICAgICAgICB0aHJvdyBuZXcgZXJyb3JzX2pzXzEuSldFSW52YWxpZCgnR2VuZXJhbCBKV0UgbXVzdCBiZSBhbiBvYmplY3QnKTtcbiAgICB9XG4gICAgaWYgKCFBcnJheS5pc0FycmF5KGp3ZS5yZWNpcGllbnRzKSB8fCAhandlLnJlY2lwaWVudHMuZXZlcnkoaXNfb2JqZWN0X2pzXzEuZGVmYXVsdCkpIHtcbiAgICAgICAgdGhyb3cgbmV3IGVycm9yc19qc18xLkpXRUludmFsaWQoJ0pXRSBSZWNpcGllbnRzIG1pc3Npbmcgb3IgaW5jb3JyZWN0IHR5cGUnKTtcbiAgICB9XG4gICAgaWYgKCFqd2UucmVjaXBpZW50cy5sZW5ndGgpIHtcbiAgICAgICAgdGhyb3cgbmV3IGVycm9yc19qc18xLkpXRUludmFsaWQoJ0pXRSBSZWNpcGllbnRzIGhhcyBubyBtZW1iZXJzJyk7XG4gICAgfVxuICAgIGZvciAoY29uc3QgcmVjaXBpZW50IG9mIGp3ZS5yZWNpcGllbnRzKSB7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICByZXR1cm4gYXdhaXQgKDAsIGRlY3J5cHRfanNfMS5mbGF0dGVuZWREZWNyeXB0KSh7XG4gICAgICAgICAgICAgICAgYWFkOiBqd2UuYWFkLFxuICAgICAgICAgICAgICAgIGNpcGhlcnRleHQ6IGp3ZS5jaXBoZXJ0ZXh0LFxuICAgICAgICAgICAgICAgIGVuY3J5cHRlZF9rZXk6IHJlY2lwaWVudC5lbmNyeXB0ZWRfa2V5LFxuICAgICAgICAgICAgICAgIGhlYWRlcjogcmVjaXBpZW50LmhlYWRlcixcbiAgICAgICAgICAgICAgICBpdjogandlLml2LFxuICAgICAgICAgICAgICAgIHByb3RlY3RlZDogandlLnByb3RlY3RlZCxcbiAgICAgICAgICAgICAgICB0YWc6IGp3ZS50YWcsXG4gICAgICAgICAgICAgICAgdW5wcm90ZWN0ZWQ6IGp3ZS51bnByb3RlY3RlZCxcbiAgICAgICAgICAgIH0sIGtleSwgb3B0aW9ucyk7XG4gICAgICAgIH1cbiAgICAgICAgY2F0Y2gge1xuICAgICAgICB9XG4gICAgfVxuICAgIHRocm93IG5ldyBlcnJvcnNfanNfMS5KV0VEZWNyeXB0aW9uRmFpbGVkKCk7XG59XG5leHBvcnRzLmdlbmVyYWxEZWNyeXB0ID0gZ2VuZXJhbERlY3J5cHQ7XG4iXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJnZW5lcmFsRGVjcnlwdCIsImRlY3J5cHRfanNfMSIsInJlcXVpcmUiLCJlcnJvcnNfanNfMSIsImlzX29iamVjdF9qc18xIiwiandlIiwia2V5Iiwib3B0aW9ucyIsImRlZmF1bHQiLCJKV0VJbnZhbGlkIiwiQXJyYXkiLCJpc0FycmF5IiwicmVjaXBpZW50cyIsImV2ZXJ5IiwibGVuZ3RoIiwicmVjaXBpZW50IiwiZmxhdHRlbmVkRGVjcnlwdCIsImFhZCIsImNpcGhlcnRleHQiLCJlbmNyeXB0ZWRfa2V5IiwiaGVhZGVyIiwiaXYiLCJwcm90ZWN0ZWQiLCJ0YWciLCJ1bnByb3RlY3RlZCIsIkpXRURlY3J5cHRpb25GYWlsZWQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/jose/dist/node/cjs/jwe/general/decrypt.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/jose/dist/node/cjs/jwe/general/encrypt.js":
/*!****************************************************************!*\
  !*** ./node_modules/jose/dist/node/cjs/jwe/general/encrypt.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.GeneralEncrypt = void 0;\nconst encrypt_js_1 = __webpack_require__(/*! ../flattened/encrypt.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/jwe/flattened/encrypt.js\");\nconst errors_js_1 = __webpack_require__(/*! ../../util/errors.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/util/errors.js\");\nconst cek_js_1 = __webpack_require__(/*! ../../lib/cek.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/lib/cek.js\");\nconst is_disjoint_js_1 = __webpack_require__(/*! ../../lib/is_disjoint.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/lib/is_disjoint.js\");\nconst encrypt_key_management_js_1 = __webpack_require__(/*! ../../lib/encrypt_key_management.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/lib/encrypt_key_management.js\");\nconst base64url_js_1 = __webpack_require__(/*! ../../runtime/base64url.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/runtime/base64url.js\");\nconst validate_crit_js_1 = __webpack_require__(/*! ../../lib/validate_crit.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/lib/validate_crit.js\");\nclass IndividualRecipient {\n    constructor(enc, key, options){\n        this.parent = enc;\n        this.key = key;\n        this.options = options;\n    }\n    setUnprotectedHeader(unprotectedHeader) {\n        if (this.unprotectedHeader) {\n            throw new TypeError(\"setUnprotectedHeader can only be called once\");\n        }\n        this.unprotectedHeader = unprotectedHeader;\n        return this;\n    }\n    addRecipient(...args) {\n        return this.parent.addRecipient(...args);\n    }\n    encrypt(...args) {\n        return this.parent.encrypt(...args);\n    }\n    done() {\n        return this.parent;\n    }\n}\nclass GeneralEncrypt {\n    constructor(plaintext){\n        this._recipients = [];\n        this._plaintext = plaintext;\n    }\n    addRecipient(key, options) {\n        const recipient = new IndividualRecipient(this, key, {\n            crit: options === null || options === void 0 ? void 0 : options.crit\n        });\n        this._recipients.push(recipient);\n        return recipient;\n    }\n    setProtectedHeader(protectedHeader) {\n        if (this._protectedHeader) {\n            throw new TypeError(\"setProtectedHeader can only be called once\");\n        }\n        this._protectedHeader = protectedHeader;\n        return this;\n    }\n    setSharedUnprotectedHeader(sharedUnprotectedHeader) {\n        if (this._unprotectedHeader) {\n            throw new TypeError(\"setSharedUnprotectedHeader can only be called once\");\n        }\n        this._unprotectedHeader = sharedUnprotectedHeader;\n        return this;\n    }\n    setAdditionalAuthenticatedData(aad) {\n        this._aad = aad;\n        return this;\n    }\n    async encrypt(options) {\n        var _a, _b, _c;\n        if (!this._recipients.length) {\n            throw new errors_js_1.JWEInvalid(\"at least one recipient must be added\");\n        }\n        options = {\n            deflateRaw: options === null || options === void 0 ? void 0 : options.deflateRaw\n        };\n        if (this._recipients.length === 1) {\n            const [recipient] = this._recipients;\n            const flattened = await new encrypt_js_1.FlattenedEncrypt(this._plaintext).setAdditionalAuthenticatedData(this._aad).setProtectedHeader(this._protectedHeader).setSharedUnprotectedHeader(this._unprotectedHeader).setUnprotectedHeader(recipient.unprotectedHeader).encrypt(recipient.key, {\n                ...recipient.options,\n                ...options\n            });\n            let jwe = {\n                ciphertext: flattened.ciphertext,\n                iv: flattened.iv,\n                recipients: [\n                    {}\n                ],\n                tag: flattened.tag\n            };\n            if (flattened.aad) jwe.aad = flattened.aad;\n            if (flattened.protected) jwe.protected = flattened.protected;\n            if (flattened.unprotected) jwe.unprotected = flattened.unprotected;\n            if (flattened.encrypted_key) jwe.recipients[0].encrypted_key = flattened.encrypted_key;\n            if (flattened.header) jwe.recipients[0].header = flattened.header;\n            return jwe;\n        }\n        let enc;\n        for(let i = 0; i < this._recipients.length; i++){\n            const recipient = this._recipients[i];\n            if (!(0, is_disjoint_js_1.default)(this._protectedHeader, this._unprotectedHeader, recipient.unprotectedHeader)) {\n                throw new errors_js_1.JWEInvalid(\"JWE Protected, JWE Shared Unprotected and JWE Per-Recipient Header Parameter names must be disjoint\");\n            }\n            const joseHeader = {\n                ...this._protectedHeader,\n                ...this._unprotectedHeader,\n                ...recipient.unprotectedHeader\n            };\n            const { alg  } = joseHeader;\n            if (typeof alg !== \"string\" || !alg) {\n                throw new errors_js_1.JWEInvalid('JWE \"alg\" (Algorithm) Header Parameter missing or invalid');\n            }\n            if (alg === \"dir\" || alg === \"ECDH-ES\") {\n                throw new errors_js_1.JWEInvalid('\"dir\" and \"ECDH-ES\" alg may only be used with a single recipient');\n            }\n            if (typeof joseHeader.enc !== \"string\" || !joseHeader.enc) {\n                throw new errors_js_1.JWEInvalid('JWE \"enc\" (Encryption Algorithm) Header Parameter missing or invalid');\n            }\n            if (!enc) {\n                enc = joseHeader.enc;\n            } else if (enc !== joseHeader.enc) {\n                throw new errors_js_1.JWEInvalid('JWE \"enc\" (Encryption Algorithm) Header Parameter must be the same for all recipients');\n            }\n            (0, validate_crit_js_1.default)(errors_js_1.JWEInvalid, new Map(), recipient.options.crit, this._protectedHeader, joseHeader);\n            if (joseHeader.zip !== undefined) {\n                if (!this._protectedHeader || !this._protectedHeader.zip) {\n                    throw new errors_js_1.JWEInvalid('JWE \"zip\" (Compression Algorithm) Header MUST be integrity protected');\n                }\n            }\n        }\n        const cek = (0, cek_js_1.default)(enc);\n        let jwe = {\n            ciphertext: \"\",\n            iv: \"\",\n            recipients: [],\n            tag: \"\"\n        };\n        for(let i = 0; i < this._recipients.length; i++){\n            const recipient = this._recipients[i];\n            const target = {};\n            jwe.recipients.push(target);\n            const joseHeader = {\n                ...this._protectedHeader,\n                ...this._unprotectedHeader,\n                ...recipient.unprotectedHeader\n            };\n            const p2c = joseHeader.alg.startsWith(\"PBES2\") ? 2048 + i : undefined;\n            if (i === 0) {\n                const flattened = await new encrypt_js_1.FlattenedEncrypt(this._plaintext).setAdditionalAuthenticatedData(this._aad).setContentEncryptionKey(cek).setProtectedHeader(this._protectedHeader).setSharedUnprotectedHeader(this._unprotectedHeader).setUnprotectedHeader(recipient.unprotectedHeader).setKeyManagementParameters({\n                    p2c\n                }).encrypt(recipient.key, {\n                    ...recipient.options,\n                    ...options,\n                    [encrypt_js_1.unprotected]: true\n                });\n                jwe.ciphertext = flattened.ciphertext;\n                jwe.iv = flattened.iv;\n                jwe.tag = flattened.tag;\n                if (flattened.aad) jwe.aad = flattened.aad;\n                if (flattened.protected) jwe.protected = flattened.protected;\n                if (flattened.unprotected) jwe.unprotected = flattened.unprotected;\n                target.encrypted_key = flattened.encrypted_key;\n                if (flattened.header) target.header = flattened.header;\n                continue;\n            }\n            const { encryptedKey , parameters  } = await (0, encrypt_key_management_js_1.default)(((_a = recipient.unprotectedHeader) === null || _a === void 0 ? void 0 : _a.alg) || ((_b = this._protectedHeader) === null || _b === void 0 ? void 0 : _b.alg) || ((_c = this._unprotectedHeader) === null || _c === void 0 ? void 0 : _c.alg), enc, recipient.key, cek, {\n                p2c\n            });\n            target.encrypted_key = (0, base64url_js_1.encode)(encryptedKey);\n            if (recipient.unprotectedHeader || parameters) target.header = {\n                ...recipient.unprotectedHeader,\n                ...parameters\n            };\n        }\n        return jwe;\n    }\n}\nexports.GeneralEncrypt = GeneralEncrypt;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/jose/dist/node/cjs/jwe/general/encrypt.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/jose/dist/node/cjs/jwk/embedded.js":
/*!*********************************************************!*\
  !*** ./node_modules/jose/dist/node/cjs/jwk/embedded.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.EmbeddedJWK = void 0;\nconst import_js_1 = __webpack_require__(/*! ../key/import.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/key/import.js\");\nconst is_object_js_1 = __webpack_require__(/*! ../lib/is_object.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/lib/is_object.js\");\nconst errors_js_1 = __webpack_require__(/*! ../util/errors.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/util/errors.js\");\nasync function EmbeddedJWK(protectedHeader, token) {\n    const joseHeader = {\n        ...protectedHeader,\n        ...token === null || token === void 0 ? void 0 : token.header\n    };\n    if (!(0, is_object_js_1.default)(joseHeader.jwk)) {\n        throw new errors_js_1.JWSInvalid('\"jwk\" (JSON Web Key) Header Parameter must be a JSON object');\n    }\n    const key = await (0, import_js_1.importJWK)({\n        ...joseHeader.jwk,\n        ext: true\n    }, joseHeader.alg, true);\n    if (key instanceof Uint8Array || key.type !== \"public\") {\n        throw new errors_js_1.JWSInvalid('\"jwk\" (JSON Web Key) Header Parameter must be a public key');\n    }\n    return key;\n}\nexports.EmbeddedJWK = EmbeddedJWK;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvam9zZS9kaXN0L25vZGUvY2pzL2p3ay9lbWJlZGRlZC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFBRUcsT0FBTztBQUFLLENBQUMsRUFBQztBQUM3REQsbUJBQW1CRSxHQUFHLEtBQUs7QUFDM0IsTUFBTUMsY0FBY0MsbUJBQU9BLENBQUMscUZBQWtCO0FBQzlDLE1BQU1DLGlCQUFpQkQsbUJBQU9BLENBQUMsMkZBQXFCO0FBQ3BELE1BQU1FLGNBQWNGLG1CQUFPQSxDQUFDLHVGQUFtQjtBQUMvQyxlQUFlRixZQUFZSyxlQUFlLEVBQUVDLEtBQUs7SUFDN0MsTUFBTUMsYUFBYTtRQUNmLEdBQUdGLGVBQWU7UUFDbEIsR0FBR0MsVUFBVSxRQUFRQSxVQUFVLEtBQUssSUFBSSxLQUFLLElBQUlBLE1BQU1FLE1BQU07SUFDakU7SUFDQSxJQUFJLENBQUMsQ0FBQyxHQUFHTCxlQUFlTSxPQUFNLEVBQUdGLFdBQVdHLE1BQU07UUFDOUMsTUFBTSxJQUFJTixZQUFZTyxXQUFXO0lBQ3JDO0lBQ0EsTUFBTUMsTUFBTSxNQUFNLENBQUMsR0FBR1gsWUFBWVksU0FBUSxFQUFHO1FBQUUsR0FBR04sV0FBV0csR0FBRztRQUFFSSxLQUFLO0lBQUssR0FBR1AsV0FBV1EsS0FBSztJQUMvRixJQUFJSCxlQUFlSSxjQUFjSixJQUFJSyxTQUFTLFVBQVU7UUFDcEQsTUFBTSxJQUFJYixZQUFZTyxXQUFXO0lBQ3JDO0lBQ0EsT0FBT0M7QUFDWDtBQUNBZCxtQkFBbUJFLEdBQUdBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZnVsbHN0YWNrLXJvbGUtYmFzZWQtbmV4dGpzLTIvLi9ub2RlX21vZHVsZXMvam9zZS9kaXN0L25vZGUvY2pzL2p3ay9lbWJlZGRlZC5qcz8wNmE5Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5FbWJlZGRlZEpXSyA9IHZvaWQgMDtcbmNvbnN0IGltcG9ydF9qc18xID0gcmVxdWlyZShcIi4uL2tleS9pbXBvcnQuanNcIik7XG5jb25zdCBpc19vYmplY3RfanNfMSA9IHJlcXVpcmUoXCIuLi9saWIvaXNfb2JqZWN0LmpzXCIpO1xuY29uc3QgZXJyb3JzX2pzXzEgPSByZXF1aXJlKFwiLi4vdXRpbC9lcnJvcnMuanNcIik7XG5hc3luYyBmdW5jdGlvbiBFbWJlZGRlZEpXSyhwcm90ZWN0ZWRIZWFkZXIsIHRva2VuKSB7XG4gICAgY29uc3Qgam9zZUhlYWRlciA9IHtcbiAgICAgICAgLi4ucHJvdGVjdGVkSGVhZGVyLFxuICAgICAgICAuLi50b2tlbiA9PT0gbnVsbCB8fCB0b2tlbiA9PT0gdm9pZCAwID8gdm9pZCAwIDogdG9rZW4uaGVhZGVyLFxuICAgIH07XG4gICAgaWYgKCEoMCwgaXNfb2JqZWN0X2pzXzEuZGVmYXVsdCkoam9zZUhlYWRlci5qd2spKSB7XG4gICAgICAgIHRocm93IG5ldyBlcnJvcnNfanNfMS5KV1NJbnZhbGlkKCdcImp3a1wiIChKU09OIFdlYiBLZXkpIEhlYWRlciBQYXJhbWV0ZXIgbXVzdCBiZSBhIEpTT04gb2JqZWN0Jyk7XG4gICAgfVxuICAgIGNvbnN0IGtleSA9IGF3YWl0ICgwLCBpbXBvcnRfanNfMS5pbXBvcnRKV0spKHsgLi4uam9zZUhlYWRlci5qd2ssIGV4dDogdHJ1ZSB9LCBqb3NlSGVhZGVyLmFsZywgdHJ1ZSk7XG4gICAgaWYgKGtleSBpbnN0YW5jZW9mIFVpbnQ4QXJyYXkgfHwga2V5LnR5cGUgIT09ICdwdWJsaWMnKSB7XG4gICAgICAgIHRocm93IG5ldyBlcnJvcnNfanNfMS5KV1NJbnZhbGlkKCdcImp3a1wiIChKU09OIFdlYiBLZXkpIEhlYWRlciBQYXJhbWV0ZXIgbXVzdCBiZSBhIHB1YmxpYyBrZXknKTtcbiAgICB9XG4gICAgcmV0dXJuIGtleTtcbn1cbmV4cG9ydHMuRW1iZWRkZWRKV0sgPSBFbWJlZGRlZEpXSztcbiJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsIkVtYmVkZGVkSldLIiwiaW1wb3J0X2pzXzEiLCJyZXF1aXJlIiwiaXNfb2JqZWN0X2pzXzEiLCJlcnJvcnNfanNfMSIsInByb3RlY3RlZEhlYWRlciIsInRva2VuIiwiam9zZUhlYWRlciIsImhlYWRlciIsImRlZmF1bHQiLCJqd2siLCJKV1NJbnZhbGlkIiwia2V5IiwiaW1wb3J0SldLIiwiZXh0IiwiYWxnIiwiVWludDhBcnJheSIsInR5cGUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/jose/dist/node/cjs/jwk/embedded.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/jose/dist/node/cjs/jwk/thumbprint.js":
/*!***********************************************************!*\
  !*** ./node_modules/jose/dist/node/cjs/jwk/thumbprint.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.calculateJwkThumbprintUri = exports.calculateJwkThumbprint = void 0;\nconst digest_js_1 = __webpack_require__(/*! ../runtime/digest.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/runtime/digest.js\");\nconst base64url_js_1 = __webpack_require__(/*! ../runtime/base64url.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/runtime/base64url.js\");\nconst errors_js_1 = __webpack_require__(/*! ../util/errors.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/util/errors.js\");\nconst buffer_utils_js_1 = __webpack_require__(/*! ../lib/buffer_utils.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/lib/buffer_utils.js\");\nconst is_object_js_1 = __webpack_require__(/*! ../lib/is_object.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/lib/is_object.js\");\nconst check = (value, description)=>{\n    if (typeof value !== \"string\" || !value) {\n        throw new errors_js_1.JWKInvalid(`${description} missing or invalid`);\n    }\n};\nasync function calculateJwkThumbprint(jwk, digestAlgorithm) {\n    if (!(0, is_object_js_1.default)(jwk)) {\n        throw new TypeError(\"JWK must be an object\");\n    }\n    digestAlgorithm !== null && digestAlgorithm !== void 0 ? digestAlgorithm : digestAlgorithm = \"sha256\";\n    if (digestAlgorithm !== \"sha256\" && digestAlgorithm !== \"sha384\" && digestAlgorithm !== \"sha512\") {\n        throw new TypeError('digestAlgorithm must one of \"sha256\", \"sha384\", or \"sha512\"');\n    }\n    let components;\n    switch(jwk.kty){\n        case \"EC\":\n            check(jwk.crv, '\"crv\" (Curve) Parameter');\n            check(jwk.x, '\"x\" (X Coordinate) Parameter');\n            check(jwk.y, '\"y\" (Y Coordinate) Parameter');\n            components = {\n                crv: jwk.crv,\n                kty: jwk.kty,\n                x: jwk.x,\n                y: jwk.y\n            };\n            break;\n        case \"OKP\":\n            check(jwk.crv, '\"crv\" (Subtype of Key Pair) Parameter');\n            check(jwk.x, '\"x\" (Public Key) Parameter');\n            components = {\n                crv: jwk.crv,\n                kty: jwk.kty,\n                x: jwk.x\n            };\n            break;\n        case \"RSA\":\n            check(jwk.e, '\"e\" (Exponent) Parameter');\n            check(jwk.n, '\"n\" (Modulus) Parameter');\n            components = {\n                e: jwk.e,\n                kty: jwk.kty,\n                n: jwk.n\n            };\n            break;\n        case \"oct\":\n            check(jwk.k, '\"k\" (Key Value) Parameter');\n            components = {\n                k: jwk.k,\n                kty: jwk.kty\n            };\n            break;\n        default:\n            throw new errors_js_1.JOSENotSupported('\"kty\" (Key Type) Parameter missing or unsupported');\n    }\n    const data = buffer_utils_js_1.encoder.encode(JSON.stringify(components));\n    return (0, base64url_js_1.encode)(await (0, digest_js_1.default)(digestAlgorithm, data));\n}\nexports.calculateJwkThumbprint = calculateJwkThumbprint;\nasync function calculateJwkThumbprintUri(jwk, digestAlgorithm) {\n    digestAlgorithm !== null && digestAlgorithm !== void 0 ? digestAlgorithm : digestAlgorithm = \"sha256\";\n    const thumbprint = await calculateJwkThumbprint(jwk, digestAlgorithm);\n    return `urn:ietf:params:oauth:jwk-thumbprint:sha-${digestAlgorithm.slice(-3)}:${thumbprint}`;\n}\nexports.calculateJwkThumbprintUri = calculateJwkThumbprintUri;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvam9zZS9kaXN0L25vZGUvY2pzL2p3ay90aHVtYnByaW50LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2JBLDhDQUE2QztJQUFFRyxPQUFPO0FBQUssQ0FBQyxFQUFDO0FBQzdERCxpQ0FBaUNFLEdBQUdGLDhCQUE4QkcsR0FBRyxLQUFLO0FBQzFFLE1BQU1DLGNBQWNDLG1CQUFPQSxDQUFDLDZGQUFzQjtBQUNsRCxNQUFNQyxpQkFBaUJELG1CQUFPQSxDQUFDLG1HQUF5QjtBQUN4RCxNQUFNRSxjQUFjRixtQkFBT0EsQ0FBQyx1RkFBbUI7QUFDL0MsTUFBTUcsb0JBQW9CSCxtQkFBT0EsQ0FBQyxpR0FBd0I7QUFDMUQsTUFBTUksaUJBQWlCSixtQkFBT0EsQ0FBQywyRkFBcUI7QUFDcEQsTUFBTUssUUFBUSxDQUFDVCxPQUFPVTtJQUNsQixJQUFJLE9BQU9WLFVBQVUsWUFBWSxDQUFDQSxPQUFPO1FBQ3JDLE1BQU0sSUFBSU0sWUFBWUssV0FBVyxDQUFDLEVBQUVELFlBQVksbUJBQW1CLENBQUM7SUFDeEU7QUFDSjtBQUNBLGVBQWVSLHVCQUF1QlUsR0FBRyxFQUFFQyxlQUFlO0lBQ3RELElBQUksQ0FBQyxDQUFDLEdBQUdMLGVBQWVNLE9BQU0sRUFBR0YsTUFBTTtRQUNuQyxNQUFNLElBQUlHLFVBQVU7SUFDeEI7SUFDQUYsb0JBQW9CLFFBQVFBLG9CQUFvQixLQUFLLElBQUlBLGtCQUFtQkEsa0JBQWtCO0lBQzlGLElBQUlBLG9CQUFvQixZQUNwQkEsb0JBQW9CLFlBQ3BCQSxvQkFBb0IsVUFBVTtRQUM5QixNQUFNLElBQUlFLFVBQVU7SUFDeEI7SUFDQSxJQUFJQztJQUNKLE9BQVFKLElBQUlLO1FBQ1IsS0FBSztZQUNEUixNQUFNRyxJQUFJTSxLQUFLO1lBQ2ZULE1BQU1HLElBQUlPLEdBQUc7WUFDYlYsTUFBTUcsSUFBSVEsR0FBRztZQUNiSixhQUFhO2dCQUFFRSxLQUFLTixJQUFJTTtnQkFBS0QsS0FBS0wsSUFBSUs7Z0JBQUtFLEdBQUdQLElBQUlPO2dCQUFHQyxHQUFHUixJQUFJUTtZQUFFO1lBQzlEO1FBQ0osS0FBSztZQUNEWCxNQUFNRyxJQUFJTSxLQUFLO1lBQ2ZULE1BQU1HLElBQUlPLEdBQUc7WUFDYkgsYUFBYTtnQkFBRUUsS0FBS04sSUFBSU07Z0JBQUtELEtBQUtMLElBQUlLO2dCQUFLRSxHQUFHUCxJQUFJTztZQUFFO1lBQ3BEO1FBQ0osS0FBSztZQUNEVixNQUFNRyxJQUFJUyxHQUFHO1lBQ2JaLE1BQU1HLElBQUlVLEdBQUc7WUFDYk4sYUFBYTtnQkFBRUssR0FBR1QsSUFBSVM7Z0JBQUdKLEtBQUtMLElBQUlLO2dCQUFLSyxHQUFHVixJQUFJVTtZQUFFO1lBQ2hEO1FBQ0osS0FBSztZQUNEYixNQUFNRyxJQUFJVyxHQUFHO1lBQ2JQLGFBQWE7Z0JBQUVPLEdBQUdYLElBQUlXO2dCQUFHTixLQUFLTCxJQUFJSztZQUFJO1lBQ3RDO1FBQ0o7WUFDSSxNQUFNLElBQUlYLFlBQVlrQixpQkFBaUI7SUFDL0M7SUFDQSxNQUFNQyxPQUFPbEIsa0JBQWtCbUIsUUFBUUMsT0FBT0MsS0FBS0MsVUFBVWI7SUFDN0QsT0FBTyxDQUFDLEdBQUdYLGVBQWVzQixNQUFLLEVBQUcsTUFBTSxDQUFDLEdBQUd4QixZQUFZVyxPQUFNLEVBQUdELGlCQUFpQlk7QUFDdEY7QUFDQTFCLDhCQUE4QkcsR0FBR0E7QUFDakMsZUFBZUQsMEJBQTBCVyxHQUFHLEVBQUVDLGVBQWU7SUFDekRBLG9CQUFvQixRQUFRQSxvQkFBb0IsS0FBSyxJQUFJQSxrQkFBbUJBLGtCQUFrQjtJQUM5RixNQUFNaUIsYUFBYSxNQUFNNUIsdUJBQXVCVSxLQUFLQztJQUNyRCxPQUFPLENBQUMseUNBQXlDLEVBQUVBLGdCQUFnQmtCLE1BQU0sQ0FBQyxHQUFHLENBQUMsRUFBRUQsV0FBVyxDQUFDO0FBQ2hHO0FBQ0EvQixpQ0FBaUNFLEdBQUdBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZnVsbHN0YWNrLXJvbGUtYmFzZWQtbmV4dGpzLTIvLi9ub2RlX21vZHVsZXMvam9zZS9kaXN0L25vZGUvY2pzL2p3ay90aHVtYnByaW50LmpzP2U0NDEiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmNhbGN1bGF0ZUp3a1RodW1icHJpbnRVcmkgPSBleHBvcnRzLmNhbGN1bGF0ZUp3a1RodW1icHJpbnQgPSB2b2lkIDA7XG5jb25zdCBkaWdlc3RfanNfMSA9IHJlcXVpcmUoXCIuLi9ydW50aW1lL2RpZ2VzdC5qc1wiKTtcbmNvbnN0IGJhc2U2NHVybF9qc18xID0gcmVxdWlyZShcIi4uL3J1bnRpbWUvYmFzZTY0dXJsLmpzXCIpO1xuY29uc3QgZXJyb3JzX2pzXzEgPSByZXF1aXJlKFwiLi4vdXRpbC9lcnJvcnMuanNcIik7XG5jb25zdCBidWZmZXJfdXRpbHNfanNfMSA9IHJlcXVpcmUoXCIuLi9saWIvYnVmZmVyX3V0aWxzLmpzXCIpO1xuY29uc3QgaXNfb2JqZWN0X2pzXzEgPSByZXF1aXJlKFwiLi4vbGliL2lzX29iamVjdC5qc1wiKTtcbmNvbnN0IGNoZWNrID0gKHZhbHVlLCBkZXNjcmlwdGlvbikgPT4ge1xuICAgIGlmICh0eXBlb2YgdmFsdWUgIT09ICdzdHJpbmcnIHx8ICF2YWx1ZSkge1xuICAgICAgICB0aHJvdyBuZXcgZXJyb3JzX2pzXzEuSldLSW52YWxpZChgJHtkZXNjcmlwdGlvbn0gbWlzc2luZyBvciBpbnZhbGlkYCk7XG4gICAgfVxufTtcbmFzeW5jIGZ1bmN0aW9uIGNhbGN1bGF0ZUp3a1RodW1icHJpbnQoandrLCBkaWdlc3RBbGdvcml0aG0pIHtcbiAgICBpZiAoISgwLCBpc19vYmplY3RfanNfMS5kZWZhdWx0KShqd2spKSB7XG4gICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ0pXSyBtdXN0IGJlIGFuIG9iamVjdCcpO1xuICAgIH1cbiAgICBkaWdlc3RBbGdvcml0aG0gIT09IG51bGwgJiYgZGlnZXN0QWxnb3JpdGhtICE9PSB2b2lkIDAgPyBkaWdlc3RBbGdvcml0aG0gOiAoZGlnZXN0QWxnb3JpdGhtID0gJ3NoYTI1NicpO1xuICAgIGlmIChkaWdlc3RBbGdvcml0aG0gIT09ICdzaGEyNTYnICYmXG4gICAgICAgIGRpZ2VzdEFsZ29yaXRobSAhPT0gJ3NoYTM4NCcgJiZcbiAgICAgICAgZGlnZXN0QWxnb3JpdGhtICE9PSAnc2hhNTEyJykge1xuICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdkaWdlc3RBbGdvcml0aG0gbXVzdCBvbmUgb2YgXCJzaGEyNTZcIiwgXCJzaGEzODRcIiwgb3IgXCJzaGE1MTJcIicpO1xuICAgIH1cbiAgICBsZXQgY29tcG9uZW50cztcbiAgICBzd2l0Y2ggKGp3ay5rdHkpIHtcbiAgICAgICAgY2FzZSAnRUMnOlxuICAgICAgICAgICAgY2hlY2soandrLmNydiwgJ1wiY3J2XCIgKEN1cnZlKSBQYXJhbWV0ZXInKTtcbiAgICAgICAgICAgIGNoZWNrKGp3ay54LCAnXCJ4XCIgKFggQ29vcmRpbmF0ZSkgUGFyYW1ldGVyJyk7XG4gICAgICAgICAgICBjaGVjayhqd2sueSwgJ1wieVwiIChZIENvb3JkaW5hdGUpIFBhcmFtZXRlcicpO1xuICAgICAgICAgICAgY29tcG9uZW50cyA9IHsgY3J2OiBqd2suY3J2LCBrdHk6IGp3ay5rdHksIHg6IGp3ay54LCB5OiBqd2sueSB9O1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgIGNhc2UgJ09LUCc6XG4gICAgICAgICAgICBjaGVjayhqd2suY3J2LCAnXCJjcnZcIiAoU3VidHlwZSBvZiBLZXkgUGFpcikgUGFyYW1ldGVyJyk7XG4gICAgICAgICAgICBjaGVjayhqd2sueCwgJ1wieFwiIChQdWJsaWMgS2V5KSBQYXJhbWV0ZXInKTtcbiAgICAgICAgICAgIGNvbXBvbmVudHMgPSB7IGNydjogandrLmNydiwga3R5OiBqd2sua3R5LCB4OiBqd2sueCB9O1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgIGNhc2UgJ1JTQSc6XG4gICAgICAgICAgICBjaGVjayhqd2suZSwgJ1wiZVwiIChFeHBvbmVudCkgUGFyYW1ldGVyJyk7XG4gICAgICAgICAgICBjaGVjayhqd2subiwgJ1wiblwiIChNb2R1bHVzKSBQYXJhbWV0ZXInKTtcbiAgICAgICAgICAgIGNvbXBvbmVudHMgPSB7IGU6IGp3ay5lLCBrdHk6IGp3ay5rdHksIG46IGp3ay5uIH07XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgY2FzZSAnb2N0JzpcbiAgICAgICAgICAgIGNoZWNrKGp3ay5rLCAnXCJrXCIgKEtleSBWYWx1ZSkgUGFyYW1ldGVyJyk7XG4gICAgICAgICAgICBjb21wb25lbnRzID0geyBrOiBqd2suaywga3R5OiBqd2sua3R5IH07XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgIHRocm93IG5ldyBlcnJvcnNfanNfMS5KT1NFTm90U3VwcG9ydGVkKCdcImt0eVwiIChLZXkgVHlwZSkgUGFyYW1ldGVyIG1pc3Npbmcgb3IgdW5zdXBwb3J0ZWQnKTtcbiAgICB9XG4gICAgY29uc3QgZGF0YSA9IGJ1ZmZlcl91dGlsc19qc18xLmVuY29kZXIuZW5jb2RlKEpTT04uc3RyaW5naWZ5KGNvbXBvbmVudHMpKTtcbiAgICByZXR1cm4gKDAsIGJhc2U2NHVybF9qc18xLmVuY29kZSkoYXdhaXQgKDAsIGRpZ2VzdF9qc18xLmRlZmF1bHQpKGRpZ2VzdEFsZ29yaXRobSwgZGF0YSkpO1xufVxuZXhwb3J0cy5jYWxjdWxhdGVKd2tUaHVtYnByaW50ID0gY2FsY3VsYXRlSndrVGh1bWJwcmludDtcbmFzeW5jIGZ1bmN0aW9uIGNhbGN1bGF0ZUp3a1RodW1icHJpbnRVcmkoandrLCBkaWdlc3RBbGdvcml0aG0pIHtcbiAgICBkaWdlc3RBbGdvcml0aG0gIT09IG51bGwgJiYgZGlnZXN0QWxnb3JpdGhtICE9PSB2b2lkIDAgPyBkaWdlc3RBbGdvcml0aG0gOiAoZGlnZXN0QWxnb3JpdGhtID0gJ3NoYTI1NicpO1xuICAgIGNvbnN0IHRodW1icHJpbnQgPSBhd2FpdCBjYWxjdWxhdGVKd2tUaHVtYnByaW50KGp3aywgZGlnZXN0QWxnb3JpdGhtKTtcbiAgICByZXR1cm4gYHVybjppZXRmOnBhcmFtczpvYXV0aDpqd2stdGh1bWJwcmludDpzaGEtJHtkaWdlc3RBbGdvcml0aG0uc2xpY2UoLTMpfToke3RodW1icHJpbnR9YDtcbn1cbmV4cG9ydHMuY2FsY3VsYXRlSndrVGh1bWJwcmludFVyaSA9IGNhbGN1bGF0ZUp3a1RodW1icHJpbnRVcmk7XG4iXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJjYWxjdWxhdGVKd2tUaHVtYnByaW50VXJpIiwiY2FsY3VsYXRlSndrVGh1bWJwcmludCIsImRpZ2VzdF9qc18xIiwicmVxdWlyZSIsImJhc2U2NHVybF9qc18xIiwiZXJyb3JzX2pzXzEiLCJidWZmZXJfdXRpbHNfanNfMSIsImlzX29iamVjdF9qc18xIiwiY2hlY2siLCJkZXNjcmlwdGlvbiIsIkpXS0ludmFsaWQiLCJqd2siLCJkaWdlc3RBbGdvcml0aG0iLCJkZWZhdWx0IiwiVHlwZUVycm9yIiwiY29tcG9uZW50cyIsImt0eSIsImNydiIsIngiLCJ5IiwiZSIsIm4iLCJrIiwiSk9TRU5vdFN1cHBvcnRlZCIsImRhdGEiLCJlbmNvZGVyIiwiZW5jb2RlIiwiSlNPTiIsInN0cmluZ2lmeSIsInRodW1icHJpbnQiLCJzbGljZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/jose/dist/node/cjs/jwk/thumbprint.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/jose/dist/node/cjs/jwks/local.js":
/*!*******************************************************!*\
  !*** ./node_modules/jose/dist/node/cjs/jwks/local.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.createLocalJWKSet = exports.LocalJWKSet = exports.isJWKSLike = void 0;\nconst import_js_1 = __webpack_require__(/*! ../key/import.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/key/import.js\");\nconst errors_js_1 = __webpack_require__(/*! ../util/errors.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/util/errors.js\");\nconst is_object_js_1 = __webpack_require__(/*! ../lib/is_object.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/lib/is_object.js\");\nfunction getKtyFromAlg(alg) {\n    switch(typeof alg === \"string\" && alg.slice(0, 2)){\n        case \"RS\":\n        case \"PS\":\n            return \"RSA\";\n        case \"ES\":\n            return \"EC\";\n        case \"Ed\":\n            return \"OKP\";\n        default:\n            throw new errors_js_1.JOSENotSupported('Unsupported \"alg\" value for a JSON Web Key Set');\n    }\n}\nfunction isJWKSLike(jwks) {\n    return jwks && typeof jwks === \"object\" && Array.isArray(jwks.keys) && jwks.keys.every(isJWKLike);\n}\nexports.isJWKSLike = isJWKSLike;\nfunction isJWKLike(key) {\n    return (0, is_object_js_1.default)(key);\n}\nfunction clone(obj) {\n    if (typeof structuredClone === \"function\") {\n        return structuredClone(obj);\n    }\n    return JSON.parse(JSON.stringify(obj));\n}\nclass LocalJWKSet {\n    constructor(jwks){\n        this._cached = new WeakMap();\n        if (!isJWKSLike(jwks)) {\n            throw new errors_js_1.JWKSInvalid(\"JSON Web Key Set malformed\");\n        }\n        this._jwks = clone(jwks);\n    }\n    async getKey(protectedHeader, token) {\n        const { alg , kid  } = {\n            ...protectedHeader,\n            ...token === null || token === void 0 ? void 0 : token.header\n        };\n        const kty = getKtyFromAlg(alg);\n        const candidates = this._jwks.keys.filter((jwk)=>{\n            let candidate = kty === jwk.kty;\n            if (candidate && typeof kid === \"string\") {\n                candidate = kid === jwk.kid;\n            }\n            if (candidate && typeof jwk.alg === \"string\") {\n                candidate = alg === jwk.alg;\n            }\n            if (candidate && typeof jwk.use === \"string\") {\n                candidate = jwk.use === \"sig\";\n            }\n            if (candidate && Array.isArray(jwk.key_ops)) {\n                candidate = jwk.key_ops.includes(\"verify\");\n            }\n            if (candidate && alg === \"EdDSA\") {\n                candidate = jwk.crv === \"Ed25519\" || jwk.crv === \"Ed448\";\n            }\n            if (candidate) {\n                switch(alg){\n                    case \"ES256\":\n                        candidate = jwk.crv === \"P-256\";\n                        break;\n                    case \"ES256K\":\n                        candidate = jwk.crv === \"secp256k1\";\n                        break;\n                    case \"ES384\":\n                        candidate = jwk.crv === \"P-384\";\n                        break;\n                    case \"ES512\":\n                        candidate = jwk.crv === \"P-521\";\n                        break;\n                }\n            }\n            return candidate;\n        });\n        const { 0: jwk , length  } = candidates;\n        if (length === 0) {\n            throw new errors_js_1.JWKSNoMatchingKey();\n        } else if (length !== 1) {\n            const error = new errors_js_1.JWKSMultipleMatchingKeys();\n            const { _cached  } = this;\n            error[Symbol.asyncIterator] = async function*() {\n                for (const jwk of candidates){\n                    try {\n                        yield await importWithAlgCache(_cached, jwk, alg);\n                    } catch  {\n                        continue;\n                    }\n                }\n            };\n            throw error;\n        }\n        return importWithAlgCache(this._cached, jwk, alg);\n    }\n}\nexports.LocalJWKSet = LocalJWKSet;\nasync function importWithAlgCache(cache, jwk, alg) {\n    const cached = cache.get(jwk) || cache.set(jwk, {}).get(jwk);\n    if (cached[alg] === undefined) {\n        const key = await (0, import_js_1.importJWK)({\n            ...jwk,\n            ext: true\n        }, alg);\n        if (key instanceof Uint8Array || key.type !== \"public\") {\n            throw new errors_js_1.JWKSInvalid(\"JSON Web Key Set members must be public keys\");\n        }\n        cached[alg] = key;\n    }\n    return cached[alg];\n}\nfunction createLocalJWKSet(jwks) {\n    const set = new LocalJWKSet(jwks);\n    return async function(protectedHeader, token) {\n        return set.getKey(protectedHeader, token);\n    };\n}\nexports.createLocalJWKSet = createLocalJWKSet;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/jose/dist/node/cjs/jwks/local.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/jose/dist/node/cjs/jwks/remote.js":
/*!********************************************************!*\
  !*** ./node_modules/jose/dist/node/cjs/jwks/remote.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.createRemoteJWKSet = void 0;\nconst fetch_jwks_js_1 = __webpack_require__(/*! ../runtime/fetch_jwks.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/runtime/fetch_jwks.js\");\nconst errors_js_1 = __webpack_require__(/*! ../util/errors.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/util/errors.js\");\nconst local_js_1 = __webpack_require__(/*! ./local.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/jwks/local.js\");\nfunction isCloudflareWorkers() {\n    return typeof WebSocketPair !== \"undefined\" || typeof navigator !== \"undefined\" && navigator.userAgent === \"Cloudflare-Workers\" || typeof EdgeRuntime !== \"undefined\" && EdgeRuntime === \"vercel\";\n}\nclass RemoteJWKSet extends local_js_1.LocalJWKSet {\n    constructor(url, options){\n        super({\n            keys: []\n        });\n        this._jwks = undefined;\n        if (!(url instanceof URL)) {\n            throw new TypeError(\"url must be an instance of URL\");\n        }\n        this._url = new URL(url.href);\n        this._options = {\n            agent: options === null || options === void 0 ? void 0 : options.agent,\n            headers: options === null || options === void 0 ? void 0 : options.headers\n        };\n        this._timeoutDuration = typeof (options === null || options === void 0 ? void 0 : options.timeoutDuration) === \"number\" ? options === null || options === void 0 ? void 0 : options.timeoutDuration : 5000;\n        this._cooldownDuration = typeof (options === null || options === void 0 ? void 0 : options.cooldownDuration) === \"number\" ? options === null || options === void 0 ? void 0 : options.cooldownDuration : 30000;\n        this._cacheMaxAge = typeof (options === null || options === void 0 ? void 0 : options.cacheMaxAge) === \"number\" ? options === null || options === void 0 ? void 0 : options.cacheMaxAge : 600000;\n    }\n    coolingDown() {\n        return typeof this._jwksTimestamp === \"number\" ? Date.now() < this._jwksTimestamp + this._cooldownDuration : false;\n    }\n    fresh() {\n        return typeof this._jwksTimestamp === \"number\" ? Date.now() < this._jwksTimestamp + this._cacheMaxAge : false;\n    }\n    async getKey(protectedHeader, token) {\n        if (!this._jwks || !this.fresh()) {\n            await this.reload();\n        }\n        try {\n            return await super.getKey(protectedHeader, token);\n        } catch (err) {\n            if (err instanceof errors_js_1.JWKSNoMatchingKey) {\n                if (this.coolingDown() === false) {\n                    await this.reload();\n                    return super.getKey(protectedHeader, token);\n                }\n            }\n            throw err;\n        }\n    }\n    async reload() {\n        if (this._pendingFetch && isCloudflareWorkers()) {\n            this._pendingFetch = undefined;\n        }\n        this._pendingFetch || (this._pendingFetch = (0, fetch_jwks_js_1.default)(this._url, this._timeoutDuration, this._options).then((json)=>{\n            if (!(0, local_js_1.isJWKSLike)(json)) {\n                throw new errors_js_1.JWKSInvalid(\"JSON Web Key Set malformed\");\n            }\n            this._jwks = {\n                keys: json.keys\n            };\n            this._jwksTimestamp = Date.now();\n            this._pendingFetch = undefined;\n        }).catch((err)=>{\n            this._pendingFetch = undefined;\n            throw err;\n        }));\n        await this._pendingFetch;\n    }\n}\nfunction createRemoteJWKSet(url, options) {\n    const set = new RemoteJWKSet(url, options);\n    return async function(protectedHeader, token) {\n        return set.getKey(protectedHeader, token);\n    };\n}\nexports.createRemoteJWKSet = createRemoteJWKSet;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/jose/dist/node/cjs/jwks/remote.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/jose/dist/node/cjs/jws/compact/sign.js":
/*!*************************************************************!*\
  !*** ./node_modules/jose/dist/node/cjs/jws/compact/sign.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.CompactSign = void 0;\nconst sign_js_1 = __webpack_require__(/*! ../flattened/sign.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/jws/flattened/sign.js\");\nclass CompactSign {\n    constructor(payload){\n        this._flattened = new sign_js_1.FlattenedSign(payload);\n    }\n    setProtectedHeader(protectedHeader) {\n        this._flattened.setProtectedHeader(protectedHeader);\n        return this;\n    }\n    async sign(key, options) {\n        const jws = await this._flattened.sign(key, options);\n        if (jws.payload === undefined) {\n            throw new TypeError(\"use the flattened module for creating JWS with b64: false\");\n        }\n        return `${jws.protected}.${jws.payload}.${jws.signature}`;\n    }\n}\nexports.CompactSign = CompactSign;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvam9zZS9kaXN0L25vZGUvY2pzL2p3cy9jb21wYWN0L3NpZ24uanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYkEsOENBQTZDO0lBQUVHLE9BQU87QUFBSyxDQUFDLEVBQUM7QUFDN0RELG1CQUFtQkUsR0FBRyxLQUFLO0FBQzNCLE1BQU1DLFlBQVlDLG1CQUFPQSxDQUFDLGlHQUFzQjtBQUNoRCxNQUFNRjtJQUNGRyxZQUFZQyxPQUFPLENBQUU7UUFDakIsSUFBSSxDQUFDQyxhQUFhLElBQUlKLFVBQVVLLGNBQWNGO0lBQ2xEO0lBQ0FHLG1CQUFtQkMsZUFBZSxFQUFFO1FBQ2hDLElBQUksQ0FBQ0gsV0FBV0UsbUJBQW1CQztRQUNuQyxPQUFPLElBQUk7SUFDZjtJQUNBLE1BQU1DLEtBQUtDLEdBQUcsRUFBRUMsT0FBTyxFQUFFO1FBQ3JCLE1BQU1DLE1BQU0sTUFBTSxJQUFJLENBQUNQLFdBQVdJLEtBQUtDLEtBQUtDO1FBQzVDLElBQUlDLElBQUlSLFlBQVlTLFdBQVc7WUFDM0IsTUFBTSxJQUFJQyxVQUFVO1FBQ3hCO1FBQ0EsT0FBTyxDQUFDLEVBQUVGLElBQUlHLFVBQVUsQ0FBQyxFQUFFSCxJQUFJUixRQUFRLENBQUMsRUFBRVEsSUFBSUksVUFBVSxDQUFDO0lBQzdEO0FBQ0o7QUFDQWxCLG1CQUFtQkUsR0FBR0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mdWxsc3RhY2stcm9sZS1iYXNlZC1uZXh0anMtMi8uL25vZGVfbW9kdWxlcy9qb3NlL2Rpc3Qvbm9kZS9janMvandzL2NvbXBhY3Qvc2lnbi5qcz9hZTU5Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5Db21wYWN0U2lnbiA9IHZvaWQgMDtcbmNvbnN0IHNpZ25fanNfMSA9IHJlcXVpcmUoXCIuLi9mbGF0dGVuZWQvc2lnbi5qc1wiKTtcbmNsYXNzIENvbXBhY3RTaWduIHtcbiAgICBjb25zdHJ1Y3RvcihwYXlsb2FkKSB7XG4gICAgICAgIHRoaXMuX2ZsYXR0ZW5lZCA9IG5ldyBzaWduX2pzXzEuRmxhdHRlbmVkU2lnbihwYXlsb2FkKTtcbiAgICB9XG4gICAgc2V0UHJvdGVjdGVkSGVhZGVyKHByb3RlY3RlZEhlYWRlcikge1xuICAgICAgICB0aGlzLl9mbGF0dGVuZWQuc2V0UHJvdGVjdGVkSGVhZGVyKHByb3RlY3RlZEhlYWRlcik7XG4gICAgICAgIHJldHVybiB0aGlzO1xuICAgIH1cbiAgICBhc3luYyBzaWduKGtleSwgb3B0aW9ucykge1xuICAgICAgICBjb25zdCBqd3MgPSBhd2FpdCB0aGlzLl9mbGF0dGVuZWQuc2lnbihrZXksIG9wdGlvbnMpO1xuICAgICAgICBpZiAoandzLnBheWxvYWQgPT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcigndXNlIHRoZSBmbGF0dGVuZWQgbW9kdWxlIGZvciBjcmVhdGluZyBKV1Mgd2l0aCBiNjQ6IGZhbHNlJyk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGAke2p3cy5wcm90ZWN0ZWR9LiR7andzLnBheWxvYWR9LiR7andzLnNpZ25hdHVyZX1gO1xuICAgIH1cbn1cbmV4cG9ydHMuQ29tcGFjdFNpZ24gPSBDb21wYWN0U2lnbjtcbiJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsIkNvbXBhY3RTaWduIiwic2lnbl9qc18xIiwicmVxdWlyZSIsImNvbnN0cnVjdG9yIiwicGF5bG9hZCIsIl9mbGF0dGVuZWQiLCJGbGF0dGVuZWRTaWduIiwic2V0UHJvdGVjdGVkSGVhZGVyIiwicHJvdGVjdGVkSGVhZGVyIiwic2lnbiIsImtleSIsIm9wdGlvbnMiLCJqd3MiLCJ1bmRlZmluZWQiLCJUeXBlRXJyb3IiLCJwcm90ZWN0ZWQiLCJzaWduYXR1cmUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/jose/dist/node/cjs/jws/compact/sign.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/jose/dist/node/cjs/jws/compact/verify.js":
/*!***************************************************************!*\
  !*** ./node_modules/jose/dist/node/cjs/jws/compact/verify.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.compactVerify = void 0;\nconst verify_js_1 = __webpack_require__(/*! ../flattened/verify.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/jws/flattened/verify.js\");\nconst errors_js_1 = __webpack_require__(/*! ../../util/errors.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/util/errors.js\");\nconst buffer_utils_js_1 = __webpack_require__(/*! ../../lib/buffer_utils.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/lib/buffer_utils.js\");\nasync function compactVerify(jws, key, options) {\n    if (jws instanceof Uint8Array) {\n        jws = buffer_utils_js_1.decoder.decode(jws);\n    }\n    if (typeof jws !== \"string\") {\n        throw new errors_js_1.JWSInvalid(\"Compact JWS must be a string or Uint8Array\");\n    }\n    const { 0: protectedHeader , 1: payload , 2: signature , length  } = jws.split(\".\");\n    if (length !== 3) {\n        throw new errors_js_1.JWSInvalid(\"Invalid Compact JWS\");\n    }\n    const verified = await (0, verify_js_1.flattenedVerify)({\n        payload,\n        protected: protectedHeader,\n        signature\n    }, key, options);\n    const result = {\n        payload: verified.payload,\n        protectedHeader: verified.protectedHeader\n    };\n    if (typeof key === \"function\") {\n        return {\n            ...result,\n            key: verified.key\n        };\n    }\n    return result;\n}\nexports.compactVerify = compactVerify;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvam9zZS9kaXN0L25vZGUvY2pzL2p3cy9jb21wYWN0L3ZlcmlmeS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFBRUcsT0FBTztBQUFLLENBQUMsRUFBQztBQUM3REQscUJBQXFCRSxHQUFHLEtBQUs7QUFDN0IsTUFBTUMsY0FBY0MsbUJBQU9BLENBQUMscUdBQXdCO0FBQ3BELE1BQU1DLGNBQWNELG1CQUFPQSxDQUFDLDBGQUFzQjtBQUNsRCxNQUFNRSxvQkFBb0JGLG1CQUFPQSxDQUFDLG9HQUEyQjtBQUM3RCxlQUFlRixjQUFjSyxHQUFHLEVBQUVDLEdBQUcsRUFBRUMsT0FBTztJQUMxQyxJQUFJRixlQUFlRyxZQUFZO1FBQzNCSCxNQUFNRCxrQkFBa0JLLFFBQVFDLE9BQU9MO0lBQzNDO0lBQ0EsSUFBSSxPQUFPQSxRQUFRLFVBQVU7UUFDekIsTUFBTSxJQUFJRixZQUFZUSxXQUFXO0lBQ3JDO0lBQ0EsTUFBTSxFQUFFLEdBQUdDLGdCQUFlLEVBQUUsR0FBR0MsUUFBTyxFQUFFLEdBQUdDLFVBQVMsRUFBRUMsT0FBTSxFQUFFLEdBQUdWLElBQUlXLE1BQU07SUFDM0UsSUFBSUQsV0FBVyxHQUFHO1FBQ2QsTUFBTSxJQUFJWixZQUFZUSxXQUFXO0lBQ3JDO0lBQ0EsTUFBTU0sV0FBVyxNQUFNLENBQUMsR0FBR2hCLFlBQVlpQixlQUFjLEVBQUc7UUFBRUw7UUFBU00sV0FBV1A7UUFBaUJFO0lBQVUsR0FBR1IsS0FBS0M7SUFDakgsTUFBTWEsU0FBUztRQUFFUCxTQUFTSSxTQUFTSjtRQUFTRCxpQkFBaUJLLFNBQVNMO0lBQWdCO0lBQ3RGLElBQUksT0FBT04sUUFBUSxZQUFZO1FBQzNCLE9BQU87WUFBRSxHQUFHYyxNQUFNO1lBQUVkLEtBQUtXLFNBQVNYO1FBQUk7SUFDMUM7SUFDQSxPQUFPYztBQUNYO0FBQ0F0QixxQkFBcUJFLEdBQUdBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZnVsbHN0YWNrLXJvbGUtYmFzZWQtbmV4dGpzLTIvLi9ub2RlX21vZHVsZXMvam9zZS9kaXN0L25vZGUvY2pzL2p3cy9jb21wYWN0L3ZlcmlmeS5qcz82ZDlhIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5jb21wYWN0VmVyaWZ5ID0gdm9pZCAwO1xuY29uc3QgdmVyaWZ5X2pzXzEgPSByZXF1aXJlKFwiLi4vZmxhdHRlbmVkL3ZlcmlmeS5qc1wiKTtcbmNvbnN0IGVycm9yc19qc18xID0gcmVxdWlyZShcIi4uLy4uL3V0aWwvZXJyb3JzLmpzXCIpO1xuY29uc3QgYnVmZmVyX3V0aWxzX2pzXzEgPSByZXF1aXJlKFwiLi4vLi4vbGliL2J1ZmZlcl91dGlscy5qc1wiKTtcbmFzeW5jIGZ1bmN0aW9uIGNvbXBhY3RWZXJpZnkoandzLCBrZXksIG9wdGlvbnMpIHtcbiAgICBpZiAoandzIGluc3RhbmNlb2YgVWludDhBcnJheSkge1xuICAgICAgICBqd3MgPSBidWZmZXJfdXRpbHNfanNfMS5kZWNvZGVyLmRlY29kZShqd3MpO1xuICAgIH1cbiAgICBpZiAodHlwZW9mIGp3cyAhPT0gJ3N0cmluZycpIHtcbiAgICAgICAgdGhyb3cgbmV3IGVycm9yc19qc18xLkpXU0ludmFsaWQoJ0NvbXBhY3QgSldTIG11c3QgYmUgYSBzdHJpbmcgb3IgVWludDhBcnJheScpO1xuICAgIH1cbiAgICBjb25zdCB7IDA6IHByb3RlY3RlZEhlYWRlciwgMTogcGF5bG9hZCwgMjogc2lnbmF0dXJlLCBsZW5ndGggfSA9IGp3cy5zcGxpdCgnLicpO1xuICAgIGlmIChsZW5ndGggIT09IDMpIHtcbiAgICAgICAgdGhyb3cgbmV3IGVycm9yc19qc18xLkpXU0ludmFsaWQoJ0ludmFsaWQgQ29tcGFjdCBKV1MnKTtcbiAgICB9XG4gICAgY29uc3QgdmVyaWZpZWQgPSBhd2FpdCAoMCwgdmVyaWZ5X2pzXzEuZmxhdHRlbmVkVmVyaWZ5KSh7IHBheWxvYWQsIHByb3RlY3RlZDogcHJvdGVjdGVkSGVhZGVyLCBzaWduYXR1cmUgfSwga2V5LCBvcHRpb25zKTtcbiAgICBjb25zdCByZXN1bHQgPSB7IHBheWxvYWQ6IHZlcmlmaWVkLnBheWxvYWQsIHByb3RlY3RlZEhlYWRlcjogdmVyaWZpZWQucHJvdGVjdGVkSGVhZGVyIH07XG4gICAgaWYgKHR5cGVvZiBrZXkgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgcmV0dXJuIHsgLi4ucmVzdWx0LCBrZXk6IHZlcmlmaWVkLmtleSB9O1xuICAgIH1cbiAgICByZXR1cm4gcmVzdWx0O1xufVxuZXhwb3J0cy5jb21wYWN0VmVyaWZ5ID0gY29tcGFjdFZlcmlmeTtcbiJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsImNvbXBhY3RWZXJpZnkiLCJ2ZXJpZnlfanNfMSIsInJlcXVpcmUiLCJlcnJvcnNfanNfMSIsImJ1ZmZlcl91dGlsc19qc18xIiwiandzIiwia2V5Iiwib3B0aW9ucyIsIlVpbnQ4QXJyYXkiLCJkZWNvZGVyIiwiZGVjb2RlIiwiSldTSW52YWxpZCIsInByb3RlY3RlZEhlYWRlciIsInBheWxvYWQiLCJzaWduYXR1cmUiLCJsZW5ndGgiLCJzcGxpdCIsInZlcmlmaWVkIiwiZmxhdHRlbmVkVmVyaWZ5IiwicHJvdGVjdGVkIiwicmVzdWx0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/jose/dist/node/cjs/jws/compact/verify.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/jose/dist/node/cjs/jws/flattened/sign.js":
/*!***************************************************************!*\
  !*** ./node_modules/jose/dist/node/cjs/jws/flattened/sign.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.FlattenedSign = void 0;\nconst base64url_js_1 = __webpack_require__(/*! ../../runtime/base64url.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/runtime/base64url.js\");\nconst sign_js_1 = __webpack_require__(/*! ../../runtime/sign.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/runtime/sign.js\");\nconst is_disjoint_js_1 = __webpack_require__(/*! ../../lib/is_disjoint.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/lib/is_disjoint.js\");\nconst errors_js_1 = __webpack_require__(/*! ../../util/errors.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/util/errors.js\");\nconst buffer_utils_js_1 = __webpack_require__(/*! ../../lib/buffer_utils.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/lib/buffer_utils.js\");\nconst check_key_type_js_1 = __webpack_require__(/*! ../../lib/check_key_type.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/lib/check_key_type.js\");\nconst validate_crit_js_1 = __webpack_require__(/*! ../../lib/validate_crit.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/lib/validate_crit.js\");\nclass FlattenedSign {\n    constructor(payload){\n        if (!(payload instanceof Uint8Array)) {\n            throw new TypeError(\"payload must be an instance of Uint8Array\");\n        }\n        this._payload = payload;\n    }\n    setProtectedHeader(protectedHeader) {\n        if (this._protectedHeader) {\n            throw new TypeError(\"setProtectedHeader can only be called once\");\n        }\n        this._protectedHeader = protectedHeader;\n        return this;\n    }\n    setUnprotectedHeader(unprotectedHeader) {\n        if (this._unprotectedHeader) {\n            throw new TypeError(\"setUnprotectedHeader can only be called once\");\n        }\n        this._unprotectedHeader = unprotectedHeader;\n        return this;\n    }\n    async sign(key, options) {\n        if (!this._protectedHeader && !this._unprotectedHeader) {\n            throw new errors_js_1.JWSInvalid(\"either setProtectedHeader or setUnprotectedHeader must be called before #sign()\");\n        }\n        if (!(0, is_disjoint_js_1.default)(this._protectedHeader, this._unprotectedHeader)) {\n            throw new errors_js_1.JWSInvalid(\"JWS Protected and JWS Unprotected Header Parameter names must be disjoint\");\n        }\n        const joseHeader = {\n            ...this._protectedHeader,\n            ...this._unprotectedHeader\n        };\n        const extensions = (0, validate_crit_js_1.default)(errors_js_1.JWSInvalid, new Map([\n            [\n                \"b64\",\n                true\n            ]\n        ]), options === null || options === void 0 ? void 0 : options.crit, this._protectedHeader, joseHeader);\n        let b64 = true;\n        if (extensions.has(\"b64\")) {\n            b64 = this._protectedHeader.b64;\n            if (typeof b64 !== \"boolean\") {\n                throw new errors_js_1.JWSInvalid('The \"b64\" (base64url-encode payload) Header Parameter must be a boolean');\n            }\n        }\n        const { alg  } = joseHeader;\n        if (typeof alg !== \"string\" || !alg) {\n            throw new errors_js_1.JWSInvalid('JWS \"alg\" (Algorithm) Header Parameter missing or invalid');\n        }\n        (0, check_key_type_js_1.default)(alg, key, \"sign\");\n        let payload = this._payload;\n        if (b64) {\n            payload = buffer_utils_js_1.encoder.encode((0, base64url_js_1.encode)(payload));\n        }\n        let protectedHeader;\n        if (this._protectedHeader) {\n            protectedHeader = buffer_utils_js_1.encoder.encode((0, base64url_js_1.encode)(JSON.stringify(this._protectedHeader)));\n        } else {\n            protectedHeader = buffer_utils_js_1.encoder.encode(\"\");\n        }\n        const data = (0, buffer_utils_js_1.concat)(protectedHeader, buffer_utils_js_1.encoder.encode(\".\"), payload);\n        const signature = await (0, sign_js_1.default)(alg, key, data);\n        const jws = {\n            signature: (0, base64url_js_1.encode)(signature),\n            payload: \"\"\n        };\n        if (b64) {\n            jws.payload = buffer_utils_js_1.decoder.decode(payload);\n        }\n        if (this._unprotectedHeader) {\n            jws.header = this._unprotectedHeader;\n        }\n        if (this._protectedHeader) {\n            jws.protected = buffer_utils_js_1.decoder.decode(protectedHeader);\n        }\n        return jws;\n    }\n}\nexports.FlattenedSign = FlattenedSign;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/jose/dist/node/cjs/jws/flattened/sign.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/jose/dist/node/cjs/jws/flattened/verify.js":
/*!*****************************************************************!*\
  !*** ./node_modules/jose/dist/node/cjs/jws/flattened/verify.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.flattenedVerify = void 0;\nconst base64url_js_1 = __webpack_require__(/*! ../../runtime/base64url.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/runtime/base64url.js\");\nconst verify_js_1 = __webpack_require__(/*! ../../runtime/verify.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/runtime/verify.js\");\nconst errors_js_1 = __webpack_require__(/*! ../../util/errors.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/util/errors.js\");\nconst buffer_utils_js_1 = __webpack_require__(/*! ../../lib/buffer_utils.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/lib/buffer_utils.js\");\nconst is_disjoint_js_1 = __webpack_require__(/*! ../../lib/is_disjoint.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/lib/is_disjoint.js\");\nconst is_object_js_1 = __webpack_require__(/*! ../../lib/is_object.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/lib/is_object.js\");\nconst check_key_type_js_1 = __webpack_require__(/*! ../../lib/check_key_type.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/lib/check_key_type.js\");\nconst validate_crit_js_1 = __webpack_require__(/*! ../../lib/validate_crit.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/lib/validate_crit.js\");\nconst validate_algorithms_js_1 = __webpack_require__(/*! ../../lib/validate_algorithms.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/lib/validate_algorithms.js\");\nasync function flattenedVerify(jws, key, options) {\n    var _a;\n    if (!(0, is_object_js_1.default)(jws)) {\n        throw new errors_js_1.JWSInvalid(\"Flattened JWS must be an object\");\n    }\n    if (jws.protected === undefined && jws.header === undefined) {\n        throw new errors_js_1.JWSInvalid('Flattened JWS must have either of the \"protected\" or \"header\" members');\n    }\n    if (jws.protected !== undefined && typeof jws.protected !== \"string\") {\n        throw new errors_js_1.JWSInvalid(\"JWS Protected Header incorrect type\");\n    }\n    if (jws.payload === undefined) {\n        throw new errors_js_1.JWSInvalid(\"JWS Payload missing\");\n    }\n    if (typeof jws.signature !== \"string\") {\n        throw new errors_js_1.JWSInvalid(\"JWS Signature missing or incorrect type\");\n    }\n    if (jws.header !== undefined && !(0, is_object_js_1.default)(jws.header)) {\n        throw new errors_js_1.JWSInvalid(\"JWS Unprotected Header incorrect type\");\n    }\n    let parsedProt = {};\n    if (jws.protected) {\n        try {\n            const protectedHeader = (0, base64url_js_1.decode)(jws.protected);\n            parsedProt = JSON.parse(buffer_utils_js_1.decoder.decode(protectedHeader));\n        } catch  {\n            throw new errors_js_1.JWSInvalid(\"JWS Protected Header is invalid\");\n        }\n    }\n    if (!(0, is_disjoint_js_1.default)(parsedProt, jws.header)) {\n        throw new errors_js_1.JWSInvalid(\"JWS Protected and JWS Unprotected Header Parameter names must be disjoint\");\n    }\n    const joseHeader = {\n        ...parsedProt,\n        ...jws.header\n    };\n    const extensions = (0, validate_crit_js_1.default)(errors_js_1.JWSInvalid, new Map([\n        [\n            \"b64\",\n            true\n        ]\n    ]), options === null || options === void 0 ? void 0 : options.crit, parsedProt, joseHeader);\n    let b64 = true;\n    if (extensions.has(\"b64\")) {\n        b64 = parsedProt.b64;\n        if (typeof b64 !== \"boolean\") {\n            throw new errors_js_1.JWSInvalid('The \"b64\" (base64url-encode payload) Header Parameter must be a boolean');\n        }\n    }\n    const { alg  } = joseHeader;\n    if (typeof alg !== \"string\" || !alg) {\n        throw new errors_js_1.JWSInvalid('JWS \"alg\" (Algorithm) Header Parameter missing or invalid');\n    }\n    const algorithms = options && (0, validate_algorithms_js_1.default)(\"algorithms\", options.algorithms);\n    if (algorithms && !algorithms.has(alg)) {\n        throw new errors_js_1.JOSEAlgNotAllowed('\"alg\" (Algorithm) Header Parameter not allowed');\n    }\n    if (b64) {\n        if (typeof jws.payload !== \"string\") {\n            throw new errors_js_1.JWSInvalid(\"JWS Payload must be a string\");\n        }\n    } else if (typeof jws.payload !== \"string\" && !(jws.payload instanceof Uint8Array)) {\n        throw new errors_js_1.JWSInvalid(\"JWS Payload must be a string or an Uint8Array instance\");\n    }\n    let resolvedKey = false;\n    if (typeof key === \"function\") {\n        key = await key(parsedProt, jws);\n        resolvedKey = true;\n    }\n    (0, check_key_type_js_1.default)(alg, key, \"verify\");\n    const data = (0, buffer_utils_js_1.concat)(buffer_utils_js_1.encoder.encode((_a = jws.protected) !== null && _a !== void 0 ? _a : \"\"), buffer_utils_js_1.encoder.encode(\".\"), typeof jws.payload === \"string\" ? buffer_utils_js_1.encoder.encode(jws.payload) : jws.payload);\n    const signature = (0, base64url_js_1.decode)(jws.signature);\n    const verified = await (0, verify_js_1.default)(alg, key, signature, data);\n    if (!verified) {\n        throw new errors_js_1.JWSSignatureVerificationFailed();\n    }\n    let payload;\n    if (b64) {\n        payload = (0, base64url_js_1.decode)(jws.payload);\n    } else if (typeof jws.payload === \"string\") {\n        payload = buffer_utils_js_1.encoder.encode(jws.payload);\n    } else {\n        payload = jws.payload;\n    }\n    const result = {\n        payload\n    };\n    if (jws.protected !== undefined) {\n        result.protectedHeader = parsedProt;\n    }\n    if (jws.header !== undefined) {\n        result.unprotectedHeader = jws.header;\n    }\n    if (resolvedKey) {\n        return {\n            ...result,\n            key\n        };\n    }\n    return result;\n}\nexports.flattenedVerify = flattenedVerify;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/jose/dist/node/cjs/jws/flattened/verify.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/jose/dist/node/cjs/jws/general/sign.js":
/*!*************************************************************!*\
  !*** ./node_modules/jose/dist/node/cjs/jws/general/sign.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.GeneralSign = void 0;\nconst sign_js_1 = __webpack_require__(/*! ../flattened/sign.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/jws/flattened/sign.js\");\nconst errors_js_1 = __webpack_require__(/*! ../../util/errors.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/util/errors.js\");\nclass IndividualSignature {\n    constructor(sig, key, options){\n        this.parent = sig;\n        this.key = key;\n        this.options = options;\n    }\n    setProtectedHeader(protectedHeader) {\n        if (this.protectedHeader) {\n            throw new TypeError(\"setProtectedHeader can only be called once\");\n        }\n        this.protectedHeader = protectedHeader;\n        return this;\n    }\n    setUnprotectedHeader(unprotectedHeader) {\n        if (this.unprotectedHeader) {\n            throw new TypeError(\"setUnprotectedHeader can only be called once\");\n        }\n        this.unprotectedHeader = unprotectedHeader;\n        return this;\n    }\n    addSignature(...args) {\n        return this.parent.addSignature(...args);\n    }\n    sign(...args) {\n        return this.parent.sign(...args);\n    }\n    done() {\n        return this.parent;\n    }\n}\nclass GeneralSign {\n    constructor(payload){\n        this._signatures = [];\n        this._payload = payload;\n    }\n    addSignature(key, options) {\n        const signature = new IndividualSignature(this, key, options);\n        this._signatures.push(signature);\n        return signature;\n    }\n    async sign() {\n        if (!this._signatures.length) {\n            throw new errors_js_1.JWSInvalid(\"at least one signature must be added\");\n        }\n        const jws = {\n            signatures: [],\n            payload: \"\"\n        };\n        for(let i = 0; i < this._signatures.length; i++){\n            const signature = this._signatures[i];\n            const flattened = new sign_js_1.FlattenedSign(this._payload);\n            flattened.setProtectedHeader(signature.protectedHeader);\n            flattened.setUnprotectedHeader(signature.unprotectedHeader);\n            const { payload , ...rest } = await flattened.sign(signature.key, signature.options);\n            if (i === 0) {\n                jws.payload = payload;\n            } else if (jws.payload !== payload) {\n                throw new errors_js_1.JWSInvalid(\"inconsistent use of JWS Unencoded Payload (RFC7797)\");\n            }\n            jws.signatures.push(rest);\n        }\n        return jws;\n    }\n}\nexports.GeneralSign = GeneralSign;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvam9zZS9kaXN0L25vZGUvY2pzL2p3cy9nZW5lcmFsL3NpZ24uanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYkEsOENBQTZDO0lBQUVHLE9BQU87QUFBSyxDQUFDLEVBQUM7QUFDN0RELG1CQUFtQkUsR0FBRyxLQUFLO0FBQzNCLE1BQU1DLFlBQVlDLG1CQUFPQSxDQUFDLGlHQUFzQjtBQUNoRCxNQUFNQyxjQUFjRCxtQkFBT0EsQ0FBQywwRkFBc0I7QUFDbEQsTUFBTUU7SUFDRkMsWUFBWUMsR0FBRyxFQUFFQyxHQUFHLEVBQUVDLE9BQU8sQ0FBRTtRQUMzQixJQUFJLENBQUNDLFNBQVNIO1FBQ2QsSUFBSSxDQUFDQyxNQUFNQTtRQUNYLElBQUksQ0FBQ0MsVUFBVUE7SUFDbkI7SUFDQUUsbUJBQW1CQyxlQUFlLEVBQUU7UUFDaEMsSUFBSSxJQUFJLENBQUNBLGlCQUFpQjtZQUN0QixNQUFNLElBQUlDLFVBQVU7UUFDeEI7UUFDQSxJQUFJLENBQUNELGtCQUFrQkE7UUFDdkIsT0FBTyxJQUFJO0lBQ2Y7SUFDQUUscUJBQXFCQyxpQkFBaUIsRUFBRTtRQUNwQyxJQUFJLElBQUksQ0FBQ0EsbUJBQW1CO1lBQ3hCLE1BQU0sSUFBSUYsVUFBVTtRQUN4QjtRQUNBLElBQUksQ0FBQ0Usb0JBQW9CQTtRQUN6QixPQUFPLElBQUk7SUFDZjtJQUNBQyxhQUFhLEdBQUdDLElBQUksRUFBRTtRQUNsQixPQUFPLElBQUksQ0FBQ1AsT0FBT00sZ0JBQWdCQztJQUN2QztJQUNBQyxLQUFLLEdBQUdELElBQUksRUFBRTtRQUNWLE9BQU8sSUFBSSxDQUFDUCxPQUFPUSxRQUFRRDtJQUMvQjtJQUNBRSxPQUFPO1FBQ0gsT0FBTyxJQUFJLENBQUNUO0lBQ2hCO0FBQ0o7QUFDQSxNQUFNVDtJQUNGSyxZQUFZYyxPQUFPLENBQUU7UUFDakIsSUFBSSxDQUFDQyxjQUFjLEVBQUU7UUFDckIsSUFBSSxDQUFDQyxXQUFXRjtJQUNwQjtJQUNBSixhQUFhUixHQUFHLEVBQUVDLE9BQU8sRUFBRTtRQUN2QixNQUFNYyxZQUFZLElBQUlsQixvQkFBb0IsSUFBSSxFQUFFRyxLQUFLQztRQUNyRCxJQUFJLENBQUNZLFlBQVlHLEtBQUtEO1FBQ3RCLE9BQU9BO0lBQ1g7SUFDQSxNQUFNTCxPQUFPO1FBQ1QsSUFBSSxDQUFDLElBQUksQ0FBQ0csWUFBWUksUUFBUTtZQUMxQixNQUFNLElBQUlyQixZQUFZc0IsV0FBVztRQUNyQztRQUNBLE1BQU1DLE1BQU07WUFDUkMsWUFBWSxFQUFFO1lBQ2RSLFNBQVM7UUFDYjtRQUNBLElBQUssSUFBSVMsSUFBSSxHQUFHQSxJQUFJLElBQUksQ0FBQ1IsWUFBWUksUUFBUUksSUFBSztZQUM5QyxNQUFNTixZQUFZLElBQUksQ0FBQ0YsV0FBVyxDQUFDUSxFQUFFO1lBQ3JDLE1BQU1DLFlBQVksSUFBSTVCLFVBQVU2QixjQUFjLElBQUksQ0FBQ1Q7WUFDbkRRLFVBQVVuQixtQkFBbUJZLFVBQVVYO1lBQ3ZDa0IsVUFBVWhCLHFCQUFxQlMsVUFBVVI7WUFDekMsTUFBTSxFQUFFSyxRQUFPLEVBQUUsR0FBR1ksTUFBTSxHQUFHLE1BQU1GLFVBQVVaLEtBQUtLLFVBQVVmLEtBQUtlLFVBQVVkO1lBQzNFLElBQUlvQixNQUFNLEdBQUc7Z0JBQ1RGLElBQUlQLFVBQVVBO1lBQ2xCLE9BQ0ssSUFBSU8sSUFBSVAsWUFBWUEsU0FBUztnQkFDOUIsTUFBTSxJQUFJaEIsWUFBWXNCLFdBQVc7WUFDckM7WUFDQUMsSUFBSUMsV0FBV0osS0FBS1E7UUFDeEI7UUFDQSxPQUFPTDtJQUNYO0FBQ0o7QUFDQTVCLG1CQUFtQkUsR0FBR0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mdWxsc3RhY2stcm9sZS1iYXNlZC1uZXh0anMtMi8uL25vZGVfbW9kdWxlcy9qb3NlL2Rpc3Qvbm9kZS9janMvandzL2dlbmVyYWwvc2lnbi5qcz85ZGQ1Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5HZW5lcmFsU2lnbiA9IHZvaWQgMDtcbmNvbnN0IHNpZ25fanNfMSA9IHJlcXVpcmUoXCIuLi9mbGF0dGVuZWQvc2lnbi5qc1wiKTtcbmNvbnN0IGVycm9yc19qc18xID0gcmVxdWlyZShcIi4uLy4uL3V0aWwvZXJyb3JzLmpzXCIpO1xuY2xhc3MgSW5kaXZpZHVhbFNpZ25hdHVyZSB7XG4gICAgY29uc3RydWN0b3Ioc2lnLCBrZXksIG9wdGlvbnMpIHtcbiAgICAgICAgdGhpcy5wYXJlbnQgPSBzaWc7XG4gICAgICAgIHRoaXMua2V5ID0ga2V5O1xuICAgICAgICB0aGlzLm9wdGlvbnMgPSBvcHRpb25zO1xuICAgIH1cbiAgICBzZXRQcm90ZWN0ZWRIZWFkZXIocHJvdGVjdGVkSGVhZGVyKSB7XG4gICAgICAgIGlmICh0aGlzLnByb3RlY3RlZEhlYWRlcikge1xuICAgICAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcignc2V0UHJvdGVjdGVkSGVhZGVyIGNhbiBvbmx5IGJlIGNhbGxlZCBvbmNlJyk7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5wcm90ZWN0ZWRIZWFkZXIgPSBwcm90ZWN0ZWRIZWFkZXI7XG4gICAgICAgIHJldHVybiB0aGlzO1xuICAgIH1cbiAgICBzZXRVbnByb3RlY3RlZEhlYWRlcih1bnByb3RlY3RlZEhlYWRlcikge1xuICAgICAgICBpZiAodGhpcy51bnByb3RlY3RlZEhlYWRlcikge1xuICAgICAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcignc2V0VW5wcm90ZWN0ZWRIZWFkZXIgY2FuIG9ubHkgYmUgY2FsbGVkIG9uY2UnKTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLnVucHJvdGVjdGVkSGVhZGVyID0gdW5wcm90ZWN0ZWRIZWFkZXI7XG4gICAgICAgIHJldHVybiB0aGlzO1xuICAgIH1cbiAgICBhZGRTaWduYXR1cmUoLi4uYXJncykge1xuICAgICAgICByZXR1cm4gdGhpcy5wYXJlbnQuYWRkU2lnbmF0dXJlKC4uLmFyZ3MpO1xuICAgIH1cbiAgICBzaWduKC4uLmFyZ3MpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMucGFyZW50LnNpZ24oLi4uYXJncyk7XG4gICAgfVxuICAgIGRvbmUoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnBhcmVudDtcbiAgICB9XG59XG5jbGFzcyBHZW5lcmFsU2lnbiB7XG4gICAgY29uc3RydWN0b3IocGF5bG9hZCkge1xuICAgICAgICB0aGlzLl9zaWduYXR1cmVzID0gW107XG4gICAgICAgIHRoaXMuX3BheWxvYWQgPSBwYXlsb2FkO1xuICAgIH1cbiAgICBhZGRTaWduYXR1cmUoa2V5LCBvcHRpb25zKSB7XG4gICAgICAgIGNvbnN0IHNpZ25hdHVyZSA9IG5ldyBJbmRpdmlkdWFsU2lnbmF0dXJlKHRoaXMsIGtleSwgb3B0aW9ucyk7XG4gICAgICAgIHRoaXMuX3NpZ25hdHVyZXMucHVzaChzaWduYXR1cmUpO1xuICAgICAgICByZXR1cm4gc2lnbmF0dXJlO1xuICAgIH1cbiAgICBhc3luYyBzaWduKCkge1xuICAgICAgICBpZiAoIXRoaXMuX3NpZ25hdHVyZXMubGVuZ3RoKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgZXJyb3JzX2pzXzEuSldTSW52YWxpZCgnYXQgbGVhc3Qgb25lIHNpZ25hdHVyZSBtdXN0IGJlIGFkZGVkJyk7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgandzID0ge1xuICAgICAgICAgICAgc2lnbmF0dXJlczogW10sXG4gICAgICAgICAgICBwYXlsb2FkOiAnJyxcbiAgICAgICAgfTtcbiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCB0aGlzLl9zaWduYXR1cmVzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICBjb25zdCBzaWduYXR1cmUgPSB0aGlzLl9zaWduYXR1cmVzW2ldO1xuICAgICAgICAgICAgY29uc3QgZmxhdHRlbmVkID0gbmV3IHNpZ25fanNfMS5GbGF0dGVuZWRTaWduKHRoaXMuX3BheWxvYWQpO1xuICAgICAgICAgICAgZmxhdHRlbmVkLnNldFByb3RlY3RlZEhlYWRlcihzaWduYXR1cmUucHJvdGVjdGVkSGVhZGVyKTtcbiAgICAgICAgICAgIGZsYXR0ZW5lZC5zZXRVbnByb3RlY3RlZEhlYWRlcihzaWduYXR1cmUudW5wcm90ZWN0ZWRIZWFkZXIpO1xuICAgICAgICAgICAgY29uc3QgeyBwYXlsb2FkLCAuLi5yZXN0IH0gPSBhd2FpdCBmbGF0dGVuZWQuc2lnbihzaWduYXR1cmUua2V5LCBzaWduYXR1cmUub3B0aW9ucyk7XG4gICAgICAgICAgICBpZiAoaSA9PT0gMCkge1xuICAgICAgICAgICAgICAgIGp3cy5wYXlsb2FkID0gcGF5bG9hZDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2UgaWYgKGp3cy5wYXlsb2FkICE9PSBwYXlsb2FkKSB7XG4gICAgICAgICAgICAgICAgdGhyb3cgbmV3IGVycm9yc19qc18xLkpXU0ludmFsaWQoJ2luY29uc2lzdGVudCB1c2Ugb2YgSldTIFVuZW5jb2RlZCBQYXlsb2FkIChSRkM3Nzk3KScpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgandzLnNpZ25hdHVyZXMucHVzaChyZXN0KTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gandzO1xuICAgIH1cbn1cbmV4cG9ydHMuR2VuZXJhbFNpZ24gPSBHZW5lcmFsU2lnbjtcbiJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsIkdlbmVyYWxTaWduIiwic2lnbl9qc18xIiwicmVxdWlyZSIsImVycm9yc19qc18xIiwiSW5kaXZpZHVhbFNpZ25hdHVyZSIsImNvbnN0cnVjdG9yIiwic2lnIiwia2V5Iiwib3B0aW9ucyIsInBhcmVudCIsInNldFByb3RlY3RlZEhlYWRlciIsInByb3RlY3RlZEhlYWRlciIsIlR5cGVFcnJvciIsInNldFVucHJvdGVjdGVkSGVhZGVyIiwidW5wcm90ZWN0ZWRIZWFkZXIiLCJhZGRTaWduYXR1cmUiLCJhcmdzIiwic2lnbiIsImRvbmUiLCJwYXlsb2FkIiwiX3NpZ25hdHVyZXMiLCJfcGF5bG9hZCIsInNpZ25hdHVyZSIsInB1c2giLCJsZW5ndGgiLCJKV1NJbnZhbGlkIiwiandzIiwic2lnbmF0dXJlcyIsImkiLCJmbGF0dGVuZWQiLCJGbGF0dGVuZWRTaWduIiwicmVzdCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/jose/dist/node/cjs/jws/general/sign.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/jose/dist/node/cjs/jws/general/verify.js":
/*!***************************************************************!*\
  !*** ./node_modules/jose/dist/node/cjs/jws/general/verify.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.generalVerify = void 0;\nconst verify_js_1 = __webpack_require__(/*! ../flattened/verify.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/jws/flattened/verify.js\");\nconst errors_js_1 = __webpack_require__(/*! ../../util/errors.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/util/errors.js\");\nconst is_object_js_1 = __webpack_require__(/*! ../../lib/is_object.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/lib/is_object.js\");\nasync function generalVerify(jws, key, options) {\n    if (!(0, is_object_js_1.default)(jws)) {\n        throw new errors_js_1.JWSInvalid(\"General JWS must be an object\");\n    }\n    if (!Array.isArray(jws.signatures) || !jws.signatures.every(is_object_js_1.default)) {\n        throw new errors_js_1.JWSInvalid(\"JWS Signatures missing or incorrect type\");\n    }\n    for (const signature of jws.signatures){\n        try {\n            return await (0, verify_js_1.flattenedVerify)({\n                header: signature.header,\n                payload: jws.payload,\n                protected: signature.protected,\n                signature: signature.signature\n            }, key, options);\n        } catch  {}\n    }\n    throw new errors_js_1.JWSSignatureVerificationFailed();\n}\nexports.generalVerify = generalVerify;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvam9zZS9kaXN0L25vZGUvY2pzL2p3cy9nZW5lcmFsL3ZlcmlmeS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFBRUcsT0FBTztBQUFLLENBQUMsRUFBQztBQUM3REQscUJBQXFCRSxHQUFHLEtBQUs7QUFDN0IsTUFBTUMsY0FBY0MsbUJBQU9BLENBQUMscUdBQXdCO0FBQ3BELE1BQU1DLGNBQWNELG1CQUFPQSxDQUFDLDBGQUFzQjtBQUNsRCxNQUFNRSxpQkFBaUJGLG1CQUFPQSxDQUFDLDhGQUF3QjtBQUN2RCxlQUFlRixjQUFjSyxHQUFHLEVBQUVDLEdBQUcsRUFBRUMsT0FBTztJQUMxQyxJQUFJLENBQUMsQ0FBQyxHQUFHSCxlQUFlSSxPQUFNLEVBQUdILE1BQU07UUFDbkMsTUFBTSxJQUFJRixZQUFZTSxXQUFXO0lBQ3JDO0lBQ0EsSUFBSSxDQUFDQyxNQUFNQyxRQUFRTixJQUFJTyxlQUFlLENBQUNQLElBQUlPLFdBQVdDLE1BQU1ULGVBQWVJLFVBQVU7UUFDakYsTUFBTSxJQUFJTCxZQUFZTSxXQUFXO0lBQ3JDO0lBQ0EsS0FBSyxNQUFNSyxhQUFhVCxJQUFJTyxXQUFZO1FBQ3BDLElBQUk7WUFDQSxPQUFPLE1BQU0sQ0FBQyxHQUFHWCxZQUFZYyxlQUFjLEVBQUc7Z0JBQzFDQyxRQUFRRixVQUFVRTtnQkFDbEJDLFNBQVNaLElBQUlZO2dCQUNiQyxXQUFXSixVQUFVSTtnQkFDckJKLFdBQVdBLFVBQVVBO1lBQ3pCLEdBQUdSLEtBQUtDO1FBQ1osRUFDQSxPQUFNLENBQ047SUFDSjtJQUNBLE1BQU0sSUFBSUosWUFBWWdCO0FBQzFCO0FBQ0FyQixxQkFBcUJFLEdBQUdBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZnVsbHN0YWNrLXJvbGUtYmFzZWQtbmV4dGpzLTIvLi9ub2RlX21vZHVsZXMvam9zZS9kaXN0L25vZGUvY2pzL2p3cy9nZW5lcmFsL3ZlcmlmeS5qcz9jMmJhIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5nZW5lcmFsVmVyaWZ5ID0gdm9pZCAwO1xuY29uc3QgdmVyaWZ5X2pzXzEgPSByZXF1aXJlKFwiLi4vZmxhdHRlbmVkL3ZlcmlmeS5qc1wiKTtcbmNvbnN0IGVycm9yc19qc18xID0gcmVxdWlyZShcIi4uLy4uL3V0aWwvZXJyb3JzLmpzXCIpO1xuY29uc3QgaXNfb2JqZWN0X2pzXzEgPSByZXF1aXJlKFwiLi4vLi4vbGliL2lzX29iamVjdC5qc1wiKTtcbmFzeW5jIGZ1bmN0aW9uIGdlbmVyYWxWZXJpZnkoandzLCBrZXksIG9wdGlvbnMpIHtcbiAgICBpZiAoISgwLCBpc19vYmplY3RfanNfMS5kZWZhdWx0KShqd3MpKSB7XG4gICAgICAgIHRocm93IG5ldyBlcnJvcnNfanNfMS5KV1NJbnZhbGlkKCdHZW5lcmFsIEpXUyBtdXN0IGJlIGFuIG9iamVjdCcpO1xuICAgIH1cbiAgICBpZiAoIUFycmF5LmlzQXJyYXkoandzLnNpZ25hdHVyZXMpIHx8ICFqd3Muc2lnbmF0dXJlcy5ldmVyeShpc19vYmplY3RfanNfMS5kZWZhdWx0KSkge1xuICAgICAgICB0aHJvdyBuZXcgZXJyb3JzX2pzXzEuSldTSW52YWxpZCgnSldTIFNpZ25hdHVyZXMgbWlzc2luZyBvciBpbmNvcnJlY3QgdHlwZScpO1xuICAgIH1cbiAgICBmb3IgKGNvbnN0IHNpZ25hdHVyZSBvZiBqd3Muc2lnbmF0dXJlcykge1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgcmV0dXJuIGF3YWl0ICgwLCB2ZXJpZnlfanNfMS5mbGF0dGVuZWRWZXJpZnkpKHtcbiAgICAgICAgICAgICAgICBoZWFkZXI6IHNpZ25hdHVyZS5oZWFkZXIsXG4gICAgICAgICAgICAgICAgcGF5bG9hZDogandzLnBheWxvYWQsXG4gICAgICAgICAgICAgICAgcHJvdGVjdGVkOiBzaWduYXR1cmUucHJvdGVjdGVkLFxuICAgICAgICAgICAgICAgIHNpZ25hdHVyZTogc2lnbmF0dXJlLnNpZ25hdHVyZSxcbiAgICAgICAgICAgIH0sIGtleSwgb3B0aW9ucyk7XG4gICAgICAgIH1cbiAgICAgICAgY2F0Y2gge1xuICAgICAgICB9XG4gICAgfVxuICAgIHRocm93IG5ldyBlcnJvcnNfanNfMS5KV1NTaWduYXR1cmVWZXJpZmljYXRpb25GYWlsZWQoKTtcbn1cbmV4cG9ydHMuZ2VuZXJhbFZlcmlmeSA9IGdlbmVyYWxWZXJpZnk7XG4iXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJnZW5lcmFsVmVyaWZ5IiwidmVyaWZ5X2pzXzEiLCJyZXF1aXJlIiwiZXJyb3JzX2pzXzEiLCJpc19vYmplY3RfanNfMSIsImp3cyIsImtleSIsIm9wdGlvbnMiLCJkZWZhdWx0IiwiSldTSW52YWxpZCIsIkFycmF5IiwiaXNBcnJheSIsInNpZ25hdHVyZXMiLCJldmVyeSIsInNpZ25hdHVyZSIsImZsYXR0ZW5lZFZlcmlmeSIsImhlYWRlciIsInBheWxvYWQiLCJwcm90ZWN0ZWQiLCJKV1NTaWduYXR1cmVWZXJpZmljYXRpb25GYWlsZWQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/jose/dist/node/cjs/jws/general/verify.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/jose/dist/node/cjs/jwt/decrypt.js":
/*!********************************************************!*\
  !*** ./node_modules/jose/dist/node/cjs/jwt/decrypt.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.jwtDecrypt = void 0;\nconst decrypt_js_1 = __webpack_require__(/*! ../jwe/compact/decrypt.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/jwe/compact/decrypt.js\");\nconst jwt_claims_set_js_1 = __webpack_require__(/*! ../lib/jwt_claims_set.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/lib/jwt_claims_set.js\");\nconst errors_js_1 = __webpack_require__(/*! ../util/errors.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/util/errors.js\");\nasync function jwtDecrypt(jwt, key, options) {\n    const decrypted = await (0, decrypt_js_1.compactDecrypt)(jwt, key, options);\n    const payload = (0, jwt_claims_set_js_1.default)(decrypted.protectedHeader, decrypted.plaintext, options);\n    const { protectedHeader  } = decrypted;\n    if (protectedHeader.iss !== undefined && protectedHeader.iss !== payload.iss) {\n        throw new errors_js_1.JWTClaimValidationFailed('replicated \"iss\" claim header parameter mismatch', \"iss\", \"mismatch\");\n    }\n    if (protectedHeader.sub !== undefined && protectedHeader.sub !== payload.sub) {\n        throw new errors_js_1.JWTClaimValidationFailed('replicated \"sub\" claim header parameter mismatch', \"sub\", \"mismatch\");\n    }\n    if (protectedHeader.aud !== undefined && JSON.stringify(protectedHeader.aud) !== JSON.stringify(payload.aud)) {\n        throw new errors_js_1.JWTClaimValidationFailed('replicated \"aud\" claim header parameter mismatch', \"aud\", \"mismatch\");\n    }\n    const result = {\n        payload,\n        protectedHeader\n    };\n    if (typeof key === \"function\") {\n        return {\n            ...result,\n            key: decrypted.key\n        };\n    }\n    return result;\n}\nexports.jwtDecrypt = jwtDecrypt;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvam9zZS9kaXN0L25vZGUvY2pzL2p3dC9kZWNyeXB0LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2JBLDhDQUE2QztJQUFFRyxPQUFPO0FBQUssQ0FBQyxFQUFDO0FBQzdERCxrQkFBa0JFLEdBQUcsS0FBSztBQUMxQixNQUFNQyxlQUFlQyxtQkFBT0EsQ0FBQyx1R0FBMkI7QUFDeEQsTUFBTUMsc0JBQXNCRCxtQkFBT0EsQ0FBQyxxR0FBMEI7QUFDOUQsTUFBTUUsY0FBY0YsbUJBQU9BLENBQUMsdUZBQW1CO0FBQy9DLGVBQWVGLFdBQVdLLEdBQUcsRUFBRUMsR0FBRyxFQUFFQyxPQUFPO0lBQ3ZDLE1BQU1DLFlBQVksTUFBTSxDQUFDLEdBQUdQLGFBQWFRLGNBQWEsRUFBR0osS0FBS0MsS0FBS0M7SUFDbkUsTUFBTUcsVUFBVSxDQUFDLEdBQUdQLG9CQUFvQlEsT0FBTSxFQUFHSCxVQUFVSSxpQkFBaUJKLFVBQVVLLFdBQVdOO0lBQ2pHLE1BQU0sRUFBRUssZ0JBQWUsRUFBRSxHQUFHSjtJQUM1QixJQUFJSSxnQkFBZ0JFLFFBQVFDLGFBQWFILGdCQUFnQkUsUUFBUUosUUFBUUksS0FBSztRQUMxRSxNQUFNLElBQUlWLFlBQVlZLHlCQUF5QixvREFBb0QsT0FBTztJQUM5RztJQUNBLElBQUlKLGdCQUFnQkssUUFBUUYsYUFBYUgsZ0JBQWdCSyxRQUFRUCxRQUFRTyxLQUFLO1FBQzFFLE1BQU0sSUFBSWIsWUFBWVkseUJBQXlCLG9EQUFvRCxPQUFPO0lBQzlHO0lBQ0EsSUFBSUosZ0JBQWdCTSxRQUFRSCxhQUN4QkksS0FBS0MsVUFBVVIsZ0JBQWdCTSxTQUFTQyxLQUFLQyxVQUFVVixRQUFRUSxNQUFNO1FBQ3JFLE1BQU0sSUFBSWQsWUFBWVkseUJBQXlCLG9EQUFvRCxPQUFPO0lBQzlHO0lBQ0EsTUFBTUssU0FBUztRQUFFWDtRQUFTRTtJQUFnQjtJQUMxQyxJQUFJLE9BQU9OLFFBQVEsWUFBWTtRQUMzQixPQUFPO1lBQUUsR0FBR2UsTUFBTTtZQUFFZixLQUFLRSxVQUFVRjtRQUFJO0lBQzNDO0lBQ0EsT0FBT2U7QUFDWDtBQUNBdkIsa0JBQWtCRSxHQUFHQSIsInNvdXJjZXMiOlsid2VicGFjazovL2Z1bGxzdGFjay1yb2xlLWJhc2VkLW5leHRqcy0yLy4vbm9kZV9tb2R1bGVzL2pvc2UvZGlzdC9ub2RlL2Nqcy9qd3QvZGVjcnlwdC5qcz9iNDY1Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5qd3REZWNyeXB0ID0gdm9pZCAwO1xuY29uc3QgZGVjcnlwdF9qc18xID0gcmVxdWlyZShcIi4uL2p3ZS9jb21wYWN0L2RlY3J5cHQuanNcIik7XG5jb25zdCBqd3RfY2xhaW1zX3NldF9qc18xID0gcmVxdWlyZShcIi4uL2xpYi9qd3RfY2xhaW1zX3NldC5qc1wiKTtcbmNvbnN0IGVycm9yc19qc18xID0gcmVxdWlyZShcIi4uL3V0aWwvZXJyb3JzLmpzXCIpO1xuYXN5bmMgZnVuY3Rpb24gand0RGVjcnlwdChqd3QsIGtleSwgb3B0aW9ucykge1xuICAgIGNvbnN0IGRlY3J5cHRlZCA9IGF3YWl0ICgwLCBkZWNyeXB0X2pzXzEuY29tcGFjdERlY3J5cHQpKGp3dCwga2V5LCBvcHRpb25zKTtcbiAgICBjb25zdCBwYXlsb2FkID0gKDAsIGp3dF9jbGFpbXNfc2V0X2pzXzEuZGVmYXVsdCkoZGVjcnlwdGVkLnByb3RlY3RlZEhlYWRlciwgZGVjcnlwdGVkLnBsYWludGV4dCwgb3B0aW9ucyk7XG4gICAgY29uc3QgeyBwcm90ZWN0ZWRIZWFkZXIgfSA9IGRlY3J5cHRlZDtcbiAgICBpZiAocHJvdGVjdGVkSGVhZGVyLmlzcyAhPT0gdW5kZWZpbmVkICYmIHByb3RlY3RlZEhlYWRlci5pc3MgIT09IHBheWxvYWQuaXNzKSB7XG4gICAgICAgIHRocm93IG5ldyBlcnJvcnNfanNfMS5KV1RDbGFpbVZhbGlkYXRpb25GYWlsZWQoJ3JlcGxpY2F0ZWQgXCJpc3NcIiBjbGFpbSBoZWFkZXIgcGFyYW1ldGVyIG1pc21hdGNoJywgJ2lzcycsICdtaXNtYXRjaCcpO1xuICAgIH1cbiAgICBpZiAocHJvdGVjdGVkSGVhZGVyLnN1YiAhPT0gdW5kZWZpbmVkICYmIHByb3RlY3RlZEhlYWRlci5zdWIgIT09IHBheWxvYWQuc3ViKSB7XG4gICAgICAgIHRocm93IG5ldyBlcnJvcnNfanNfMS5KV1RDbGFpbVZhbGlkYXRpb25GYWlsZWQoJ3JlcGxpY2F0ZWQgXCJzdWJcIiBjbGFpbSBoZWFkZXIgcGFyYW1ldGVyIG1pc21hdGNoJywgJ3N1YicsICdtaXNtYXRjaCcpO1xuICAgIH1cbiAgICBpZiAocHJvdGVjdGVkSGVhZGVyLmF1ZCAhPT0gdW5kZWZpbmVkICYmXG4gICAgICAgIEpTT04uc3RyaW5naWZ5KHByb3RlY3RlZEhlYWRlci5hdWQpICE9PSBKU09OLnN0cmluZ2lmeShwYXlsb2FkLmF1ZCkpIHtcbiAgICAgICAgdGhyb3cgbmV3IGVycm9yc19qc18xLkpXVENsYWltVmFsaWRhdGlvbkZhaWxlZCgncmVwbGljYXRlZCBcImF1ZFwiIGNsYWltIGhlYWRlciBwYXJhbWV0ZXIgbWlzbWF0Y2gnLCAnYXVkJywgJ21pc21hdGNoJyk7XG4gICAgfVxuICAgIGNvbnN0IHJlc3VsdCA9IHsgcGF5bG9hZCwgcHJvdGVjdGVkSGVhZGVyIH07XG4gICAgaWYgKHR5cGVvZiBrZXkgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgcmV0dXJuIHsgLi4ucmVzdWx0LCBrZXk6IGRlY3J5cHRlZC5rZXkgfTtcbiAgICB9XG4gICAgcmV0dXJuIHJlc3VsdDtcbn1cbmV4cG9ydHMuand0RGVjcnlwdCA9IGp3dERlY3J5cHQ7XG4iXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJqd3REZWNyeXB0IiwiZGVjcnlwdF9qc18xIiwicmVxdWlyZSIsImp3dF9jbGFpbXNfc2V0X2pzXzEiLCJlcnJvcnNfanNfMSIsImp3dCIsImtleSIsIm9wdGlvbnMiLCJkZWNyeXB0ZWQiLCJjb21wYWN0RGVjcnlwdCIsInBheWxvYWQiLCJkZWZhdWx0IiwicHJvdGVjdGVkSGVhZGVyIiwicGxhaW50ZXh0IiwiaXNzIiwidW5kZWZpbmVkIiwiSldUQ2xhaW1WYWxpZGF0aW9uRmFpbGVkIiwic3ViIiwiYXVkIiwiSlNPTiIsInN0cmluZ2lmeSIsInJlc3VsdCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/jose/dist/node/cjs/jwt/decrypt.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/jose/dist/node/cjs/jwt/encrypt.js":
/*!********************************************************!*\
  !*** ./node_modules/jose/dist/node/cjs/jwt/encrypt.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.EncryptJWT = void 0;\nconst encrypt_js_1 = __webpack_require__(/*! ../jwe/compact/encrypt.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/jwe/compact/encrypt.js\");\nconst buffer_utils_js_1 = __webpack_require__(/*! ../lib/buffer_utils.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/lib/buffer_utils.js\");\nconst produce_js_1 = __webpack_require__(/*! ./produce.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/jwt/produce.js\");\nclass EncryptJWT extends produce_js_1.ProduceJWT {\n    setProtectedHeader(protectedHeader) {\n        if (this._protectedHeader) {\n            throw new TypeError(\"setProtectedHeader can only be called once\");\n        }\n        this._protectedHeader = protectedHeader;\n        return this;\n    }\n    setKeyManagementParameters(parameters) {\n        if (this._keyManagementParameters) {\n            throw new TypeError(\"setKeyManagementParameters can only be called once\");\n        }\n        this._keyManagementParameters = parameters;\n        return this;\n    }\n    setContentEncryptionKey(cek) {\n        if (this._cek) {\n            throw new TypeError(\"setContentEncryptionKey can only be called once\");\n        }\n        this._cek = cek;\n        return this;\n    }\n    setInitializationVector(iv) {\n        if (this._iv) {\n            throw new TypeError(\"setInitializationVector can only be called once\");\n        }\n        this._iv = iv;\n        return this;\n    }\n    replicateIssuerAsHeader() {\n        this._replicateIssuerAsHeader = true;\n        return this;\n    }\n    replicateSubjectAsHeader() {\n        this._replicateSubjectAsHeader = true;\n        return this;\n    }\n    replicateAudienceAsHeader() {\n        this._replicateAudienceAsHeader = true;\n        return this;\n    }\n    async encrypt(key, options) {\n        const enc = new encrypt_js_1.CompactEncrypt(buffer_utils_js_1.encoder.encode(JSON.stringify(this._payload)));\n        if (this._replicateIssuerAsHeader) {\n            this._protectedHeader = {\n                ...this._protectedHeader,\n                iss: this._payload.iss\n            };\n        }\n        if (this._replicateSubjectAsHeader) {\n            this._protectedHeader = {\n                ...this._protectedHeader,\n                sub: this._payload.sub\n            };\n        }\n        if (this._replicateAudienceAsHeader) {\n            this._protectedHeader = {\n                ...this._protectedHeader,\n                aud: this._payload.aud\n            };\n        }\n        enc.setProtectedHeader(this._protectedHeader);\n        if (this._iv) {\n            enc.setInitializationVector(this._iv);\n        }\n        if (this._cek) {\n            enc.setContentEncryptionKey(this._cek);\n        }\n        if (this._keyManagementParameters) {\n            enc.setKeyManagementParameters(this._keyManagementParameters);\n        }\n        return enc.encrypt(key, options);\n    }\n}\nexports.EncryptJWT = EncryptJWT;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvam9zZS9kaXN0L25vZGUvY2pzL2p3dC9lbmNyeXB0LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2JBLDhDQUE2QztJQUFFRyxPQUFPO0FBQUssQ0FBQyxFQUFDO0FBQzdERCxrQkFBa0JFLEdBQUcsS0FBSztBQUMxQixNQUFNQyxlQUFlQyxtQkFBT0EsQ0FBQyx1R0FBMkI7QUFDeEQsTUFBTUMsb0JBQW9CRCxtQkFBT0EsQ0FBQyxpR0FBd0I7QUFDMUQsTUFBTUUsZUFBZUYsbUJBQU9BLENBQUMsa0ZBQWM7QUFDM0MsTUFBTUYsbUJBQW1CSSxhQUFhQztJQUNsQ0MsbUJBQW1CQyxlQUFlLEVBQUU7UUFDaEMsSUFBSSxJQUFJLENBQUNDLGtCQUFrQjtZQUN2QixNQUFNLElBQUlDLFVBQVU7UUFDeEI7UUFDQSxJQUFJLENBQUNELG1CQUFtQkQ7UUFDeEIsT0FBTyxJQUFJO0lBQ2Y7SUFDQUcsMkJBQTJCQyxVQUFVLEVBQUU7UUFDbkMsSUFBSSxJQUFJLENBQUNDLDBCQUEwQjtZQUMvQixNQUFNLElBQUlILFVBQVU7UUFDeEI7UUFDQSxJQUFJLENBQUNHLDJCQUEyQkQ7UUFDaEMsT0FBTyxJQUFJO0lBQ2Y7SUFDQUUsd0JBQXdCQyxHQUFHLEVBQUU7UUFDekIsSUFBSSxJQUFJLENBQUNDLE1BQU07WUFDWCxNQUFNLElBQUlOLFVBQVU7UUFDeEI7UUFDQSxJQUFJLENBQUNNLE9BQU9EO1FBQ1osT0FBTyxJQUFJO0lBQ2Y7SUFDQUUsd0JBQXdCQyxFQUFFLEVBQUU7UUFDeEIsSUFBSSxJQUFJLENBQUNDLEtBQUs7WUFDVixNQUFNLElBQUlULFVBQVU7UUFDeEI7UUFDQSxJQUFJLENBQUNTLE1BQU1EO1FBQ1gsT0FBTyxJQUFJO0lBQ2Y7SUFDQUUsMEJBQTBCO1FBQ3RCLElBQUksQ0FBQ0MsMkJBQTJCO1FBQ2hDLE9BQU8sSUFBSTtJQUNmO0lBQ0FDLDJCQUEyQjtRQUN2QixJQUFJLENBQUNDLDRCQUE0QjtRQUNqQyxPQUFPLElBQUk7SUFDZjtJQUNBQyw0QkFBNEI7UUFDeEIsSUFBSSxDQUFDQyw2QkFBNkI7UUFDbEMsT0FBTyxJQUFJO0lBQ2Y7SUFDQSxNQUFNQyxRQUFRQyxHQUFHLEVBQUVDLE9BQU8sRUFBRTtRQUN4QixNQUFNQyxNQUFNLElBQUkzQixhQUFhNEIsZUFBZTFCLGtCQUFrQjJCLFFBQVFDLE9BQU9DLEtBQUtDLFVBQVUsSUFBSSxDQUFDQztRQUNqRyxJQUFJLElBQUksQ0FBQ2QsMEJBQTBCO1lBQy9CLElBQUksQ0FBQ1osbUJBQW1CO2dCQUFFLEdBQUcsSUFBSSxDQUFDQSxnQkFBZ0I7Z0JBQUUyQixLQUFLLElBQUksQ0FBQ0QsU0FBU0M7WUFBSTtRQUMvRTtRQUNBLElBQUksSUFBSSxDQUFDYiwyQkFBMkI7WUFDaEMsSUFBSSxDQUFDZCxtQkFBbUI7Z0JBQUUsR0FBRyxJQUFJLENBQUNBLGdCQUFnQjtnQkFBRTRCLEtBQUssSUFBSSxDQUFDRixTQUFTRTtZQUFJO1FBQy9FO1FBQ0EsSUFBSSxJQUFJLENBQUNaLDRCQUE0QjtZQUNqQyxJQUFJLENBQUNoQixtQkFBbUI7Z0JBQUUsR0FBRyxJQUFJLENBQUNBLGdCQUFnQjtnQkFBRTZCLEtBQUssSUFBSSxDQUFDSCxTQUFTRztZQUFJO1FBQy9FO1FBQ0FULElBQUl0QixtQkFBbUIsSUFBSSxDQUFDRTtRQUM1QixJQUFJLElBQUksQ0FBQ1UsS0FBSztZQUNWVSxJQUFJWix3QkFBd0IsSUFBSSxDQUFDRTtRQUNyQztRQUNBLElBQUksSUFBSSxDQUFDSCxNQUFNO1lBQ1hhLElBQUlmLHdCQUF3QixJQUFJLENBQUNFO1FBQ3JDO1FBQ0EsSUFBSSxJQUFJLENBQUNILDBCQUEwQjtZQUMvQmdCLElBQUlsQiwyQkFBMkIsSUFBSSxDQUFDRTtRQUN4QztRQUNBLE9BQU9nQixJQUFJSCxRQUFRQyxLQUFLQztJQUM1QjtBQUNKO0FBQ0E3QixrQkFBa0JFLEdBQUdBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZnVsbHN0YWNrLXJvbGUtYmFzZWQtbmV4dGpzLTIvLi9ub2RlX21vZHVsZXMvam9zZS9kaXN0L25vZGUvY2pzL2p3dC9lbmNyeXB0LmpzP2M4NjIiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLkVuY3J5cHRKV1QgPSB2b2lkIDA7XG5jb25zdCBlbmNyeXB0X2pzXzEgPSByZXF1aXJlKFwiLi4vandlL2NvbXBhY3QvZW5jcnlwdC5qc1wiKTtcbmNvbnN0IGJ1ZmZlcl91dGlsc19qc18xID0gcmVxdWlyZShcIi4uL2xpYi9idWZmZXJfdXRpbHMuanNcIik7XG5jb25zdCBwcm9kdWNlX2pzXzEgPSByZXF1aXJlKFwiLi9wcm9kdWNlLmpzXCIpO1xuY2xhc3MgRW5jcnlwdEpXVCBleHRlbmRzIHByb2R1Y2VfanNfMS5Qcm9kdWNlSldUIHtcbiAgICBzZXRQcm90ZWN0ZWRIZWFkZXIocHJvdGVjdGVkSGVhZGVyKSB7XG4gICAgICAgIGlmICh0aGlzLl9wcm90ZWN0ZWRIZWFkZXIpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ3NldFByb3RlY3RlZEhlYWRlciBjYW4gb25seSBiZSBjYWxsZWQgb25jZScpO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMuX3Byb3RlY3RlZEhlYWRlciA9IHByb3RlY3RlZEhlYWRlcjtcbiAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfVxuICAgIHNldEtleU1hbmFnZW1lbnRQYXJhbWV0ZXJzKHBhcmFtZXRlcnMpIHtcbiAgICAgICAgaWYgKHRoaXMuX2tleU1hbmFnZW1lbnRQYXJhbWV0ZXJzKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdzZXRLZXlNYW5hZ2VtZW50UGFyYW1ldGVycyBjYW4gb25seSBiZSBjYWxsZWQgb25jZScpO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMuX2tleU1hbmFnZW1lbnRQYXJhbWV0ZXJzID0gcGFyYW1ldGVycztcbiAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfVxuICAgIHNldENvbnRlbnRFbmNyeXB0aW9uS2V5KGNlaykge1xuICAgICAgICBpZiAodGhpcy5fY2VrKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdzZXRDb250ZW50RW5jcnlwdGlvbktleSBjYW4gb25seSBiZSBjYWxsZWQgb25jZScpO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMuX2NlayA9IGNlaztcbiAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfVxuICAgIHNldEluaXRpYWxpemF0aW9uVmVjdG9yKGl2KSB7XG4gICAgICAgIGlmICh0aGlzLl9pdikge1xuICAgICAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcignc2V0SW5pdGlhbGl6YXRpb25WZWN0b3IgY2FuIG9ubHkgYmUgY2FsbGVkIG9uY2UnKTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLl9pdiA9IGl2O1xuICAgICAgICByZXR1cm4gdGhpcztcbiAgICB9XG4gICAgcmVwbGljYXRlSXNzdWVyQXNIZWFkZXIoKSB7XG4gICAgICAgIHRoaXMuX3JlcGxpY2F0ZUlzc3VlckFzSGVhZGVyID0gdHJ1ZTtcbiAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfVxuICAgIHJlcGxpY2F0ZVN1YmplY3RBc0hlYWRlcigpIHtcbiAgICAgICAgdGhpcy5fcmVwbGljYXRlU3ViamVjdEFzSGVhZGVyID0gdHJ1ZTtcbiAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfVxuICAgIHJlcGxpY2F0ZUF1ZGllbmNlQXNIZWFkZXIoKSB7XG4gICAgICAgIHRoaXMuX3JlcGxpY2F0ZUF1ZGllbmNlQXNIZWFkZXIgPSB0cnVlO1xuICAgICAgICByZXR1cm4gdGhpcztcbiAgICB9XG4gICAgYXN5bmMgZW5jcnlwdChrZXksIG9wdGlvbnMpIHtcbiAgICAgICAgY29uc3QgZW5jID0gbmV3IGVuY3J5cHRfanNfMS5Db21wYWN0RW5jcnlwdChidWZmZXJfdXRpbHNfanNfMS5lbmNvZGVyLmVuY29kZShKU09OLnN0cmluZ2lmeSh0aGlzLl9wYXlsb2FkKSkpO1xuICAgICAgICBpZiAodGhpcy5fcmVwbGljYXRlSXNzdWVyQXNIZWFkZXIpIHtcbiAgICAgICAgICAgIHRoaXMuX3Byb3RlY3RlZEhlYWRlciA9IHsgLi4udGhpcy5fcHJvdGVjdGVkSGVhZGVyLCBpc3M6IHRoaXMuX3BheWxvYWQuaXNzIH07XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHRoaXMuX3JlcGxpY2F0ZVN1YmplY3RBc0hlYWRlcikge1xuICAgICAgICAgICAgdGhpcy5fcHJvdGVjdGVkSGVhZGVyID0geyAuLi50aGlzLl9wcm90ZWN0ZWRIZWFkZXIsIHN1YjogdGhpcy5fcGF5bG9hZC5zdWIgfTtcbiAgICAgICAgfVxuICAgICAgICBpZiAodGhpcy5fcmVwbGljYXRlQXVkaWVuY2VBc0hlYWRlcikge1xuICAgICAgICAgICAgdGhpcy5fcHJvdGVjdGVkSGVhZGVyID0geyAuLi50aGlzLl9wcm90ZWN0ZWRIZWFkZXIsIGF1ZDogdGhpcy5fcGF5bG9hZC5hdWQgfTtcbiAgICAgICAgfVxuICAgICAgICBlbmMuc2V0UHJvdGVjdGVkSGVhZGVyKHRoaXMuX3Byb3RlY3RlZEhlYWRlcik7XG4gICAgICAgIGlmICh0aGlzLl9pdikge1xuICAgICAgICAgICAgZW5jLnNldEluaXRpYWxpemF0aW9uVmVjdG9yKHRoaXMuX2l2KTtcbiAgICAgICAgfVxuICAgICAgICBpZiAodGhpcy5fY2VrKSB7XG4gICAgICAgICAgICBlbmMuc2V0Q29udGVudEVuY3J5cHRpb25LZXkodGhpcy5fY2VrKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAodGhpcy5fa2V5TWFuYWdlbWVudFBhcmFtZXRlcnMpIHtcbiAgICAgICAgICAgIGVuYy5zZXRLZXlNYW5hZ2VtZW50UGFyYW1ldGVycyh0aGlzLl9rZXlNYW5hZ2VtZW50UGFyYW1ldGVycyk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGVuYy5lbmNyeXB0KGtleSwgb3B0aW9ucyk7XG4gICAgfVxufVxuZXhwb3J0cy5FbmNyeXB0SldUID0gRW5jcnlwdEpXVDtcbiJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsIkVuY3J5cHRKV1QiLCJlbmNyeXB0X2pzXzEiLCJyZXF1aXJlIiwiYnVmZmVyX3V0aWxzX2pzXzEiLCJwcm9kdWNlX2pzXzEiLCJQcm9kdWNlSldUIiwic2V0UHJvdGVjdGVkSGVhZGVyIiwicHJvdGVjdGVkSGVhZGVyIiwiX3Byb3RlY3RlZEhlYWRlciIsIlR5cGVFcnJvciIsInNldEtleU1hbmFnZW1lbnRQYXJhbWV0ZXJzIiwicGFyYW1ldGVycyIsIl9rZXlNYW5hZ2VtZW50UGFyYW1ldGVycyIsInNldENvbnRlbnRFbmNyeXB0aW9uS2V5IiwiY2VrIiwiX2NlayIsInNldEluaXRpYWxpemF0aW9uVmVjdG9yIiwiaXYiLCJfaXYiLCJyZXBsaWNhdGVJc3N1ZXJBc0hlYWRlciIsIl9yZXBsaWNhdGVJc3N1ZXJBc0hlYWRlciIsInJlcGxpY2F0ZVN1YmplY3RBc0hlYWRlciIsIl9yZXBsaWNhdGVTdWJqZWN0QXNIZWFkZXIiLCJyZXBsaWNhdGVBdWRpZW5jZUFzSGVhZGVyIiwiX3JlcGxpY2F0ZUF1ZGllbmNlQXNIZWFkZXIiLCJlbmNyeXB0Iiwia2V5Iiwib3B0aW9ucyIsImVuYyIsIkNvbXBhY3RFbmNyeXB0IiwiZW5jb2RlciIsImVuY29kZSIsIkpTT04iLCJzdHJpbmdpZnkiLCJfcGF5bG9hZCIsImlzcyIsInN1YiIsImF1ZCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/jose/dist/node/cjs/jwt/encrypt.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/jose/dist/node/cjs/jwt/produce.js":
/*!********************************************************!*\
  !*** ./node_modules/jose/dist/node/cjs/jwt/produce.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.ProduceJWT = void 0;\nconst epoch_js_1 = __webpack_require__(/*! ../lib/epoch.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/lib/epoch.js\");\nconst is_object_js_1 = __webpack_require__(/*! ../lib/is_object.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/lib/is_object.js\");\nconst secs_js_1 = __webpack_require__(/*! ../lib/secs.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/lib/secs.js\");\nclass ProduceJWT {\n    constructor(payload){\n        if (!(0, is_object_js_1.default)(payload)) {\n            throw new TypeError(\"JWT Claims Set MUST be an object\");\n        }\n        this._payload = payload;\n    }\n    setIssuer(issuer) {\n        this._payload = {\n            ...this._payload,\n            iss: issuer\n        };\n        return this;\n    }\n    setSubject(subject) {\n        this._payload = {\n            ...this._payload,\n            sub: subject\n        };\n        return this;\n    }\n    setAudience(audience) {\n        this._payload = {\n            ...this._payload,\n            aud: audience\n        };\n        return this;\n    }\n    setJti(jwtId) {\n        this._payload = {\n            ...this._payload,\n            jti: jwtId\n        };\n        return this;\n    }\n    setNotBefore(input) {\n        if (typeof input === \"number\") {\n            this._payload = {\n                ...this._payload,\n                nbf: input\n            };\n        } else {\n            this._payload = {\n                ...this._payload,\n                nbf: (0, epoch_js_1.default)(new Date()) + (0, secs_js_1.default)(input)\n            };\n        }\n        return this;\n    }\n    setExpirationTime(input) {\n        if (typeof input === \"number\") {\n            this._payload = {\n                ...this._payload,\n                exp: input\n            };\n        } else {\n            this._payload = {\n                ...this._payload,\n                exp: (0, epoch_js_1.default)(new Date()) + (0, secs_js_1.default)(input)\n            };\n        }\n        return this;\n    }\n    setIssuedAt(input) {\n        if (typeof input === \"undefined\") {\n            this._payload = {\n                ...this._payload,\n                iat: (0, epoch_js_1.default)(new Date())\n            };\n        } else {\n            this._payload = {\n                ...this._payload,\n                iat: input\n            };\n        }\n        return this;\n    }\n}\nexports.ProduceJWT = ProduceJWT;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvam9zZS9kaXN0L25vZGUvY2pzL2p3dC9wcm9kdWNlLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2JBLDhDQUE2QztJQUFFRyxPQUFPO0FBQUssQ0FBQyxFQUFDO0FBQzdERCxrQkFBa0JFLEdBQUcsS0FBSztBQUMxQixNQUFNQyxhQUFhQyxtQkFBT0EsQ0FBQyxtRkFBaUI7QUFDNUMsTUFBTUMsaUJBQWlCRCxtQkFBT0EsQ0FBQywyRkFBcUI7QUFDcEQsTUFBTUUsWUFBWUYsbUJBQU9BLENBQUMsaUZBQWdCO0FBQzFDLE1BQU1GO0lBQ0ZLLFlBQVlDLE9BQU8sQ0FBRTtRQUNqQixJQUFJLENBQUMsQ0FBQyxHQUFHSCxlQUFlSSxPQUFNLEVBQUdELFVBQVU7WUFDdkMsTUFBTSxJQUFJRSxVQUFVO1FBQ3hCO1FBQ0EsSUFBSSxDQUFDQyxXQUFXSDtJQUNwQjtJQUNBSSxVQUFVQyxNQUFNLEVBQUU7UUFDZCxJQUFJLENBQUNGLFdBQVc7WUFBRSxHQUFHLElBQUksQ0FBQ0EsUUFBUTtZQUFFRyxLQUFLRDtRQUFPO1FBQ2hELE9BQU8sSUFBSTtJQUNmO0lBQ0FFLFdBQVdDLE9BQU8sRUFBRTtRQUNoQixJQUFJLENBQUNMLFdBQVc7WUFBRSxHQUFHLElBQUksQ0FBQ0EsUUFBUTtZQUFFTSxLQUFLRDtRQUFRO1FBQ2pELE9BQU8sSUFBSTtJQUNmO0lBQ0FFLFlBQVlDLFFBQVEsRUFBRTtRQUNsQixJQUFJLENBQUNSLFdBQVc7WUFBRSxHQUFHLElBQUksQ0FBQ0EsUUFBUTtZQUFFUyxLQUFLRDtRQUFTO1FBQ2xELE9BQU8sSUFBSTtJQUNmO0lBQ0FFLE9BQU9DLEtBQUssRUFBRTtRQUNWLElBQUksQ0FBQ1gsV0FBVztZQUFFLEdBQUcsSUFBSSxDQUFDQSxRQUFRO1lBQUVZLEtBQUtEO1FBQU07UUFDL0MsT0FBTyxJQUFJO0lBQ2Y7SUFDQUUsYUFBYUMsS0FBSyxFQUFFO1FBQ2hCLElBQUksT0FBT0EsVUFBVSxVQUFVO1lBQzNCLElBQUksQ0FBQ2QsV0FBVztnQkFBRSxHQUFHLElBQUksQ0FBQ0EsUUFBUTtnQkFBRWUsS0FBS0Q7WUFBTTtRQUNuRCxPQUNLO1lBQ0QsSUFBSSxDQUFDZCxXQUFXO2dCQUFFLEdBQUcsSUFBSSxDQUFDQSxRQUFRO2dCQUFFZSxLQUFLLENBQUMsR0FBR3ZCLFdBQVdNLE9BQU0sRUFBRyxJQUFJa0IsVUFBVSxDQUFDLEdBQUdyQixVQUFVRyxPQUFNLEVBQUdnQjtZQUFPO1FBQ2pIO1FBQ0EsT0FBTyxJQUFJO0lBQ2Y7SUFDQUcsa0JBQWtCSCxLQUFLLEVBQUU7UUFDckIsSUFBSSxPQUFPQSxVQUFVLFVBQVU7WUFDM0IsSUFBSSxDQUFDZCxXQUFXO2dCQUFFLEdBQUcsSUFBSSxDQUFDQSxRQUFRO2dCQUFFa0IsS0FBS0o7WUFBTTtRQUNuRCxPQUNLO1lBQ0QsSUFBSSxDQUFDZCxXQUFXO2dCQUFFLEdBQUcsSUFBSSxDQUFDQSxRQUFRO2dCQUFFa0IsS0FBSyxDQUFDLEdBQUcxQixXQUFXTSxPQUFNLEVBQUcsSUFBSWtCLFVBQVUsQ0FBQyxHQUFHckIsVUFBVUcsT0FBTSxFQUFHZ0I7WUFBTztRQUNqSDtRQUNBLE9BQU8sSUFBSTtJQUNmO0lBQ0FLLFlBQVlMLEtBQUssRUFBRTtRQUNmLElBQUksT0FBT0EsVUFBVSxhQUFhO1lBQzlCLElBQUksQ0FBQ2QsV0FBVztnQkFBRSxHQUFHLElBQUksQ0FBQ0EsUUFBUTtnQkFBRW9CLEtBQUssQ0FBQyxHQUFHNUIsV0FBV00sT0FBTSxFQUFHLElBQUlrQjtZQUFRO1FBQ2pGLE9BQ0s7WUFDRCxJQUFJLENBQUNoQixXQUFXO2dCQUFFLEdBQUcsSUFBSSxDQUFDQSxRQUFRO2dCQUFFb0IsS0FBS047WUFBTTtRQUNuRDtRQUNBLE9BQU8sSUFBSTtJQUNmO0FBQ0o7QUFDQXpCLGtCQUFrQkUsR0FBR0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mdWxsc3RhY2stcm9sZS1iYXNlZC1uZXh0anMtMi8uL25vZGVfbW9kdWxlcy9qb3NlL2Rpc3Qvbm9kZS9janMvand0L3Byb2R1Y2UuanM/NWEwYyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuUHJvZHVjZUpXVCA9IHZvaWQgMDtcbmNvbnN0IGVwb2NoX2pzXzEgPSByZXF1aXJlKFwiLi4vbGliL2Vwb2NoLmpzXCIpO1xuY29uc3QgaXNfb2JqZWN0X2pzXzEgPSByZXF1aXJlKFwiLi4vbGliL2lzX29iamVjdC5qc1wiKTtcbmNvbnN0IHNlY3NfanNfMSA9IHJlcXVpcmUoXCIuLi9saWIvc2Vjcy5qc1wiKTtcbmNsYXNzIFByb2R1Y2VKV1Qge1xuICAgIGNvbnN0cnVjdG9yKHBheWxvYWQpIHtcbiAgICAgICAgaWYgKCEoMCwgaXNfb2JqZWN0X2pzXzEuZGVmYXVsdCkocGF5bG9hZCkpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ0pXVCBDbGFpbXMgU2V0IE1VU1QgYmUgYW4gb2JqZWN0Jyk7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5fcGF5bG9hZCA9IHBheWxvYWQ7XG4gICAgfVxuICAgIHNldElzc3Vlcihpc3N1ZXIpIHtcbiAgICAgICAgdGhpcy5fcGF5bG9hZCA9IHsgLi4udGhpcy5fcGF5bG9hZCwgaXNzOiBpc3N1ZXIgfTtcbiAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfVxuICAgIHNldFN1YmplY3Qoc3ViamVjdCkge1xuICAgICAgICB0aGlzLl9wYXlsb2FkID0geyAuLi50aGlzLl9wYXlsb2FkLCBzdWI6IHN1YmplY3QgfTtcbiAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfVxuICAgIHNldEF1ZGllbmNlKGF1ZGllbmNlKSB7XG4gICAgICAgIHRoaXMuX3BheWxvYWQgPSB7IC4uLnRoaXMuX3BheWxvYWQsIGF1ZDogYXVkaWVuY2UgfTtcbiAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfVxuICAgIHNldEp0aShqd3RJZCkge1xuICAgICAgICB0aGlzLl9wYXlsb2FkID0geyAuLi50aGlzLl9wYXlsb2FkLCBqdGk6IGp3dElkIH07XG4gICAgICAgIHJldHVybiB0aGlzO1xuICAgIH1cbiAgICBzZXROb3RCZWZvcmUoaW5wdXQpIHtcbiAgICAgICAgaWYgKHR5cGVvZiBpbnB1dCA9PT0gJ251bWJlcicpIHtcbiAgICAgICAgICAgIHRoaXMuX3BheWxvYWQgPSB7IC4uLnRoaXMuX3BheWxvYWQsIG5iZjogaW5wdXQgfTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHRoaXMuX3BheWxvYWQgPSB7IC4uLnRoaXMuX3BheWxvYWQsIG5iZjogKDAsIGVwb2NoX2pzXzEuZGVmYXVsdCkobmV3IERhdGUoKSkgKyAoMCwgc2Vjc19qc18xLmRlZmF1bHQpKGlucHV0KSB9O1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB0aGlzO1xuICAgIH1cbiAgICBzZXRFeHBpcmF0aW9uVGltZShpbnB1dCkge1xuICAgICAgICBpZiAodHlwZW9mIGlucHV0ID09PSAnbnVtYmVyJykge1xuICAgICAgICAgICAgdGhpcy5fcGF5bG9hZCA9IHsgLi4udGhpcy5fcGF5bG9hZCwgZXhwOiBpbnB1dCB9O1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgdGhpcy5fcGF5bG9hZCA9IHsgLi4udGhpcy5fcGF5bG9hZCwgZXhwOiAoMCwgZXBvY2hfanNfMS5kZWZhdWx0KShuZXcgRGF0ZSgpKSArICgwLCBzZWNzX2pzXzEuZGVmYXVsdCkoaW5wdXQpIH07XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfVxuICAgIHNldElzc3VlZEF0KGlucHV0KSB7XG4gICAgICAgIGlmICh0eXBlb2YgaW5wdXQgPT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgICAgICB0aGlzLl9wYXlsb2FkID0geyAuLi50aGlzLl9wYXlsb2FkLCBpYXQ6ICgwLCBlcG9jaF9qc18xLmRlZmF1bHQpKG5ldyBEYXRlKCkpIH07XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICB0aGlzLl9wYXlsb2FkID0geyAuLi50aGlzLl9wYXlsb2FkLCBpYXQ6IGlucHV0IH07XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfVxufVxuZXhwb3J0cy5Qcm9kdWNlSldUID0gUHJvZHVjZUpXVDtcbiJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsIlByb2R1Y2VKV1QiLCJlcG9jaF9qc18xIiwicmVxdWlyZSIsImlzX29iamVjdF9qc18xIiwic2Vjc19qc18xIiwiY29uc3RydWN0b3IiLCJwYXlsb2FkIiwiZGVmYXVsdCIsIlR5cGVFcnJvciIsIl9wYXlsb2FkIiwic2V0SXNzdWVyIiwiaXNzdWVyIiwiaXNzIiwic2V0U3ViamVjdCIsInN1YmplY3QiLCJzdWIiLCJzZXRBdWRpZW5jZSIsImF1ZGllbmNlIiwiYXVkIiwic2V0SnRpIiwiand0SWQiLCJqdGkiLCJzZXROb3RCZWZvcmUiLCJpbnB1dCIsIm5iZiIsIkRhdGUiLCJzZXRFeHBpcmF0aW9uVGltZSIsImV4cCIsInNldElzc3VlZEF0IiwiaWF0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/jose/dist/node/cjs/jwt/produce.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/jose/dist/node/cjs/jwt/sign.js":
/*!*****************************************************!*\
  !*** ./node_modules/jose/dist/node/cjs/jwt/sign.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.SignJWT = void 0;\nconst sign_js_1 = __webpack_require__(/*! ../jws/compact/sign.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/jws/compact/sign.js\");\nconst errors_js_1 = __webpack_require__(/*! ../util/errors.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/util/errors.js\");\nconst buffer_utils_js_1 = __webpack_require__(/*! ../lib/buffer_utils.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/lib/buffer_utils.js\");\nconst produce_js_1 = __webpack_require__(/*! ./produce.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/jwt/produce.js\");\nclass SignJWT extends produce_js_1.ProduceJWT {\n    setProtectedHeader(protectedHeader) {\n        this._protectedHeader = protectedHeader;\n        return this;\n    }\n    async sign(key, options) {\n        var _a;\n        const sig = new sign_js_1.CompactSign(buffer_utils_js_1.encoder.encode(JSON.stringify(this._payload)));\n        sig.setProtectedHeader(this._protectedHeader);\n        if (Array.isArray((_a = this._protectedHeader) === null || _a === void 0 ? void 0 : _a.crit) && this._protectedHeader.crit.includes(\"b64\") && this._protectedHeader.b64 === false) {\n            throw new errors_js_1.JWTInvalid(\"JWTs MUST NOT use unencoded payload\");\n        }\n        return sig.sign(key, options);\n    }\n}\nexports.SignJWT = SignJWT;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvam9zZS9kaXN0L25vZGUvY2pzL2p3dC9zaWduLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2JBLDhDQUE2QztJQUFFRyxPQUFPO0FBQUssQ0FBQyxFQUFDO0FBQzdERCxlQUFlRSxHQUFHLEtBQUs7QUFDdkIsTUFBTUMsWUFBWUMsbUJBQU9BLENBQUMsaUdBQXdCO0FBQ2xELE1BQU1DLGNBQWNELG1CQUFPQSxDQUFDLHVGQUFtQjtBQUMvQyxNQUFNRSxvQkFBb0JGLG1CQUFPQSxDQUFDLGlHQUF3QjtBQUMxRCxNQUFNRyxlQUFlSCxtQkFBT0EsQ0FBQyxrRkFBYztBQUMzQyxNQUFNRixnQkFBZ0JLLGFBQWFDO0lBQy9CQyxtQkFBbUJDLGVBQWUsRUFBRTtRQUNoQyxJQUFJLENBQUNDLG1CQUFtQkQ7UUFDeEIsT0FBTyxJQUFJO0lBQ2Y7SUFDQSxNQUFNRSxLQUFLQyxHQUFHLEVBQUVDLE9BQU8sRUFBRTtRQUNyQixJQUFJQztRQUNKLE1BQU1DLE1BQU0sSUFBSWIsVUFBVWMsWUFBWVgsa0JBQWtCWSxRQUFRQyxPQUFPQyxLQUFLQyxVQUFVLElBQUksQ0FBQ0M7UUFDM0ZOLElBQUlQLG1CQUFtQixJQUFJLENBQUNFO1FBQzVCLElBQUlZLE1BQU1DLFFBQVEsQ0FBQ1QsS0FBSyxJQUFJLENBQUNKLGdCQUFlLE1BQU8sUUFBUUksT0FBTyxLQUFLLElBQUksS0FBSyxJQUFJQSxHQUFHVSxTQUNuRixJQUFJLENBQUNkLGlCQUFpQmMsS0FBS0MsU0FBUyxVQUNwQyxJQUFJLENBQUNmLGlCQUFpQmdCLFFBQVEsT0FBTztZQUNyQyxNQUFNLElBQUl0QixZQUFZdUIsV0FBVztRQUNyQztRQUNBLE9BQU9aLElBQUlKLEtBQUtDLEtBQUtDO0lBQ3pCO0FBQ0o7QUFDQWQsZUFBZUUsR0FBR0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mdWxsc3RhY2stcm9sZS1iYXNlZC1uZXh0anMtMi8uL25vZGVfbW9kdWxlcy9qb3NlL2Rpc3Qvbm9kZS9janMvand0L3NpZ24uanM/N2NiYSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuU2lnbkpXVCA9IHZvaWQgMDtcbmNvbnN0IHNpZ25fanNfMSA9IHJlcXVpcmUoXCIuLi9qd3MvY29tcGFjdC9zaWduLmpzXCIpO1xuY29uc3QgZXJyb3JzX2pzXzEgPSByZXF1aXJlKFwiLi4vdXRpbC9lcnJvcnMuanNcIik7XG5jb25zdCBidWZmZXJfdXRpbHNfanNfMSA9IHJlcXVpcmUoXCIuLi9saWIvYnVmZmVyX3V0aWxzLmpzXCIpO1xuY29uc3QgcHJvZHVjZV9qc18xID0gcmVxdWlyZShcIi4vcHJvZHVjZS5qc1wiKTtcbmNsYXNzIFNpZ25KV1QgZXh0ZW5kcyBwcm9kdWNlX2pzXzEuUHJvZHVjZUpXVCB7XG4gICAgc2V0UHJvdGVjdGVkSGVhZGVyKHByb3RlY3RlZEhlYWRlcikge1xuICAgICAgICB0aGlzLl9wcm90ZWN0ZWRIZWFkZXIgPSBwcm90ZWN0ZWRIZWFkZXI7XG4gICAgICAgIHJldHVybiB0aGlzO1xuICAgIH1cbiAgICBhc3luYyBzaWduKGtleSwgb3B0aW9ucykge1xuICAgICAgICB2YXIgX2E7XG4gICAgICAgIGNvbnN0IHNpZyA9IG5ldyBzaWduX2pzXzEuQ29tcGFjdFNpZ24oYnVmZmVyX3V0aWxzX2pzXzEuZW5jb2Rlci5lbmNvZGUoSlNPTi5zdHJpbmdpZnkodGhpcy5fcGF5bG9hZCkpKTtcbiAgICAgICAgc2lnLnNldFByb3RlY3RlZEhlYWRlcih0aGlzLl9wcm90ZWN0ZWRIZWFkZXIpO1xuICAgICAgICBpZiAoQXJyYXkuaXNBcnJheSgoX2EgPSB0aGlzLl9wcm90ZWN0ZWRIZWFkZXIpID09PSBudWxsIHx8IF9hID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYS5jcml0KSAmJlxuICAgICAgICAgICAgdGhpcy5fcHJvdGVjdGVkSGVhZGVyLmNyaXQuaW5jbHVkZXMoJ2I2NCcpICYmXG4gICAgICAgICAgICB0aGlzLl9wcm90ZWN0ZWRIZWFkZXIuYjY0ID09PSBmYWxzZSkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IGVycm9yc19qc18xLkpXVEludmFsaWQoJ0pXVHMgTVVTVCBOT1QgdXNlIHVuZW5jb2RlZCBwYXlsb2FkJyk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHNpZy5zaWduKGtleSwgb3B0aW9ucyk7XG4gICAgfVxufVxuZXhwb3J0cy5TaWduSldUID0gU2lnbkpXVDtcbiJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsIlNpZ25KV1QiLCJzaWduX2pzXzEiLCJyZXF1aXJlIiwiZXJyb3JzX2pzXzEiLCJidWZmZXJfdXRpbHNfanNfMSIsInByb2R1Y2VfanNfMSIsIlByb2R1Y2VKV1QiLCJzZXRQcm90ZWN0ZWRIZWFkZXIiLCJwcm90ZWN0ZWRIZWFkZXIiLCJfcHJvdGVjdGVkSGVhZGVyIiwic2lnbiIsImtleSIsIm9wdGlvbnMiLCJfYSIsInNpZyIsIkNvbXBhY3RTaWduIiwiZW5jb2RlciIsImVuY29kZSIsIkpTT04iLCJzdHJpbmdpZnkiLCJfcGF5bG9hZCIsIkFycmF5IiwiaXNBcnJheSIsImNyaXQiLCJpbmNsdWRlcyIsImI2NCIsIkpXVEludmFsaWQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/jose/dist/node/cjs/jwt/sign.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/jose/dist/node/cjs/jwt/unsecured.js":
/*!**********************************************************!*\
  !*** ./node_modules/jose/dist/node/cjs/jwt/unsecured.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.UnsecuredJWT = void 0;\nconst base64url = __webpack_require__(/*! ../runtime/base64url.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/runtime/base64url.js\");\nconst buffer_utils_js_1 = __webpack_require__(/*! ../lib/buffer_utils.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/lib/buffer_utils.js\");\nconst errors_js_1 = __webpack_require__(/*! ../util/errors.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/util/errors.js\");\nconst jwt_claims_set_js_1 = __webpack_require__(/*! ../lib/jwt_claims_set.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/lib/jwt_claims_set.js\");\nconst produce_js_1 = __webpack_require__(/*! ./produce.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/jwt/produce.js\");\nclass UnsecuredJWT extends produce_js_1.ProduceJWT {\n    encode() {\n        const header = base64url.encode(JSON.stringify({\n            alg: \"none\"\n        }));\n        const payload = base64url.encode(JSON.stringify(this._payload));\n        return `${header}.${payload}.`;\n    }\n    static decode(jwt, options) {\n        if (typeof jwt !== \"string\") {\n            throw new errors_js_1.JWTInvalid(\"Unsecured JWT must be a string\");\n        }\n        const { 0: encodedHeader , 1: encodedPayload , 2: signature , length  } = jwt.split(\".\");\n        if (length !== 3 || signature !== \"\") {\n            throw new errors_js_1.JWTInvalid(\"Invalid Unsecured JWT\");\n        }\n        let header;\n        try {\n            header = JSON.parse(buffer_utils_js_1.decoder.decode(base64url.decode(encodedHeader)));\n            if (header.alg !== \"none\") throw new Error();\n        } catch  {\n            throw new errors_js_1.JWTInvalid(\"Invalid Unsecured JWT\");\n        }\n        const payload = (0, jwt_claims_set_js_1.default)(header, base64url.decode(encodedPayload), options);\n        return {\n            payload,\n            header\n        };\n    }\n}\nexports.UnsecuredJWT = UnsecuredJWT;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvam9zZS9kaXN0L25vZGUvY2pzL2p3dC91bnNlY3VyZWQuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYkEsOENBQTZDO0lBQUVHLE9BQU87QUFBSyxDQUFDLEVBQUM7QUFDN0RELG9CQUFvQkUsR0FBRyxLQUFLO0FBQzVCLE1BQU1DLFlBQVlDLG1CQUFPQSxDQUFDLG1HQUF5QjtBQUNuRCxNQUFNQyxvQkFBb0JELG1CQUFPQSxDQUFDLGlHQUF3QjtBQUMxRCxNQUFNRSxjQUFjRixtQkFBT0EsQ0FBQyx1RkFBbUI7QUFDL0MsTUFBTUcsc0JBQXNCSCxtQkFBT0EsQ0FBQyxxR0FBMEI7QUFDOUQsTUFBTUksZUFBZUosbUJBQU9BLENBQUMsa0ZBQWM7QUFDM0MsTUFBTUYscUJBQXFCTSxhQUFhQztJQUNwQ0MsU0FBUztRQUNMLE1BQU1DLFNBQVNSLFVBQVVPLE9BQU9FLEtBQUtDLFVBQVU7WUFBRUMsS0FBSztRQUFPO1FBQzdELE1BQU1DLFVBQVVaLFVBQVVPLE9BQU9FLEtBQUtDLFVBQVUsSUFBSSxDQUFDRztRQUNyRCxPQUFPLENBQUMsRUFBRUwsT0FBTyxDQUFDLEVBQUVJLFFBQVEsQ0FBQyxDQUFDO0lBQ2xDO0lBQ0EsT0FBT0UsT0FBT0MsR0FBRyxFQUFFQyxPQUFPLEVBQUU7UUFDeEIsSUFBSSxPQUFPRCxRQUFRLFVBQVU7WUFDekIsTUFBTSxJQUFJWixZQUFZYyxXQUFXO1FBQ3JDO1FBQ0EsTUFBTSxFQUFFLEdBQUdDLGNBQWEsRUFBRSxHQUFHQyxlQUFjLEVBQUUsR0FBR0MsVUFBUyxFQUFFQyxPQUFNLEVBQUUsR0FBR04sSUFBSU8sTUFBTTtRQUNoRixJQUFJRCxXQUFXLEtBQUtELGNBQWMsSUFBSTtZQUNsQyxNQUFNLElBQUlqQixZQUFZYyxXQUFXO1FBQ3JDO1FBQ0EsSUFBSVQ7UUFDSixJQUFJO1lBQ0FBLFNBQVNDLEtBQUtjLE1BQU1yQixrQkFBa0JzQixRQUFRVixPQUFPZCxVQUFVYyxPQUFPSTtZQUN0RSxJQUFJVixPQUFPRyxRQUFRLFFBQ2YsTUFBTSxJQUFJYztRQUNsQixFQUNBLE9BQU07WUFDRixNQUFNLElBQUl0QixZQUFZYyxXQUFXO1FBQ3JDO1FBQ0EsTUFBTUwsVUFBVSxDQUFDLEdBQUdSLG9CQUFvQnNCLE9BQU0sRUFBR2xCLFFBQVFSLFVBQVVjLE9BQU9LLGlCQUFpQkg7UUFDM0YsT0FBTztZQUFFSjtZQUFTSjtRQUFPO0lBQzdCO0FBQ0o7QUFDQVgsb0JBQW9CRSxHQUFHQSIsInNvdXJjZXMiOlsid2VicGFjazovL2Z1bGxzdGFjay1yb2xlLWJhc2VkLW5leHRqcy0yLy4vbm9kZV9tb2R1bGVzL2pvc2UvZGlzdC9ub2RlL2Nqcy9qd3QvdW5zZWN1cmVkLmpzPzAxMDYiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLlVuc2VjdXJlZEpXVCA9IHZvaWQgMDtcbmNvbnN0IGJhc2U2NHVybCA9IHJlcXVpcmUoXCIuLi9ydW50aW1lL2Jhc2U2NHVybC5qc1wiKTtcbmNvbnN0IGJ1ZmZlcl91dGlsc19qc18xID0gcmVxdWlyZShcIi4uL2xpYi9idWZmZXJfdXRpbHMuanNcIik7XG5jb25zdCBlcnJvcnNfanNfMSA9IHJlcXVpcmUoXCIuLi91dGlsL2Vycm9ycy5qc1wiKTtcbmNvbnN0IGp3dF9jbGFpbXNfc2V0X2pzXzEgPSByZXF1aXJlKFwiLi4vbGliL2p3dF9jbGFpbXNfc2V0LmpzXCIpO1xuY29uc3QgcHJvZHVjZV9qc18xID0gcmVxdWlyZShcIi4vcHJvZHVjZS5qc1wiKTtcbmNsYXNzIFVuc2VjdXJlZEpXVCBleHRlbmRzIHByb2R1Y2VfanNfMS5Qcm9kdWNlSldUIHtcbiAgICBlbmNvZGUoKSB7XG4gICAgICAgIGNvbnN0IGhlYWRlciA9IGJhc2U2NHVybC5lbmNvZGUoSlNPTi5zdHJpbmdpZnkoeyBhbGc6ICdub25lJyB9KSk7XG4gICAgICAgIGNvbnN0IHBheWxvYWQgPSBiYXNlNjR1cmwuZW5jb2RlKEpTT04uc3RyaW5naWZ5KHRoaXMuX3BheWxvYWQpKTtcbiAgICAgICAgcmV0dXJuIGAke2hlYWRlcn0uJHtwYXlsb2FkfS5gO1xuICAgIH1cbiAgICBzdGF0aWMgZGVjb2RlKGp3dCwgb3B0aW9ucykge1xuICAgICAgICBpZiAodHlwZW9mIGp3dCAhPT0gJ3N0cmluZycpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBlcnJvcnNfanNfMS5KV1RJbnZhbGlkKCdVbnNlY3VyZWQgSldUIG11c3QgYmUgYSBzdHJpbmcnKTtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCB7IDA6IGVuY29kZWRIZWFkZXIsIDE6IGVuY29kZWRQYXlsb2FkLCAyOiBzaWduYXR1cmUsIGxlbmd0aCB9ID0gand0LnNwbGl0KCcuJyk7XG4gICAgICAgIGlmIChsZW5ndGggIT09IDMgfHwgc2lnbmF0dXJlICE9PSAnJykge1xuICAgICAgICAgICAgdGhyb3cgbmV3IGVycm9yc19qc18xLkpXVEludmFsaWQoJ0ludmFsaWQgVW5zZWN1cmVkIEpXVCcpO1xuICAgICAgICB9XG4gICAgICAgIGxldCBoZWFkZXI7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICBoZWFkZXIgPSBKU09OLnBhcnNlKGJ1ZmZlcl91dGlsc19qc18xLmRlY29kZXIuZGVjb2RlKGJhc2U2NHVybC5kZWNvZGUoZW5jb2RlZEhlYWRlcikpKTtcbiAgICAgICAgICAgIGlmIChoZWFkZXIuYWxnICE9PSAnbm9uZScpXG4gICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCk7XG4gICAgICAgIH1cbiAgICAgICAgY2F0Y2gge1xuICAgICAgICAgICAgdGhyb3cgbmV3IGVycm9yc19qc18xLkpXVEludmFsaWQoJ0ludmFsaWQgVW5zZWN1cmVkIEpXVCcpO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IHBheWxvYWQgPSAoMCwgand0X2NsYWltc19zZXRfanNfMS5kZWZhdWx0KShoZWFkZXIsIGJhc2U2NHVybC5kZWNvZGUoZW5jb2RlZFBheWxvYWQpLCBvcHRpb25zKTtcbiAgICAgICAgcmV0dXJuIHsgcGF5bG9hZCwgaGVhZGVyIH07XG4gICAgfVxufVxuZXhwb3J0cy5VbnNlY3VyZWRKV1QgPSBVbnNlY3VyZWRKV1Q7XG4iXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJVbnNlY3VyZWRKV1QiLCJiYXNlNjR1cmwiLCJyZXF1aXJlIiwiYnVmZmVyX3V0aWxzX2pzXzEiLCJlcnJvcnNfanNfMSIsImp3dF9jbGFpbXNfc2V0X2pzXzEiLCJwcm9kdWNlX2pzXzEiLCJQcm9kdWNlSldUIiwiZW5jb2RlIiwiaGVhZGVyIiwiSlNPTiIsInN0cmluZ2lmeSIsImFsZyIsInBheWxvYWQiLCJfcGF5bG9hZCIsImRlY29kZSIsImp3dCIsIm9wdGlvbnMiLCJKV1RJbnZhbGlkIiwiZW5jb2RlZEhlYWRlciIsImVuY29kZWRQYXlsb2FkIiwic2lnbmF0dXJlIiwibGVuZ3RoIiwic3BsaXQiLCJwYXJzZSIsImRlY29kZXIiLCJFcnJvciIsImRlZmF1bHQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/jose/dist/node/cjs/jwt/unsecured.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/jose/dist/node/cjs/jwt/verify.js":
/*!*******************************************************!*\
  !*** ./node_modules/jose/dist/node/cjs/jwt/verify.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.jwtVerify = void 0;\nconst verify_js_1 = __webpack_require__(/*! ../jws/compact/verify.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/jws/compact/verify.js\");\nconst jwt_claims_set_js_1 = __webpack_require__(/*! ../lib/jwt_claims_set.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/lib/jwt_claims_set.js\");\nconst errors_js_1 = __webpack_require__(/*! ../util/errors.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/util/errors.js\");\nasync function jwtVerify(jwt, key, options) {\n    var _a;\n    const verified = await (0, verify_js_1.compactVerify)(jwt, key, options);\n    if (((_a = verified.protectedHeader.crit) === null || _a === void 0 ? void 0 : _a.includes(\"b64\")) && verified.protectedHeader.b64 === false) {\n        throw new errors_js_1.JWTInvalid(\"JWTs MUST NOT use unencoded payload\");\n    }\n    const payload = (0, jwt_claims_set_js_1.default)(verified.protectedHeader, verified.payload, options);\n    const result = {\n        payload,\n        protectedHeader: verified.protectedHeader\n    };\n    if (typeof key === \"function\") {\n        return {\n            ...result,\n            key: verified.key\n        };\n    }\n    return result;\n}\nexports.jwtVerify = jwtVerify;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvam9zZS9kaXN0L25vZGUvY2pzL2p3dC92ZXJpZnkuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYkEsOENBQTZDO0lBQUVHLE9BQU87QUFBSyxDQUFDLEVBQUM7QUFDN0RELGlCQUFpQkUsR0FBRyxLQUFLO0FBQ3pCLE1BQU1DLGNBQWNDLG1CQUFPQSxDQUFDLHFHQUEwQjtBQUN0RCxNQUFNQyxzQkFBc0JELG1CQUFPQSxDQUFDLHFHQUEwQjtBQUM5RCxNQUFNRSxjQUFjRixtQkFBT0EsQ0FBQyx1RkFBbUI7QUFDL0MsZUFBZUYsVUFBVUssR0FBRyxFQUFFQyxHQUFHLEVBQUVDLE9BQU87SUFDdEMsSUFBSUM7SUFDSixNQUFNQyxXQUFXLE1BQU0sQ0FBQyxHQUFHUixZQUFZUyxhQUFZLEVBQUdMLEtBQUtDLEtBQUtDO0lBQ2hFLElBQUksQ0FBQyxDQUFDQyxLQUFLQyxTQUFTRSxnQkFBZ0JDLElBQUcsTUFBTyxRQUFRSixPQUFPLEtBQUssSUFBSSxLQUFLLElBQUlBLEdBQUdLLFNBQVMsTUFBSyxLQUFNSixTQUFTRSxnQkFBZ0JHLFFBQVEsT0FBTztRQUMxSSxNQUFNLElBQUlWLFlBQVlXLFdBQVc7SUFDckM7SUFDQSxNQUFNQyxVQUFVLENBQUMsR0FBR2Isb0JBQW9CYyxPQUFNLEVBQUdSLFNBQVNFLGlCQUFpQkYsU0FBU08sU0FBU1Q7SUFDN0YsTUFBTVcsU0FBUztRQUFFRjtRQUFTTCxpQkFBaUJGLFNBQVNFO0lBQWdCO0lBQ3BFLElBQUksT0FBT0wsUUFBUSxZQUFZO1FBQzNCLE9BQU87WUFBRSxHQUFHWSxNQUFNO1lBQUVaLEtBQUtHLFNBQVNIO1FBQUk7SUFDMUM7SUFDQSxPQUFPWTtBQUNYO0FBQ0FwQixpQkFBaUJFLEdBQUdBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZnVsbHN0YWNrLXJvbGUtYmFzZWQtbmV4dGpzLTIvLi9ub2RlX21vZHVsZXMvam9zZS9kaXN0L25vZGUvY2pzL2p3dC92ZXJpZnkuanM/MDhhNCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuand0VmVyaWZ5ID0gdm9pZCAwO1xuY29uc3QgdmVyaWZ5X2pzXzEgPSByZXF1aXJlKFwiLi4vandzL2NvbXBhY3QvdmVyaWZ5LmpzXCIpO1xuY29uc3Qgand0X2NsYWltc19zZXRfanNfMSA9IHJlcXVpcmUoXCIuLi9saWIvand0X2NsYWltc19zZXQuanNcIik7XG5jb25zdCBlcnJvcnNfanNfMSA9IHJlcXVpcmUoXCIuLi91dGlsL2Vycm9ycy5qc1wiKTtcbmFzeW5jIGZ1bmN0aW9uIGp3dFZlcmlmeShqd3QsIGtleSwgb3B0aW9ucykge1xuICAgIHZhciBfYTtcbiAgICBjb25zdCB2ZXJpZmllZCA9IGF3YWl0ICgwLCB2ZXJpZnlfanNfMS5jb21wYWN0VmVyaWZ5KShqd3QsIGtleSwgb3B0aW9ucyk7XG4gICAgaWYgKCgoX2EgPSB2ZXJpZmllZC5wcm90ZWN0ZWRIZWFkZXIuY3JpdCkgPT09IG51bGwgfHwgX2EgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9hLmluY2x1ZGVzKCdiNjQnKSkgJiYgdmVyaWZpZWQucHJvdGVjdGVkSGVhZGVyLmI2NCA9PT0gZmFsc2UpIHtcbiAgICAgICAgdGhyb3cgbmV3IGVycm9yc19qc18xLkpXVEludmFsaWQoJ0pXVHMgTVVTVCBOT1QgdXNlIHVuZW5jb2RlZCBwYXlsb2FkJyk7XG4gICAgfVxuICAgIGNvbnN0IHBheWxvYWQgPSAoMCwgand0X2NsYWltc19zZXRfanNfMS5kZWZhdWx0KSh2ZXJpZmllZC5wcm90ZWN0ZWRIZWFkZXIsIHZlcmlmaWVkLnBheWxvYWQsIG9wdGlvbnMpO1xuICAgIGNvbnN0IHJlc3VsdCA9IHsgcGF5bG9hZCwgcHJvdGVjdGVkSGVhZGVyOiB2ZXJpZmllZC5wcm90ZWN0ZWRIZWFkZXIgfTtcbiAgICBpZiAodHlwZW9mIGtleSA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICByZXR1cm4geyAuLi5yZXN1bHQsIGtleTogdmVyaWZpZWQua2V5IH07XG4gICAgfVxuICAgIHJldHVybiByZXN1bHQ7XG59XG5leHBvcnRzLmp3dFZlcmlmeSA9IGp3dFZlcmlmeTtcbiJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsImp3dFZlcmlmeSIsInZlcmlmeV9qc18xIiwicmVxdWlyZSIsImp3dF9jbGFpbXNfc2V0X2pzXzEiLCJlcnJvcnNfanNfMSIsImp3dCIsImtleSIsIm9wdGlvbnMiLCJfYSIsInZlcmlmaWVkIiwiY29tcGFjdFZlcmlmeSIsInByb3RlY3RlZEhlYWRlciIsImNyaXQiLCJpbmNsdWRlcyIsImI2NCIsIkpXVEludmFsaWQiLCJwYXlsb2FkIiwiZGVmYXVsdCIsInJlc3VsdCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/jose/dist/node/cjs/jwt/verify.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/jose/dist/node/cjs/key/export.js":
/*!*******************************************************!*\
  !*** ./node_modules/jose/dist/node/cjs/key/export.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.exportJWK = exports.exportPKCS8 = exports.exportSPKI = void 0;\nconst asn1_js_1 = __webpack_require__(/*! ../runtime/asn1.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/runtime/asn1.js\");\nconst asn1_js_2 = __webpack_require__(/*! ../runtime/asn1.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/runtime/asn1.js\");\nconst key_to_jwk_js_1 = __webpack_require__(/*! ../runtime/key_to_jwk.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/runtime/key_to_jwk.js\");\nasync function exportSPKI(key) {\n    return (0, asn1_js_1.toSPKI)(key);\n}\nexports.exportSPKI = exportSPKI;\nasync function exportPKCS8(key) {\n    return (0, asn1_js_2.toPKCS8)(key);\n}\nexports.exportPKCS8 = exportPKCS8;\nasync function exportJWK(key) {\n    return (0, key_to_jwk_js_1.default)(key);\n}\nexports.exportJWK = exportJWK;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvam9zZS9kaXN0L25vZGUvY2pzL2tleS9leHBvcnQuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYkEsOENBQTZDO0lBQUVHLE9BQU87QUFBSyxDQUFDLEVBQUM7QUFDN0RELGlCQUFpQkUsR0FBR0YsbUJBQW1CRyxHQUFHSCxrQkFBa0JJLEdBQUcsS0FBSztBQUNwRSxNQUFNQyxZQUFZQyxtQkFBT0EsQ0FBQyx5RkFBb0I7QUFDOUMsTUFBTUMsWUFBWUQsbUJBQU9BLENBQUMseUZBQW9CO0FBQzlDLE1BQU1FLGtCQUFrQkYsbUJBQU9BLENBQUMscUdBQTBCO0FBQzFELGVBQWVGLFdBQVdLLEdBQUc7SUFDekIsT0FBTyxDQUFDLEdBQUdKLFVBQVVLLE1BQUssRUFBR0Q7QUFDakM7QUFDQVQsa0JBQWtCSSxHQUFHQTtBQUNyQixlQUFlRCxZQUFZTSxHQUFHO0lBQzFCLE9BQU8sQ0FBQyxHQUFHRixVQUFVSSxPQUFNLEVBQUdGO0FBQ2xDO0FBQ0FULG1CQUFtQkcsR0FBR0E7QUFDdEIsZUFBZUQsVUFBVU8sR0FBRztJQUN4QixPQUFPLENBQUMsR0FBR0QsZ0JBQWdCSSxPQUFNLEVBQUdIO0FBQ3hDO0FBQ0FULGlCQUFpQkUsR0FBR0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mdWxsc3RhY2stcm9sZS1iYXNlZC1uZXh0anMtMi8uL25vZGVfbW9kdWxlcy9qb3NlL2Rpc3Qvbm9kZS9janMva2V5L2V4cG9ydC5qcz9jM2QyIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5leHBvcnRKV0sgPSBleHBvcnRzLmV4cG9ydFBLQ1M4ID0gZXhwb3J0cy5leHBvcnRTUEtJID0gdm9pZCAwO1xuY29uc3QgYXNuMV9qc18xID0gcmVxdWlyZShcIi4uL3J1bnRpbWUvYXNuMS5qc1wiKTtcbmNvbnN0IGFzbjFfanNfMiA9IHJlcXVpcmUoXCIuLi9ydW50aW1lL2FzbjEuanNcIik7XG5jb25zdCBrZXlfdG9fandrX2pzXzEgPSByZXF1aXJlKFwiLi4vcnVudGltZS9rZXlfdG9fandrLmpzXCIpO1xuYXN5bmMgZnVuY3Rpb24gZXhwb3J0U1BLSShrZXkpIHtcbiAgICByZXR1cm4gKDAsIGFzbjFfanNfMS50b1NQS0kpKGtleSk7XG59XG5leHBvcnRzLmV4cG9ydFNQS0kgPSBleHBvcnRTUEtJO1xuYXN5bmMgZnVuY3Rpb24gZXhwb3J0UEtDUzgoa2V5KSB7XG4gICAgcmV0dXJuICgwLCBhc24xX2pzXzIudG9QS0NTOCkoa2V5KTtcbn1cbmV4cG9ydHMuZXhwb3J0UEtDUzggPSBleHBvcnRQS0NTODtcbmFzeW5jIGZ1bmN0aW9uIGV4cG9ydEpXSyhrZXkpIHtcbiAgICByZXR1cm4gKDAsIGtleV90b19qd2tfanNfMS5kZWZhdWx0KShrZXkpO1xufVxuZXhwb3J0cy5leHBvcnRKV0sgPSBleHBvcnRKV0s7XG4iXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJleHBvcnRKV0siLCJleHBvcnRQS0NTOCIsImV4cG9ydFNQS0kiLCJhc24xX2pzXzEiLCJyZXF1aXJlIiwiYXNuMV9qc18yIiwia2V5X3RvX2p3a19qc18xIiwia2V5IiwidG9TUEtJIiwidG9QS0NTOCIsImRlZmF1bHQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/jose/dist/node/cjs/key/export.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/jose/dist/node/cjs/key/generate_key_pair.js":
/*!******************************************************************!*\
  !*** ./node_modules/jose/dist/node/cjs/key/generate_key_pair.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.generateKeyPair = void 0;\nconst generate_js_1 = __webpack_require__(/*! ../runtime/generate.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/runtime/generate.js\");\nasync function generateKeyPair(alg, options) {\n    return (0, generate_js_1.generateKeyPair)(alg, options);\n}\nexports.generateKeyPair = generateKeyPair;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvam9zZS9kaXN0L25vZGUvY2pzL2tleS9nZW5lcmF0ZV9rZXlfcGFpci5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFBRUcsT0FBTztBQUFLLENBQUMsRUFBQztBQUM3REQsdUJBQXVCRSxHQUFHLEtBQUs7QUFDL0IsTUFBTUMsZ0JBQWdCQyxtQkFBT0EsQ0FBQyxpR0FBd0I7QUFDdEQsZUFBZUYsZ0JBQWdCRyxHQUFHLEVBQUVDLE9BQU87SUFDdkMsT0FBTyxDQUFDLEdBQUdILGNBQWNELGVBQWMsRUFBR0csS0FBS0M7QUFDbkQ7QUFDQU4sdUJBQXVCRSxHQUFHQSIsInNvdXJjZXMiOlsid2VicGFjazovL2Z1bGxzdGFjay1yb2xlLWJhc2VkLW5leHRqcy0yLy4vbm9kZV9tb2R1bGVzL2pvc2UvZGlzdC9ub2RlL2Nqcy9rZXkvZ2VuZXJhdGVfa2V5X3BhaXIuanM/Y2Y0NCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuZ2VuZXJhdGVLZXlQYWlyID0gdm9pZCAwO1xuY29uc3QgZ2VuZXJhdGVfanNfMSA9IHJlcXVpcmUoXCIuLi9ydW50aW1lL2dlbmVyYXRlLmpzXCIpO1xuYXN5bmMgZnVuY3Rpb24gZ2VuZXJhdGVLZXlQYWlyKGFsZywgb3B0aW9ucykge1xuICAgIHJldHVybiAoMCwgZ2VuZXJhdGVfanNfMS5nZW5lcmF0ZUtleVBhaXIpKGFsZywgb3B0aW9ucyk7XG59XG5leHBvcnRzLmdlbmVyYXRlS2V5UGFpciA9IGdlbmVyYXRlS2V5UGFpcjtcbiJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsImdlbmVyYXRlS2V5UGFpciIsImdlbmVyYXRlX2pzXzEiLCJyZXF1aXJlIiwiYWxnIiwib3B0aW9ucyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/jose/dist/node/cjs/key/generate_key_pair.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/jose/dist/node/cjs/key/generate_secret.js":
/*!****************************************************************!*\
  !*** ./node_modules/jose/dist/node/cjs/key/generate_secret.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.generateSecret = void 0;\nconst generate_js_1 = __webpack_require__(/*! ../runtime/generate.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/runtime/generate.js\");\nasync function generateSecret(alg, options) {\n    return (0, generate_js_1.generateSecret)(alg, options);\n}\nexports.generateSecret = generateSecret;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvam9zZS9kaXN0L25vZGUvY2pzL2tleS9nZW5lcmF0ZV9zZWNyZXQuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYkEsOENBQTZDO0lBQUVHLE9BQU87QUFBSyxDQUFDLEVBQUM7QUFDN0RELHNCQUFzQkUsR0FBRyxLQUFLO0FBQzlCLE1BQU1DLGdCQUFnQkMsbUJBQU9BLENBQUMsaUdBQXdCO0FBQ3RELGVBQWVGLGVBQWVHLEdBQUcsRUFBRUMsT0FBTztJQUN0QyxPQUFPLENBQUMsR0FBR0gsY0FBY0QsY0FBYSxFQUFHRyxLQUFLQztBQUNsRDtBQUNBTixzQkFBc0JFLEdBQUdBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZnVsbHN0YWNrLXJvbGUtYmFzZWQtbmV4dGpzLTIvLi9ub2RlX21vZHVsZXMvam9zZS9kaXN0L25vZGUvY2pzL2tleS9nZW5lcmF0ZV9zZWNyZXQuanM/YjZkZiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuZ2VuZXJhdGVTZWNyZXQgPSB2b2lkIDA7XG5jb25zdCBnZW5lcmF0ZV9qc18xID0gcmVxdWlyZShcIi4uL3J1bnRpbWUvZ2VuZXJhdGUuanNcIik7XG5hc3luYyBmdW5jdGlvbiBnZW5lcmF0ZVNlY3JldChhbGcsIG9wdGlvbnMpIHtcbiAgICByZXR1cm4gKDAsIGdlbmVyYXRlX2pzXzEuZ2VuZXJhdGVTZWNyZXQpKGFsZywgb3B0aW9ucyk7XG59XG5leHBvcnRzLmdlbmVyYXRlU2VjcmV0ID0gZ2VuZXJhdGVTZWNyZXQ7XG4iXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJnZW5lcmF0ZVNlY3JldCIsImdlbmVyYXRlX2pzXzEiLCJyZXF1aXJlIiwiYWxnIiwib3B0aW9ucyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/jose/dist/node/cjs/key/generate_secret.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/jose/dist/node/cjs/key/import.js":
/*!*******************************************************!*\
  !*** ./node_modules/jose/dist/node/cjs/key/import.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.importJWK = exports.importPKCS8 = exports.importX509 = exports.importSPKI = void 0;\nconst base64url_js_1 = __webpack_require__(/*! ../runtime/base64url.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/runtime/base64url.js\");\nconst asn1_js_1 = __webpack_require__(/*! ../runtime/asn1.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/runtime/asn1.js\");\nconst jwk_to_key_js_1 = __webpack_require__(/*! ../runtime/jwk_to_key.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/runtime/jwk_to_key.js\");\nconst errors_js_1 = __webpack_require__(/*! ../util/errors.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/util/errors.js\");\nconst is_object_js_1 = __webpack_require__(/*! ../lib/is_object.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/lib/is_object.js\");\nasync function importSPKI(spki, alg, options) {\n    if (typeof spki !== \"string\" || spki.indexOf(\"-----BEGIN PUBLIC KEY-----\") !== 0) {\n        throw new TypeError('\"spki\" must be SPKI formatted string');\n    }\n    return (0, asn1_js_1.fromSPKI)(spki, alg, options);\n}\nexports.importSPKI = importSPKI;\nasync function importX509(x509, alg, options) {\n    if (typeof x509 !== \"string\" || x509.indexOf(\"-----BEGIN CERTIFICATE-----\") !== 0) {\n        throw new TypeError('\"x509\" must be X.509 formatted string');\n    }\n    return (0, asn1_js_1.fromX509)(x509, alg, options);\n}\nexports.importX509 = importX509;\nasync function importPKCS8(pkcs8, alg, options) {\n    if (typeof pkcs8 !== \"string\" || pkcs8.indexOf(\"-----BEGIN PRIVATE KEY-----\") !== 0) {\n        throw new TypeError('\"pkcs8\" must be PKCS#8 formatted string');\n    }\n    return (0, asn1_js_1.fromPKCS8)(pkcs8, alg, options);\n}\nexports.importPKCS8 = importPKCS8;\nasync function importJWK(jwk, alg, octAsKeyObject) {\n    var _a;\n    if (!(0, is_object_js_1.default)(jwk)) {\n        throw new TypeError(\"JWK must be an object\");\n    }\n    alg || (alg = jwk.alg);\n    switch(jwk.kty){\n        case \"oct\":\n            if (typeof jwk.k !== \"string\" || !jwk.k) {\n                throw new TypeError('missing \"k\" (Key Value) Parameter value');\n            }\n            octAsKeyObject !== null && octAsKeyObject !== void 0 ? octAsKeyObject : octAsKeyObject = jwk.ext !== true;\n            if (octAsKeyObject) {\n                return (0, jwk_to_key_js_1.default)({\n                    ...jwk,\n                    alg,\n                    ext: (_a = jwk.ext) !== null && _a !== void 0 ? _a : false\n                });\n            }\n            return (0, base64url_js_1.decode)(jwk.k);\n        case \"RSA\":\n            if (jwk.oth !== undefined) {\n                throw new errors_js_1.JOSENotSupported('RSA JWK \"oth\" (Other Primes Info) Parameter value is not supported');\n            }\n        case \"EC\":\n        case \"OKP\":\n            return (0, jwk_to_key_js_1.default)({\n                ...jwk,\n                alg\n            });\n        default:\n            throw new errors_js_1.JOSENotSupported('Unsupported \"kty\" (Key Type) Parameter value');\n    }\n}\nexports.importJWK = importJWK;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvam9zZS9kaXN0L25vZGUvY2pzL2tleS9pbXBvcnQuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYkEsOENBQTZDO0lBQUVHLE9BQU87QUFBSyxDQUFDLEVBQUM7QUFDN0RELGlCQUFpQkUsR0FBR0YsbUJBQW1CRyxHQUFHSCxrQkFBa0JJLEdBQUdKLGtCQUFrQkssR0FBRyxLQUFLO0FBQ3pGLE1BQU1DLGlCQUFpQkMsbUJBQU9BLENBQUMsbUdBQXlCO0FBQ3hELE1BQU1DLFlBQVlELG1CQUFPQSxDQUFDLHlGQUFvQjtBQUM5QyxNQUFNRSxrQkFBa0JGLG1CQUFPQSxDQUFDLHFHQUEwQjtBQUMxRCxNQUFNRyxjQUFjSCxtQkFBT0EsQ0FBQyx1RkFBbUI7QUFDL0MsTUFBTUksaUJBQWlCSixtQkFBT0EsQ0FBQywyRkFBcUI7QUFDcEQsZUFBZUYsV0FBV08sSUFBSSxFQUFFQyxHQUFHLEVBQUVDLE9BQU87SUFDeEMsSUFBSSxPQUFPRixTQUFTLFlBQVlBLEtBQUtHLFFBQVEsa0NBQWtDLEdBQUc7UUFDOUUsTUFBTSxJQUFJQyxVQUFVO0lBQ3hCO0lBQ0EsT0FBTyxDQUFDLEdBQUdSLFVBQVVTLFFBQU8sRUFBR0wsTUFBTUMsS0FBS0M7QUFDOUM7QUFDQWQsa0JBQWtCSyxHQUFHQTtBQUNyQixlQUFlRCxXQUFXYyxJQUFJLEVBQUVMLEdBQUcsRUFBRUMsT0FBTztJQUN4QyxJQUFJLE9BQU9JLFNBQVMsWUFBWUEsS0FBS0gsUUFBUSxtQ0FBbUMsR0FBRztRQUMvRSxNQUFNLElBQUlDLFVBQVU7SUFDeEI7SUFDQSxPQUFPLENBQUMsR0FBR1IsVUFBVVcsUUFBTyxFQUFHRCxNQUFNTCxLQUFLQztBQUM5QztBQUNBZCxrQkFBa0JJLEdBQUdBO0FBQ3JCLGVBQWVELFlBQVlpQixLQUFLLEVBQUVQLEdBQUcsRUFBRUMsT0FBTztJQUMxQyxJQUFJLE9BQU9NLFVBQVUsWUFBWUEsTUFBTUwsUUFBUSxtQ0FBbUMsR0FBRztRQUNqRixNQUFNLElBQUlDLFVBQVU7SUFDeEI7SUFDQSxPQUFPLENBQUMsR0FBR1IsVUFBVWEsU0FBUSxFQUFHRCxPQUFPUCxLQUFLQztBQUNoRDtBQUNBZCxtQkFBbUJHLEdBQUdBO0FBQ3RCLGVBQWVELFVBQVVvQixHQUFHLEVBQUVULEdBQUcsRUFBRVUsY0FBYztJQUM3QyxJQUFJQztJQUNKLElBQUksQ0FBQyxDQUFDLEdBQUdiLGVBQWVjLE9BQU0sRUFBR0gsTUFBTTtRQUNuQyxNQUFNLElBQUlOLFVBQVU7SUFDeEI7SUFDQUgsT0FBUUEsQ0FBQUEsTUFBTVMsSUFBSVQsR0FBRTtJQUNwQixPQUFRUyxJQUFJSTtRQUNSLEtBQUs7WUFDRCxJQUFJLE9BQU9KLElBQUlLLE1BQU0sWUFBWSxDQUFDTCxJQUFJSyxHQUFHO2dCQUNyQyxNQUFNLElBQUlYLFVBQVU7WUFDeEI7WUFDQU8sbUJBQW1CLFFBQVFBLG1CQUFtQixLQUFLLElBQUlBLGlCQUFrQkEsaUJBQWlCRCxJQUFJTSxRQUFRO1lBQ3RHLElBQUlMLGdCQUFnQjtnQkFDaEIsT0FBTyxDQUFDLEdBQUdkLGdCQUFnQmdCLE9BQU0sRUFBRztvQkFBRSxHQUFHSCxHQUFHO29CQUFFVDtvQkFBS2UsS0FBSyxDQUFDSixLQUFLRixJQUFJTSxHQUFFLE1BQU8sUUFBUUosT0FBTyxLQUFLLElBQUlBLEtBQUs7Z0JBQU07WUFDbEg7WUFDQSxPQUFPLENBQUMsR0FBR2xCLGVBQWV1QixNQUFLLEVBQUdQLElBQUlLO1FBQzFDLEtBQUs7WUFDRCxJQUFJTCxJQUFJUSxRQUFRQyxXQUFXO2dCQUN2QixNQUFNLElBQUlyQixZQUFZc0IsaUJBQWlCO1lBQzNDO1FBQ0osS0FBSztRQUNMLEtBQUs7WUFDRCxPQUFPLENBQUMsR0FBR3ZCLGdCQUFnQmdCLE9BQU0sRUFBRztnQkFBRSxHQUFHSCxHQUFHO2dCQUFFVDtZQUFJO1FBQ3REO1lBQ0ksTUFBTSxJQUFJSCxZQUFZc0IsaUJBQWlCO0lBQy9DO0FBQ0o7QUFDQWhDLGlCQUFpQkUsR0FBR0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mdWxsc3RhY2stcm9sZS1iYXNlZC1uZXh0anMtMi8uL25vZGVfbW9kdWxlcy9qb3NlL2Rpc3Qvbm9kZS9janMva2V5L2ltcG9ydC5qcz8zZjI1Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5pbXBvcnRKV0sgPSBleHBvcnRzLmltcG9ydFBLQ1M4ID0gZXhwb3J0cy5pbXBvcnRYNTA5ID0gZXhwb3J0cy5pbXBvcnRTUEtJID0gdm9pZCAwO1xuY29uc3QgYmFzZTY0dXJsX2pzXzEgPSByZXF1aXJlKFwiLi4vcnVudGltZS9iYXNlNjR1cmwuanNcIik7XG5jb25zdCBhc24xX2pzXzEgPSByZXF1aXJlKFwiLi4vcnVudGltZS9hc24xLmpzXCIpO1xuY29uc3QgandrX3RvX2tleV9qc18xID0gcmVxdWlyZShcIi4uL3J1bnRpbWUvandrX3RvX2tleS5qc1wiKTtcbmNvbnN0IGVycm9yc19qc18xID0gcmVxdWlyZShcIi4uL3V0aWwvZXJyb3JzLmpzXCIpO1xuY29uc3QgaXNfb2JqZWN0X2pzXzEgPSByZXF1aXJlKFwiLi4vbGliL2lzX29iamVjdC5qc1wiKTtcbmFzeW5jIGZ1bmN0aW9uIGltcG9ydFNQS0koc3BraSwgYWxnLCBvcHRpb25zKSB7XG4gICAgaWYgKHR5cGVvZiBzcGtpICE9PSAnc3RyaW5nJyB8fCBzcGtpLmluZGV4T2YoJy0tLS0tQkVHSU4gUFVCTElDIEtFWS0tLS0tJykgIT09IDApIHtcbiAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcignXCJzcGtpXCIgbXVzdCBiZSBTUEtJIGZvcm1hdHRlZCBzdHJpbmcnKTtcbiAgICB9XG4gICAgcmV0dXJuICgwLCBhc24xX2pzXzEuZnJvbVNQS0kpKHNwa2ksIGFsZywgb3B0aW9ucyk7XG59XG5leHBvcnRzLmltcG9ydFNQS0kgPSBpbXBvcnRTUEtJO1xuYXN5bmMgZnVuY3Rpb24gaW1wb3J0WDUwOSh4NTA5LCBhbGcsIG9wdGlvbnMpIHtcbiAgICBpZiAodHlwZW9mIHg1MDkgIT09ICdzdHJpbmcnIHx8IHg1MDkuaW5kZXhPZignLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tJykgIT09IDApIHtcbiAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcignXCJ4NTA5XCIgbXVzdCBiZSBYLjUwOSBmb3JtYXR0ZWQgc3RyaW5nJyk7XG4gICAgfVxuICAgIHJldHVybiAoMCwgYXNuMV9qc18xLmZyb21YNTA5KSh4NTA5LCBhbGcsIG9wdGlvbnMpO1xufVxuZXhwb3J0cy5pbXBvcnRYNTA5ID0gaW1wb3J0WDUwOTtcbmFzeW5jIGZ1bmN0aW9uIGltcG9ydFBLQ1M4KHBrY3M4LCBhbGcsIG9wdGlvbnMpIHtcbiAgICBpZiAodHlwZW9mIHBrY3M4ICE9PSAnc3RyaW5nJyB8fCBwa2NzOC5pbmRleE9mKCctLS0tLUJFR0lOIFBSSVZBVEUgS0VZLS0tLS0nKSAhPT0gMCkge1xuICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdcInBrY3M4XCIgbXVzdCBiZSBQS0NTIzggZm9ybWF0dGVkIHN0cmluZycpO1xuICAgIH1cbiAgICByZXR1cm4gKDAsIGFzbjFfanNfMS5mcm9tUEtDUzgpKHBrY3M4LCBhbGcsIG9wdGlvbnMpO1xufVxuZXhwb3J0cy5pbXBvcnRQS0NTOCA9IGltcG9ydFBLQ1M4O1xuYXN5bmMgZnVuY3Rpb24gaW1wb3J0SldLKGp3aywgYWxnLCBvY3RBc0tleU9iamVjdCkge1xuICAgIHZhciBfYTtcbiAgICBpZiAoISgwLCBpc19vYmplY3RfanNfMS5kZWZhdWx0KShqd2spKSB7XG4gICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ0pXSyBtdXN0IGJlIGFuIG9iamVjdCcpO1xuICAgIH1cbiAgICBhbGcgfHwgKGFsZyA9IGp3ay5hbGcpO1xuICAgIHN3aXRjaCAoandrLmt0eSkge1xuICAgICAgICBjYXNlICdvY3QnOlxuICAgICAgICAgICAgaWYgKHR5cGVvZiBqd2suayAhPT0gJ3N0cmluZycgfHwgIWp3ay5rKSB7XG4gICAgICAgICAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcignbWlzc2luZyBcImtcIiAoS2V5IFZhbHVlKSBQYXJhbWV0ZXIgdmFsdWUnKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIG9jdEFzS2V5T2JqZWN0ICE9PSBudWxsICYmIG9jdEFzS2V5T2JqZWN0ICE9PSB2b2lkIDAgPyBvY3RBc0tleU9iamVjdCA6IChvY3RBc0tleU9iamVjdCA9IGp3ay5leHQgIT09IHRydWUpO1xuICAgICAgICAgICAgaWYgKG9jdEFzS2V5T2JqZWN0KSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuICgwLCBqd2tfdG9fa2V5X2pzXzEuZGVmYXVsdCkoeyAuLi5qd2ssIGFsZywgZXh0OiAoX2EgPSBqd2suZXh0KSAhPT0gbnVsbCAmJiBfYSAhPT0gdm9pZCAwID8gX2EgOiBmYWxzZSB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiAoMCwgYmFzZTY0dXJsX2pzXzEuZGVjb2RlKShqd2suayk7XG4gICAgICAgIGNhc2UgJ1JTQSc6XG4gICAgICAgICAgICBpZiAoandrLm90aCAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICAgICAgdGhyb3cgbmV3IGVycm9yc19qc18xLkpPU0VOb3RTdXBwb3J0ZWQoJ1JTQSBKV0sgXCJvdGhcIiAoT3RoZXIgUHJpbWVzIEluZm8pIFBhcmFtZXRlciB2YWx1ZSBpcyBub3Qgc3VwcG9ydGVkJyk7XG4gICAgICAgICAgICB9XG4gICAgICAgIGNhc2UgJ0VDJzpcbiAgICAgICAgY2FzZSAnT0tQJzpcbiAgICAgICAgICAgIHJldHVybiAoMCwgandrX3RvX2tleV9qc18xLmRlZmF1bHQpKHsgLi4uandrLCBhbGcgfSk7XG4gICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICB0aHJvdyBuZXcgZXJyb3JzX2pzXzEuSk9TRU5vdFN1cHBvcnRlZCgnVW5zdXBwb3J0ZWQgXCJrdHlcIiAoS2V5IFR5cGUpIFBhcmFtZXRlciB2YWx1ZScpO1xuICAgIH1cbn1cbmV4cG9ydHMuaW1wb3J0SldLID0gaW1wb3J0SldLO1xuIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiaW1wb3J0SldLIiwiaW1wb3J0UEtDUzgiLCJpbXBvcnRYNTA5IiwiaW1wb3J0U1BLSSIsImJhc2U2NHVybF9qc18xIiwicmVxdWlyZSIsImFzbjFfanNfMSIsImp3a190b19rZXlfanNfMSIsImVycm9yc19qc18xIiwiaXNfb2JqZWN0X2pzXzEiLCJzcGtpIiwiYWxnIiwib3B0aW9ucyIsImluZGV4T2YiLCJUeXBlRXJyb3IiLCJmcm9tU1BLSSIsIng1MDkiLCJmcm9tWDUwOSIsInBrY3M4IiwiZnJvbVBLQ1M4IiwiandrIiwib2N0QXNLZXlPYmplY3QiLCJfYSIsImRlZmF1bHQiLCJrdHkiLCJrIiwiZXh0IiwiZGVjb2RlIiwib3RoIiwidW5kZWZpbmVkIiwiSk9TRU5vdFN1cHBvcnRlZCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/jose/dist/node/cjs/key/import.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/jose/dist/node/cjs/lib/aesgcmkw.js":
/*!*********************************************************!*\
  !*** ./node_modules/jose/dist/node/cjs/lib/aesgcmkw.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.unwrap = exports.wrap = void 0;\nconst encrypt_js_1 = __webpack_require__(/*! ../runtime/encrypt.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/runtime/encrypt.js\");\nconst decrypt_js_1 = __webpack_require__(/*! ../runtime/decrypt.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/runtime/decrypt.js\");\nconst iv_js_1 = __webpack_require__(/*! ./iv.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/lib/iv.js\");\nconst base64url_js_1 = __webpack_require__(/*! ../runtime/base64url.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/runtime/base64url.js\");\nasync function wrap(alg, key, cek, iv) {\n    const jweAlgorithm = alg.slice(0, 7);\n    iv || (iv = (0, iv_js_1.default)(jweAlgorithm));\n    const { ciphertext: encryptedKey , tag  } = await (0, encrypt_js_1.default)(jweAlgorithm, cek, key, iv, new Uint8Array(0));\n    return {\n        encryptedKey,\n        iv: (0, base64url_js_1.encode)(iv),\n        tag: (0, base64url_js_1.encode)(tag)\n    };\n}\nexports.wrap = wrap;\nasync function unwrap(alg, key, encryptedKey, iv, tag) {\n    const jweAlgorithm = alg.slice(0, 7);\n    return (0, decrypt_js_1.default)(jweAlgorithm, key, encryptedKey, iv, tag, new Uint8Array(0));\n}\nexports.unwrap = unwrap;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvam9zZS9kaXN0L25vZGUvY2pzL2xpYi9hZXNnY21rdy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFBRUcsT0FBTztBQUFLLENBQUMsRUFBQztBQUM3REQsY0FBY0UsR0FBR0YsWUFBWUcsR0FBRyxLQUFLO0FBQ3JDLE1BQU1DLGVBQWVDLG1CQUFPQSxDQUFDLCtGQUF1QjtBQUNwRCxNQUFNQyxlQUFlRCxtQkFBT0EsQ0FBQywrRkFBdUI7QUFDcEQsTUFBTUUsVUFBVUYsbUJBQU9BLENBQUMsd0VBQVM7QUFDakMsTUFBTUcsaUJBQWlCSCxtQkFBT0EsQ0FBQyxtR0FBeUI7QUFDeEQsZUFBZUYsS0FBS00sR0FBRyxFQUFFQyxHQUFHLEVBQUVDLEdBQUcsRUFBRUMsRUFBRTtJQUNqQyxNQUFNQyxlQUFlSixJQUFJSyxNQUFNLEdBQUc7SUFDbENGLE1BQU9BLENBQUFBLEtBQUssQ0FBQyxHQUFHTCxRQUFRUSxPQUFNLEVBQUdGLGFBQVk7SUFDN0MsTUFBTSxFQUFFRyxZQUFZQyxhQUFZLEVBQUVDLElBQUcsRUFBRSxHQUFHLE1BQU0sQ0FBQyxHQUFHZCxhQUFhVyxPQUFNLEVBQUdGLGNBQWNGLEtBQUtELEtBQUtFLElBQUksSUFBSU8sV0FBVztJQUNySCxPQUFPO1FBQUVGO1FBQWNMLElBQUksQ0FBQyxHQUFHSixlQUFlWSxNQUFLLEVBQUdSO1FBQUtNLEtBQUssQ0FBQyxHQUFHVixlQUFlWSxNQUFLLEVBQUdGO0lBQUs7QUFDcEc7QUFDQWxCLFlBQVlHLEdBQUdBO0FBQ2YsZUFBZUQsT0FBT08sR0FBRyxFQUFFQyxHQUFHLEVBQUVPLFlBQVksRUFBRUwsRUFBRSxFQUFFTSxHQUFHO0lBQ2pELE1BQU1MLGVBQWVKLElBQUlLLE1BQU0sR0FBRztJQUNsQyxPQUFPLENBQUMsR0FBR1IsYUFBYVMsT0FBTSxFQUFHRixjQUFjSCxLQUFLTyxjQUFjTCxJQUFJTSxLQUFLLElBQUlDLFdBQVc7QUFDOUY7QUFDQW5CLGNBQWNFLEdBQUdBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZnVsbHN0YWNrLXJvbGUtYmFzZWQtbmV4dGpzLTIvLi9ub2RlX21vZHVsZXMvam9zZS9kaXN0L25vZGUvY2pzL2xpYi9hZXNnY21rdy5qcz9kMGM1Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy51bndyYXAgPSBleHBvcnRzLndyYXAgPSB2b2lkIDA7XG5jb25zdCBlbmNyeXB0X2pzXzEgPSByZXF1aXJlKFwiLi4vcnVudGltZS9lbmNyeXB0LmpzXCIpO1xuY29uc3QgZGVjcnlwdF9qc18xID0gcmVxdWlyZShcIi4uL3J1bnRpbWUvZGVjcnlwdC5qc1wiKTtcbmNvbnN0IGl2X2pzXzEgPSByZXF1aXJlKFwiLi9pdi5qc1wiKTtcbmNvbnN0IGJhc2U2NHVybF9qc18xID0gcmVxdWlyZShcIi4uL3J1bnRpbWUvYmFzZTY0dXJsLmpzXCIpO1xuYXN5bmMgZnVuY3Rpb24gd3JhcChhbGcsIGtleSwgY2VrLCBpdikge1xuICAgIGNvbnN0IGp3ZUFsZ29yaXRobSA9IGFsZy5zbGljZSgwLCA3KTtcbiAgICBpdiB8fCAoaXYgPSAoMCwgaXZfanNfMS5kZWZhdWx0KShqd2VBbGdvcml0aG0pKTtcbiAgICBjb25zdCB7IGNpcGhlcnRleHQ6IGVuY3J5cHRlZEtleSwgdGFnIH0gPSBhd2FpdCAoMCwgZW5jcnlwdF9qc18xLmRlZmF1bHQpKGp3ZUFsZ29yaXRobSwgY2VrLCBrZXksIGl2LCBuZXcgVWludDhBcnJheSgwKSk7XG4gICAgcmV0dXJuIHsgZW5jcnlwdGVkS2V5LCBpdjogKDAsIGJhc2U2NHVybF9qc18xLmVuY29kZSkoaXYpLCB0YWc6ICgwLCBiYXNlNjR1cmxfanNfMS5lbmNvZGUpKHRhZykgfTtcbn1cbmV4cG9ydHMud3JhcCA9IHdyYXA7XG5hc3luYyBmdW5jdGlvbiB1bndyYXAoYWxnLCBrZXksIGVuY3J5cHRlZEtleSwgaXYsIHRhZykge1xuICAgIGNvbnN0IGp3ZUFsZ29yaXRobSA9IGFsZy5zbGljZSgwLCA3KTtcbiAgICByZXR1cm4gKDAsIGRlY3J5cHRfanNfMS5kZWZhdWx0KShqd2VBbGdvcml0aG0sIGtleSwgZW5jcnlwdGVkS2V5LCBpdiwgdGFnLCBuZXcgVWludDhBcnJheSgwKSk7XG59XG5leHBvcnRzLnVud3JhcCA9IHVud3JhcDtcbiJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsInVud3JhcCIsIndyYXAiLCJlbmNyeXB0X2pzXzEiLCJyZXF1aXJlIiwiZGVjcnlwdF9qc18xIiwiaXZfanNfMSIsImJhc2U2NHVybF9qc18xIiwiYWxnIiwia2V5IiwiY2VrIiwiaXYiLCJqd2VBbGdvcml0aG0iLCJzbGljZSIsImRlZmF1bHQiLCJjaXBoZXJ0ZXh0IiwiZW5jcnlwdGVkS2V5IiwidGFnIiwiVWludDhBcnJheSIsImVuY29kZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/jose/dist/node/cjs/lib/aesgcmkw.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/jose/dist/node/cjs/lib/buffer_utils.js":
/*!*************************************************************!*\
  !*** ./node_modules/jose/dist/node/cjs/lib/buffer_utils.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.concatKdf = exports.lengthAndInput = exports.uint32be = exports.uint64be = exports.p2s = exports.concat = exports.decoder = exports.encoder = void 0;\nconst digest_js_1 = __webpack_require__(/*! ../runtime/digest.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/runtime/digest.js\");\nexports.encoder = new TextEncoder();\nexports.decoder = new TextDecoder();\nconst MAX_INT32 = 2 ** 32;\nfunction concat(...buffers) {\n    const size = buffers.reduce((acc, { length  })=>acc + length, 0);\n    const buf = new Uint8Array(size);\n    let i = 0;\n    buffers.forEach((buffer)=>{\n        buf.set(buffer, i);\n        i += buffer.length;\n    });\n    return buf;\n}\nexports.concat = concat;\nfunction p2s(alg, p2sInput) {\n    return concat(exports.encoder.encode(alg), new Uint8Array([\n        0\n    ]), p2sInput);\n}\nexports.p2s = p2s;\nfunction writeUInt32BE(buf, value, offset) {\n    if (value < 0 || value >= MAX_INT32) {\n        throw new RangeError(`value must be >= 0 and <= ${MAX_INT32 - 1}. Received ${value}`);\n    }\n    buf.set([\n        value >>> 24,\n        value >>> 16,\n        value >>> 8,\n        value & 0xff\n    ], offset);\n}\nfunction uint64be(value) {\n    const high = Math.floor(value / MAX_INT32);\n    const low = value % MAX_INT32;\n    const buf = new Uint8Array(8);\n    writeUInt32BE(buf, high, 0);\n    writeUInt32BE(buf, low, 4);\n    return buf;\n}\nexports.uint64be = uint64be;\nfunction uint32be(value) {\n    const buf = new Uint8Array(4);\n    writeUInt32BE(buf, value);\n    return buf;\n}\nexports.uint32be = uint32be;\nfunction lengthAndInput(input) {\n    return concat(uint32be(input.length), input);\n}\nexports.lengthAndInput = lengthAndInput;\nasync function concatKdf(secret, bits, value) {\n    const iterations = Math.ceil((bits >> 3) / 32);\n    const res = new Uint8Array(iterations * 32);\n    for(let iter = 0; iter < iterations; iter++){\n        const buf = new Uint8Array(4 + secret.length + value.length);\n        buf.set(uint32be(iter + 1));\n        buf.set(secret, 4);\n        buf.set(value, 4 + secret.length);\n        res.set(await (0, digest_js_1.default)(\"sha256\", buf), iter * 32);\n    }\n    return res.slice(0, bits >> 3);\n}\nexports.concatKdf = concatKdf;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvam9zZS9kaXN0L25vZGUvY2pzL2xpYi9idWZmZXJfdXRpbHMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYkEsOENBQTZDO0lBQUVHLE9BQU87QUFBSyxDQUFDLEVBQUM7QUFDN0RELGlCQUFpQkUsR0FBR0Ysc0JBQXNCRyxHQUFHSCxnQkFBZ0JJLEdBQUdKLGdCQUFnQkssR0FBR0wsV0FBV00sR0FBR04sY0FBY08sR0FBR1AsZUFBZVEsR0FBR1IsZUFBZVMsR0FBRyxLQUFLO0FBQzNKLE1BQU1DLGNBQWNDLG1CQUFPQSxDQUFDLDZGQUFzQjtBQUNsRFgsZUFBZVMsR0FBRyxJQUFJRztBQUN0QlosZUFBZVEsR0FBRyxJQUFJSztBQUN0QixNQUFNQyxZQUFZLEtBQUs7QUFDdkIsU0FBU1AsT0FBTyxHQUFHUSxPQUFPO0lBQ3RCLE1BQU1DLE9BQU9ELFFBQVFFLE9BQU8sQ0FBQ0MsS0FBSyxFQUFFQyxPQUFNLEVBQUUsR0FBS0QsTUFBTUMsUUFBUTtJQUMvRCxNQUFNQyxNQUFNLElBQUlDLFdBQVdMO0lBQzNCLElBQUlNLElBQUk7SUFDUlAsUUFBUVEsUUFBUSxDQUFDQztRQUNiSixJQUFJSyxJQUFJRCxRQUFRRjtRQUNoQkEsS0FBS0UsT0FBT0w7SUFDaEI7SUFDQSxPQUFPQztBQUNYO0FBQ0FwQixjQUFjTyxHQUFHQTtBQUNqQixTQUFTRCxJQUFJb0IsR0FBRyxFQUFFQyxRQUFRO0lBQ3RCLE9BQU9wQixPQUFPUCxRQUFRUyxRQUFRbUIsT0FBT0YsTUFBTSxJQUFJTCxXQUFXO1FBQUM7S0FBRSxHQUFHTTtBQUNwRTtBQUNBM0IsV0FBV00sR0FBR0E7QUFDZCxTQUFTdUIsY0FBY1QsR0FBRyxFQUFFbkIsS0FBSyxFQUFFNkIsTUFBTTtJQUNyQyxJQUFJN0IsUUFBUSxLQUFLQSxTQUFTYSxXQUFXO1FBQ2pDLE1BQU0sSUFBSWlCLFdBQVcsQ0FBQywwQkFBMEIsRUFBRWpCLFlBQVksRUFBRSxXQUFXLEVBQUViLE1BQU0sQ0FBQztJQUN4RjtJQUNBbUIsSUFBSUssSUFBSTtRQUFDeEIsVUFBVTtRQUFJQSxVQUFVO1FBQUlBLFVBQVU7UUFBR0EsUUFBUTtLQUFLLEVBQUU2QjtBQUNyRTtBQUNBLFNBQVN6QixTQUFTSixLQUFLO0lBQ25CLE1BQU0rQixPQUFPQyxLQUFLQyxNQUFNakMsUUFBUWE7SUFDaEMsTUFBTXFCLE1BQU1sQyxRQUFRYTtJQUNwQixNQUFNTSxNQUFNLElBQUlDLFdBQVc7SUFDM0JRLGNBQWNULEtBQUtZLE1BQU07SUFDekJILGNBQWNULEtBQUtlLEtBQUs7SUFDeEIsT0FBT2Y7QUFDWDtBQUNBcEIsZ0JBQWdCSyxHQUFHQTtBQUNuQixTQUFTRCxTQUFTSCxLQUFLO0lBQ25CLE1BQU1tQixNQUFNLElBQUlDLFdBQVc7SUFDM0JRLGNBQWNULEtBQUtuQjtJQUNuQixPQUFPbUI7QUFDWDtBQUNBcEIsZ0JBQWdCSSxHQUFHQTtBQUNuQixTQUFTRCxlQUFlaUMsS0FBSztJQUN6QixPQUFPN0IsT0FBT0gsU0FBU2dDLE1BQU1qQixTQUFTaUI7QUFDMUM7QUFDQXBDLHNCQUFzQkcsR0FBR0E7QUFDekIsZUFBZUQsVUFBVW1DLE1BQU0sRUFBRUMsSUFBSSxFQUFFckMsS0FBSztJQUN4QyxNQUFNc0MsYUFBYU4sS0FBS08sS0FBSyxDQUFDRixRQUFRLEtBQUs7SUFDM0MsTUFBTUcsTUFBTSxJQUFJcEIsV0FBV2tCLGFBQWE7SUFDeEMsSUFBSyxJQUFJRyxPQUFPLEdBQUdBLE9BQU9ILFlBQVlHLE9BQVE7UUFDMUMsTUFBTXRCLE1BQU0sSUFBSUMsV0FBVyxJQUFJZ0IsT0FBT2xCLFNBQVNsQixNQUFNa0I7UUFDckRDLElBQUlLLElBQUlyQixTQUFTc0MsT0FBTztRQUN4QnRCLElBQUlLLElBQUlZLFFBQVE7UUFDaEJqQixJQUFJSyxJQUFJeEIsT0FBTyxJQUFJb0MsT0FBT2xCO1FBQzFCc0IsSUFBSWhCLElBQUksTUFBTSxDQUFDLEdBQUdmLFlBQVlpQyxPQUFNLEVBQUcsVUFBVXZCLE1BQU1zQixPQUFPO0lBQ2xFO0lBQ0EsT0FBT0QsSUFBSUcsTUFBTSxHQUFHTixRQUFRO0FBQ2hDO0FBQ0F0QyxpQkFBaUJFLEdBQUdBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZnVsbHN0YWNrLXJvbGUtYmFzZWQtbmV4dGpzLTIvLi9ub2RlX21vZHVsZXMvam9zZS9kaXN0L25vZGUvY2pzL2xpYi9idWZmZXJfdXRpbHMuanM/NjRkMCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuY29uY2F0S2RmID0gZXhwb3J0cy5sZW5ndGhBbmRJbnB1dCA9IGV4cG9ydHMudWludDMyYmUgPSBleHBvcnRzLnVpbnQ2NGJlID0gZXhwb3J0cy5wMnMgPSBleHBvcnRzLmNvbmNhdCA9IGV4cG9ydHMuZGVjb2RlciA9IGV4cG9ydHMuZW5jb2RlciA9IHZvaWQgMDtcbmNvbnN0IGRpZ2VzdF9qc18xID0gcmVxdWlyZShcIi4uL3J1bnRpbWUvZGlnZXN0LmpzXCIpO1xuZXhwb3J0cy5lbmNvZGVyID0gbmV3IFRleHRFbmNvZGVyKCk7XG5leHBvcnRzLmRlY29kZXIgPSBuZXcgVGV4dERlY29kZXIoKTtcbmNvbnN0IE1BWF9JTlQzMiA9IDIgKiogMzI7XG5mdW5jdGlvbiBjb25jYXQoLi4uYnVmZmVycykge1xuICAgIGNvbnN0IHNpemUgPSBidWZmZXJzLnJlZHVjZSgoYWNjLCB7IGxlbmd0aCB9KSA9PiBhY2MgKyBsZW5ndGgsIDApO1xuICAgIGNvbnN0IGJ1ZiA9IG5ldyBVaW50OEFycmF5KHNpemUpO1xuICAgIGxldCBpID0gMDtcbiAgICBidWZmZXJzLmZvckVhY2goKGJ1ZmZlcikgPT4ge1xuICAgICAgICBidWYuc2V0KGJ1ZmZlciwgaSk7XG4gICAgICAgIGkgKz0gYnVmZmVyLmxlbmd0aDtcbiAgICB9KTtcbiAgICByZXR1cm4gYnVmO1xufVxuZXhwb3J0cy5jb25jYXQgPSBjb25jYXQ7XG5mdW5jdGlvbiBwMnMoYWxnLCBwMnNJbnB1dCkge1xuICAgIHJldHVybiBjb25jYXQoZXhwb3J0cy5lbmNvZGVyLmVuY29kZShhbGcpLCBuZXcgVWludDhBcnJheShbMF0pLCBwMnNJbnB1dCk7XG59XG5leHBvcnRzLnAycyA9IHAycztcbmZ1bmN0aW9uIHdyaXRlVUludDMyQkUoYnVmLCB2YWx1ZSwgb2Zmc2V0KSB7XG4gICAgaWYgKHZhbHVlIDwgMCB8fCB2YWx1ZSA+PSBNQVhfSU5UMzIpIHtcbiAgICAgICAgdGhyb3cgbmV3IFJhbmdlRXJyb3IoYHZhbHVlIG11c3QgYmUgPj0gMCBhbmQgPD0gJHtNQVhfSU5UMzIgLSAxfS4gUmVjZWl2ZWQgJHt2YWx1ZX1gKTtcbiAgICB9XG4gICAgYnVmLnNldChbdmFsdWUgPj4+IDI0LCB2YWx1ZSA+Pj4gMTYsIHZhbHVlID4+PiA4LCB2YWx1ZSAmIDB4ZmZdLCBvZmZzZXQpO1xufVxuZnVuY3Rpb24gdWludDY0YmUodmFsdWUpIHtcbiAgICBjb25zdCBoaWdoID0gTWF0aC5mbG9vcih2YWx1ZSAvIE1BWF9JTlQzMik7XG4gICAgY29uc3QgbG93ID0gdmFsdWUgJSBNQVhfSU5UMzI7XG4gICAgY29uc3QgYnVmID0gbmV3IFVpbnQ4QXJyYXkoOCk7XG4gICAgd3JpdGVVSW50MzJCRShidWYsIGhpZ2gsIDApO1xuICAgIHdyaXRlVUludDMyQkUoYnVmLCBsb3csIDQpO1xuICAgIHJldHVybiBidWY7XG59XG5leHBvcnRzLnVpbnQ2NGJlID0gdWludDY0YmU7XG5mdW5jdGlvbiB1aW50MzJiZSh2YWx1ZSkge1xuICAgIGNvbnN0IGJ1ZiA9IG5ldyBVaW50OEFycmF5KDQpO1xuICAgIHdyaXRlVUludDMyQkUoYnVmLCB2YWx1ZSk7XG4gICAgcmV0dXJuIGJ1Zjtcbn1cbmV4cG9ydHMudWludDMyYmUgPSB1aW50MzJiZTtcbmZ1bmN0aW9uIGxlbmd0aEFuZElucHV0KGlucHV0KSB7XG4gICAgcmV0dXJuIGNvbmNhdCh1aW50MzJiZShpbnB1dC5sZW5ndGgpLCBpbnB1dCk7XG59XG5leHBvcnRzLmxlbmd0aEFuZElucHV0ID0gbGVuZ3RoQW5kSW5wdXQ7XG5hc3luYyBmdW5jdGlvbiBjb25jYXRLZGYoc2VjcmV0LCBiaXRzLCB2YWx1ZSkge1xuICAgIGNvbnN0IGl0ZXJhdGlvbnMgPSBNYXRoLmNlaWwoKGJpdHMgPj4gMykgLyAzMik7XG4gICAgY29uc3QgcmVzID0gbmV3IFVpbnQ4QXJyYXkoaXRlcmF0aW9ucyAqIDMyKTtcbiAgICBmb3IgKGxldCBpdGVyID0gMDsgaXRlciA8IGl0ZXJhdGlvbnM7IGl0ZXIrKykge1xuICAgICAgICBjb25zdCBidWYgPSBuZXcgVWludDhBcnJheSg0ICsgc2VjcmV0Lmxlbmd0aCArIHZhbHVlLmxlbmd0aCk7XG4gICAgICAgIGJ1Zi5zZXQodWludDMyYmUoaXRlciArIDEpKTtcbiAgICAgICAgYnVmLnNldChzZWNyZXQsIDQpO1xuICAgICAgICBidWYuc2V0KHZhbHVlLCA0ICsgc2VjcmV0Lmxlbmd0aCk7XG4gICAgICAgIHJlcy5zZXQoYXdhaXQgKDAsIGRpZ2VzdF9qc18xLmRlZmF1bHQpKCdzaGEyNTYnLCBidWYpLCBpdGVyICogMzIpO1xuICAgIH1cbiAgICByZXR1cm4gcmVzLnNsaWNlKDAsIGJpdHMgPj4gMyk7XG59XG5leHBvcnRzLmNvbmNhdEtkZiA9IGNvbmNhdEtkZjtcbiJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsImNvbmNhdEtkZiIsImxlbmd0aEFuZElucHV0IiwidWludDMyYmUiLCJ1aW50NjRiZSIsInAycyIsImNvbmNhdCIsImRlY29kZXIiLCJlbmNvZGVyIiwiZGlnZXN0X2pzXzEiLCJyZXF1aXJlIiwiVGV4dEVuY29kZXIiLCJUZXh0RGVjb2RlciIsIk1BWF9JTlQzMiIsImJ1ZmZlcnMiLCJzaXplIiwicmVkdWNlIiwiYWNjIiwibGVuZ3RoIiwiYnVmIiwiVWludDhBcnJheSIsImkiLCJmb3JFYWNoIiwiYnVmZmVyIiwic2V0IiwiYWxnIiwicDJzSW5wdXQiLCJlbmNvZGUiLCJ3cml0ZVVJbnQzMkJFIiwib2Zmc2V0IiwiUmFuZ2VFcnJvciIsImhpZ2giLCJNYXRoIiwiZmxvb3IiLCJsb3ciLCJpbnB1dCIsInNlY3JldCIsImJpdHMiLCJpdGVyYXRpb25zIiwiY2VpbCIsInJlcyIsIml0ZXIiLCJkZWZhdWx0Iiwic2xpY2UiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/jose/dist/node/cjs/lib/buffer_utils.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/jose/dist/node/cjs/lib/cek.js":
/*!****************************************************!*\
  !*** ./node_modules/jose/dist/node/cjs/lib/cek.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.bitLength = void 0;\nconst errors_js_1 = __webpack_require__(/*! ../util/errors.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/util/errors.js\");\nconst random_js_1 = __webpack_require__(/*! ../runtime/random.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/runtime/random.js\");\nfunction bitLength(alg) {\n    switch(alg){\n        case \"A128GCM\":\n            return 128;\n        case \"A192GCM\":\n            return 192;\n        case \"A256GCM\":\n        case \"A128CBC-HS256\":\n            return 256;\n        case \"A192CBC-HS384\":\n            return 384;\n        case \"A256CBC-HS512\":\n            return 512;\n        default:\n            throw new errors_js_1.JOSENotSupported(`Unsupported JWE Algorithm: ${alg}`);\n    }\n}\nexports.bitLength = bitLength;\nexports[\"default\"] = (alg)=>(0, random_js_1.default)(new Uint8Array(bitLength(alg) >> 3));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvam9zZS9kaXN0L25vZGUvY2pzL2xpYi9jZWsuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYkEsOENBQTZDO0lBQUVHLE9BQU87QUFBSyxDQUFDLEVBQUM7QUFDN0RELGlCQUFpQkUsR0FBRyxLQUFLO0FBQ3pCLE1BQU1DLGNBQWNDLG1CQUFPQSxDQUFDLHVGQUFtQjtBQUMvQyxNQUFNQyxjQUFjRCxtQkFBT0EsQ0FBQyw2RkFBc0I7QUFDbEQsU0FBU0YsVUFBVUksR0FBRztJQUNsQixPQUFRQTtRQUNKLEtBQUs7WUFDRCxPQUFPO1FBQ1gsS0FBSztZQUNELE9BQU87UUFDWCxLQUFLO1FBQ0wsS0FBSztZQUNELE9BQU87UUFDWCxLQUFLO1lBQ0QsT0FBTztRQUNYLEtBQUs7WUFDRCxPQUFPO1FBQ1g7WUFDSSxNQUFNLElBQUlILFlBQVlJLGlCQUFpQixDQUFDLDJCQUEyQixFQUFFRCxJQUFJLENBQUM7SUFDbEY7QUFDSjtBQUNBTixpQkFBaUJFLEdBQUdBO0FBQ3BCRixrQkFBZVEsR0FBRyxDQUFDRixNQUFRLENBQUMsR0FBR0QsWUFBWUcsT0FBTSxFQUFHLElBQUlDLFdBQVdQLFVBQVVJLFFBQVEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mdWxsc3RhY2stcm9sZS1iYXNlZC1uZXh0anMtMi8uL25vZGVfbW9kdWxlcy9qb3NlL2Rpc3Qvbm9kZS9janMvbGliL2Nlay5qcz8yYzM4Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5iaXRMZW5ndGggPSB2b2lkIDA7XG5jb25zdCBlcnJvcnNfanNfMSA9IHJlcXVpcmUoXCIuLi91dGlsL2Vycm9ycy5qc1wiKTtcbmNvbnN0IHJhbmRvbV9qc18xID0gcmVxdWlyZShcIi4uL3J1bnRpbWUvcmFuZG9tLmpzXCIpO1xuZnVuY3Rpb24gYml0TGVuZ3RoKGFsZykge1xuICAgIHN3aXRjaCAoYWxnKSB7XG4gICAgICAgIGNhc2UgJ0ExMjhHQ00nOlxuICAgICAgICAgICAgcmV0dXJuIDEyODtcbiAgICAgICAgY2FzZSAnQTE5MkdDTSc6XG4gICAgICAgICAgICByZXR1cm4gMTkyO1xuICAgICAgICBjYXNlICdBMjU2R0NNJzpcbiAgICAgICAgY2FzZSAnQTEyOENCQy1IUzI1Nic6XG4gICAgICAgICAgICByZXR1cm4gMjU2O1xuICAgICAgICBjYXNlICdBMTkyQ0JDLUhTMzg0JzpcbiAgICAgICAgICAgIHJldHVybiAzODQ7XG4gICAgICAgIGNhc2UgJ0EyNTZDQkMtSFM1MTInOlxuICAgICAgICAgICAgcmV0dXJuIDUxMjtcbiAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgIHRocm93IG5ldyBlcnJvcnNfanNfMS5KT1NFTm90U3VwcG9ydGVkKGBVbnN1cHBvcnRlZCBKV0UgQWxnb3JpdGhtOiAke2FsZ31gKTtcbiAgICB9XG59XG5leHBvcnRzLmJpdExlbmd0aCA9IGJpdExlbmd0aDtcbmV4cG9ydHMuZGVmYXVsdCA9IChhbGcpID0+ICgwLCByYW5kb21fanNfMS5kZWZhdWx0KShuZXcgVWludDhBcnJheShiaXRMZW5ndGgoYWxnKSA+PiAzKSk7XG4iXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJiaXRMZW5ndGgiLCJlcnJvcnNfanNfMSIsInJlcXVpcmUiLCJyYW5kb21fanNfMSIsImFsZyIsIkpPU0VOb3RTdXBwb3J0ZWQiLCJkZWZhdWx0IiwiVWludDhBcnJheSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/jose/dist/node/cjs/lib/cek.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/jose/dist/node/cjs/lib/check_iv_length.js":
/*!****************************************************************!*\
  !*** ./node_modules/jose/dist/node/cjs/lib/check_iv_length.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nconst errors_js_1 = __webpack_require__(/*! ../util/errors.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/util/errors.js\");\nconst iv_js_1 = __webpack_require__(/*! ./iv.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/lib/iv.js\");\nconst checkIvLength = (enc, iv)=>{\n    if (iv.length << 3 !== (0, iv_js_1.bitLength)(enc)) {\n        throw new errors_js_1.JWEInvalid(\"Invalid Initialization Vector length\");\n    }\n};\nexports[\"default\"] = checkIvLength;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvam9zZS9kaXN0L25vZGUvY2pzL2xpYi9jaGVja19pdl9sZW5ndGguanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYkEsOENBQTZDO0lBQUVHLE9BQU87QUFBSyxDQUFDLEVBQUM7QUFDN0QsTUFBTUMsY0FBY0MsbUJBQU9BLENBQUMsdUZBQW1CO0FBQy9DLE1BQU1DLFVBQVVELG1CQUFPQSxDQUFDLHdFQUFTO0FBQ2pDLE1BQU1FLGdCQUFnQixDQUFDQyxLQUFLQztJQUN4QixJQUFJQSxHQUFHQyxVQUFVLE1BQU0sQ0FBQyxHQUFHSixRQUFRSyxTQUFRLEVBQUdILE1BQU07UUFDaEQsTUFBTSxJQUFJSixZQUFZUSxXQUFXO0lBQ3JDO0FBQ0o7QUFDQVYsa0JBQWVXLEdBQUdOIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZnVsbHN0YWNrLXJvbGUtYmFzZWQtbmV4dGpzLTIvLi9ub2RlX21vZHVsZXMvam9zZS9kaXN0L25vZGUvY2pzL2xpYi9jaGVja19pdl9sZW5ndGguanM/NmQ2MiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmNvbnN0IGVycm9yc19qc18xID0gcmVxdWlyZShcIi4uL3V0aWwvZXJyb3JzLmpzXCIpO1xuY29uc3QgaXZfanNfMSA9IHJlcXVpcmUoXCIuL2l2LmpzXCIpO1xuY29uc3QgY2hlY2tJdkxlbmd0aCA9IChlbmMsIGl2KSA9PiB7XG4gICAgaWYgKGl2Lmxlbmd0aCA8PCAzICE9PSAoMCwgaXZfanNfMS5iaXRMZW5ndGgpKGVuYykpIHtcbiAgICAgICAgdGhyb3cgbmV3IGVycm9yc19qc18xLkpXRUludmFsaWQoJ0ludmFsaWQgSW5pdGlhbGl6YXRpb24gVmVjdG9yIGxlbmd0aCcpO1xuICAgIH1cbn07XG5leHBvcnRzLmRlZmF1bHQgPSBjaGVja0l2TGVuZ3RoO1xuIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiZXJyb3JzX2pzXzEiLCJyZXF1aXJlIiwiaXZfanNfMSIsImNoZWNrSXZMZW5ndGgiLCJlbmMiLCJpdiIsImxlbmd0aCIsImJpdExlbmd0aCIsIkpXRUludmFsaWQiLCJkZWZhdWx0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/jose/dist/node/cjs/lib/check_iv_length.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/jose/dist/node/cjs/lib/check_key_type.js":
/*!***************************************************************!*\
  !*** ./node_modules/jose/dist/node/cjs/lib/check_key_type.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nconst invalid_key_input_js_1 = __webpack_require__(/*! ./invalid_key_input.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/lib/invalid_key_input.js\");\nconst is_key_like_js_1 = __webpack_require__(/*! ../runtime/is_key_like.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/runtime/is_key_like.js\");\nconst symmetricTypeCheck = (alg, key)=>{\n    if (key instanceof Uint8Array) return;\n    if (!(0, is_key_like_js_1.default)(key)) {\n        throw new TypeError((0, invalid_key_input_js_1.withAlg)(alg, key, ...is_key_like_js_1.types, \"Uint8Array\"));\n    }\n    if (key.type !== \"secret\") {\n        throw new TypeError(`${is_key_like_js_1.types.join(\" or \")} instances for symmetric algorithms must be of type \"secret\"`);\n    }\n};\nconst asymmetricTypeCheck = (alg, key, usage)=>{\n    if (!(0, is_key_like_js_1.default)(key)) {\n        throw new TypeError((0, invalid_key_input_js_1.withAlg)(alg, key, ...is_key_like_js_1.types));\n    }\n    if (key.type === \"secret\") {\n        throw new TypeError(`${is_key_like_js_1.types.join(\" or \")} instances for asymmetric algorithms must not be of type \"secret\"`);\n    }\n    if (usage === \"sign\" && key.type === \"public\") {\n        throw new TypeError(`${is_key_like_js_1.types.join(\" or \")} instances for asymmetric algorithm signing must be of type \"private\"`);\n    }\n    if (usage === \"decrypt\" && key.type === \"public\") {\n        throw new TypeError(`${is_key_like_js_1.types.join(\" or \")} instances for asymmetric algorithm decryption must be of type \"private\"`);\n    }\n    if (key.algorithm && usage === \"verify\" && key.type === \"private\") {\n        throw new TypeError(`${is_key_like_js_1.types.join(\" or \")} instances for asymmetric algorithm verifying must be of type \"public\"`);\n    }\n    if (key.algorithm && usage === \"encrypt\" && key.type === \"private\") {\n        throw new TypeError(`${is_key_like_js_1.types.join(\" or \")} instances for asymmetric algorithm encryption must be of type \"public\"`);\n    }\n};\nconst checkKeyType = (alg, key, usage)=>{\n    const symmetric = alg.startsWith(\"HS\") || alg === \"dir\" || alg.startsWith(\"PBES2\") || /^A\\d{3}(?:GCM)?KW$/.test(alg);\n    if (symmetric) {\n        symmetricTypeCheck(alg, key);\n    } else {\n        asymmetricTypeCheck(alg, key, usage);\n    }\n};\nexports[\"default\"] = checkKeyType;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvam9zZS9kaXN0L25vZGUvY2pzL2xpYi9jaGVja19rZXlfdHlwZS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFBRUcsT0FBTztBQUFLLENBQUMsRUFBQztBQUM3RCxNQUFNQyx5QkFBeUJDLG1CQUFPQSxDQUFDLHNHQUF3QjtBQUMvRCxNQUFNQyxtQkFBbUJELG1CQUFPQSxDQUFDLHVHQUEyQjtBQUM1RCxNQUFNRSxxQkFBcUIsQ0FBQ0MsS0FBS0M7SUFDN0IsSUFBSUEsZUFBZUMsWUFDZjtJQUNKLElBQUksQ0FBQyxDQUFDLEdBQUdKLGlCQUFpQkssT0FBTSxFQUFHRixNQUFNO1FBQ3JDLE1BQU0sSUFBSUcsVUFBVSxDQUFDLEdBQUdSLHVCQUF1QlMsT0FBTSxFQUFHTCxLQUFLQyxRQUFRSCxpQkFBaUJRLE9BQU87SUFDakc7SUFDQSxJQUFJTCxJQUFJTSxTQUFTLFVBQVU7UUFDdkIsTUFBTSxJQUFJSCxVQUFVLENBQUMsRUFBRU4saUJBQWlCUSxNQUFNRSxLQUFLLFFBQVEsNERBQTRELENBQUM7SUFDNUg7QUFDSjtBQUNBLE1BQU1DLHNCQUFzQixDQUFDVCxLQUFLQyxLQUFLUztJQUNuQyxJQUFJLENBQUMsQ0FBQyxHQUFHWixpQkFBaUJLLE9BQU0sRUFBR0YsTUFBTTtRQUNyQyxNQUFNLElBQUlHLFVBQVUsQ0FBQyxHQUFHUix1QkFBdUJTLE9BQU0sRUFBR0wsS0FBS0MsUUFBUUgsaUJBQWlCUTtJQUMxRjtJQUNBLElBQUlMLElBQUlNLFNBQVMsVUFBVTtRQUN2QixNQUFNLElBQUlILFVBQVUsQ0FBQyxFQUFFTixpQkFBaUJRLE1BQU1FLEtBQUssUUFBUSxpRUFBaUUsQ0FBQztJQUNqSTtJQUNBLElBQUlFLFVBQVUsVUFBVVQsSUFBSU0sU0FBUyxVQUFVO1FBQzNDLE1BQU0sSUFBSUgsVUFBVSxDQUFDLEVBQUVOLGlCQUFpQlEsTUFBTUUsS0FBSyxRQUFRLHFFQUFxRSxDQUFDO0lBQ3JJO0lBQ0EsSUFBSUUsVUFBVSxhQUFhVCxJQUFJTSxTQUFTLFVBQVU7UUFDOUMsTUFBTSxJQUFJSCxVQUFVLENBQUMsRUFBRU4saUJBQWlCUSxNQUFNRSxLQUFLLFFBQVEsd0VBQXdFLENBQUM7SUFDeEk7SUFDQSxJQUFJUCxJQUFJVSxhQUFhRCxVQUFVLFlBQVlULElBQUlNLFNBQVMsV0FBVztRQUMvRCxNQUFNLElBQUlILFVBQVUsQ0FBQyxFQUFFTixpQkFBaUJRLE1BQU1FLEtBQUssUUFBUSxzRUFBc0UsQ0FBQztJQUN0STtJQUNBLElBQUlQLElBQUlVLGFBQWFELFVBQVUsYUFBYVQsSUFBSU0sU0FBUyxXQUFXO1FBQ2hFLE1BQU0sSUFBSUgsVUFBVSxDQUFDLEVBQUVOLGlCQUFpQlEsTUFBTUUsS0FBSyxRQUFRLHVFQUF1RSxDQUFDO0lBQ3ZJO0FBQ0o7QUFDQSxNQUFNSSxlQUFlLENBQUNaLEtBQUtDLEtBQUtTO0lBQzVCLE1BQU1HLFlBQVliLElBQUljLFdBQVcsU0FDN0JkLFFBQVEsU0FDUkEsSUFBSWMsV0FBVyxZQUNmLHFCQUFxQkMsS0FBS2Y7SUFDOUIsSUFBSWEsV0FBVztRQUNYZCxtQkFBbUJDLEtBQUtDO0lBQzVCLE9BQ0s7UUFDRFEsb0JBQW9CVCxLQUFLQyxLQUFLUztJQUNsQztBQUNKO0FBQ0FoQixrQkFBZVMsR0FBR1MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mdWxsc3RhY2stcm9sZS1iYXNlZC1uZXh0anMtMi8uL25vZGVfbW9kdWxlcy9qb3NlL2Rpc3Qvbm9kZS9janMvbGliL2NoZWNrX2tleV90eXBlLmpzP2VmZTgiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5jb25zdCBpbnZhbGlkX2tleV9pbnB1dF9qc18xID0gcmVxdWlyZShcIi4vaW52YWxpZF9rZXlfaW5wdXQuanNcIik7XG5jb25zdCBpc19rZXlfbGlrZV9qc18xID0gcmVxdWlyZShcIi4uL3J1bnRpbWUvaXNfa2V5X2xpa2UuanNcIik7XG5jb25zdCBzeW1tZXRyaWNUeXBlQ2hlY2sgPSAoYWxnLCBrZXkpID0+IHtcbiAgICBpZiAoa2V5IGluc3RhbmNlb2YgVWludDhBcnJheSlcbiAgICAgICAgcmV0dXJuO1xuICAgIGlmICghKDAsIGlzX2tleV9saWtlX2pzXzEuZGVmYXVsdCkoa2V5KSkge1xuICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCgwLCBpbnZhbGlkX2tleV9pbnB1dF9qc18xLndpdGhBbGcpKGFsZywga2V5LCAuLi5pc19rZXlfbGlrZV9qc18xLnR5cGVzLCAnVWludDhBcnJheScpKTtcbiAgICB9XG4gICAgaWYgKGtleS50eXBlICE9PSAnc2VjcmV0Jykge1xuICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKGAke2lzX2tleV9saWtlX2pzXzEudHlwZXMuam9pbignIG9yICcpfSBpbnN0YW5jZXMgZm9yIHN5bW1ldHJpYyBhbGdvcml0aG1zIG11c3QgYmUgb2YgdHlwZSBcInNlY3JldFwiYCk7XG4gICAgfVxufTtcbmNvbnN0IGFzeW1tZXRyaWNUeXBlQ2hlY2sgPSAoYWxnLCBrZXksIHVzYWdlKSA9PiB7XG4gICAgaWYgKCEoMCwgaXNfa2V5X2xpa2VfanNfMS5kZWZhdWx0KShrZXkpKSB7XG4gICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoKDAsIGludmFsaWRfa2V5X2lucHV0X2pzXzEud2l0aEFsZykoYWxnLCBrZXksIC4uLmlzX2tleV9saWtlX2pzXzEudHlwZXMpKTtcbiAgICB9XG4gICAgaWYgKGtleS50eXBlID09PSAnc2VjcmV0Jykge1xuICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKGAke2lzX2tleV9saWtlX2pzXzEudHlwZXMuam9pbignIG9yICcpfSBpbnN0YW5jZXMgZm9yIGFzeW1tZXRyaWMgYWxnb3JpdGhtcyBtdXN0IG5vdCBiZSBvZiB0eXBlIFwic2VjcmV0XCJgKTtcbiAgICB9XG4gICAgaWYgKHVzYWdlID09PSAnc2lnbicgJiYga2V5LnR5cGUgPT09ICdwdWJsaWMnKSB7XG4gICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoYCR7aXNfa2V5X2xpa2VfanNfMS50eXBlcy5qb2luKCcgb3IgJyl9IGluc3RhbmNlcyBmb3IgYXN5bW1ldHJpYyBhbGdvcml0aG0gc2lnbmluZyBtdXN0IGJlIG9mIHR5cGUgXCJwcml2YXRlXCJgKTtcbiAgICB9XG4gICAgaWYgKHVzYWdlID09PSAnZGVjcnlwdCcgJiYga2V5LnR5cGUgPT09ICdwdWJsaWMnKSB7XG4gICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoYCR7aXNfa2V5X2xpa2VfanNfMS50eXBlcy5qb2luKCcgb3IgJyl9IGluc3RhbmNlcyBmb3IgYXN5bW1ldHJpYyBhbGdvcml0aG0gZGVjcnlwdGlvbiBtdXN0IGJlIG9mIHR5cGUgXCJwcml2YXRlXCJgKTtcbiAgICB9XG4gICAgaWYgKGtleS5hbGdvcml0aG0gJiYgdXNhZ2UgPT09ICd2ZXJpZnknICYmIGtleS50eXBlID09PSAncHJpdmF0ZScpIHtcbiAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcihgJHtpc19rZXlfbGlrZV9qc18xLnR5cGVzLmpvaW4oJyBvciAnKX0gaW5zdGFuY2VzIGZvciBhc3ltbWV0cmljIGFsZ29yaXRobSB2ZXJpZnlpbmcgbXVzdCBiZSBvZiB0eXBlIFwicHVibGljXCJgKTtcbiAgICB9XG4gICAgaWYgKGtleS5hbGdvcml0aG0gJiYgdXNhZ2UgPT09ICdlbmNyeXB0JyAmJiBrZXkudHlwZSA9PT0gJ3ByaXZhdGUnKSB7XG4gICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoYCR7aXNfa2V5X2xpa2VfanNfMS50eXBlcy5qb2luKCcgb3IgJyl9IGluc3RhbmNlcyBmb3IgYXN5bW1ldHJpYyBhbGdvcml0aG0gZW5jcnlwdGlvbiBtdXN0IGJlIG9mIHR5cGUgXCJwdWJsaWNcImApO1xuICAgIH1cbn07XG5jb25zdCBjaGVja0tleVR5cGUgPSAoYWxnLCBrZXksIHVzYWdlKSA9PiB7XG4gICAgY29uc3Qgc3ltbWV0cmljID0gYWxnLnN0YXJ0c1dpdGgoJ0hTJykgfHxcbiAgICAgICAgYWxnID09PSAnZGlyJyB8fFxuICAgICAgICBhbGcuc3RhcnRzV2l0aCgnUEJFUzInKSB8fFxuICAgICAgICAvXkFcXGR7M30oPzpHQ00pP0tXJC8udGVzdChhbGcpO1xuICAgIGlmIChzeW1tZXRyaWMpIHtcbiAgICAgICAgc3ltbWV0cmljVHlwZUNoZWNrKGFsZywga2V5KTtcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIGFzeW1tZXRyaWNUeXBlQ2hlY2soYWxnLCBrZXksIHVzYWdlKTtcbiAgICB9XG59O1xuZXhwb3J0cy5kZWZhdWx0ID0gY2hlY2tLZXlUeXBlO1xuIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiaW52YWxpZF9rZXlfaW5wdXRfanNfMSIsInJlcXVpcmUiLCJpc19rZXlfbGlrZV9qc18xIiwic3ltbWV0cmljVHlwZUNoZWNrIiwiYWxnIiwia2V5IiwiVWludDhBcnJheSIsImRlZmF1bHQiLCJUeXBlRXJyb3IiLCJ3aXRoQWxnIiwidHlwZXMiLCJ0eXBlIiwiam9pbiIsImFzeW1tZXRyaWNUeXBlQ2hlY2siLCJ1c2FnZSIsImFsZ29yaXRobSIsImNoZWNrS2V5VHlwZSIsInN5bW1ldHJpYyIsInN0YXJ0c1dpdGgiLCJ0ZXN0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/jose/dist/node/cjs/lib/check_key_type.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/jose/dist/node/cjs/lib/check_p2s.js":
/*!**********************************************************!*\
  !*** ./node_modules/jose/dist/node/cjs/lib/check_p2s.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nconst errors_js_1 = __webpack_require__(/*! ../util/errors.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/util/errors.js\");\nfunction checkP2s(p2s) {\n    if (!(p2s instanceof Uint8Array) || p2s.length < 8) {\n        throw new errors_js_1.JWEInvalid(\"PBES2 Salt Input must be 8 or more octets\");\n    }\n}\nexports[\"default\"] = checkP2s;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvam9zZS9kaXN0L25vZGUvY2pzL2xpYi9jaGVja19wMnMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYkEsOENBQTZDO0lBQUVHLE9BQU87QUFBSyxDQUFDLEVBQUM7QUFDN0QsTUFBTUMsY0FBY0MsbUJBQU9BLENBQUMsdUZBQW1CO0FBQy9DLFNBQVNDLFNBQVNDLEdBQUc7SUFDakIsSUFBSSxDQUFFQSxDQUFBQSxlQUFlQyxVQUFTLEtBQU1ELElBQUlFLFNBQVMsR0FBRztRQUNoRCxNQUFNLElBQUlMLFlBQVlNLFdBQVc7SUFDckM7QUFDSjtBQUNBUixrQkFBZVMsR0FBR0wiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mdWxsc3RhY2stcm9sZS1iYXNlZC1uZXh0anMtMi8uL25vZGVfbW9kdWxlcy9qb3NlL2Rpc3Qvbm9kZS9janMvbGliL2NoZWNrX3Aycy5qcz9hY2UzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuY29uc3QgZXJyb3JzX2pzXzEgPSByZXF1aXJlKFwiLi4vdXRpbC9lcnJvcnMuanNcIik7XG5mdW5jdGlvbiBjaGVja1AycyhwMnMpIHtcbiAgICBpZiAoIShwMnMgaW5zdGFuY2VvZiBVaW50OEFycmF5KSB8fCBwMnMubGVuZ3RoIDwgOCkge1xuICAgICAgICB0aHJvdyBuZXcgZXJyb3JzX2pzXzEuSldFSW52YWxpZCgnUEJFUzIgU2FsdCBJbnB1dCBtdXN0IGJlIDggb3IgbW9yZSBvY3RldHMnKTtcbiAgICB9XG59XG5leHBvcnRzLmRlZmF1bHQgPSBjaGVja1AycztcbiJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsImVycm9yc19qc18xIiwicmVxdWlyZSIsImNoZWNrUDJzIiwicDJzIiwiVWludDhBcnJheSIsImxlbmd0aCIsIkpXRUludmFsaWQiLCJkZWZhdWx0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/jose/dist/node/cjs/lib/check_p2s.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/jose/dist/node/cjs/lib/crypto_key.js":
/*!***********************************************************!*\
  !*** ./node_modules/jose/dist/node/cjs/lib/crypto_key.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.checkEncCryptoKey = exports.checkSigCryptoKey = void 0;\nfunction unusable(name, prop = \"algorithm.name\") {\n    return new TypeError(`CryptoKey does not support this operation, its ${prop} must be ${name}`);\n}\nfunction isAlgorithm(algorithm, name) {\n    return algorithm.name === name;\n}\nfunction getHashLength(hash) {\n    return parseInt(hash.name.slice(4), 10);\n}\nfunction getNamedCurve(alg) {\n    switch(alg){\n        case \"ES256\":\n            return \"P-256\";\n        case \"ES384\":\n            return \"P-384\";\n        case \"ES512\":\n            return \"P-521\";\n        default:\n            throw new Error(\"unreachable\");\n    }\n}\nfunction checkUsage(key, usages) {\n    if (usages.length && !usages.some((expected)=>key.usages.includes(expected))) {\n        let msg = \"CryptoKey does not support this operation, its usages must include \";\n        if (usages.length > 2) {\n            const last = usages.pop();\n            msg += `one of ${usages.join(\", \")}, or ${last}.`;\n        } else if (usages.length === 2) {\n            msg += `one of ${usages[0]} or ${usages[1]}.`;\n        } else {\n            msg += `${usages[0]}.`;\n        }\n        throw new TypeError(msg);\n    }\n}\nfunction checkSigCryptoKey(key, alg, ...usages) {\n    switch(alg){\n        case \"HS256\":\n        case \"HS384\":\n        case \"HS512\":\n            {\n                if (!isAlgorithm(key.algorithm, \"HMAC\")) throw unusable(\"HMAC\");\n                const expected = parseInt(alg.slice(2), 10);\n                const actual = getHashLength(key.algorithm.hash);\n                if (actual !== expected) throw unusable(`SHA-${expected}`, \"algorithm.hash\");\n                break;\n            }\n        case \"RS256\":\n        case \"RS384\":\n        case \"RS512\":\n            {\n                if (!isAlgorithm(key.algorithm, \"RSASSA-PKCS1-v1_5\")) throw unusable(\"RSASSA-PKCS1-v1_5\");\n                const expected = parseInt(alg.slice(2), 10);\n                const actual = getHashLength(key.algorithm.hash);\n                if (actual !== expected) throw unusable(`SHA-${expected}`, \"algorithm.hash\");\n                break;\n            }\n        case \"PS256\":\n        case \"PS384\":\n        case \"PS512\":\n            {\n                if (!isAlgorithm(key.algorithm, \"RSA-PSS\")) throw unusable(\"RSA-PSS\");\n                const expected = parseInt(alg.slice(2), 10);\n                const actual = getHashLength(key.algorithm.hash);\n                if (actual !== expected) throw unusable(`SHA-${expected}`, \"algorithm.hash\");\n                break;\n            }\n        case \"EdDSA\":\n            {\n                if (key.algorithm.name !== \"Ed25519\" && key.algorithm.name !== \"Ed448\") {\n                    throw unusable(\"Ed25519 or Ed448\");\n                }\n                break;\n            }\n        case \"ES256\":\n        case \"ES384\":\n        case \"ES512\":\n            {\n                if (!isAlgorithm(key.algorithm, \"ECDSA\")) throw unusable(\"ECDSA\");\n                const expected = getNamedCurve(alg);\n                const actual = key.algorithm.namedCurve;\n                if (actual !== expected) throw unusable(expected, \"algorithm.namedCurve\");\n                break;\n            }\n        default:\n            throw new TypeError(\"CryptoKey does not support this operation\");\n    }\n    checkUsage(key, usages);\n}\nexports.checkSigCryptoKey = checkSigCryptoKey;\nfunction checkEncCryptoKey(key, alg, ...usages) {\n    switch(alg){\n        case \"A128GCM\":\n        case \"A192GCM\":\n        case \"A256GCM\":\n            {\n                if (!isAlgorithm(key.algorithm, \"AES-GCM\")) throw unusable(\"AES-GCM\");\n                const expected = parseInt(alg.slice(1, 4), 10);\n                const actual = key.algorithm.length;\n                if (actual !== expected) throw unusable(expected, \"algorithm.length\");\n                break;\n            }\n        case \"A128KW\":\n        case \"A192KW\":\n        case \"A256KW\":\n            {\n                if (!isAlgorithm(key.algorithm, \"AES-KW\")) throw unusable(\"AES-KW\");\n                const expected = parseInt(alg.slice(1, 4), 10);\n                const actual = key.algorithm.length;\n                if (actual !== expected) throw unusable(expected, \"algorithm.length\");\n                break;\n            }\n        case \"ECDH\":\n            {\n                switch(key.algorithm.name){\n                    case \"ECDH\":\n                    case \"X25519\":\n                    case \"X448\":\n                        break;\n                    default:\n                        throw unusable(\"ECDH, X25519, or X448\");\n                }\n                break;\n            }\n        case \"PBES2-HS256+A128KW\":\n        case \"PBES2-HS384+A192KW\":\n        case \"PBES2-HS512+A256KW\":\n            if (!isAlgorithm(key.algorithm, \"PBKDF2\")) throw unusable(\"PBKDF2\");\n            break;\n        case \"RSA-OAEP\":\n        case \"RSA-OAEP-256\":\n        case \"RSA-OAEP-384\":\n        case \"RSA-OAEP-512\":\n            {\n                if (!isAlgorithm(key.algorithm, \"RSA-OAEP\")) throw unusable(\"RSA-OAEP\");\n                const expected = parseInt(alg.slice(9), 10) || 1;\n                const actual = getHashLength(key.algorithm.hash);\n                if (actual !== expected) throw unusable(`SHA-${expected}`, \"algorithm.hash\");\n                break;\n            }\n        default:\n            throw new TypeError(\"CryptoKey does not support this operation\");\n    }\n    checkUsage(key, usages);\n}\nexports.checkEncCryptoKey = checkEncCryptoKey;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvam9zZS9kaXN0L25vZGUvY2pzL2xpYi9jcnlwdG9fa2V5LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2JBLDhDQUE2QztJQUFFRyxPQUFPO0FBQUssQ0FBQyxFQUFDO0FBQzdERCx5QkFBeUJFLEdBQUdGLHlCQUF5QkcsR0FBRyxLQUFLO0FBQzdELFNBQVNDLFNBQVNDLElBQUksRUFBRUMsT0FBTyxnQkFBZ0I7SUFDM0MsT0FBTyxJQUFJQyxVQUFVLENBQUMsK0NBQStDLEVBQUVELEtBQUssU0FBUyxFQUFFRCxLQUFLLENBQUM7QUFDakc7QUFDQSxTQUFTRyxZQUFZQyxTQUFTLEVBQUVKLElBQUk7SUFDaEMsT0FBT0ksVUFBVUosU0FBU0E7QUFDOUI7QUFDQSxTQUFTSyxjQUFjQyxJQUFJO0lBQ3ZCLE9BQU9DLFNBQVNELEtBQUtOLEtBQUtRLE1BQU0sSUFBSTtBQUN4QztBQUNBLFNBQVNDLGNBQWNDLEdBQUc7SUFDdEIsT0FBUUE7UUFDSixLQUFLO1lBQ0QsT0FBTztRQUNYLEtBQUs7WUFDRCxPQUFPO1FBQ1gsS0FBSztZQUNELE9BQU87UUFDWDtZQUNJLE1BQU0sSUFBSUMsTUFBTTtJQUN4QjtBQUNKO0FBQ0EsU0FBU0MsV0FBV0MsR0FBRyxFQUFFQyxNQUFNO0lBQzNCLElBQUlBLE9BQU9DLFVBQVUsQ0FBQ0QsT0FBT0UsS0FBSyxDQUFDQyxXQUFhSixJQUFJQyxPQUFPSSxTQUFTRCxZQUFZO1FBQzVFLElBQUlFLE1BQU07UUFDVixJQUFJTCxPQUFPQyxTQUFTLEdBQUc7WUFDbkIsTUFBTUssT0FBT04sT0FBT087WUFDcEJGLE9BQU8sQ0FBQyxPQUFPLEVBQUVMLE9BQU9RLEtBQUssTUFBTSxLQUFLLEVBQUVGLEtBQUssQ0FBQyxDQUFDO1FBQ3JELE9BQ0ssSUFBSU4sT0FBT0MsV0FBVyxHQUFHO1lBQzFCSSxPQUFPLENBQUMsT0FBTyxFQUFFTCxNQUFNLENBQUMsRUFBRSxDQUFDLElBQUksRUFBRUEsTUFBTSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUM7UUFDakQsT0FDSztZQUNESyxPQUFPLENBQUMsRUFBRUwsTUFBTSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUM7UUFDMUI7UUFDQSxNQUFNLElBQUlaLFVBQVVpQjtJQUN4QjtBQUNKO0FBQ0EsU0FBU3JCLGtCQUFrQmUsR0FBRyxFQUFFSCxHQUFHLEVBQUUsR0FBR0ksTUFBTTtJQUMxQyxPQUFRSjtRQUNKLEtBQUs7UUFDTCxLQUFLO1FBQ0wsS0FBSztZQUFTO2dCQUNWLElBQUksQ0FBQ1AsWUFBWVUsSUFBSVQsV0FBVyxTQUM1QixNQUFNTCxTQUFTO2dCQUNuQixNQUFNa0IsV0FBV1YsU0FBU0csSUFBSUYsTUFBTSxJQUFJO2dCQUN4QyxNQUFNZSxTQUFTbEIsY0FBY1EsSUFBSVQsVUFBVUU7Z0JBQzNDLElBQUlpQixXQUFXTixVQUNYLE1BQU1sQixTQUFTLENBQUMsSUFBSSxFQUFFa0IsU0FBUyxDQUFDLEVBQUU7Z0JBQ3RDO1lBQ0o7UUFDQSxLQUFLO1FBQ0wsS0FBSztRQUNMLEtBQUs7WUFBUztnQkFDVixJQUFJLENBQUNkLFlBQVlVLElBQUlULFdBQVcsc0JBQzVCLE1BQU1MLFNBQVM7Z0JBQ25CLE1BQU1rQixXQUFXVixTQUFTRyxJQUFJRixNQUFNLElBQUk7Z0JBQ3hDLE1BQU1lLFNBQVNsQixjQUFjUSxJQUFJVCxVQUFVRTtnQkFDM0MsSUFBSWlCLFdBQVdOLFVBQ1gsTUFBTWxCLFNBQVMsQ0FBQyxJQUFJLEVBQUVrQixTQUFTLENBQUMsRUFBRTtnQkFDdEM7WUFDSjtRQUNBLEtBQUs7UUFDTCxLQUFLO1FBQ0wsS0FBSztZQUFTO2dCQUNWLElBQUksQ0FBQ2QsWUFBWVUsSUFBSVQsV0FBVyxZQUM1QixNQUFNTCxTQUFTO2dCQUNuQixNQUFNa0IsV0FBV1YsU0FBU0csSUFBSUYsTUFBTSxJQUFJO2dCQUN4QyxNQUFNZSxTQUFTbEIsY0FBY1EsSUFBSVQsVUFBVUU7Z0JBQzNDLElBQUlpQixXQUFXTixVQUNYLE1BQU1sQixTQUFTLENBQUMsSUFBSSxFQUFFa0IsU0FBUyxDQUFDLEVBQUU7Z0JBQ3RDO1lBQ0o7UUFDQSxLQUFLO1lBQVM7Z0JBQ1YsSUFBSUosSUFBSVQsVUFBVUosU0FBUyxhQUFhYSxJQUFJVCxVQUFVSixTQUFTLFNBQVM7b0JBQ3BFLE1BQU1ELFNBQVM7Z0JBQ25CO2dCQUNBO1lBQ0o7UUFDQSxLQUFLO1FBQ0wsS0FBSztRQUNMLEtBQUs7WUFBUztnQkFDVixJQUFJLENBQUNJLFlBQVlVLElBQUlULFdBQVcsVUFDNUIsTUFBTUwsU0FBUztnQkFDbkIsTUFBTWtCLFdBQVdSLGNBQWNDO2dCQUMvQixNQUFNYSxTQUFTVixJQUFJVCxVQUFVb0I7Z0JBQzdCLElBQUlELFdBQVdOLFVBQ1gsTUFBTWxCLFNBQVNrQixVQUFVO2dCQUM3QjtZQUNKO1FBQ0E7WUFDSSxNQUFNLElBQUlmLFVBQVU7SUFDNUI7SUFDQVUsV0FBV0MsS0FBS0M7QUFDcEI7QUFDQW5CLHlCQUF5QkcsR0FBR0E7QUFDNUIsU0FBU0Qsa0JBQWtCZ0IsR0FBRyxFQUFFSCxHQUFHLEVBQUUsR0FBR0ksTUFBTTtJQUMxQyxPQUFRSjtRQUNKLEtBQUs7UUFDTCxLQUFLO1FBQ0wsS0FBSztZQUFXO2dCQUNaLElBQUksQ0FBQ1AsWUFBWVUsSUFBSVQsV0FBVyxZQUM1QixNQUFNTCxTQUFTO2dCQUNuQixNQUFNa0IsV0FBV1YsU0FBU0csSUFBSUYsTUFBTSxHQUFHLElBQUk7Z0JBQzNDLE1BQU1lLFNBQVNWLElBQUlULFVBQVVXO2dCQUM3QixJQUFJUSxXQUFXTixVQUNYLE1BQU1sQixTQUFTa0IsVUFBVTtnQkFDN0I7WUFDSjtRQUNBLEtBQUs7UUFDTCxLQUFLO1FBQ0wsS0FBSztZQUFVO2dCQUNYLElBQUksQ0FBQ2QsWUFBWVUsSUFBSVQsV0FBVyxXQUM1QixNQUFNTCxTQUFTO2dCQUNuQixNQUFNa0IsV0FBV1YsU0FBU0csSUFBSUYsTUFBTSxHQUFHLElBQUk7Z0JBQzNDLE1BQU1lLFNBQVNWLElBQUlULFVBQVVXO2dCQUM3QixJQUFJUSxXQUFXTixVQUNYLE1BQU1sQixTQUFTa0IsVUFBVTtnQkFDN0I7WUFDSjtRQUNBLEtBQUs7WUFBUTtnQkFDVCxPQUFRSixJQUFJVCxVQUFVSjtvQkFDbEIsS0FBSztvQkFDTCxLQUFLO29CQUNMLEtBQUs7d0JBQ0Q7b0JBQ0o7d0JBQ0ksTUFBTUQsU0FBUztnQkFDdkI7Z0JBQ0E7WUFDSjtRQUNBLEtBQUs7UUFDTCxLQUFLO1FBQ0wsS0FBSztZQUNELElBQUksQ0FBQ0ksWUFBWVUsSUFBSVQsV0FBVyxXQUM1QixNQUFNTCxTQUFTO1lBQ25CO1FBQ0osS0FBSztRQUNMLEtBQUs7UUFDTCxLQUFLO1FBQ0wsS0FBSztZQUFnQjtnQkFDakIsSUFBSSxDQUFDSSxZQUFZVSxJQUFJVCxXQUFXLGFBQzVCLE1BQU1MLFNBQVM7Z0JBQ25CLE1BQU1rQixXQUFXVixTQUFTRyxJQUFJRixNQUFNLElBQUksT0FBTztnQkFDL0MsTUFBTWUsU0FBU2xCLGNBQWNRLElBQUlULFVBQVVFO2dCQUMzQyxJQUFJaUIsV0FBV04sVUFDWCxNQUFNbEIsU0FBUyxDQUFDLElBQUksRUFBRWtCLFNBQVMsQ0FBQyxFQUFFO2dCQUN0QztZQUNKO1FBQ0E7WUFDSSxNQUFNLElBQUlmLFVBQVU7SUFDNUI7SUFDQVUsV0FBV0MsS0FBS0M7QUFDcEI7QUFDQW5CLHlCQUF5QkUsR0FBR0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mdWxsc3RhY2stcm9sZS1iYXNlZC1uZXh0anMtMi8uL25vZGVfbW9kdWxlcy9qb3NlL2Rpc3Qvbm9kZS9janMvbGliL2NyeXB0b19rZXkuanM/YTlmMiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuY2hlY2tFbmNDcnlwdG9LZXkgPSBleHBvcnRzLmNoZWNrU2lnQ3J5cHRvS2V5ID0gdm9pZCAwO1xuZnVuY3Rpb24gdW51c2FibGUobmFtZSwgcHJvcCA9ICdhbGdvcml0aG0ubmFtZScpIHtcbiAgICByZXR1cm4gbmV3IFR5cGVFcnJvcihgQ3J5cHRvS2V5IGRvZXMgbm90IHN1cHBvcnQgdGhpcyBvcGVyYXRpb24sIGl0cyAke3Byb3B9IG11c3QgYmUgJHtuYW1lfWApO1xufVxuZnVuY3Rpb24gaXNBbGdvcml0aG0oYWxnb3JpdGhtLCBuYW1lKSB7XG4gICAgcmV0dXJuIGFsZ29yaXRobS5uYW1lID09PSBuYW1lO1xufVxuZnVuY3Rpb24gZ2V0SGFzaExlbmd0aChoYXNoKSB7XG4gICAgcmV0dXJuIHBhcnNlSW50KGhhc2gubmFtZS5zbGljZSg0KSwgMTApO1xufVxuZnVuY3Rpb24gZ2V0TmFtZWRDdXJ2ZShhbGcpIHtcbiAgICBzd2l0Y2ggKGFsZykge1xuICAgICAgICBjYXNlICdFUzI1Nic6XG4gICAgICAgICAgICByZXR1cm4gJ1AtMjU2JztcbiAgICAgICAgY2FzZSAnRVMzODQnOlxuICAgICAgICAgICAgcmV0dXJuICdQLTM4NCc7XG4gICAgICAgIGNhc2UgJ0VTNTEyJzpcbiAgICAgICAgICAgIHJldHVybiAnUC01MjEnO1xuICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCd1bnJlYWNoYWJsZScpO1xuICAgIH1cbn1cbmZ1bmN0aW9uIGNoZWNrVXNhZ2Uoa2V5LCB1c2FnZXMpIHtcbiAgICBpZiAodXNhZ2VzLmxlbmd0aCAmJiAhdXNhZ2VzLnNvbWUoKGV4cGVjdGVkKSA9PiBrZXkudXNhZ2VzLmluY2x1ZGVzKGV4cGVjdGVkKSkpIHtcbiAgICAgICAgbGV0IG1zZyA9ICdDcnlwdG9LZXkgZG9lcyBub3Qgc3VwcG9ydCB0aGlzIG9wZXJhdGlvbiwgaXRzIHVzYWdlcyBtdXN0IGluY2x1ZGUgJztcbiAgICAgICAgaWYgKHVzYWdlcy5sZW5ndGggPiAyKSB7XG4gICAgICAgICAgICBjb25zdCBsYXN0ID0gdXNhZ2VzLnBvcCgpO1xuICAgICAgICAgICAgbXNnICs9IGBvbmUgb2YgJHt1c2FnZXMuam9pbignLCAnKX0sIG9yICR7bGFzdH0uYDtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmICh1c2FnZXMubGVuZ3RoID09PSAyKSB7XG4gICAgICAgICAgICBtc2cgKz0gYG9uZSBvZiAke3VzYWdlc1swXX0gb3IgJHt1c2FnZXNbMV19LmA7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICBtc2cgKz0gYCR7dXNhZ2VzWzBdfS5gO1xuICAgICAgICB9XG4gICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IobXNnKTtcbiAgICB9XG59XG5mdW5jdGlvbiBjaGVja1NpZ0NyeXB0b0tleShrZXksIGFsZywgLi4udXNhZ2VzKSB7XG4gICAgc3dpdGNoIChhbGcpIHtcbiAgICAgICAgY2FzZSAnSFMyNTYnOlxuICAgICAgICBjYXNlICdIUzM4NCc6XG4gICAgICAgIGNhc2UgJ0hTNTEyJzoge1xuICAgICAgICAgICAgaWYgKCFpc0FsZ29yaXRobShrZXkuYWxnb3JpdGhtLCAnSE1BQycpKVxuICAgICAgICAgICAgICAgIHRocm93IHVudXNhYmxlKCdITUFDJyk7XG4gICAgICAgICAgICBjb25zdCBleHBlY3RlZCA9IHBhcnNlSW50KGFsZy5zbGljZSgyKSwgMTApO1xuICAgICAgICAgICAgY29uc3QgYWN0dWFsID0gZ2V0SGFzaExlbmd0aChrZXkuYWxnb3JpdGhtLmhhc2gpO1xuICAgICAgICAgICAgaWYgKGFjdHVhbCAhPT0gZXhwZWN0ZWQpXG4gICAgICAgICAgICAgICAgdGhyb3cgdW51c2FibGUoYFNIQS0ke2V4cGVjdGVkfWAsICdhbGdvcml0aG0uaGFzaCcpO1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgIH1cbiAgICAgICAgY2FzZSAnUlMyNTYnOlxuICAgICAgICBjYXNlICdSUzM4NCc6XG4gICAgICAgIGNhc2UgJ1JTNTEyJzoge1xuICAgICAgICAgICAgaWYgKCFpc0FsZ29yaXRobShrZXkuYWxnb3JpdGhtLCAnUlNBU1NBLVBLQ1MxLXYxXzUnKSlcbiAgICAgICAgICAgICAgICB0aHJvdyB1bnVzYWJsZSgnUlNBU1NBLVBLQ1MxLXYxXzUnKTtcbiAgICAgICAgICAgIGNvbnN0IGV4cGVjdGVkID0gcGFyc2VJbnQoYWxnLnNsaWNlKDIpLCAxMCk7XG4gICAgICAgICAgICBjb25zdCBhY3R1YWwgPSBnZXRIYXNoTGVuZ3RoKGtleS5hbGdvcml0aG0uaGFzaCk7XG4gICAgICAgICAgICBpZiAoYWN0dWFsICE9PSBleHBlY3RlZClcbiAgICAgICAgICAgICAgICB0aHJvdyB1bnVzYWJsZShgU0hBLSR7ZXhwZWN0ZWR9YCwgJ2FsZ29yaXRobS5oYXNoJyk7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgfVxuICAgICAgICBjYXNlICdQUzI1Nic6XG4gICAgICAgIGNhc2UgJ1BTMzg0JzpcbiAgICAgICAgY2FzZSAnUFM1MTInOiB7XG4gICAgICAgICAgICBpZiAoIWlzQWxnb3JpdGhtKGtleS5hbGdvcml0aG0sICdSU0EtUFNTJykpXG4gICAgICAgICAgICAgICAgdGhyb3cgdW51c2FibGUoJ1JTQS1QU1MnKTtcbiAgICAgICAgICAgIGNvbnN0IGV4cGVjdGVkID0gcGFyc2VJbnQoYWxnLnNsaWNlKDIpLCAxMCk7XG4gICAgICAgICAgICBjb25zdCBhY3R1YWwgPSBnZXRIYXNoTGVuZ3RoKGtleS5hbGdvcml0aG0uaGFzaCk7XG4gICAgICAgICAgICBpZiAoYWN0dWFsICE9PSBleHBlY3RlZClcbiAgICAgICAgICAgICAgICB0aHJvdyB1bnVzYWJsZShgU0hBLSR7ZXhwZWN0ZWR9YCwgJ2FsZ29yaXRobS5oYXNoJyk7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgfVxuICAgICAgICBjYXNlICdFZERTQSc6IHtcbiAgICAgICAgICAgIGlmIChrZXkuYWxnb3JpdGhtLm5hbWUgIT09ICdFZDI1NTE5JyAmJiBrZXkuYWxnb3JpdGhtLm5hbWUgIT09ICdFZDQ0OCcpIHtcbiAgICAgICAgICAgICAgICB0aHJvdyB1bnVzYWJsZSgnRWQyNTUxOSBvciBFZDQ0OCcpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgIH1cbiAgICAgICAgY2FzZSAnRVMyNTYnOlxuICAgICAgICBjYXNlICdFUzM4NCc6XG4gICAgICAgIGNhc2UgJ0VTNTEyJzoge1xuICAgICAgICAgICAgaWYgKCFpc0FsZ29yaXRobShrZXkuYWxnb3JpdGhtLCAnRUNEU0EnKSlcbiAgICAgICAgICAgICAgICB0aHJvdyB1bnVzYWJsZSgnRUNEU0EnKTtcbiAgICAgICAgICAgIGNvbnN0IGV4cGVjdGVkID0gZ2V0TmFtZWRDdXJ2ZShhbGcpO1xuICAgICAgICAgICAgY29uc3QgYWN0dWFsID0ga2V5LmFsZ29yaXRobS5uYW1lZEN1cnZlO1xuICAgICAgICAgICAgaWYgKGFjdHVhbCAhPT0gZXhwZWN0ZWQpXG4gICAgICAgICAgICAgICAgdGhyb3cgdW51c2FibGUoZXhwZWN0ZWQsICdhbGdvcml0aG0ubmFtZWRDdXJ2ZScpO1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgIH1cbiAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ0NyeXB0b0tleSBkb2VzIG5vdCBzdXBwb3J0IHRoaXMgb3BlcmF0aW9uJyk7XG4gICAgfVxuICAgIGNoZWNrVXNhZ2Uoa2V5LCB1c2FnZXMpO1xufVxuZXhwb3J0cy5jaGVja1NpZ0NyeXB0b0tleSA9IGNoZWNrU2lnQ3J5cHRvS2V5O1xuZnVuY3Rpb24gY2hlY2tFbmNDcnlwdG9LZXkoa2V5LCBhbGcsIC4uLnVzYWdlcykge1xuICAgIHN3aXRjaCAoYWxnKSB7XG4gICAgICAgIGNhc2UgJ0ExMjhHQ00nOlxuICAgICAgICBjYXNlICdBMTkyR0NNJzpcbiAgICAgICAgY2FzZSAnQTI1NkdDTSc6IHtcbiAgICAgICAgICAgIGlmICghaXNBbGdvcml0aG0oa2V5LmFsZ29yaXRobSwgJ0FFUy1HQ00nKSlcbiAgICAgICAgICAgICAgICB0aHJvdyB1bnVzYWJsZSgnQUVTLUdDTScpO1xuICAgICAgICAgICAgY29uc3QgZXhwZWN0ZWQgPSBwYXJzZUludChhbGcuc2xpY2UoMSwgNCksIDEwKTtcbiAgICAgICAgICAgIGNvbnN0IGFjdHVhbCA9IGtleS5hbGdvcml0aG0ubGVuZ3RoO1xuICAgICAgICAgICAgaWYgKGFjdHVhbCAhPT0gZXhwZWN0ZWQpXG4gICAgICAgICAgICAgICAgdGhyb3cgdW51c2FibGUoZXhwZWN0ZWQsICdhbGdvcml0aG0ubGVuZ3RoJyk7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgfVxuICAgICAgICBjYXNlICdBMTI4S1cnOlxuICAgICAgICBjYXNlICdBMTkyS1cnOlxuICAgICAgICBjYXNlICdBMjU2S1cnOiB7XG4gICAgICAgICAgICBpZiAoIWlzQWxnb3JpdGhtKGtleS5hbGdvcml0aG0sICdBRVMtS1cnKSlcbiAgICAgICAgICAgICAgICB0aHJvdyB1bnVzYWJsZSgnQUVTLUtXJyk7XG4gICAgICAgICAgICBjb25zdCBleHBlY3RlZCA9IHBhcnNlSW50KGFsZy5zbGljZSgxLCA0KSwgMTApO1xuICAgICAgICAgICAgY29uc3QgYWN0dWFsID0ga2V5LmFsZ29yaXRobS5sZW5ndGg7XG4gICAgICAgICAgICBpZiAoYWN0dWFsICE9PSBleHBlY3RlZClcbiAgICAgICAgICAgICAgICB0aHJvdyB1bnVzYWJsZShleHBlY3RlZCwgJ2FsZ29yaXRobS5sZW5ndGgnKTtcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICB9XG4gICAgICAgIGNhc2UgJ0VDREgnOiB7XG4gICAgICAgICAgICBzd2l0Y2ggKGtleS5hbGdvcml0aG0ubmFtZSkge1xuICAgICAgICAgICAgICAgIGNhc2UgJ0VDREgnOlxuICAgICAgICAgICAgICAgIGNhc2UgJ1gyNTUxOSc6XG4gICAgICAgICAgICAgICAgY2FzZSAnWDQ0OCc6XG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICAgICAgICAgIHRocm93IHVudXNhYmxlKCdFQ0RILCBYMjU1MTksIG9yIFg0NDgnKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICB9XG4gICAgICAgIGNhc2UgJ1BCRVMyLUhTMjU2K0ExMjhLVyc6XG4gICAgICAgIGNhc2UgJ1BCRVMyLUhTMzg0K0ExOTJLVyc6XG4gICAgICAgIGNhc2UgJ1BCRVMyLUhTNTEyK0EyNTZLVyc6XG4gICAgICAgICAgICBpZiAoIWlzQWxnb3JpdGhtKGtleS5hbGdvcml0aG0sICdQQktERjInKSlcbiAgICAgICAgICAgICAgICB0aHJvdyB1bnVzYWJsZSgnUEJLREYyJyk7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgY2FzZSAnUlNBLU9BRVAnOlxuICAgICAgICBjYXNlICdSU0EtT0FFUC0yNTYnOlxuICAgICAgICBjYXNlICdSU0EtT0FFUC0zODQnOlxuICAgICAgICBjYXNlICdSU0EtT0FFUC01MTInOiB7XG4gICAgICAgICAgICBpZiAoIWlzQWxnb3JpdGhtKGtleS5hbGdvcml0aG0sICdSU0EtT0FFUCcpKVxuICAgICAgICAgICAgICAgIHRocm93IHVudXNhYmxlKCdSU0EtT0FFUCcpO1xuICAgICAgICAgICAgY29uc3QgZXhwZWN0ZWQgPSBwYXJzZUludChhbGcuc2xpY2UoOSksIDEwKSB8fCAxO1xuICAgICAgICAgICAgY29uc3QgYWN0dWFsID0gZ2V0SGFzaExlbmd0aChrZXkuYWxnb3JpdGhtLmhhc2gpO1xuICAgICAgICAgICAgaWYgKGFjdHVhbCAhPT0gZXhwZWN0ZWQpXG4gICAgICAgICAgICAgICAgdGhyb3cgdW51c2FibGUoYFNIQS0ke2V4cGVjdGVkfWAsICdhbGdvcml0aG0uaGFzaCcpO1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgIH1cbiAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ0NyeXB0b0tleSBkb2VzIG5vdCBzdXBwb3J0IHRoaXMgb3BlcmF0aW9uJyk7XG4gICAgfVxuICAgIGNoZWNrVXNhZ2Uoa2V5LCB1c2FnZXMpO1xufVxuZXhwb3J0cy5jaGVja0VuY0NyeXB0b0tleSA9IGNoZWNrRW5jQ3J5cHRvS2V5O1xuIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiY2hlY2tFbmNDcnlwdG9LZXkiLCJjaGVja1NpZ0NyeXB0b0tleSIsInVudXNhYmxlIiwibmFtZSIsInByb3AiLCJUeXBlRXJyb3IiLCJpc0FsZ29yaXRobSIsImFsZ29yaXRobSIsImdldEhhc2hMZW5ndGgiLCJoYXNoIiwicGFyc2VJbnQiLCJzbGljZSIsImdldE5hbWVkQ3VydmUiLCJhbGciLCJFcnJvciIsImNoZWNrVXNhZ2UiLCJrZXkiLCJ1c2FnZXMiLCJsZW5ndGgiLCJzb21lIiwiZXhwZWN0ZWQiLCJpbmNsdWRlcyIsIm1zZyIsImxhc3QiLCJwb3AiLCJqb2luIiwiYWN0dWFsIiwibmFtZWRDdXJ2ZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/jose/dist/node/cjs/lib/crypto_key.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/jose/dist/node/cjs/lib/decrypt_key_management.js":
/*!***********************************************************************!*\
  !*** ./node_modules/jose/dist/node/cjs/lib/decrypt_key_management.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nconst aeskw_js_1 = __webpack_require__(/*! ../runtime/aeskw.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/runtime/aeskw.js\");\nconst ECDH = __webpack_require__(/*! ../runtime/ecdhes.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/runtime/ecdhes.js\");\nconst pbes2kw_js_1 = __webpack_require__(/*! ../runtime/pbes2kw.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/runtime/pbes2kw.js\");\nconst rsaes_js_1 = __webpack_require__(/*! ../runtime/rsaes.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/runtime/rsaes.js\");\nconst base64url_js_1 = __webpack_require__(/*! ../runtime/base64url.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/runtime/base64url.js\");\nconst errors_js_1 = __webpack_require__(/*! ../util/errors.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/util/errors.js\");\nconst cek_js_1 = __webpack_require__(/*! ../lib/cek.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/lib/cek.js\");\nconst import_js_1 = __webpack_require__(/*! ../key/import.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/key/import.js\");\nconst check_key_type_js_1 = __webpack_require__(/*! ./check_key_type.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/lib/check_key_type.js\");\nconst is_object_js_1 = __webpack_require__(/*! ./is_object.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/lib/is_object.js\");\nconst aesgcmkw_js_1 = __webpack_require__(/*! ./aesgcmkw.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/lib/aesgcmkw.js\");\nasync function decryptKeyManagement(alg, key, encryptedKey, joseHeader, options) {\n    (0, check_key_type_js_1.default)(alg, key, \"decrypt\");\n    switch(alg){\n        case \"dir\":\n            {\n                if (encryptedKey !== undefined) throw new errors_js_1.JWEInvalid(\"Encountered unexpected JWE Encrypted Key\");\n                return key;\n            }\n        case \"ECDH-ES\":\n            if (encryptedKey !== undefined) throw new errors_js_1.JWEInvalid(\"Encountered unexpected JWE Encrypted Key\");\n        case \"ECDH-ES+A128KW\":\n        case \"ECDH-ES+A192KW\":\n        case \"ECDH-ES+A256KW\":\n            {\n                if (!(0, is_object_js_1.default)(joseHeader.epk)) throw new errors_js_1.JWEInvalid(`JOSE Header \"epk\" (Ephemeral Public Key) missing or invalid`);\n                if (!ECDH.ecdhAllowed(key)) throw new errors_js_1.JOSENotSupported(\"ECDH with the provided key is not allowed or not supported by your javascript runtime\");\n                const epk = await (0, import_js_1.importJWK)(joseHeader.epk, alg);\n                let partyUInfo;\n                let partyVInfo;\n                if (joseHeader.apu !== undefined) {\n                    if (typeof joseHeader.apu !== \"string\") throw new errors_js_1.JWEInvalid(`JOSE Header \"apu\" (Agreement PartyUInfo) invalid`);\n                    partyUInfo = (0, base64url_js_1.decode)(joseHeader.apu);\n                }\n                if (joseHeader.apv !== undefined) {\n                    if (typeof joseHeader.apv !== \"string\") throw new errors_js_1.JWEInvalid(`JOSE Header \"apv\" (Agreement PartyVInfo) invalid`);\n                    partyVInfo = (0, base64url_js_1.decode)(joseHeader.apv);\n                }\n                const sharedSecret = await ECDH.deriveKey(epk, key, alg === \"ECDH-ES\" ? joseHeader.enc : alg, alg === \"ECDH-ES\" ? (0, cek_js_1.bitLength)(joseHeader.enc) : parseInt(alg.slice(-5, -2), 10), partyUInfo, partyVInfo);\n                if (alg === \"ECDH-ES\") return sharedSecret;\n                if (encryptedKey === undefined) throw new errors_js_1.JWEInvalid(\"JWE Encrypted Key missing\");\n                return (0, aeskw_js_1.unwrap)(alg.slice(-6), sharedSecret, encryptedKey);\n            }\n        case \"RSA1_5\":\n        case \"RSA-OAEP\":\n        case \"RSA-OAEP-256\":\n        case \"RSA-OAEP-384\":\n        case \"RSA-OAEP-512\":\n            {\n                if (encryptedKey === undefined) throw new errors_js_1.JWEInvalid(\"JWE Encrypted Key missing\");\n                return (0, rsaes_js_1.decrypt)(alg, key, encryptedKey);\n            }\n        case \"PBES2-HS256+A128KW\":\n        case \"PBES2-HS384+A192KW\":\n        case \"PBES2-HS512+A256KW\":\n            {\n                if (encryptedKey === undefined) throw new errors_js_1.JWEInvalid(\"JWE Encrypted Key missing\");\n                if (typeof joseHeader.p2c !== \"number\") throw new errors_js_1.JWEInvalid(`JOSE Header \"p2c\" (PBES2 Count) missing or invalid`);\n                const p2cLimit = (options === null || options === void 0 ? void 0 : options.maxPBES2Count) || 10000;\n                if (joseHeader.p2c > p2cLimit) throw new errors_js_1.JWEInvalid(`JOSE Header \"p2c\" (PBES2 Count) out is of acceptable bounds`);\n                if (typeof joseHeader.p2s !== \"string\") throw new errors_js_1.JWEInvalid(`JOSE Header \"p2s\" (PBES2 Salt) missing or invalid`);\n                return (0, pbes2kw_js_1.decrypt)(alg, key, encryptedKey, joseHeader.p2c, (0, base64url_js_1.decode)(joseHeader.p2s));\n            }\n        case \"A128KW\":\n        case \"A192KW\":\n        case \"A256KW\":\n            {\n                if (encryptedKey === undefined) throw new errors_js_1.JWEInvalid(\"JWE Encrypted Key missing\");\n                return (0, aeskw_js_1.unwrap)(alg, key, encryptedKey);\n            }\n        case \"A128GCMKW\":\n        case \"A192GCMKW\":\n        case \"A256GCMKW\":\n            {\n                if (encryptedKey === undefined) throw new errors_js_1.JWEInvalid(\"JWE Encrypted Key missing\");\n                if (typeof joseHeader.iv !== \"string\") throw new errors_js_1.JWEInvalid(`JOSE Header \"iv\" (Initialization Vector) missing or invalid`);\n                if (typeof joseHeader.tag !== \"string\") throw new errors_js_1.JWEInvalid(`JOSE Header \"tag\" (Authentication Tag) missing or invalid`);\n                const iv = (0, base64url_js_1.decode)(joseHeader.iv);\n                const tag = (0, base64url_js_1.decode)(joseHeader.tag);\n                return (0, aesgcmkw_js_1.unwrap)(alg, key, encryptedKey, iv, tag);\n            }\n        default:\n            {\n                throw new errors_js_1.JOSENotSupported('Invalid or unsupported \"alg\" (JWE Algorithm) header value');\n            }\n    }\n}\nexports[\"default\"] = decryptKeyManagement;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/jose/dist/node/cjs/lib/decrypt_key_management.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/jose/dist/node/cjs/lib/encrypt_key_management.js":
/*!***********************************************************************!*\
  !*** ./node_modules/jose/dist/node/cjs/lib/encrypt_key_management.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nconst aeskw_js_1 = __webpack_require__(/*! ../runtime/aeskw.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/runtime/aeskw.js\");\nconst ECDH = __webpack_require__(/*! ../runtime/ecdhes.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/runtime/ecdhes.js\");\nconst pbes2kw_js_1 = __webpack_require__(/*! ../runtime/pbes2kw.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/runtime/pbes2kw.js\");\nconst rsaes_js_1 = __webpack_require__(/*! ../runtime/rsaes.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/runtime/rsaes.js\");\nconst base64url_js_1 = __webpack_require__(/*! ../runtime/base64url.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/runtime/base64url.js\");\nconst cek_js_1 = __webpack_require__(/*! ../lib/cek.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/lib/cek.js\");\nconst errors_js_1 = __webpack_require__(/*! ../util/errors.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/util/errors.js\");\nconst export_js_1 = __webpack_require__(/*! ../key/export.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/key/export.js\");\nconst check_key_type_js_1 = __webpack_require__(/*! ./check_key_type.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/lib/check_key_type.js\");\nconst aesgcmkw_js_1 = __webpack_require__(/*! ./aesgcmkw.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/lib/aesgcmkw.js\");\nasync function encryptKeyManagement(alg, enc, key, providedCek, providedParameters = {}) {\n    let encryptedKey;\n    let parameters;\n    let cek;\n    (0, check_key_type_js_1.default)(alg, key, \"encrypt\");\n    switch(alg){\n        case \"dir\":\n            {\n                cek = key;\n                break;\n            }\n        case \"ECDH-ES\":\n        case \"ECDH-ES+A128KW\":\n        case \"ECDH-ES+A192KW\":\n        case \"ECDH-ES+A256KW\":\n            {\n                if (!ECDH.ecdhAllowed(key)) {\n                    throw new errors_js_1.JOSENotSupported(\"ECDH with the provided key is not allowed or not supported by your javascript runtime\");\n                }\n                const { apu , apv  } = providedParameters;\n                let { epk: ephemeralKey  } = providedParameters;\n                ephemeralKey || (ephemeralKey = (await ECDH.generateEpk(key)).privateKey);\n                const { x , y , crv , kty  } = await (0, export_js_1.exportJWK)(ephemeralKey);\n                const sharedSecret = await ECDH.deriveKey(key, ephemeralKey, alg === \"ECDH-ES\" ? enc : alg, alg === \"ECDH-ES\" ? (0, cek_js_1.bitLength)(enc) : parseInt(alg.slice(-5, -2), 10), apu, apv);\n                parameters = {\n                    epk: {\n                        x,\n                        crv,\n                        kty\n                    }\n                };\n                if (kty === \"EC\") parameters.epk.y = y;\n                if (apu) parameters.apu = (0, base64url_js_1.encode)(apu);\n                if (apv) parameters.apv = (0, base64url_js_1.encode)(apv);\n                if (alg === \"ECDH-ES\") {\n                    cek = sharedSecret;\n                    break;\n                }\n                cek = providedCek || (0, cek_js_1.default)(enc);\n                const kwAlg = alg.slice(-6);\n                encryptedKey = await (0, aeskw_js_1.wrap)(kwAlg, sharedSecret, cek);\n                break;\n            }\n        case \"RSA1_5\":\n        case \"RSA-OAEP\":\n        case \"RSA-OAEP-256\":\n        case \"RSA-OAEP-384\":\n        case \"RSA-OAEP-512\":\n            {\n                cek = providedCek || (0, cek_js_1.default)(enc);\n                encryptedKey = await (0, rsaes_js_1.encrypt)(alg, key, cek);\n                break;\n            }\n        case \"PBES2-HS256+A128KW\":\n        case \"PBES2-HS384+A192KW\":\n        case \"PBES2-HS512+A256KW\":\n            {\n                cek = providedCek || (0, cek_js_1.default)(enc);\n                const { p2c , p2s  } = providedParameters;\n                ({ encryptedKey , ...parameters } = await (0, pbes2kw_js_1.encrypt)(alg, key, cek, p2c, p2s));\n                break;\n            }\n        case \"A128KW\":\n        case \"A192KW\":\n        case \"A256KW\":\n            {\n                cek = providedCek || (0, cek_js_1.default)(enc);\n                encryptedKey = await (0, aeskw_js_1.wrap)(alg, key, cek);\n                break;\n            }\n        case \"A128GCMKW\":\n        case \"A192GCMKW\":\n        case \"A256GCMKW\":\n            {\n                cek = providedCek || (0, cek_js_1.default)(enc);\n                const { iv  } = providedParameters;\n                ({ encryptedKey , ...parameters } = await (0, aesgcmkw_js_1.wrap)(alg, key, cek, iv));\n                break;\n            }\n        default:\n            {\n                throw new errors_js_1.JOSENotSupported('Invalid or unsupported \"alg\" (JWE Algorithm) header value');\n            }\n    }\n    return {\n        cek,\n        encryptedKey,\n        parameters\n    };\n}\nexports[\"default\"] = encryptKeyManagement;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/jose/dist/node/cjs/lib/encrypt_key_management.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/jose/dist/node/cjs/lib/epoch.js":
/*!******************************************************!*\
  !*** ./node_modules/jose/dist/node/cjs/lib/epoch.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports[\"default\"] = (date)=>Math.floor(date.getTime() / 1000);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvam9zZS9kaXN0L25vZGUvY2pzL2xpYi9lcG9jaC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFBRUcsT0FBTztBQUFLLENBQUMsRUFBQztBQUM3REQsa0JBQWVFLEdBQUcsQ0FBQ0MsT0FBU0MsS0FBS0MsTUFBTUYsS0FBS0csWUFBWSIsInNvdXJjZXMiOlsid2VicGFjazovL2Z1bGxzdGFjay1yb2xlLWJhc2VkLW5leHRqcy0yLy4vbm9kZV9tb2R1bGVzL2pvc2UvZGlzdC9ub2RlL2Nqcy9saWIvZXBvY2guanM/NzQyNiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuZGVmYXVsdCA9IChkYXRlKSA9PiBNYXRoLmZsb29yKGRhdGUuZ2V0VGltZSgpIC8gMTAwMCk7XG4iXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJkZWZhdWx0IiwiZGF0ZSIsIk1hdGgiLCJmbG9vciIsImdldFRpbWUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/jose/dist/node/cjs/lib/epoch.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/jose/dist/node/cjs/lib/invalid_key_input.js":
/*!******************************************************************!*\
  !*** ./node_modules/jose/dist/node/cjs/lib/invalid_key_input.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.withAlg = void 0;\nfunction message(msg, actual, ...types) {\n    if (types.length > 2) {\n        const last = types.pop();\n        msg += `one of type ${types.join(\", \")}, or ${last}.`;\n    } else if (types.length === 2) {\n        msg += `one of type ${types[0]} or ${types[1]}.`;\n    } else {\n        msg += `of type ${types[0]}.`;\n    }\n    if (actual == null) {\n        msg += ` Received ${actual}`;\n    } else if (typeof actual === \"function\" && actual.name) {\n        msg += ` Received function ${actual.name}`;\n    } else if (typeof actual === \"object\" && actual != null) {\n        if (actual.constructor && actual.constructor.name) {\n            msg += ` Received an instance of ${actual.constructor.name}`;\n        }\n    }\n    return msg;\n}\nexports[\"default\"] = (actual, ...types)=>{\n    return message(\"Key must be \", actual, ...types);\n};\nfunction withAlg(alg, actual, ...types) {\n    return message(`Key for the ${alg} algorithm must be `, actual, ...types);\n}\nexports.withAlg = withAlg;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvam9zZS9kaXN0L25vZGUvY2pzL2xpYi9pbnZhbGlkX2tleV9pbnB1dC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFBRUcsT0FBTztBQUFLLENBQUMsRUFBQztBQUM3REQsZUFBZUUsR0FBRyxLQUFLO0FBQ3ZCLFNBQVNDLFFBQVFDLEdBQUcsRUFBRUMsTUFBTSxFQUFFLEdBQUdDLEtBQUs7SUFDbEMsSUFBSUEsTUFBTUMsU0FBUyxHQUFHO1FBQ2xCLE1BQU1DLE9BQU9GLE1BQU1HO1FBQ25CTCxPQUFPLENBQUMsWUFBWSxFQUFFRSxNQUFNSSxLQUFLLE1BQU0sS0FBSyxFQUFFRixLQUFLLENBQUMsQ0FBQztJQUN6RCxPQUNLLElBQUlGLE1BQU1DLFdBQVcsR0FBRztRQUN6QkgsT0FBTyxDQUFDLFlBQVksRUFBRUUsS0FBSyxDQUFDLEVBQUUsQ0FBQyxJQUFJLEVBQUVBLEtBQUssQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDO0lBQ3BELE9BQ0s7UUFDREYsT0FBTyxDQUFDLFFBQVEsRUFBRUUsS0FBSyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUM7SUFDakM7SUFDQSxJQUFJRCxVQUFVLE1BQU07UUFDaEJELE9BQU8sQ0FBQyxVQUFVLEVBQUVDLE9BQU8sQ0FBQztJQUNoQyxPQUNLLElBQUksT0FBT0EsV0FBVyxjQUFjQSxPQUFPTSxNQUFNO1FBQ2xEUCxPQUFPLENBQUMsbUJBQW1CLEVBQUVDLE9BQU9NLEtBQUssQ0FBQztJQUM5QyxPQUNLLElBQUksT0FBT04sV0FBVyxZQUFZQSxVQUFVLE1BQU07UUFDbkQsSUFBSUEsT0FBT08sZUFBZVAsT0FBT08sWUFBWUQsTUFBTTtZQUMvQ1AsT0FBTyxDQUFDLHlCQUF5QixFQUFFQyxPQUFPTyxZQUFZRCxLQUFLLENBQUM7UUFDaEU7SUFDSjtJQUNBLE9BQU9QO0FBQ1g7QUFDQUosa0JBQWVhLEdBQUcsQ0FBQ1IsUUFBUSxHQUFHQztJQUMxQixPQUFPSCxRQUFRLGdCQUFnQkUsV0FBV0M7QUFDOUM7QUFDQSxTQUFTSixRQUFRWSxHQUFHLEVBQUVULE1BQU0sRUFBRSxHQUFHQyxLQUFLO0lBQ2xDLE9BQU9ILFFBQVEsQ0FBQyxZQUFZLEVBQUVXLElBQUksbUJBQW1CLENBQUMsRUFBRVQsV0FBV0M7QUFDdkU7QUFDQU4sZUFBZUUsR0FBR0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mdWxsc3RhY2stcm9sZS1iYXNlZC1uZXh0anMtMi8uL25vZGVfbW9kdWxlcy9qb3NlL2Rpc3Qvbm9kZS9janMvbGliL2ludmFsaWRfa2V5X2lucHV0LmpzP2IxOTgiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLndpdGhBbGcgPSB2b2lkIDA7XG5mdW5jdGlvbiBtZXNzYWdlKG1zZywgYWN0dWFsLCAuLi50eXBlcykge1xuICAgIGlmICh0eXBlcy5sZW5ndGggPiAyKSB7XG4gICAgICAgIGNvbnN0IGxhc3QgPSB0eXBlcy5wb3AoKTtcbiAgICAgICAgbXNnICs9IGBvbmUgb2YgdHlwZSAke3R5cGVzLmpvaW4oJywgJyl9LCBvciAke2xhc3R9LmA7XG4gICAgfVxuICAgIGVsc2UgaWYgKHR5cGVzLmxlbmd0aCA9PT0gMikge1xuICAgICAgICBtc2cgKz0gYG9uZSBvZiB0eXBlICR7dHlwZXNbMF19IG9yICR7dHlwZXNbMV19LmA7XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICBtc2cgKz0gYG9mIHR5cGUgJHt0eXBlc1swXX0uYDtcbiAgICB9XG4gICAgaWYgKGFjdHVhbCA9PSBudWxsKSB7XG4gICAgICAgIG1zZyArPSBgIFJlY2VpdmVkICR7YWN0dWFsfWA7XG4gICAgfVxuICAgIGVsc2UgaWYgKHR5cGVvZiBhY3R1YWwgPT09ICdmdW5jdGlvbicgJiYgYWN0dWFsLm5hbWUpIHtcbiAgICAgICAgbXNnICs9IGAgUmVjZWl2ZWQgZnVuY3Rpb24gJHthY3R1YWwubmFtZX1gO1xuICAgIH1cbiAgICBlbHNlIGlmICh0eXBlb2YgYWN0dWFsID09PSAnb2JqZWN0JyAmJiBhY3R1YWwgIT0gbnVsbCkge1xuICAgICAgICBpZiAoYWN0dWFsLmNvbnN0cnVjdG9yICYmIGFjdHVhbC5jb25zdHJ1Y3Rvci5uYW1lKSB7XG4gICAgICAgICAgICBtc2cgKz0gYCBSZWNlaXZlZCBhbiBpbnN0YW5jZSBvZiAke2FjdHVhbC5jb25zdHJ1Y3Rvci5uYW1lfWA7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIG1zZztcbn1cbmV4cG9ydHMuZGVmYXVsdCA9IChhY3R1YWwsIC4uLnR5cGVzKSA9PiB7XG4gICAgcmV0dXJuIG1lc3NhZ2UoJ0tleSBtdXN0IGJlICcsIGFjdHVhbCwgLi4udHlwZXMpO1xufTtcbmZ1bmN0aW9uIHdpdGhBbGcoYWxnLCBhY3R1YWwsIC4uLnR5cGVzKSB7XG4gICAgcmV0dXJuIG1lc3NhZ2UoYEtleSBmb3IgdGhlICR7YWxnfSBhbGdvcml0aG0gbXVzdCBiZSBgLCBhY3R1YWwsIC4uLnR5cGVzKTtcbn1cbmV4cG9ydHMud2l0aEFsZyA9IHdpdGhBbGc7XG4iXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJ3aXRoQWxnIiwibWVzc2FnZSIsIm1zZyIsImFjdHVhbCIsInR5cGVzIiwibGVuZ3RoIiwibGFzdCIsInBvcCIsImpvaW4iLCJuYW1lIiwiY29uc3RydWN0b3IiLCJkZWZhdWx0IiwiYWxnIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/jose/dist/node/cjs/lib/invalid_key_input.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/jose/dist/node/cjs/lib/is_disjoint.js":
/*!************************************************************!*\
  !*** ./node_modules/jose/dist/node/cjs/lib/is_disjoint.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nconst isDisjoint = (...headers)=>{\n    const sources = headers.filter(Boolean);\n    if (sources.length === 0 || sources.length === 1) {\n        return true;\n    }\n    let acc;\n    for (const header of sources){\n        const parameters = Object.keys(header);\n        if (!acc || acc.size === 0) {\n            acc = new Set(parameters);\n            continue;\n        }\n        for (const parameter of parameters){\n            if (acc.has(parameter)) {\n                return false;\n            }\n            acc.add(parameter);\n        }\n    }\n    return true;\n};\nexports[\"default\"] = isDisjoint;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvam9zZS9kaXN0L25vZGUvY2pzL2xpYi9pc19kaXNqb2ludC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFBRUcsT0FBTztBQUFLLENBQUMsRUFBQztBQUM3RCxNQUFNQyxhQUFhLENBQUMsR0FBR0M7SUFDbkIsTUFBTUMsVUFBVUQsUUFBUUUsT0FBT0M7SUFDL0IsSUFBSUYsUUFBUUcsV0FBVyxLQUFLSCxRQUFRRyxXQUFXLEdBQUc7UUFDOUMsT0FBTztJQUNYO0lBQ0EsSUFBSUM7SUFDSixLQUFLLE1BQU1DLFVBQVVMLFFBQVM7UUFDMUIsTUFBTU0sYUFBYVosT0FBT2EsS0FBS0Y7UUFDL0IsSUFBSSxDQUFDRCxPQUFPQSxJQUFJSSxTQUFTLEdBQUc7WUFDeEJKLE1BQU0sSUFBSUssSUFBSUg7WUFDZDtRQUNKO1FBQ0EsS0FBSyxNQUFNSSxhQUFhSixXQUFZO1lBQ2hDLElBQUlGLElBQUlPLElBQUlELFlBQVk7Z0JBQ3BCLE9BQU87WUFDWDtZQUNBTixJQUFJUSxJQUFJRjtRQUNaO0lBQ0o7SUFDQSxPQUFPO0FBQ1g7QUFDQWQsa0JBQWVpQixHQUFHZiIsInNvdXJjZXMiOlsid2VicGFjazovL2Z1bGxzdGFjay1yb2xlLWJhc2VkLW5leHRqcy0yLy4vbm9kZV9tb2R1bGVzL2pvc2UvZGlzdC9ub2RlL2Nqcy9saWIvaXNfZGlzam9pbnQuanM/NzU1NSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmNvbnN0IGlzRGlzam9pbnQgPSAoLi4uaGVhZGVycykgPT4ge1xuICAgIGNvbnN0IHNvdXJjZXMgPSBoZWFkZXJzLmZpbHRlcihCb29sZWFuKTtcbiAgICBpZiAoc291cmNlcy5sZW5ndGggPT09IDAgfHwgc291cmNlcy5sZW5ndGggPT09IDEpIHtcbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxuICAgIGxldCBhY2M7XG4gICAgZm9yIChjb25zdCBoZWFkZXIgb2Ygc291cmNlcykge1xuICAgICAgICBjb25zdCBwYXJhbWV0ZXJzID0gT2JqZWN0LmtleXMoaGVhZGVyKTtcbiAgICAgICAgaWYgKCFhY2MgfHwgYWNjLnNpemUgPT09IDApIHtcbiAgICAgICAgICAgIGFjYyA9IG5ldyBTZXQocGFyYW1ldGVycyk7XG4gICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgfVxuICAgICAgICBmb3IgKGNvbnN0IHBhcmFtZXRlciBvZiBwYXJhbWV0ZXJzKSB7XG4gICAgICAgICAgICBpZiAoYWNjLmhhcyhwYXJhbWV0ZXIpKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgYWNjLmFkZChwYXJhbWV0ZXIpO1xuICAgICAgICB9XG4gICAgfVxuICAgIHJldHVybiB0cnVlO1xufTtcbmV4cG9ydHMuZGVmYXVsdCA9IGlzRGlzam9pbnQ7XG4iXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJpc0Rpc2pvaW50IiwiaGVhZGVycyIsInNvdXJjZXMiLCJmaWx0ZXIiLCJCb29sZWFuIiwibGVuZ3RoIiwiYWNjIiwiaGVhZGVyIiwicGFyYW1ldGVycyIsImtleXMiLCJzaXplIiwiU2V0IiwicGFyYW1ldGVyIiwiaGFzIiwiYWRkIiwiZGVmYXVsdCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/jose/dist/node/cjs/lib/is_disjoint.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/jose/dist/node/cjs/lib/is_object.js":
/*!**********************************************************!*\
  !*** ./node_modules/jose/dist/node/cjs/lib/is_object.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nfunction isObjectLike(value) {\n    return typeof value === \"object\" && value !== null;\n}\nfunction isObject(input) {\n    if (!isObjectLike(input) || Object.prototype.toString.call(input) !== \"[object Object]\") {\n        return false;\n    }\n    if (Object.getPrototypeOf(input) === null) {\n        return true;\n    }\n    let proto = input;\n    while(Object.getPrototypeOf(proto) !== null){\n        proto = Object.getPrototypeOf(proto);\n    }\n    return Object.getPrototypeOf(input) === proto;\n}\nexports[\"default\"] = isObject;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvam9zZS9kaXN0L25vZGUvY2pzL2xpYi9pc19vYmplY3QuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYkEsOENBQTZDO0lBQUVHLE9BQU87QUFBSyxDQUFDLEVBQUM7QUFDN0QsU0FBU0MsYUFBYUQsS0FBSztJQUN2QixPQUFPLE9BQU9BLFVBQVUsWUFBWUEsVUFBVTtBQUNsRDtBQUNBLFNBQVNFLFNBQVNDLEtBQUs7SUFDbkIsSUFBSSxDQUFDRixhQUFhRSxVQUFVTixPQUFPTyxVQUFVQyxTQUFTQyxLQUFLSCxXQUFXLG1CQUFtQjtRQUNyRixPQUFPO0lBQ1g7SUFDQSxJQUFJTixPQUFPVSxlQUFlSixXQUFXLE1BQU07UUFDdkMsT0FBTztJQUNYO0lBQ0EsSUFBSUssUUFBUUw7SUFDWixNQUFPTixPQUFPVSxlQUFlQyxXQUFXLEtBQU07UUFDMUNBLFFBQVFYLE9BQU9VLGVBQWVDO0lBQ2xDO0lBQ0EsT0FBT1gsT0FBT1UsZUFBZUosV0FBV0s7QUFDNUM7QUFDQVQsa0JBQWVVLEdBQUdQIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZnVsbHN0YWNrLXJvbGUtYmFzZWQtbmV4dGpzLTIvLi9ub2RlX21vZHVsZXMvam9zZS9kaXN0L25vZGUvY2pzL2xpYi9pc19vYmplY3QuanM/NTJkOCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmZ1bmN0aW9uIGlzT2JqZWN0TGlrZSh2YWx1ZSkge1xuICAgIHJldHVybiB0eXBlb2YgdmFsdWUgPT09ICdvYmplY3QnICYmIHZhbHVlICE9PSBudWxsO1xufVxuZnVuY3Rpb24gaXNPYmplY3QoaW5wdXQpIHtcbiAgICBpZiAoIWlzT2JqZWN0TGlrZShpbnB1dCkgfHwgT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKGlucHV0KSAhPT0gJ1tvYmplY3QgT2JqZWN0XScpIHtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgICBpZiAoT2JqZWN0LmdldFByb3RvdHlwZU9mKGlucHV0KSA9PT0gbnVsbCkge1xuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG4gICAgbGV0IHByb3RvID0gaW5wdXQ7XG4gICAgd2hpbGUgKE9iamVjdC5nZXRQcm90b3R5cGVPZihwcm90bykgIT09IG51bGwpIHtcbiAgICAgICAgcHJvdG8gPSBPYmplY3QuZ2V0UHJvdG90eXBlT2YocHJvdG8pO1xuICAgIH1cbiAgICByZXR1cm4gT2JqZWN0LmdldFByb3RvdHlwZU9mKGlucHV0KSA9PT0gcHJvdG87XG59XG5leHBvcnRzLmRlZmF1bHQgPSBpc09iamVjdDtcbiJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsImlzT2JqZWN0TGlrZSIsImlzT2JqZWN0IiwiaW5wdXQiLCJwcm90b3R5cGUiLCJ0b1N0cmluZyIsImNhbGwiLCJnZXRQcm90b3R5cGVPZiIsInByb3RvIiwiZGVmYXVsdCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/jose/dist/node/cjs/lib/is_object.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/jose/dist/node/cjs/lib/iv.js":
/*!***************************************************!*\
  !*** ./node_modules/jose/dist/node/cjs/lib/iv.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.bitLength = void 0;\nconst errors_js_1 = __webpack_require__(/*! ../util/errors.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/util/errors.js\");\nconst random_js_1 = __webpack_require__(/*! ../runtime/random.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/runtime/random.js\");\nfunction bitLength(alg) {\n    switch(alg){\n        case \"A128GCM\":\n        case \"A128GCMKW\":\n        case \"A192GCM\":\n        case \"A192GCMKW\":\n        case \"A256GCM\":\n        case \"A256GCMKW\":\n            return 96;\n        case \"A128CBC-HS256\":\n        case \"A192CBC-HS384\":\n        case \"A256CBC-HS512\":\n            return 128;\n        default:\n            throw new errors_js_1.JOSENotSupported(`Unsupported JWE Algorithm: ${alg}`);\n    }\n}\nexports.bitLength = bitLength;\nexports[\"default\"] = (alg)=>(0, random_js_1.default)(new Uint8Array(bitLength(alg) >> 3));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvam9zZS9kaXN0L25vZGUvY2pzL2xpYi9pdi5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFBRUcsT0FBTztBQUFLLENBQUMsRUFBQztBQUM3REQsaUJBQWlCRSxHQUFHLEtBQUs7QUFDekIsTUFBTUMsY0FBY0MsbUJBQU9BLENBQUMsdUZBQW1CO0FBQy9DLE1BQU1DLGNBQWNELG1CQUFPQSxDQUFDLDZGQUFzQjtBQUNsRCxTQUFTRixVQUFVSSxHQUFHO0lBQ2xCLE9BQVFBO1FBQ0osS0FBSztRQUNMLEtBQUs7UUFDTCxLQUFLO1FBQ0wsS0FBSztRQUNMLEtBQUs7UUFDTCxLQUFLO1lBQ0QsT0FBTztRQUNYLEtBQUs7UUFDTCxLQUFLO1FBQ0wsS0FBSztZQUNELE9BQU87UUFDWDtZQUNJLE1BQU0sSUFBSUgsWUFBWUksaUJBQWlCLENBQUMsMkJBQTJCLEVBQUVELElBQUksQ0FBQztJQUNsRjtBQUNKO0FBQ0FOLGlCQUFpQkUsR0FBR0E7QUFDcEJGLGtCQUFlUSxHQUFHLENBQUNGLE1BQVEsQ0FBQyxHQUFHRCxZQUFZRyxPQUFNLEVBQUcsSUFBSUMsV0FBV1AsVUFBVUksUUFBUSIsInNvdXJjZXMiOlsid2VicGFjazovL2Z1bGxzdGFjay1yb2xlLWJhc2VkLW5leHRqcy0yLy4vbm9kZV9tb2R1bGVzL2pvc2UvZGlzdC9ub2RlL2Nqcy9saWIvaXYuanM/YTkxMCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuYml0TGVuZ3RoID0gdm9pZCAwO1xuY29uc3QgZXJyb3JzX2pzXzEgPSByZXF1aXJlKFwiLi4vdXRpbC9lcnJvcnMuanNcIik7XG5jb25zdCByYW5kb21fanNfMSA9IHJlcXVpcmUoXCIuLi9ydW50aW1lL3JhbmRvbS5qc1wiKTtcbmZ1bmN0aW9uIGJpdExlbmd0aChhbGcpIHtcbiAgICBzd2l0Y2ggKGFsZykge1xuICAgICAgICBjYXNlICdBMTI4R0NNJzpcbiAgICAgICAgY2FzZSAnQTEyOEdDTUtXJzpcbiAgICAgICAgY2FzZSAnQTE5MkdDTSc6XG4gICAgICAgIGNhc2UgJ0ExOTJHQ01LVyc6XG4gICAgICAgIGNhc2UgJ0EyNTZHQ00nOlxuICAgICAgICBjYXNlICdBMjU2R0NNS1cnOlxuICAgICAgICAgICAgcmV0dXJuIDk2O1xuICAgICAgICBjYXNlICdBMTI4Q0JDLUhTMjU2JzpcbiAgICAgICAgY2FzZSAnQTE5MkNCQy1IUzM4NCc6XG4gICAgICAgIGNhc2UgJ0EyNTZDQkMtSFM1MTInOlxuICAgICAgICAgICAgcmV0dXJuIDEyODtcbiAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgIHRocm93IG5ldyBlcnJvcnNfanNfMS5KT1NFTm90U3VwcG9ydGVkKGBVbnN1cHBvcnRlZCBKV0UgQWxnb3JpdGhtOiAke2FsZ31gKTtcbiAgICB9XG59XG5leHBvcnRzLmJpdExlbmd0aCA9IGJpdExlbmd0aDtcbmV4cG9ydHMuZGVmYXVsdCA9IChhbGcpID0+ICgwLCByYW5kb21fanNfMS5kZWZhdWx0KShuZXcgVWludDhBcnJheShiaXRMZW5ndGgoYWxnKSA+PiAzKSk7XG4iXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJiaXRMZW5ndGgiLCJlcnJvcnNfanNfMSIsInJlcXVpcmUiLCJyYW5kb21fanNfMSIsImFsZyIsIkpPU0VOb3RTdXBwb3J0ZWQiLCJkZWZhdWx0IiwiVWludDhBcnJheSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/jose/dist/node/cjs/lib/iv.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/jose/dist/node/cjs/lib/jwt_claims_set.js":
/*!***************************************************************!*\
  !*** ./node_modules/jose/dist/node/cjs/lib/jwt_claims_set.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nconst errors_js_1 = __webpack_require__(/*! ../util/errors.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/util/errors.js\");\nconst buffer_utils_js_1 = __webpack_require__(/*! ./buffer_utils.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/lib/buffer_utils.js\");\nconst epoch_js_1 = __webpack_require__(/*! ./epoch.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/lib/epoch.js\");\nconst secs_js_1 = __webpack_require__(/*! ./secs.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/lib/secs.js\");\nconst is_object_js_1 = __webpack_require__(/*! ./is_object.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/lib/is_object.js\");\nconst normalizeTyp = (value)=>value.toLowerCase().replace(/^application\\//, \"\");\nconst checkAudiencePresence = (audPayload, audOption)=>{\n    if (typeof audPayload === \"string\") {\n        return audOption.includes(audPayload);\n    }\n    if (Array.isArray(audPayload)) {\n        return audOption.some(Set.prototype.has.bind(new Set(audPayload)));\n    }\n    return false;\n};\nexports[\"default\"] = (protectedHeader, encodedPayload, options = {})=>{\n    const { typ  } = options;\n    if (typ && (typeof protectedHeader.typ !== \"string\" || normalizeTyp(protectedHeader.typ) !== normalizeTyp(typ))) {\n        throw new errors_js_1.JWTClaimValidationFailed('unexpected \"typ\" JWT header value', \"typ\", \"check_failed\");\n    }\n    let payload;\n    try {\n        payload = JSON.parse(buffer_utils_js_1.decoder.decode(encodedPayload));\n    } catch  {}\n    if (!(0, is_object_js_1.default)(payload)) {\n        throw new errors_js_1.JWTInvalid(\"JWT Claims Set must be a top-level JSON object\");\n    }\n    const { requiredClaims =[] , issuer , subject , audience , maxTokenAge  } = options;\n    if (maxTokenAge !== undefined) requiredClaims.push(\"iat\");\n    if (audience !== undefined) requiredClaims.push(\"aud\");\n    if (subject !== undefined) requiredClaims.push(\"sub\");\n    if (issuer !== undefined) requiredClaims.push(\"iss\");\n    for (const claim of new Set(requiredClaims.reverse())){\n        if (!(claim in payload)) {\n            throw new errors_js_1.JWTClaimValidationFailed(`missing required \"${claim}\" claim`, claim, \"missing\");\n        }\n    }\n    if (issuer && !(Array.isArray(issuer) ? issuer : [\n        issuer\n    ]).includes(payload.iss)) {\n        throw new errors_js_1.JWTClaimValidationFailed('unexpected \"iss\" claim value', \"iss\", \"check_failed\");\n    }\n    if (subject && payload.sub !== subject) {\n        throw new errors_js_1.JWTClaimValidationFailed('unexpected \"sub\" claim value', \"sub\", \"check_failed\");\n    }\n    if (audience && !checkAudiencePresence(payload.aud, typeof audience === \"string\" ? [\n        audience\n    ] : audience)) {\n        throw new errors_js_1.JWTClaimValidationFailed('unexpected \"aud\" claim value', \"aud\", \"check_failed\");\n    }\n    let tolerance;\n    switch(typeof options.clockTolerance){\n        case \"string\":\n            tolerance = (0, secs_js_1.default)(options.clockTolerance);\n            break;\n        case \"number\":\n            tolerance = options.clockTolerance;\n            break;\n        case \"undefined\":\n            tolerance = 0;\n            break;\n        default:\n            throw new TypeError(\"Invalid clockTolerance option type\");\n    }\n    const { currentDate  } = options;\n    const now = (0, epoch_js_1.default)(currentDate || new Date());\n    if ((payload.iat !== undefined || maxTokenAge) && typeof payload.iat !== \"number\") {\n        throw new errors_js_1.JWTClaimValidationFailed('\"iat\" claim must be a number', \"iat\", \"invalid\");\n    }\n    if (payload.nbf !== undefined) {\n        if (typeof payload.nbf !== \"number\") {\n            throw new errors_js_1.JWTClaimValidationFailed('\"nbf\" claim must be a number', \"nbf\", \"invalid\");\n        }\n        if (payload.nbf > now + tolerance) {\n            throw new errors_js_1.JWTClaimValidationFailed('\"nbf\" claim timestamp check failed', \"nbf\", \"check_failed\");\n        }\n    }\n    if (payload.exp !== undefined) {\n        if (typeof payload.exp !== \"number\") {\n            throw new errors_js_1.JWTClaimValidationFailed('\"exp\" claim must be a number', \"exp\", \"invalid\");\n        }\n        if (payload.exp <= now - tolerance) {\n            throw new errors_js_1.JWTExpired('\"exp\" claim timestamp check failed', \"exp\", \"check_failed\");\n        }\n    }\n    if (maxTokenAge) {\n        const age = now - payload.iat;\n        const max = typeof maxTokenAge === \"number\" ? maxTokenAge : (0, secs_js_1.default)(maxTokenAge);\n        if (age - tolerance > max) {\n            throw new errors_js_1.JWTExpired('\"iat\" claim timestamp check failed (too far in the past)', \"iat\", \"check_failed\");\n        }\n        if (age < 0 - tolerance) {\n            throw new errors_js_1.JWTClaimValidationFailed('\"iat\" claim timestamp check failed (it should be in the past)', \"iat\", \"check_failed\");\n        }\n    }\n    return payload;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/jose/dist/node/cjs/lib/jwt_claims_set.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/jose/dist/node/cjs/lib/secs.js":
/*!*****************************************************!*\
  !*** ./node_modules/jose/dist/node/cjs/lib/secs.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nconst minute = 60;\nconst hour = minute * 60;\nconst day = hour * 24;\nconst week = day * 7;\nconst year = day * 365.25;\nconst REGEX = /^(\\d+|\\d+\\.\\d+) ?(seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)$/i;\nexports[\"default\"] = (str)=>{\n    const matched = REGEX.exec(str);\n    if (!matched) {\n        throw new TypeError(\"Invalid time period format\");\n    }\n    const value = parseFloat(matched[1]);\n    const unit = matched[2].toLowerCase();\n    switch(unit){\n        case \"sec\":\n        case \"secs\":\n        case \"second\":\n        case \"seconds\":\n        case \"s\":\n            return Math.round(value);\n        case \"minute\":\n        case \"minutes\":\n        case \"min\":\n        case \"mins\":\n        case \"m\":\n            return Math.round(value * minute);\n        case \"hour\":\n        case \"hours\":\n        case \"hr\":\n        case \"hrs\":\n        case \"h\":\n            return Math.round(value * hour);\n        case \"day\":\n        case \"days\":\n        case \"d\":\n            return Math.round(value * day);\n        case \"week\":\n        case \"weeks\":\n        case \"w\":\n            return Math.round(value * week);\n        default:\n            return Math.round(value * year);\n    }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvam9zZS9kaXN0L25vZGUvY2pzL2xpYi9zZWNzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2JBLDhDQUE2QztJQUFFRyxPQUFPO0FBQUssQ0FBQyxFQUFDO0FBQzdELE1BQU1DLFNBQVM7QUFDZixNQUFNQyxPQUFPRCxTQUFTO0FBQ3RCLE1BQU1FLE1BQU1ELE9BQU87QUFDbkIsTUFBTUUsT0FBT0QsTUFBTTtBQUNuQixNQUFNRSxPQUFPRixNQUFNO0FBQ25CLE1BQU1HLFFBQVE7QUFDZFAsa0JBQWVRLEdBQUcsQ0FBQ0M7SUFDZixNQUFNQyxVQUFVSCxNQUFNSSxLQUFLRjtJQUMzQixJQUFJLENBQUNDLFNBQVM7UUFDVixNQUFNLElBQUlFLFVBQVU7SUFDeEI7SUFDQSxNQUFNWCxRQUFRWSxXQUFXSCxPQUFPLENBQUMsRUFBRTtJQUNuQyxNQUFNSSxPQUFPSixPQUFPLENBQUMsRUFBRSxDQUFDSztJQUN4QixPQUFRRDtRQUNKLEtBQUs7UUFDTCxLQUFLO1FBQ0wsS0FBSztRQUNMLEtBQUs7UUFDTCxLQUFLO1lBQ0QsT0FBT0UsS0FBS0MsTUFBTWhCO1FBQ3RCLEtBQUs7UUFDTCxLQUFLO1FBQ0wsS0FBSztRQUNMLEtBQUs7UUFDTCxLQUFLO1lBQ0QsT0FBT2UsS0FBS0MsTUFBTWhCLFFBQVFDO1FBQzlCLEtBQUs7UUFDTCxLQUFLO1FBQ0wsS0FBSztRQUNMLEtBQUs7UUFDTCxLQUFLO1lBQ0QsT0FBT2MsS0FBS0MsTUFBTWhCLFFBQVFFO1FBQzlCLEtBQUs7UUFDTCxLQUFLO1FBQ0wsS0FBSztZQUNELE9BQU9hLEtBQUtDLE1BQU1oQixRQUFRRztRQUM5QixLQUFLO1FBQ0wsS0FBSztRQUNMLEtBQUs7WUFDRCxPQUFPWSxLQUFLQyxNQUFNaEIsUUFBUUk7UUFDOUI7WUFDSSxPQUFPVyxLQUFLQyxNQUFNaEIsUUFBUUs7SUFDbEM7QUFDSiIsInNvdXJjZXMiOlsid2VicGFjazovL2Z1bGxzdGFjay1yb2xlLWJhc2VkLW5leHRqcy0yLy4vbm9kZV9tb2R1bGVzL2pvc2UvZGlzdC9ub2RlL2Nqcy9saWIvc2Vjcy5qcz9kYWVhIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuY29uc3QgbWludXRlID0gNjA7XG5jb25zdCBob3VyID0gbWludXRlICogNjA7XG5jb25zdCBkYXkgPSBob3VyICogMjQ7XG5jb25zdCB3ZWVrID0gZGF5ICogNztcbmNvbnN0IHllYXIgPSBkYXkgKiAzNjUuMjU7XG5jb25zdCBSRUdFWCA9IC9eKFxcZCt8XFxkK1xcLlxcZCspID8oc2Vjb25kcz98c2Vjcz98c3xtaW51dGVzP3xtaW5zP3xtfGhvdXJzP3xocnM/fGh8ZGF5cz98ZHx3ZWVrcz98d3x5ZWFycz98eXJzP3x5KSQvaTtcbmV4cG9ydHMuZGVmYXVsdCA9IChzdHIpID0+IHtcbiAgICBjb25zdCBtYXRjaGVkID0gUkVHRVguZXhlYyhzdHIpO1xuICAgIGlmICghbWF0Y2hlZCkge1xuICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdJbnZhbGlkIHRpbWUgcGVyaW9kIGZvcm1hdCcpO1xuICAgIH1cbiAgICBjb25zdCB2YWx1ZSA9IHBhcnNlRmxvYXQobWF0Y2hlZFsxXSk7XG4gICAgY29uc3QgdW5pdCA9IG1hdGNoZWRbMl0udG9Mb3dlckNhc2UoKTtcbiAgICBzd2l0Y2ggKHVuaXQpIHtcbiAgICAgICAgY2FzZSAnc2VjJzpcbiAgICAgICAgY2FzZSAnc2Vjcyc6XG4gICAgICAgIGNhc2UgJ3NlY29uZCc6XG4gICAgICAgIGNhc2UgJ3NlY29uZHMnOlxuICAgICAgICBjYXNlICdzJzpcbiAgICAgICAgICAgIHJldHVybiBNYXRoLnJvdW5kKHZhbHVlKTtcbiAgICAgICAgY2FzZSAnbWludXRlJzpcbiAgICAgICAgY2FzZSAnbWludXRlcyc6XG4gICAgICAgIGNhc2UgJ21pbic6XG4gICAgICAgIGNhc2UgJ21pbnMnOlxuICAgICAgICBjYXNlICdtJzpcbiAgICAgICAgICAgIHJldHVybiBNYXRoLnJvdW5kKHZhbHVlICogbWludXRlKTtcbiAgICAgICAgY2FzZSAnaG91cic6XG4gICAgICAgIGNhc2UgJ2hvdXJzJzpcbiAgICAgICAgY2FzZSAnaHInOlxuICAgICAgICBjYXNlICdocnMnOlxuICAgICAgICBjYXNlICdoJzpcbiAgICAgICAgICAgIHJldHVybiBNYXRoLnJvdW5kKHZhbHVlICogaG91cik7XG4gICAgICAgIGNhc2UgJ2RheSc6XG4gICAgICAgIGNhc2UgJ2RheXMnOlxuICAgICAgICBjYXNlICdkJzpcbiAgICAgICAgICAgIHJldHVybiBNYXRoLnJvdW5kKHZhbHVlICogZGF5KTtcbiAgICAgICAgY2FzZSAnd2Vlayc6XG4gICAgICAgIGNhc2UgJ3dlZWtzJzpcbiAgICAgICAgY2FzZSAndyc6XG4gICAgICAgICAgICByZXR1cm4gTWF0aC5yb3VuZCh2YWx1ZSAqIHdlZWspO1xuICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgcmV0dXJuIE1hdGgucm91bmQodmFsdWUgKiB5ZWFyKTtcbiAgICB9XG59O1xuIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwibWludXRlIiwiaG91ciIsImRheSIsIndlZWsiLCJ5ZWFyIiwiUkVHRVgiLCJkZWZhdWx0Iiwic3RyIiwibWF0Y2hlZCIsImV4ZWMiLCJUeXBlRXJyb3IiLCJwYXJzZUZsb2F0IiwidW5pdCIsInRvTG93ZXJDYXNlIiwiTWF0aCIsInJvdW5kIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/jose/dist/node/cjs/lib/secs.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/jose/dist/node/cjs/lib/validate_algorithms.js":
/*!********************************************************************!*\
  !*** ./node_modules/jose/dist/node/cjs/lib/validate_algorithms.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nconst validateAlgorithms = (option, algorithms)=>{\n    if (algorithms !== undefined && (!Array.isArray(algorithms) || algorithms.some((s)=>typeof s !== \"string\"))) {\n        throw new TypeError(`\"${option}\" option must be an array of strings`);\n    }\n    if (!algorithms) {\n        return undefined;\n    }\n    return new Set(algorithms);\n};\nexports[\"default\"] = validateAlgorithms;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvam9zZS9kaXN0L25vZGUvY2pzL2xpYi92YWxpZGF0ZV9hbGdvcml0aG1zLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2JBLDhDQUE2QztJQUFFRyxPQUFPO0FBQUssQ0FBQyxFQUFDO0FBQzdELE1BQU1DLHFCQUFxQixDQUFDQyxRQUFRQztJQUNoQyxJQUFJQSxlQUFlQyxhQUNkLEVBQUNDLE1BQU1DLFFBQVFILGVBQWVBLFdBQVdJLEtBQUssQ0FBQ0MsSUFBTSxPQUFPQSxNQUFNLFNBQVEsR0FBSTtRQUMvRSxNQUFNLElBQUlDLFVBQVUsQ0FBQyxDQUFDLEVBQUVQLE9BQU8sb0NBQW9DLENBQUM7SUFDeEU7SUFDQSxJQUFJLENBQUNDLFlBQVk7UUFDYixPQUFPQztJQUNYO0lBQ0EsT0FBTyxJQUFJTSxJQUFJUDtBQUNuQjtBQUNBSixrQkFBZVksR0FBR1YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mdWxsc3RhY2stcm9sZS1iYXNlZC1uZXh0anMtMi8uL25vZGVfbW9kdWxlcy9qb3NlL2Rpc3Qvbm9kZS9janMvbGliL3ZhbGlkYXRlX2FsZ29yaXRobXMuanM/OWI2NSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmNvbnN0IHZhbGlkYXRlQWxnb3JpdGhtcyA9IChvcHRpb24sIGFsZ29yaXRobXMpID0+IHtcbiAgICBpZiAoYWxnb3JpdGhtcyAhPT0gdW5kZWZpbmVkICYmXG4gICAgICAgICghQXJyYXkuaXNBcnJheShhbGdvcml0aG1zKSB8fCBhbGdvcml0aG1zLnNvbWUoKHMpID0+IHR5cGVvZiBzICE9PSAnc3RyaW5nJykpKSB7XG4gICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoYFwiJHtvcHRpb259XCIgb3B0aW9uIG11c3QgYmUgYW4gYXJyYXkgb2Ygc3RyaW5nc2ApO1xuICAgIH1cbiAgICBpZiAoIWFsZ29yaXRobXMpIHtcbiAgICAgICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgICB9XG4gICAgcmV0dXJuIG5ldyBTZXQoYWxnb3JpdGhtcyk7XG59O1xuZXhwb3J0cy5kZWZhdWx0ID0gdmFsaWRhdGVBbGdvcml0aG1zO1xuIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwidmFsaWRhdGVBbGdvcml0aG1zIiwib3B0aW9uIiwiYWxnb3JpdGhtcyIsInVuZGVmaW5lZCIsIkFycmF5IiwiaXNBcnJheSIsInNvbWUiLCJzIiwiVHlwZUVycm9yIiwiU2V0IiwiZGVmYXVsdCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/jose/dist/node/cjs/lib/validate_algorithms.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/jose/dist/node/cjs/lib/validate_crit.js":
/*!**************************************************************!*\
  !*** ./node_modules/jose/dist/node/cjs/lib/validate_crit.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nconst errors_js_1 = __webpack_require__(/*! ../util/errors.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/util/errors.js\");\nfunction validateCrit(Err, recognizedDefault, recognizedOption, protectedHeader, joseHeader) {\n    if (joseHeader.crit !== undefined && protectedHeader.crit === undefined) {\n        throw new Err('\"crit\" (Critical) Header Parameter MUST be integrity protected');\n    }\n    if (!protectedHeader || protectedHeader.crit === undefined) {\n        return new Set();\n    }\n    if (!Array.isArray(protectedHeader.crit) || protectedHeader.crit.length === 0 || protectedHeader.crit.some((input)=>typeof input !== \"string\" || input.length === 0)) {\n        throw new Err('\"crit\" (Critical) Header Parameter MUST be an array of non-empty strings when present');\n    }\n    let recognized;\n    if (recognizedOption !== undefined) {\n        recognized = new Map([\n            ...Object.entries(recognizedOption),\n            ...recognizedDefault.entries()\n        ]);\n    } else {\n        recognized = recognizedDefault;\n    }\n    for (const parameter of protectedHeader.crit){\n        if (!recognized.has(parameter)) {\n            throw new errors_js_1.JOSENotSupported(`Extension Header Parameter \"${parameter}\" is not recognized`);\n        }\n        if (joseHeader[parameter] === undefined) {\n            throw new Err(`Extension Header Parameter \"${parameter}\" is missing`);\n        } else if (recognized.get(parameter) && protectedHeader[parameter] === undefined) {\n            throw new Err(`Extension Header Parameter \"${parameter}\" MUST be integrity protected`);\n        }\n    }\n    return new Set(protectedHeader.crit);\n}\nexports[\"default\"] = validateCrit;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvam9zZS9kaXN0L25vZGUvY2pzL2xpYi92YWxpZGF0ZV9jcml0LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2JBLDhDQUE2QztJQUFFRyxPQUFPO0FBQUssQ0FBQyxFQUFDO0FBQzdELE1BQU1DLGNBQWNDLG1CQUFPQSxDQUFDLHVGQUFtQjtBQUMvQyxTQUFTQyxhQUFhQyxHQUFHLEVBQUVDLGlCQUFpQixFQUFFQyxnQkFBZ0IsRUFBRUMsZUFBZSxFQUFFQyxVQUFVO0lBQ3ZGLElBQUlBLFdBQVdDLFNBQVNDLGFBQWFILGdCQUFnQkUsU0FBU0MsV0FBVztRQUNyRSxNQUFNLElBQUlOLElBQUk7SUFDbEI7SUFDQSxJQUFJLENBQUNHLG1CQUFtQkEsZ0JBQWdCRSxTQUFTQyxXQUFXO1FBQ3hELE9BQU8sSUFBSUM7SUFDZjtJQUNBLElBQUksQ0FBQ0MsTUFBTUMsUUFBUU4sZ0JBQWdCRSxTQUMvQkYsZ0JBQWdCRSxLQUFLSyxXQUFXLEtBQ2hDUCxnQkFBZ0JFLEtBQUtNLEtBQUssQ0FBQ0MsUUFBVSxPQUFPQSxVQUFVLFlBQVlBLE1BQU1GLFdBQVcsSUFBSTtRQUN2RixNQUFNLElBQUlWLElBQUk7SUFDbEI7SUFDQSxJQUFJYTtJQUNKLElBQUlYLHFCQUFxQkksV0FBVztRQUNoQ08sYUFBYSxJQUFJQyxJQUFJO2VBQUlyQixPQUFPc0IsUUFBUWI7ZUFBc0JELGtCQUFrQmM7U0FBVTtJQUM5RixPQUNLO1FBQ0RGLGFBQWFaO0lBQ2pCO0lBQ0EsS0FBSyxNQUFNZSxhQUFhYixnQkFBZ0JFLEtBQU07UUFDMUMsSUFBSSxDQUFDUSxXQUFXSSxJQUFJRCxZQUFZO1lBQzVCLE1BQU0sSUFBSW5CLFlBQVlxQixpQkFBaUIsQ0FBQyw0QkFBNEIsRUFBRUYsVUFBVSxtQkFBbUIsQ0FBQztRQUN4RztRQUNBLElBQUlaLFVBQVUsQ0FBQ1ksVUFBVSxLQUFLVixXQUFXO1lBQ3JDLE1BQU0sSUFBSU4sSUFBSSxDQUFDLDRCQUE0QixFQUFFZ0IsVUFBVSxZQUFZLENBQUM7UUFDeEUsT0FDSyxJQUFJSCxXQUFXTSxJQUFJSCxjQUFjYixlQUFlLENBQUNhLFVBQVUsS0FBS1YsV0FBVztZQUM1RSxNQUFNLElBQUlOLElBQUksQ0FBQyw0QkFBNEIsRUFBRWdCLFVBQVUsNkJBQTZCLENBQUM7UUFDekY7SUFDSjtJQUNBLE9BQU8sSUFBSVQsSUFBSUosZ0JBQWdCRTtBQUNuQztBQUNBVixrQkFBZXlCLEdBQUdyQiIsInNvdXJjZXMiOlsid2VicGFjazovL2Z1bGxzdGFjay1yb2xlLWJhc2VkLW5leHRqcy0yLy4vbm9kZV9tb2R1bGVzL2pvc2UvZGlzdC9ub2RlL2Nqcy9saWIvdmFsaWRhdGVfY3JpdC5qcz84ZGNjIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuY29uc3QgZXJyb3JzX2pzXzEgPSByZXF1aXJlKFwiLi4vdXRpbC9lcnJvcnMuanNcIik7XG5mdW5jdGlvbiB2YWxpZGF0ZUNyaXQoRXJyLCByZWNvZ25pemVkRGVmYXVsdCwgcmVjb2duaXplZE9wdGlvbiwgcHJvdGVjdGVkSGVhZGVyLCBqb3NlSGVhZGVyKSB7XG4gICAgaWYgKGpvc2VIZWFkZXIuY3JpdCAhPT0gdW5kZWZpbmVkICYmIHByb3RlY3RlZEhlYWRlci5jcml0ID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycignXCJjcml0XCIgKENyaXRpY2FsKSBIZWFkZXIgUGFyYW1ldGVyIE1VU1QgYmUgaW50ZWdyaXR5IHByb3RlY3RlZCcpO1xuICAgIH1cbiAgICBpZiAoIXByb3RlY3RlZEhlYWRlciB8fCBwcm90ZWN0ZWRIZWFkZXIuY3JpdCA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgIHJldHVybiBuZXcgU2V0KCk7XG4gICAgfVxuICAgIGlmICghQXJyYXkuaXNBcnJheShwcm90ZWN0ZWRIZWFkZXIuY3JpdCkgfHxcbiAgICAgICAgcHJvdGVjdGVkSGVhZGVyLmNyaXQubGVuZ3RoID09PSAwIHx8XG4gICAgICAgIHByb3RlY3RlZEhlYWRlci5jcml0LnNvbWUoKGlucHV0KSA9PiB0eXBlb2YgaW5wdXQgIT09ICdzdHJpbmcnIHx8IGlucHV0Lmxlbmd0aCA9PT0gMCkpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycignXCJjcml0XCIgKENyaXRpY2FsKSBIZWFkZXIgUGFyYW1ldGVyIE1VU1QgYmUgYW4gYXJyYXkgb2Ygbm9uLWVtcHR5IHN0cmluZ3Mgd2hlbiBwcmVzZW50Jyk7XG4gICAgfVxuICAgIGxldCByZWNvZ25pemVkO1xuICAgIGlmIChyZWNvZ25pemVkT3B0aW9uICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgcmVjb2duaXplZCA9IG5ldyBNYXAoWy4uLk9iamVjdC5lbnRyaWVzKHJlY29nbml6ZWRPcHRpb24pLCAuLi5yZWNvZ25pemVkRGVmYXVsdC5lbnRyaWVzKCldKTtcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIHJlY29nbml6ZWQgPSByZWNvZ25pemVkRGVmYXVsdDtcbiAgICB9XG4gICAgZm9yIChjb25zdCBwYXJhbWV0ZXIgb2YgcHJvdGVjdGVkSGVhZGVyLmNyaXQpIHtcbiAgICAgICAgaWYgKCFyZWNvZ25pemVkLmhhcyhwYXJhbWV0ZXIpKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgZXJyb3JzX2pzXzEuSk9TRU5vdFN1cHBvcnRlZChgRXh0ZW5zaW9uIEhlYWRlciBQYXJhbWV0ZXIgXCIke3BhcmFtZXRlcn1cIiBpcyBub3QgcmVjb2duaXplZGApO1xuICAgICAgICB9XG4gICAgICAgIGlmIChqb3NlSGVhZGVyW3BhcmFtZXRlcl0gPT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycihgRXh0ZW5zaW9uIEhlYWRlciBQYXJhbWV0ZXIgXCIke3BhcmFtZXRlcn1cIiBpcyBtaXNzaW5nYCk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAocmVjb2duaXplZC5nZXQocGFyYW1ldGVyKSAmJiBwcm90ZWN0ZWRIZWFkZXJbcGFyYW1ldGVyXSA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyKGBFeHRlbnNpb24gSGVhZGVyIFBhcmFtZXRlciBcIiR7cGFyYW1ldGVyfVwiIE1VU1QgYmUgaW50ZWdyaXR5IHByb3RlY3RlZGApO1xuICAgICAgICB9XG4gICAgfVxuICAgIHJldHVybiBuZXcgU2V0KHByb3RlY3RlZEhlYWRlci5jcml0KTtcbn1cbmV4cG9ydHMuZGVmYXVsdCA9IHZhbGlkYXRlQ3JpdDtcbiJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsImVycm9yc19qc18xIiwicmVxdWlyZSIsInZhbGlkYXRlQ3JpdCIsIkVyciIsInJlY29nbml6ZWREZWZhdWx0IiwicmVjb2duaXplZE9wdGlvbiIsInByb3RlY3RlZEhlYWRlciIsImpvc2VIZWFkZXIiLCJjcml0IiwidW5kZWZpbmVkIiwiU2V0IiwiQXJyYXkiLCJpc0FycmF5IiwibGVuZ3RoIiwic29tZSIsImlucHV0IiwicmVjb2duaXplZCIsIk1hcCIsImVudHJpZXMiLCJwYXJhbWV0ZXIiLCJoYXMiLCJKT1NFTm90U3VwcG9ydGVkIiwiZ2V0IiwiZGVmYXVsdCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/jose/dist/node/cjs/lib/validate_crit.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/jose/dist/node/cjs/runtime/aeskw.js":
/*!**********************************************************!*\
  !*** ./node_modules/jose/dist/node/cjs/runtime/aeskw.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.unwrap = exports.wrap = void 0;\nconst buffer_1 = __webpack_require__(/*! buffer */ \"buffer\");\nconst crypto_1 = __webpack_require__(/*! crypto */ \"crypto\");\nconst errors_js_1 = __webpack_require__(/*! ../util/errors.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/util/errors.js\");\nconst buffer_utils_js_1 = __webpack_require__(/*! ../lib/buffer_utils.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/lib/buffer_utils.js\");\nconst webcrypto_js_1 = __webpack_require__(/*! ./webcrypto.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/runtime/webcrypto.js\");\nconst crypto_key_js_1 = __webpack_require__(/*! ../lib/crypto_key.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/lib/crypto_key.js\");\nconst is_key_object_js_1 = __webpack_require__(/*! ./is_key_object.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/runtime/is_key_object.js\");\nconst invalid_key_input_js_1 = __webpack_require__(/*! ../lib/invalid_key_input.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/lib/invalid_key_input.js\");\nconst ciphers_js_1 = __webpack_require__(/*! ./ciphers.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/runtime/ciphers.js\");\nconst is_key_like_js_1 = __webpack_require__(/*! ./is_key_like.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/runtime/is_key_like.js\");\nfunction checkKeySize(key, alg) {\n    if (key.symmetricKeySize << 3 !== parseInt(alg.slice(1, 4), 10)) {\n        throw new TypeError(`Invalid key size for alg: ${alg}`);\n    }\n}\nfunction ensureKeyObject(key, alg, usage) {\n    if ((0, is_key_object_js_1.default)(key)) {\n        return key;\n    }\n    if (key instanceof Uint8Array) {\n        return (0, crypto_1.createSecretKey)(key);\n    }\n    if ((0, webcrypto_js_1.isCryptoKey)(key)) {\n        (0, crypto_key_js_1.checkEncCryptoKey)(key, alg, usage);\n        return crypto_1.KeyObject.from(key);\n    }\n    throw new TypeError((0, invalid_key_input_js_1.default)(key, ...is_key_like_js_1.types, \"Uint8Array\"));\n}\nconst wrap = (alg, key, cek)=>{\n    const size = parseInt(alg.slice(1, 4), 10);\n    const algorithm = `aes${size}-wrap`;\n    if (!(0, ciphers_js_1.default)(algorithm)) {\n        throw new errors_js_1.JOSENotSupported(`alg ${alg} is not supported either by JOSE or your javascript runtime`);\n    }\n    const keyObject = ensureKeyObject(key, alg, \"wrapKey\");\n    checkKeySize(keyObject, alg);\n    const cipher = (0, crypto_1.createCipheriv)(algorithm, keyObject, buffer_1.Buffer.alloc(8, 0xa6));\n    return (0, buffer_utils_js_1.concat)(cipher.update(cek), cipher.final());\n};\nexports.wrap = wrap;\nconst unwrap = (alg, key, encryptedKey)=>{\n    const size = parseInt(alg.slice(1, 4), 10);\n    const algorithm = `aes${size}-wrap`;\n    if (!(0, ciphers_js_1.default)(algorithm)) {\n        throw new errors_js_1.JOSENotSupported(`alg ${alg} is not supported either by JOSE or your javascript runtime`);\n    }\n    const keyObject = ensureKeyObject(key, alg, \"unwrapKey\");\n    checkKeySize(keyObject, alg);\n    const cipher = (0, crypto_1.createDecipheriv)(algorithm, keyObject, buffer_1.Buffer.alloc(8, 0xa6));\n    return (0, buffer_utils_js_1.concat)(cipher.update(encryptedKey), cipher.final());\n};\nexports.unwrap = unwrap;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvam9zZS9kaXN0L25vZGUvY2pzL3J1bnRpbWUvYWVza3cuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYkEsOENBQTZDO0lBQUVHLE9BQU87QUFBSyxDQUFDLEVBQUM7QUFDN0RELGNBQWNFLEdBQUdGLFlBQVlHLEdBQUcsS0FBSztBQUNyQyxNQUFNQyxXQUFXQyxtQkFBT0EsQ0FBQyxzQkFBUTtBQUNqQyxNQUFNQyxXQUFXRCxtQkFBT0EsQ0FBQyxzQkFBUTtBQUNqQyxNQUFNRSxjQUFjRixtQkFBT0EsQ0FBQyx1RkFBbUI7QUFDL0MsTUFBTUcsb0JBQW9CSCxtQkFBT0EsQ0FBQyxpR0FBd0I7QUFDMUQsTUFBTUksaUJBQWlCSixtQkFBT0EsQ0FBQywwRkFBZ0I7QUFDL0MsTUFBTUssa0JBQWtCTCxtQkFBT0EsQ0FBQyw2RkFBc0I7QUFDdEQsTUFBTU0scUJBQXFCTixtQkFBT0EsQ0FBQyxrR0FBb0I7QUFDdkQsTUFBTU8seUJBQXlCUCxtQkFBT0EsQ0FBQywyR0FBNkI7QUFDcEUsTUFBTVEsZUFBZVIsbUJBQU9BLENBQUMsc0ZBQWM7QUFDM0MsTUFBTVMsbUJBQW1CVCxtQkFBT0EsQ0FBQyw4RkFBa0I7QUFDbkQsU0FBU1UsYUFBYUMsR0FBRyxFQUFFQyxHQUFHO0lBQzFCLElBQUlELElBQUlFLG9CQUFvQixNQUFNQyxTQUFTRixJQUFJRyxNQUFNLEdBQUcsSUFBSSxLQUFLO1FBQzdELE1BQU0sSUFBSUMsVUFBVSxDQUFDLDBCQUEwQixFQUFFSixJQUFJLENBQUM7SUFDMUQ7QUFDSjtBQUNBLFNBQVNLLGdCQUFnQk4sR0FBRyxFQUFFQyxHQUFHLEVBQUVNLEtBQUs7SUFDcEMsSUFBSSxDQUFDLEdBQUdaLG1CQUFtQmEsT0FBTSxFQUFHUixNQUFNO1FBQ3RDLE9BQU9BO0lBQ1g7SUFDQSxJQUFJQSxlQUFlUyxZQUFZO1FBQzNCLE9BQU8sQ0FBQyxHQUFHbkIsU0FBU29CLGVBQWMsRUFBR1Y7SUFDekM7SUFDQSxJQUFJLENBQUMsR0FBR1AsZUFBZWtCLFdBQVUsRUFBR1gsTUFBTTtRQUNyQyxJQUFHTixnQkFBZ0JrQixpQkFBZ0IsRUFBR1osS0FBS0MsS0FBS007UUFDakQsT0FBT2pCLFNBQVN1QixVQUFVQyxLQUFLZDtJQUNuQztJQUNBLE1BQU0sSUFBSUssVUFBVSxDQUFDLEdBQUdULHVCQUF1QlksT0FBTSxFQUFHUixRQUFRRixpQkFBaUJpQixPQUFPO0FBQzVGO0FBQ0EsTUFBTTVCLE9BQU8sQ0FBQ2MsS0FBS0QsS0FBS2dCO0lBQ3BCLE1BQU1DLE9BQU9kLFNBQVNGLElBQUlHLE1BQU0sR0FBRyxJQUFJO0lBQ3ZDLE1BQU1jLFlBQVksQ0FBQyxHQUFHLEVBQUVELEtBQUssS0FBSyxDQUFDO0lBQ25DLElBQUksQ0FBQyxDQUFDLEdBQUdwQixhQUFhVyxPQUFNLEVBQUdVLFlBQVk7UUFDdkMsTUFBTSxJQUFJM0IsWUFBWTRCLGlCQUFpQixDQUFDLElBQUksRUFBRWxCLElBQUksMkRBQTJELENBQUM7SUFDbEg7SUFDQSxNQUFNbUIsWUFBWWQsZ0JBQWdCTixLQUFLQyxLQUFLO0lBQzVDRixhQUFhcUIsV0FBV25CO0lBQ3hCLE1BQU1vQixTQUFTLENBQUMsR0FBRy9CLFNBQVNnQyxjQUFhLEVBQUdKLFdBQVdFLFdBQVdoQyxTQUFTbUMsT0FBT0MsTUFBTSxHQUFHO0lBQzNGLE9BQU8sQ0FBQyxHQUFHaEMsa0JBQWtCaUMsTUFBSyxFQUFHSixPQUFPSyxPQUFPVixNQUFNSyxPQUFPTTtBQUNwRTtBQUNBM0MsWUFBWUcsR0FBR0E7QUFDZixNQUFNRCxTQUFTLENBQUNlLEtBQUtELEtBQUs0QjtJQUN0QixNQUFNWCxPQUFPZCxTQUFTRixJQUFJRyxNQUFNLEdBQUcsSUFBSTtJQUN2QyxNQUFNYyxZQUFZLENBQUMsR0FBRyxFQUFFRCxLQUFLLEtBQUssQ0FBQztJQUNuQyxJQUFJLENBQUMsQ0FBQyxHQUFHcEIsYUFBYVcsT0FBTSxFQUFHVSxZQUFZO1FBQ3ZDLE1BQU0sSUFBSTNCLFlBQVk0QixpQkFBaUIsQ0FBQyxJQUFJLEVBQUVsQixJQUFJLDJEQUEyRCxDQUFDO0lBQ2xIO0lBQ0EsTUFBTW1CLFlBQVlkLGdCQUFnQk4sS0FBS0MsS0FBSztJQUM1Q0YsYUFBYXFCLFdBQVduQjtJQUN4QixNQUFNb0IsU0FBUyxDQUFDLEdBQUcvQixTQUFTdUMsZ0JBQWUsRUFBR1gsV0FBV0UsV0FBV2hDLFNBQVNtQyxPQUFPQyxNQUFNLEdBQUc7SUFDN0YsT0FBTyxDQUFDLEdBQUdoQyxrQkFBa0JpQyxNQUFLLEVBQUdKLE9BQU9LLE9BQU9FLGVBQWVQLE9BQU9NO0FBQzdFO0FBQ0EzQyxjQUFjRSxHQUFHQSIsInNvdXJjZXMiOlsid2VicGFjazovL2Z1bGxzdGFjay1yb2xlLWJhc2VkLW5leHRqcy0yLy4vbm9kZV9tb2R1bGVzL2pvc2UvZGlzdC9ub2RlL2Nqcy9ydW50aW1lL2Flc2t3LmpzP2M2Y2EiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLnVud3JhcCA9IGV4cG9ydHMud3JhcCA9IHZvaWQgMDtcbmNvbnN0IGJ1ZmZlcl8xID0gcmVxdWlyZShcImJ1ZmZlclwiKTtcbmNvbnN0IGNyeXB0b18xID0gcmVxdWlyZShcImNyeXB0b1wiKTtcbmNvbnN0IGVycm9yc19qc18xID0gcmVxdWlyZShcIi4uL3V0aWwvZXJyb3JzLmpzXCIpO1xuY29uc3QgYnVmZmVyX3V0aWxzX2pzXzEgPSByZXF1aXJlKFwiLi4vbGliL2J1ZmZlcl91dGlscy5qc1wiKTtcbmNvbnN0IHdlYmNyeXB0b19qc18xID0gcmVxdWlyZShcIi4vd2ViY3J5cHRvLmpzXCIpO1xuY29uc3QgY3J5cHRvX2tleV9qc18xID0gcmVxdWlyZShcIi4uL2xpYi9jcnlwdG9fa2V5LmpzXCIpO1xuY29uc3QgaXNfa2V5X29iamVjdF9qc18xID0gcmVxdWlyZShcIi4vaXNfa2V5X29iamVjdC5qc1wiKTtcbmNvbnN0IGludmFsaWRfa2V5X2lucHV0X2pzXzEgPSByZXF1aXJlKFwiLi4vbGliL2ludmFsaWRfa2V5X2lucHV0LmpzXCIpO1xuY29uc3QgY2lwaGVyc19qc18xID0gcmVxdWlyZShcIi4vY2lwaGVycy5qc1wiKTtcbmNvbnN0IGlzX2tleV9saWtlX2pzXzEgPSByZXF1aXJlKFwiLi9pc19rZXlfbGlrZS5qc1wiKTtcbmZ1bmN0aW9uIGNoZWNrS2V5U2l6ZShrZXksIGFsZykge1xuICAgIGlmIChrZXkuc3ltbWV0cmljS2V5U2l6ZSA8PCAzICE9PSBwYXJzZUludChhbGcuc2xpY2UoMSwgNCksIDEwKSkge1xuICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKGBJbnZhbGlkIGtleSBzaXplIGZvciBhbGc6ICR7YWxnfWApO1xuICAgIH1cbn1cbmZ1bmN0aW9uIGVuc3VyZUtleU9iamVjdChrZXksIGFsZywgdXNhZ2UpIHtcbiAgICBpZiAoKDAsIGlzX2tleV9vYmplY3RfanNfMS5kZWZhdWx0KShrZXkpKSB7XG4gICAgICAgIHJldHVybiBrZXk7XG4gICAgfVxuICAgIGlmIChrZXkgaW5zdGFuY2VvZiBVaW50OEFycmF5KSB7XG4gICAgICAgIHJldHVybiAoMCwgY3J5cHRvXzEuY3JlYXRlU2VjcmV0S2V5KShrZXkpO1xuICAgIH1cbiAgICBpZiAoKDAsIHdlYmNyeXB0b19qc18xLmlzQ3J5cHRvS2V5KShrZXkpKSB7XG4gICAgICAgICgwLCBjcnlwdG9fa2V5X2pzXzEuY2hlY2tFbmNDcnlwdG9LZXkpKGtleSwgYWxnLCB1c2FnZSk7XG4gICAgICAgIHJldHVybiBjcnlwdG9fMS5LZXlPYmplY3QuZnJvbShrZXkpO1xuICAgIH1cbiAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCgwLCBpbnZhbGlkX2tleV9pbnB1dF9qc18xLmRlZmF1bHQpKGtleSwgLi4uaXNfa2V5X2xpa2VfanNfMS50eXBlcywgJ1VpbnQ4QXJyYXknKSk7XG59XG5jb25zdCB3cmFwID0gKGFsZywga2V5LCBjZWspID0+IHtcbiAgICBjb25zdCBzaXplID0gcGFyc2VJbnQoYWxnLnNsaWNlKDEsIDQpLCAxMCk7XG4gICAgY29uc3QgYWxnb3JpdGhtID0gYGFlcyR7c2l6ZX0td3JhcGA7XG4gICAgaWYgKCEoMCwgY2lwaGVyc19qc18xLmRlZmF1bHQpKGFsZ29yaXRobSkpIHtcbiAgICAgICAgdGhyb3cgbmV3IGVycm9yc19qc18xLkpPU0VOb3RTdXBwb3J0ZWQoYGFsZyAke2FsZ30gaXMgbm90IHN1cHBvcnRlZCBlaXRoZXIgYnkgSk9TRSBvciB5b3VyIGphdmFzY3JpcHQgcnVudGltZWApO1xuICAgIH1cbiAgICBjb25zdCBrZXlPYmplY3QgPSBlbnN1cmVLZXlPYmplY3Qoa2V5LCBhbGcsICd3cmFwS2V5Jyk7XG4gICAgY2hlY2tLZXlTaXplKGtleU9iamVjdCwgYWxnKTtcbiAgICBjb25zdCBjaXBoZXIgPSAoMCwgY3J5cHRvXzEuY3JlYXRlQ2lwaGVyaXYpKGFsZ29yaXRobSwga2V5T2JqZWN0LCBidWZmZXJfMS5CdWZmZXIuYWxsb2MoOCwgMHhhNikpO1xuICAgIHJldHVybiAoMCwgYnVmZmVyX3V0aWxzX2pzXzEuY29uY2F0KShjaXBoZXIudXBkYXRlKGNlayksIGNpcGhlci5maW5hbCgpKTtcbn07XG5leHBvcnRzLndyYXAgPSB3cmFwO1xuY29uc3QgdW53cmFwID0gKGFsZywga2V5LCBlbmNyeXB0ZWRLZXkpID0+IHtcbiAgICBjb25zdCBzaXplID0gcGFyc2VJbnQoYWxnLnNsaWNlKDEsIDQpLCAxMCk7XG4gICAgY29uc3QgYWxnb3JpdGhtID0gYGFlcyR7c2l6ZX0td3JhcGA7XG4gICAgaWYgKCEoMCwgY2lwaGVyc19qc18xLmRlZmF1bHQpKGFsZ29yaXRobSkpIHtcbiAgICAgICAgdGhyb3cgbmV3IGVycm9yc19qc18xLkpPU0VOb3RTdXBwb3J0ZWQoYGFsZyAke2FsZ30gaXMgbm90IHN1cHBvcnRlZCBlaXRoZXIgYnkgSk9TRSBvciB5b3VyIGphdmFzY3JpcHQgcnVudGltZWApO1xuICAgIH1cbiAgICBjb25zdCBrZXlPYmplY3QgPSBlbnN1cmVLZXlPYmplY3Qoa2V5LCBhbGcsICd1bndyYXBLZXknKTtcbiAgICBjaGVja0tleVNpemUoa2V5T2JqZWN0LCBhbGcpO1xuICAgIGNvbnN0IGNpcGhlciA9ICgwLCBjcnlwdG9fMS5jcmVhdGVEZWNpcGhlcml2KShhbGdvcml0aG0sIGtleU9iamVjdCwgYnVmZmVyXzEuQnVmZmVyLmFsbG9jKDgsIDB4YTYpKTtcbiAgICByZXR1cm4gKDAsIGJ1ZmZlcl91dGlsc19qc18xLmNvbmNhdCkoY2lwaGVyLnVwZGF0ZShlbmNyeXB0ZWRLZXkpLCBjaXBoZXIuZmluYWwoKSk7XG59O1xuZXhwb3J0cy51bndyYXAgPSB1bndyYXA7XG4iXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJ1bndyYXAiLCJ3cmFwIiwiYnVmZmVyXzEiLCJyZXF1aXJlIiwiY3J5cHRvXzEiLCJlcnJvcnNfanNfMSIsImJ1ZmZlcl91dGlsc19qc18xIiwid2ViY3J5cHRvX2pzXzEiLCJjcnlwdG9fa2V5X2pzXzEiLCJpc19rZXlfb2JqZWN0X2pzXzEiLCJpbnZhbGlkX2tleV9pbnB1dF9qc18xIiwiY2lwaGVyc19qc18xIiwiaXNfa2V5X2xpa2VfanNfMSIsImNoZWNrS2V5U2l6ZSIsImtleSIsImFsZyIsInN5bW1ldHJpY0tleVNpemUiLCJwYXJzZUludCIsInNsaWNlIiwiVHlwZUVycm9yIiwiZW5zdXJlS2V5T2JqZWN0IiwidXNhZ2UiLCJkZWZhdWx0IiwiVWludDhBcnJheSIsImNyZWF0ZVNlY3JldEtleSIsImlzQ3J5cHRvS2V5IiwiY2hlY2tFbmNDcnlwdG9LZXkiLCJLZXlPYmplY3QiLCJmcm9tIiwidHlwZXMiLCJjZWsiLCJzaXplIiwiYWxnb3JpdGhtIiwiSk9TRU5vdFN1cHBvcnRlZCIsImtleU9iamVjdCIsImNpcGhlciIsImNyZWF0ZUNpcGhlcml2IiwiQnVmZmVyIiwiYWxsb2MiLCJjb25jYXQiLCJ1cGRhdGUiLCJmaW5hbCIsImVuY3J5cHRlZEtleSIsImNyZWF0ZURlY2lwaGVyaXYiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/jose/dist/node/cjs/runtime/aeskw.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/jose/dist/node/cjs/runtime/asn1.js":
/*!*********************************************************!*\
  !*** ./node_modules/jose/dist/node/cjs/runtime/asn1.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.fromX509 = exports.fromSPKI = exports.fromPKCS8 = exports.toPKCS8 = exports.toSPKI = void 0;\nconst crypto_1 = __webpack_require__(/*! crypto */ \"crypto\");\nconst buffer_1 = __webpack_require__(/*! buffer */ \"buffer\");\nconst webcrypto_js_1 = __webpack_require__(/*! ./webcrypto.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/runtime/webcrypto.js\");\nconst is_key_object_js_1 = __webpack_require__(/*! ./is_key_object.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/runtime/is_key_object.js\");\nconst invalid_key_input_js_1 = __webpack_require__(/*! ../lib/invalid_key_input.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/lib/invalid_key_input.js\");\nconst is_key_like_js_1 = __webpack_require__(/*! ./is_key_like.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/runtime/is_key_like.js\");\nconst genericExport = (keyType, keyFormat, key)=>{\n    let keyObject;\n    if ((0, webcrypto_js_1.isCryptoKey)(key)) {\n        if (!key.extractable) {\n            throw new TypeError(\"CryptoKey is not extractable\");\n        }\n        keyObject = crypto_1.KeyObject.from(key);\n    } else if ((0, is_key_object_js_1.default)(key)) {\n        keyObject = key;\n    } else {\n        throw new TypeError((0, invalid_key_input_js_1.default)(key, ...is_key_like_js_1.types));\n    }\n    if (keyObject.type !== keyType) {\n        throw new TypeError(`key is not a ${keyType} key`);\n    }\n    return keyObject.export({\n        format: \"pem\",\n        type: keyFormat\n    });\n};\nconst toSPKI = (key)=>{\n    return genericExport(\"public\", \"spki\", key);\n};\nexports.toSPKI = toSPKI;\nconst toPKCS8 = (key)=>{\n    return genericExport(\"private\", \"pkcs8\", key);\n};\nexports.toPKCS8 = toPKCS8;\nconst fromPKCS8 = (pem)=>(0, crypto_1.createPrivateKey)({\n        key: buffer_1.Buffer.from(pem.replace(/(?:-----(?:BEGIN|END) PRIVATE KEY-----|\\s)/g, \"\"), \"base64\"),\n        type: \"pkcs8\",\n        format: \"der\"\n    });\nexports.fromPKCS8 = fromPKCS8;\nconst fromSPKI = (pem)=>(0, crypto_1.createPublicKey)({\n        key: buffer_1.Buffer.from(pem.replace(/(?:-----(?:BEGIN|END) PUBLIC KEY-----|\\s)/g, \"\"), \"base64\"),\n        type: \"spki\",\n        format: \"der\"\n    });\nexports.fromSPKI = fromSPKI;\nconst fromX509 = (pem)=>(0, crypto_1.createPublicKey)({\n        key: pem,\n        type: \"spki\",\n        format: \"pem\"\n    });\nexports.fromX509 = fromX509;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvam9zZS9kaXN0L25vZGUvY2pzL3J1bnRpbWUvYXNuMS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFBRUcsT0FBTztBQUFLLENBQUMsRUFBQztBQUM3REQsZ0JBQWdCRSxHQUFHRixnQkFBZ0JHLEdBQUdILGlCQUFpQkksR0FBR0osZUFBZUssR0FBR0wsY0FBY00sR0FBRyxLQUFLO0FBQ2xHLE1BQU1DLFdBQVdDLG1CQUFPQSxDQUFDLHNCQUFRO0FBQ2pDLE1BQU1DLFdBQVdELG1CQUFPQSxDQUFDLHNCQUFRO0FBQ2pDLE1BQU1FLGlCQUFpQkYsbUJBQU9BLENBQUMsMEZBQWdCO0FBQy9DLE1BQU1HLHFCQUFxQkgsbUJBQU9BLENBQUMsa0dBQW9CO0FBQ3ZELE1BQU1JLHlCQUF5QkosbUJBQU9BLENBQUMsMkdBQTZCO0FBQ3BFLE1BQU1LLG1CQUFtQkwsbUJBQU9BLENBQUMsOEZBQWtCO0FBQ25ELE1BQU1NLGdCQUFnQixDQUFDQyxTQUFTQyxXQUFXQztJQUN2QyxJQUFJQztJQUNKLElBQUksQ0FBQyxHQUFHUixlQUFlUyxXQUFVLEVBQUdGLE1BQU07UUFDdEMsSUFBSSxDQUFDQSxJQUFJRyxhQUFhO1lBQ2xCLE1BQU0sSUFBSUMsVUFBVTtRQUN4QjtRQUNBSCxZQUFZWCxTQUFTZSxVQUFVQyxLQUFLTjtJQUN4QyxPQUNLLElBQUksQ0FBQyxHQUFHTixtQkFBbUJhLE9BQU0sRUFBR1AsTUFBTTtRQUMzQ0MsWUFBWUQ7SUFDaEIsT0FDSztRQUNELE1BQU0sSUFBSUksVUFBVSxDQUFDLEdBQUdULHVCQUF1QlksT0FBTSxFQUFHUCxRQUFRSixpQkFBaUJZO0lBQ3JGO0lBQ0EsSUFBSVAsVUFBVVEsU0FBU1gsU0FBUztRQUM1QixNQUFNLElBQUlNLFVBQVUsQ0FBQyxhQUFhLEVBQUVOLFFBQVEsSUFBSSxDQUFDO0lBQ3JEO0lBQ0EsT0FBT0csVUFBVVMsT0FBTztRQUFFQyxRQUFRO1FBQU9GLE1BQU1WO0lBQVU7QUFDN0Q7QUFDQSxNQUFNVixTQUFTLENBQUNXO0lBQ1osT0FBT0gsY0FBYyxVQUFVLFFBQVFHO0FBQzNDO0FBQ0FqQixjQUFjTSxHQUFHQTtBQUNqQixNQUFNRCxVQUFVLENBQUNZO0lBQ2IsT0FBT0gsY0FBYyxXQUFXLFNBQVNHO0FBQzdDO0FBQ0FqQixlQUFlSyxHQUFHQTtBQUNsQixNQUFNRCxZQUFZLENBQUN5QixNQUFRLENBQUMsR0FBR3RCLFNBQVN1QixnQkFBZSxFQUFHO1FBQ3REYixLQUFLUixTQUFTc0IsT0FBT1IsS0FBS00sSUFBSUcsUUFBUSwrQ0FBK0MsS0FBSztRQUMxRk4sTUFBTTtRQUNORSxRQUFRO0lBQ1o7QUFDQTVCLGlCQUFpQkksR0FBR0E7QUFDcEIsTUFBTUQsV0FBVyxDQUFDMEIsTUFBUSxDQUFDLEdBQUd0QixTQUFTMEIsZUFBYyxFQUFHO1FBQ3BEaEIsS0FBS1IsU0FBU3NCLE9BQU9SLEtBQUtNLElBQUlHLFFBQVEsOENBQThDLEtBQUs7UUFDekZOLE1BQU07UUFDTkUsUUFBUTtJQUNaO0FBQ0E1QixnQkFBZ0JHLEdBQUdBO0FBQ25CLE1BQU1ELFdBQVcsQ0FBQzJCLE1BQVEsQ0FBQyxHQUFHdEIsU0FBUzBCLGVBQWMsRUFBRztRQUNwRGhCLEtBQUtZO1FBQ0xILE1BQU07UUFDTkUsUUFBUTtJQUNaO0FBQ0E1QixnQkFBZ0JFLEdBQUdBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZnVsbHN0YWNrLXJvbGUtYmFzZWQtbmV4dGpzLTIvLi9ub2RlX21vZHVsZXMvam9zZS9kaXN0L25vZGUvY2pzL3J1bnRpbWUvYXNuMS5qcz85NzdkIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5mcm9tWDUwOSA9IGV4cG9ydHMuZnJvbVNQS0kgPSBleHBvcnRzLmZyb21QS0NTOCA9IGV4cG9ydHMudG9QS0NTOCA9IGV4cG9ydHMudG9TUEtJID0gdm9pZCAwO1xuY29uc3QgY3J5cHRvXzEgPSByZXF1aXJlKFwiY3J5cHRvXCIpO1xuY29uc3QgYnVmZmVyXzEgPSByZXF1aXJlKFwiYnVmZmVyXCIpO1xuY29uc3Qgd2ViY3J5cHRvX2pzXzEgPSByZXF1aXJlKFwiLi93ZWJjcnlwdG8uanNcIik7XG5jb25zdCBpc19rZXlfb2JqZWN0X2pzXzEgPSByZXF1aXJlKFwiLi9pc19rZXlfb2JqZWN0LmpzXCIpO1xuY29uc3QgaW52YWxpZF9rZXlfaW5wdXRfanNfMSA9IHJlcXVpcmUoXCIuLi9saWIvaW52YWxpZF9rZXlfaW5wdXQuanNcIik7XG5jb25zdCBpc19rZXlfbGlrZV9qc18xID0gcmVxdWlyZShcIi4vaXNfa2V5X2xpa2UuanNcIik7XG5jb25zdCBnZW5lcmljRXhwb3J0ID0gKGtleVR5cGUsIGtleUZvcm1hdCwga2V5KSA9PiB7XG4gICAgbGV0IGtleU9iamVjdDtcbiAgICBpZiAoKDAsIHdlYmNyeXB0b19qc18xLmlzQ3J5cHRvS2V5KShrZXkpKSB7XG4gICAgICAgIGlmICgha2V5LmV4dHJhY3RhYmxlKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdDcnlwdG9LZXkgaXMgbm90IGV4dHJhY3RhYmxlJyk7XG4gICAgICAgIH1cbiAgICAgICAga2V5T2JqZWN0ID0gY3J5cHRvXzEuS2V5T2JqZWN0LmZyb20oa2V5KTtcbiAgICB9XG4gICAgZWxzZSBpZiAoKDAsIGlzX2tleV9vYmplY3RfanNfMS5kZWZhdWx0KShrZXkpKSB7XG4gICAgICAgIGtleU9iamVjdCA9IGtleTtcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoKDAsIGludmFsaWRfa2V5X2lucHV0X2pzXzEuZGVmYXVsdCkoa2V5LCAuLi5pc19rZXlfbGlrZV9qc18xLnR5cGVzKSk7XG4gICAgfVxuICAgIGlmIChrZXlPYmplY3QudHlwZSAhPT0ga2V5VHlwZSkge1xuICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKGBrZXkgaXMgbm90IGEgJHtrZXlUeXBlfSBrZXlgKTtcbiAgICB9XG4gICAgcmV0dXJuIGtleU9iamVjdC5leHBvcnQoeyBmb3JtYXQ6ICdwZW0nLCB0eXBlOiBrZXlGb3JtYXQgfSk7XG59O1xuY29uc3QgdG9TUEtJID0gKGtleSkgPT4ge1xuICAgIHJldHVybiBnZW5lcmljRXhwb3J0KCdwdWJsaWMnLCAnc3BraScsIGtleSk7XG59O1xuZXhwb3J0cy50b1NQS0kgPSB0b1NQS0k7XG5jb25zdCB0b1BLQ1M4ID0gKGtleSkgPT4ge1xuICAgIHJldHVybiBnZW5lcmljRXhwb3J0KCdwcml2YXRlJywgJ3BrY3M4Jywga2V5KTtcbn07XG5leHBvcnRzLnRvUEtDUzggPSB0b1BLQ1M4O1xuY29uc3QgZnJvbVBLQ1M4ID0gKHBlbSkgPT4gKDAsIGNyeXB0b18xLmNyZWF0ZVByaXZhdGVLZXkpKHtcbiAgICBrZXk6IGJ1ZmZlcl8xLkJ1ZmZlci5mcm9tKHBlbS5yZXBsYWNlKC8oPzotLS0tLSg/OkJFR0lOfEVORCkgUFJJVkFURSBLRVktLS0tLXxcXHMpL2csICcnKSwgJ2Jhc2U2NCcpLFxuICAgIHR5cGU6ICdwa2NzOCcsXG4gICAgZm9ybWF0OiAnZGVyJyxcbn0pO1xuZXhwb3J0cy5mcm9tUEtDUzggPSBmcm9tUEtDUzg7XG5jb25zdCBmcm9tU1BLSSA9IChwZW0pID0+ICgwLCBjcnlwdG9fMS5jcmVhdGVQdWJsaWNLZXkpKHtcbiAgICBrZXk6IGJ1ZmZlcl8xLkJ1ZmZlci5mcm9tKHBlbS5yZXBsYWNlKC8oPzotLS0tLSg/OkJFR0lOfEVORCkgUFVCTElDIEtFWS0tLS0tfFxccykvZywgJycpLCAnYmFzZTY0JyksXG4gICAgdHlwZTogJ3Nwa2knLFxuICAgIGZvcm1hdDogJ2RlcicsXG59KTtcbmV4cG9ydHMuZnJvbVNQS0kgPSBmcm9tU1BLSTtcbmNvbnN0IGZyb21YNTA5ID0gKHBlbSkgPT4gKDAsIGNyeXB0b18xLmNyZWF0ZVB1YmxpY0tleSkoe1xuICAgIGtleTogcGVtLFxuICAgIHR5cGU6ICdzcGtpJyxcbiAgICBmb3JtYXQ6ICdwZW0nLFxufSk7XG5leHBvcnRzLmZyb21YNTA5ID0gZnJvbVg1MDk7XG4iXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJmcm9tWDUwOSIsImZyb21TUEtJIiwiZnJvbVBLQ1M4IiwidG9QS0NTOCIsInRvU1BLSSIsImNyeXB0b18xIiwicmVxdWlyZSIsImJ1ZmZlcl8xIiwid2ViY3J5cHRvX2pzXzEiLCJpc19rZXlfb2JqZWN0X2pzXzEiLCJpbnZhbGlkX2tleV9pbnB1dF9qc18xIiwiaXNfa2V5X2xpa2VfanNfMSIsImdlbmVyaWNFeHBvcnQiLCJrZXlUeXBlIiwia2V5Rm9ybWF0Iiwia2V5Iiwia2V5T2JqZWN0IiwiaXNDcnlwdG9LZXkiLCJleHRyYWN0YWJsZSIsIlR5cGVFcnJvciIsIktleU9iamVjdCIsImZyb20iLCJkZWZhdWx0IiwidHlwZXMiLCJ0eXBlIiwiZXhwb3J0IiwiZm9ybWF0IiwicGVtIiwiY3JlYXRlUHJpdmF0ZUtleSIsIkJ1ZmZlciIsInJlcGxhY2UiLCJjcmVhdGVQdWJsaWNLZXkiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/jose/dist/node/cjs/runtime/asn1.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/jose/dist/node/cjs/runtime/asn1_sequence_decoder.js":
/*!**************************************************************************!*\
  !*** ./node_modules/jose/dist/node/cjs/runtime/asn1_sequence_decoder.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nconst tagInteger = 0x02;\nconst tagSequence = 0x30;\nclass Asn1SequenceDecoder {\n    constructor(buffer){\n        if (buffer[0] !== tagSequence) {\n            throw new TypeError();\n        }\n        this.buffer = buffer;\n        this.offset = 1;\n        const len = this.decodeLength();\n        if (len !== buffer.length - this.offset) {\n            throw new TypeError();\n        }\n    }\n    decodeLength() {\n        let length = this.buffer[this.offset++];\n        if (length & 0x80) {\n            const nBytes = length & ~0x80;\n            length = 0;\n            for(let i = 0; i < nBytes; i++)length = length << 8 | this.buffer[this.offset + i];\n            this.offset += nBytes;\n        }\n        return length;\n    }\n    unsignedInteger() {\n        if (this.buffer[this.offset++] !== tagInteger) {\n            throw new TypeError();\n        }\n        let length = this.decodeLength();\n        if (this.buffer[this.offset] === 0) {\n            this.offset++;\n            length--;\n        }\n        const result = this.buffer.slice(this.offset, this.offset + length);\n        this.offset += length;\n        return result;\n    }\n    end() {\n        if (this.offset !== this.buffer.length) {\n            throw new TypeError();\n        }\n    }\n}\nexports[\"default\"] = Asn1SequenceDecoder;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvam9zZS9kaXN0L25vZGUvY2pzL3J1bnRpbWUvYXNuMV9zZXF1ZW5jZV9kZWNvZGVyLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2JBLDhDQUE2QztJQUFFRyxPQUFPO0FBQUssQ0FBQyxFQUFDO0FBQzdELE1BQU1DLGFBQWE7QUFDbkIsTUFBTUMsY0FBYztBQUNwQixNQUFNQztJQUNGQyxZQUFZQyxNQUFNLENBQUU7UUFDaEIsSUFBSUEsTUFBTSxDQUFDLEVBQUUsS0FBS0gsYUFBYTtZQUMzQixNQUFNLElBQUlJO1FBQ2Q7UUFDQSxJQUFJLENBQUNELFNBQVNBO1FBQ2QsSUFBSSxDQUFDRSxTQUFTO1FBQ2QsTUFBTUMsTUFBTSxJQUFJLENBQUNDO1FBQ2pCLElBQUlELFFBQVFILE9BQU9LLFNBQVMsSUFBSSxDQUFDSCxRQUFRO1lBQ3JDLE1BQU0sSUFBSUQ7UUFDZDtJQUNKO0lBQ0FHLGVBQWU7UUFDWCxJQUFJQyxTQUFTLElBQUksQ0FBQ0wsTUFBTSxDQUFDLElBQUksQ0FBQ0UsU0FBUztRQUN2QyxJQUFJRyxTQUFTLE1BQU07WUFDZixNQUFNQyxTQUFTRCxTQUFTLENBQUM7WUFDekJBLFNBQVM7WUFDVCxJQUFLLElBQUlFLElBQUksR0FBR0EsSUFBSUQsUUFBUUMsSUFDeEJGLFNBQVMsVUFBVyxJQUFLLElBQUksQ0FBQ0wsTUFBTSxDQUFDLElBQUksQ0FBQ0UsU0FBU0ssRUFBRTtZQUN6RCxJQUFJLENBQUNMLFVBQVVJO1FBQ25CO1FBQ0EsT0FBT0Q7SUFDWDtJQUNBRyxrQkFBa0I7UUFDZCxJQUFJLElBQUksQ0FBQ1IsTUFBTSxDQUFDLElBQUksQ0FBQ0UsU0FBUyxLQUFLTixZQUFZO1lBQzNDLE1BQU0sSUFBSUs7UUFDZDtRQUNBLElBQUlJLFNBQVMsSUFBSSxDQUFDRDtRQUNsQixJQUFJLElBQUksQ0FBQ0osTUFBTSxDQUFDLElBQUksQ0FBQ0UsT0FBTyxLQUFLLEdBQUc7WUFDaEMsSUFBSSxDQUFDQTtZQUNMRztRQUNKO1FBQ0EsTUFBTUksU0FBUyxJQUFJLENBQUNULE9BQU9VLE1BQU0sSUFBSSxDQUFDUixRQUFRLElBQUksQ0FBQ0EsU0FBU0c7UUFDNUQsSUFBSSxDQUFDSCxVQUFVRztRQUNmLE9BQU9JO0lBQ1g7SUFDQUUsTUFBTTtRQUNGLElBQUksSUFBSSxDQUFDVCxXQUFXLElBQUksQ0FBQ0YsT0FBT0ssUUFBUTtZQUNwQyxNQUFNLElBQUlKO1FBQ2Q7SUFDSjtBQUNKO0FBQ0FQLGtCQUFla0IsR0FBR2QiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mdWxsc3RhY2stcm9sZS1iYXNlZC1uZXh0anMtMi8uL25vZGVfbW9kdWxlcy9qb3NlL2Rpc3Qvbm9kZS9janMvcnVudGltZS9hc24xX3NlcXVlbmNlX2RlY29kZXIuanM/MmE4MiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmNvbnN0IHRhZ0ludGVnZXIgPSAweDAyO1xuY29uc3QgdGFnU2VxdWVuY2UgPSAweDMwO1xuY2xhc3MgQXNuMVNlcXVlbmNlRGVjb2RlciB7XG4gICAgY29uc3RydWN0b3IoYnVmZmVyKSB7XG4gICAgICAgIGlmIChidWZmZXJbMF0gIT09IHRhZ1NlcXVlbmNlKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCk7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5idWZmZXIgPSBidWZmZXI7XG4gICAgICAgIHRoaXMub2Zmc2V0ID0gMTtcbiAgICAgICAgY29uc3QgbGVuID0gdGhpcy5kZWNvZGVMZW5ndGgoKTtcbiAgICAgICAgaWYgKGxlbiAhPT0gYnVmZmVyLmxlbmd0aCAtIHRoaXMub2Zmc2V0KSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgZGVjb2RlTGVuZ3RoKCkge1xuICAgICAgICBsZXQgbGVuZ3RoID0gdGhpcy5idWZmZXJbdGhpcy5vZmZzZXQrK107XG4gICAgICAgIGlmIChsZW5ndGggJiAweDgwKSB7XG4gICAgICAgICAgICBjb25zdCBuQnl0ZXMgPSBsZW5ndGggJiB+MHg4MDtcbiAgICAgICAgICAgIGxlbmd0aCA9IDA7XG4gICAgICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IG5CeXRlczsgaSsrKVxuICAgICAgICAgICAgICAgIGxlbmd0aCA9IChsZW5ndGggPDwgOCkgfCB0aGlzLmJ1ZmZlclt0aGlzLm9mZnNldCArIGldO1xuICAgICAgICAgICAgdGhpcy5vZmZzZXQgKz0gbkJ5dGVzO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBsZW5ndGg7XG4gICAgfVxuICAgIHVuc2lnbmVkSW50ZWdlcigpIHtcbiAgICAgICAgaWYgKHRoaXMuYnVmZmVyW3RoaXMub2Zmc2V0KytdICE9PSB0YWdJbnRlZ2VyKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCk7XG4gICAgICAgIH1cbiAgICAgICAgbGV0IGxlbmd0aCA9IHRoaXMuZGVjb2RlTGVuZ3RoKCk7XG4gICAgICAgIGlmICh0aGlzLmJ1ZmZlclt0aGlzLm9mZnNldF0gPT09IDApIHtcbiAgICAgICAgICAgIHRoaXMub2Zmc2V0Kys7XG4gICAgICAgICAgICBsZW5ndGgtLTtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCByZXN1bHQgPSB0aGlzLmJ1ZmZlci5zbGljZSh0aGlzLm9mZnNldCwgdGhpcy5vZmZzZXQgKyBsZW5ndGgpO1xuICAgICAgICB0aGlzLm9mZnNldCArPSBsZW5ndGg7XG4gICAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgfVxuICAgIGVuZCgpIHtcbiAgICAgICAgaWYgKHRoaXMub2Zmc2V0ICE9PSB0aGlzLmJ1ZmZlci5sZW5ndGgpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoKTtcbiAgICAgICAgfVxuICAgIH1cbn1cbmV4cG9ydHMuZGVmYXVsdCA9IEFzbjFTZXF1ZW5jZURlY29kZXI7XG4iXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJ0YWdJbnRlZ2VyIiwidGFnU2VxdWVuY2UiLCJBc24xU2VxdWVuY2VEZWNvZGVyIiwiY29uc3RydWN0b3IiLCJidWZmZXIiLCJUeXBlRXJyb3IiLCJvZmZzZXQiLCJsZW4iLCJkZWNvZGVMZW5ndGgiLCJsZW5ndGgiLCJuQnl0ZXMiLCJpIiwidW5zaWduZWRJbnRlZ2VyIiwicmVzdWx0Iiwic2xpY2UiLCJlbmQiLCJkZWZhdWx0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/jose/dist/node/cjs/runtime/asn1_sequence_decoder.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/jose/dist/node/cjs/runtime/asn1_sequence_encoder.js":
/*!**************************************************************************!*\
  !*** ./node_modules/jose/dist/node/cjs/runtime/asn1_sequence_encoder.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nconst buffer_1 = __webpack_require__(/*! buffer */ \"buffer\");\nconst errors_js_1 = __webpack_require__(/*! ../util/errors.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/util/errors.js\");\nconst tagInteger = 0x02;\nconst tagBitStr = 0x03;\nconst tagOctStr = 0x04;\nconst tagSequence = 0x30;\nconst bZero = buffer_1.Buffer.from([\n    0x00\n]);\nconst bTagInteger = buffer_1.Buffer.from([\n    tagInteger\n]);\nconst bTagBitStr = buffer_1.Buffer.from([\n    tagBitStr\n]);\nconst bTagSequence = buffer_1.Buffer.from([\n    tagSequence\n]);\nconst bTagOctStr = buffer_1.Buffer.from([\n    tagOctStr\n]);\nconst encodeLength = (len)=>{\n    if (len < 128) return buffer_1.Buffer.from([\n        len\n    ]);\n    const buffer = buffer_1.Buffer.alloc(5);\n    buffer.writeUInt32BE(len, 1);\n    let offset = 1;\n    while(buffer[offset] === 0)offset++;\n    buffer[offset - 1] = 0x80 | 5 - offset;\n    return buffer.slice(offset - 1);\n};\nconst oids = new Map([\n    [\n        \"P-256\",\n        buffer_1.Buffer.from(\"06 08 2A 86 48 CE 3D 03 01 07\".replace(/ /g, \"\"), \"hex\")\n    ],\n    [\n        \"secp256k1\",\n        buffer_1.Buffer.from(\"06 05 2B 81 04 00 0A\".replace(/ /g, \"\"), \"hex\")\n    ],\n    [\n        \"P-384\",\n        buffer_1.Buffer.from(\"06 05 2B 81 04 00 22\".replace(/ /g, \"\"), \"hex\")\n    ],\n    [\n        \"P-521\",\n        buffer_1.Buffer.from(\"06 05 2B 81 04 00 23\".replace(/ /g, \"\"), \"hex\")\n    ],\n    [\n        \"ecPublicKey\",\n        buffer_1.Buffer.from(\"06 07 2A 86 48 CE 3D 02 01\".replace(/ /g, \"\"), \"hex\")\n    ],\n    [\n        \"X25519\",\n        buffer_1.Buffer.from(\"06 03 2B 65 6E\".replace(/ /g, \"\"), \"hex\")\n    ],\n    [\n        \"X448\",\n        buffer_1.Buffer.from(\"06 03 2B 65 6F\".replace(/ /g, \"\"), \"hex\")\n    ],\n    [\n        \"Ed25519\",\n        buffer_1.Buffer.from(\"06 03 2B 65 70\".replace(/ /g, \"\"), \"hex\")\n    ],\n    [\n        \"Ed448\",\n        buffer_1.Buffer.from(\"06 03 2B 65 71\".replace(/ /g, \"\"), \"hex\")\n    ]\n]);\nclass DumbAsn1Encoder {\n    constructor(){\n        this.length = 0;\n        this.elements = [];\n    }\n    oidFor(oid) {\n        const bOid = oids.get(oid);\n        if (!bOid) {\n            throw new errors_js_1.JOSENotSupported(\"Invalid or unsupported OID\");\n        }\n        this.elements.push(bOid);\n        this.length += bOid.length;\n    }\n    zero() {\n        this.elements.push(bTagInteger, buffer_1.Buffer.from([\n            0x01\n        ]), bZero);\n        this.length += 3;\n    }\n    one() {\n        this.elements.push(bTagInteger, buffer_1.Buffer.from([\n            0x01\n        ]), buffer_1.Buffer.from([\n            0x01\n        ]));\n        this.length += 3;\n    }\n    unsignedInteger(integer) {\n        if (integer[0] & 0x80) {\n            const len = encodeLength(integer.length + 1);\n            this.elements.push(bTagInteger, len, bZero, integer);\n            this.length += 2 + len.length + integer.length;\n        } else {\n            let i = 0;\n            while(integer[i] === 0 && (integer[i + 1] & 0x80) === 0)i++;\n            const len = encodeLength(integer.length - i);\n            this.elements.push(bTagInteger, encodeLength(integer.length - i), integer.slice(i));\n            this.length += 1 + len.length + integer.length - i;\n        }\n    }\n    octStr(octStr) {\n        const len = encodeLength(octStr.length);\n        this.elements.push(bTagOctStr, encodeLength(octStr.length), octStr);\n        this.length += 1 + len.length + octStr.length;\n    }\n    bitStr(bitS) {\n        const len = encodeLength(bitS.length + 1);\n        this.elements.push(bTagBitStr, encodeLength(bitS.length + 1), bZero, bitS);\n        this.length += 1 + len.length + bitS.length + 1;\n    }\n    add(seq) {\n        this.elements.push(seq);\n        this.length += seq.length;\n    }\n    end(tag = bTagSequence) {\n        const len = encodeLength(this.length);\n        return buffer_1.Buffer.concat([\n            tag,\n            len,\n            ...this.elements\n        ], 1 + len.length + this.length);\n    }\n}\nexports[\"default\"] = DumbAsn1Encoder;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/jose/dist/node/cjs/runtime/asn1_sequence_encoder.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/jose/dist/node/cjs/runtime/base64url.js":
/*!**************************************************************!*\
  !*** ./node_modules/jose/dist/node/cjs/runtime/base64url.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.decode = exports.encode = exports.encodeBase64 = exports.decodeBase64 = void 0;\nconst buffer_1 = __webpack_require__(/*! buffer */ \"buffer\");\nconst buffer_utils_js_1 = __webpack_require__(/*! ../lib/buffer_utils.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/lib/buffer_utils.js\");\nlet encode;\nexports.encode = encode;\nfunction normalize(input) {\n    let encoded = input;\n    if (encoded instanceof Uint8Array) {\n        encoded = buffer_utils_js_1.decoder.decode(encoded);\n    }\n    return encoded;\n}\nif (buffer_1.Buffer.isEncoding(\"base64url\")) {\n    exports.encode = encode = (input)=>buffer_1.Buffer.from(input).toString(\"base64url\");\n} else {\n    exports.encode = encode = (input)=>buffer_1.Buffer.from(input).toString(\"base64\").replace(/=/g, \"\").replace(/\\+/g, \"-\").replace(/\\//g, \"_\");\n}\nconst decodeBase64 = (input)=>buffer_1.Buffer.from(input, \"base64\");\nexports.decodeBase64 = decodeBase64;\nconst encodeBase64 = (input)=>buffer_1.Buffer.from(input).toString(\"base64\");\nexports.encodeBase64 = encodeBase64;\nconst decode = (input)=>buffer_1.Buffer.from(normalize(input), \"base64\");\nexports.decode = decode;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvam9zZS9kaXN0L25vZGUvY2pzL3J1bnRpbWUvYmFzZTY0dXJsLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2JBLDhDQUE2QztJQUFFRyxPQUFPO0FBQUssQ0FBQyxFQUFDO0FBQzdERCxjQUFjRSxHQUFHRixjQUFjRyxHQUFHSCxvQkFBb0JJLEdBQUdKLG9CQUFvQkssR0FBRyxLQUFLO0FBQ3JGLE1BQU1DLFdBQVdDLG1CQUFPQSxDQUFDLHNCQUFRO0FBQ2pDLE1BQU1DLG9CQUFvQkQsbUJBQU9BLENBQUMsaUdBQXdCO0FBQzFELElBQUlKO0FBQ0pILGNBQWNHLEdBQUdBO0FBQ2pCLFNBQVNNLFVBQVVDLEtBQUs7SUFDcEIsSUFBSUMsVUFBVUQ7SUFDZCxJQUFJQyxtQkFBbUJDLFlBQVk7UUFDL0JELFVBQVVILGtCQUFrQkssUUFBUVgsT0FBT1M7SUFDL0M7SUFDQSxPQUFPQTtBQUNYO0FBQ0EsSUFBSUwsU0FBU1EsT0FBT0MsV0FBVyxjQUFjO0lBQ3pDZixjQUFjRyxHQUFHQSxTQUFTLENBQUNPLFFBQVVKLFNBQVNRLE9BQU9FLEtBQUtOLE9BQU9PLFNBQVM7QUFDOUUsT0FDSztJQUNEakIsY0FBY0csR0FBR0EsU0FBUyxDQUFDTyxRQUFVSixTQUFTUSxPQUFPRSxLQUFLTixPQUFPTyxTQUFTLFVBQVVDLFFBQVEsTUFBTSxJQUFJQSxRQUFRLE9BQU8sS0FBS0EsUUFBUSxPQUFPO0FBQzdJO0FBQ0EsTUFBTWIsZUFBZSxDQUFDSyxRQUFVSixTQUFTUSxPQUFPRSxLQUFLTixPQUFPO0FBQzVEVixvQkFBb0JLLEdBQUdBO0FBQ3ZCLE1BQU1ELGVBQWUsQ0FBQ00sUUFBVUosU0FBU1EsT0FBT0UsS0FBS04sT0FBT08sU0FBUztBQUNyRWpCLG9CQUFvQkksR0FBR0E7QUFDdkIsTUFBTUYsU0FBUyxDQUFDUSxRQUFVSixTQUFTUSxPQUFPRSxLQUFLUCxVQUFVQyxRQUFRO0FBQ2pFVixjQUFjRSxHQUFHQSIsInNvdXJjZXMiOlsid2VicGFjazovL2Z1bGxzdGFjay1yb2xlLWJhc2VkLW5leHRqcy0yLy4vbm9kZV9tb2R1bGVzL2pvc2UvZGlzdC9ub2RlL2Nqcy9ydW50aW1lL2Jhc2U2NHVybC5qcz9jMTMwIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5kZWNvZGUgPSBleHBvcnRzLmVuY29kZSA9IGV4cG9ydHMuZW5jb2RlQmFzZTY0ID0gZXhwb3J0cy5kZWNvZGVCYXNlNjQgPSB2b2lkIDA7XG5jb25zdCBidWZmZXJfMSA9IHJlcXVpcmUoXCJidWZmZXJcIik7XG5jb25zdCBidWZmZXJfdXRpbHNfanNfMSA9IHJlcXVpcmUoXCIuLi9saWIvYnVmZmVyX3V0aWxzLmpzXCIpO1xubGV0IGVuY29kZTtcbmV4cG9ydHMuZW5jb2RlID0gZW5jb2RlO1xuZnVuY3Rpb24gbm9ybWFsaXplKGlucHV0KSB7XG4gICAgbGV0IGVuY29kZWQgPSBpbnB1dDtcbiAgICBpZiAoZW5jb2RlZCBpbnN0YW5jZW9mIFVpbnQ4QXJyYXkpIHtcbiAgICAgICAgZW5jb2RlZCA9IGJ1ZmZlcl91dGlsc19qc18xLmRlY29kZXIuZGVjb2RlKGVuY29kZWQpO1xuICAgIH1cbiAgICByZXR1cm4gZW5jb2RlZDtcbn1cbmlmIChidWZmZXJfMS5CdWZmZXIuaXNFbmNvZGluZygnYmFzZTY0dXJsJykpIHtcbiAgICBleHBvcnRzLmVuY29kZSA9IGVuY29kZSA9IChpbnB1dCkgPT4gYnVmZmVyXzEuQnVmZmVyLmZyb20oaW5wdXQpLnRvU3RyaW5nKCdiYXNlNjR1cmwnKTtcbn1cbmVsc2Uge1xuICAgIGV4cG9ydHMuZW5jb2RlID0gZW5jb2RlID0gKGlucHV0KSA9PiBidWZmZXJfMS5CdWZmZXIuZnJvbShpbnB1dCkudG9TdHJpbmcoJ2Jhc2U2NCcpLnJlcGxhY2UoLz0vZywgJycpLnJlcGxhY2UoL1xcKy9nLCAnLScpLnJlcGxhY2UoL1xcLy9nLCAnXycpO1xufVxuY29uc3QgZGVjb2RlQmFzZTY0ID0gKGlucHV0KSA9PiBidWZmZXJfMS5CdWZmZXIuZnJvbShpbnB1dCwgJ2Jhc2U2NCcpO1xuZXhwb3J0cy5kZWNvZGVCYXNlNjQgPSBkZWNvZGVCYXNlNjQ7XG5jb25zdCBlbmNvZGVCYXNlNjQgPSAoaW5wdXQpID0+IGJ1ZmZlcl8xLkJ1ZmZlci5mcm9tKGlucHV0KS50b1N0cmluZygnYmFzZTY0Jyk7XG5leHBvcnRzLmVuY29kZUJhc2U2NCA9IGVuY29kZUJhc2U2NDtcbmNvbnN0IGRlY29kZSA9IChpbnB1dCkgPT4gYnVmZmVyXzEuQnVmZmVyLmZyb20obm9ybWFsaXplKGlucHV0KSwgJ2Jhc2U2NCcpO1xuZXhwb3J0cy5kZWNvZGUgPSBkZWNvZGU7XG4iXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJkZWNvZGUiLCJlbmNvZGUiLCJlbmNvZGVCYXNlNjQiLCJkZWNvZGVCYXNlNjQiLCJidWZmZXJfMSIsInJlcXVpcmUiLCJidWZmZXJfdXRpbHNfanNfMSIsIm5vcm1hbGl6ZSIsImlucHV0IiwiZW5jb2RlZCIsIlVpbnQ4QXJyYXkiLCJkZWNvZGVyIiwiQnVmZmVyIiwiaXNFbmNvZGluZyIsImZyb20iLCJ0b1N0cmluZyIsInJlcGxhY2UiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/jose/dist/node/cjs/runtime/base64url.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/jose/dist/node/cjs/runtime/cbc_tag.js":
/*!************************************************************!*\
  !*** ./node_modules/jose/dist/node/cjs/runtime/cbc_tag.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nconst crypto_1 = __webpack_require__(/*! crypto */ \"crypto\");\nconst buffer_utils_js_1 = __webpack_require__(/*! ../lib/buffer_utils.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/lib/buffer_utils.js\");\nfunction cbcTag(aad, iv, ciphertext, macSize, macKey, keySize) {\n    const macData = (0, buffer_utils_js_1.concat)(aad, iv, ciphertext, (0, buffer_utils_js_1.uint64be)(aad.length << 3));\n    const hmac = (0, crypto_1.createHmac)(`sha${macSize}`, macKey);\n    hmac.update(macData);\n    return hmac.digest().slice(0, keySize >> 3);\n}\nexports[\"default\"] = cbcTag;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvam9zZS9kaXN0L25vZGUvY2pzL3J1bnRpbWUvY2JjX3RhZy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFBRUcsT0FBTztBQUFLLENBQUMsRUFBQztBQUM3RCxNQUFNQyxXQUFXQyxtQkFBT0EsQ0FBQyxzQkFBUTtBQUNqQyxNQUFNQyxvQkFBb0JELG1CQUFPQSxDQUFDLGlHQUF3QjtBQUMxRCxTQUFTRSxPQUFPQyxHQUFHLEVBQUVDLEVBQUUsRUFBRUMsVUFBVSxFQUFFQyxPQUFPLEVBQUVDLE1BQU0sRUFBRUMsT0FBTztJQUN6RCxNQUFNQyxVQUFVLENBQUMsR0FBR1Isa0JBQWtCUyxNQUFLLEVBQUdQLEtBQUtDLElBQUlDLFlBQVksQ0FBQyxHQUFHSixrQkFBa0JVLFFBQU8sRUFBR1IsSUFBSVMsVUFBVTtJQUNqSCxNQUFNQyxPQUFPLENBQUMsR0FBR2QsU0FBU2UsVUFBUyxFQUFHLENBQUMsR0FBRyxFQUFFUixRQUFRLENBQUMsRUFBRUM7SUFDdkRNLEtBQUtFLE9BQU9OO0lBQ1osT0FBT0ksS0FBS0csU0FBU0MsTUFBTSxHQUFHVCxXQUFXO0FBQzdDO0FBQ0FYLGtCQUFlcUIsR0FBR2hCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZnVsbHN0YWNrLXJvbGUtYmFzZWQtbmV4dGpzLTIvLi9ub2RlX21vZHVsZXMvam9zZS9kaXN0L25vZGUvY2pzL3J1bnRpbWUvY2JjX3RhZy5qcz80ZmM5Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuY29uc3QgY3J5cHRvXzEgPSByZXF1aXJlKFwiY3J5cHRvXCIpO1xuY29uc3QgYnVmZmVyX3V0aWxzX2pzXzEgPSByZXF1aXJlKFwiLi4vbGliL2J1ZmZlcl91dGlscy5qc1wiKTtcbmZ1bmN0aW9uIGNiY1RhZyhhYWQsIGl2LCBjaXBoZXJ0ZXh0LCBtYWNTaXplLCBtYWNLZXksIGtleVNpemUpIHtcbiAgICBjb25zdCBtYWNEYXRhID0gKDAsIGJ1ZmZlcl91dGlsc19qc18xLmNvbmNhdCkoYWFkLCBpdiwgY2lwaGVydGV4dCwgKDAsIGJ1ZmZlcl91dGlsc19qc18xLnVpbnQ2NGJlKShhYWQubGVuZ3RoIDw8IDMpKTtcbiAgICBjb25zdCBobWFjID0gKDAsIGNyeXB0b18xLmNyZWF0ZUhtYWMpKGBzaGEke21hY1NpemV9YCwgbWFjS2V5KTtcbiAgICBobWFjLnVwZGF0ZShtYWNEYXRhKTtcbiAgICByZXR1cm4gaG1hYy5kaWdlc3QoKS5zbGljZSgwLCBrZXlTaXplID4+IDMpO1xufVxuZXhwb3J0cy5kZWZhdWx0ID0gY2JjVGFnO1xuIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiY3J5cHRvXzEiLCJyZXF1aXJlIiwiYnVmZmVyX3V0aWxzX2pzXzEiLCJjYmNUYWciLCJhYWQiLCJpdiIsImNpcGhlcnRleHQiLCJtYWNTaXplIiwibWFjS2V5Iiwia2V5U2l6ZSIsIm1hY0RhdGEiLCJjb25jYXQiLCJ1aW50NjRiZSIsImxlbmd0aCIsImhtYWMiLCJjcmVhdGVIbWFjIiwidXBkYXRlIiwiZGlnZXN0Iiwic2xpY2UiLCJkZWZhdWx0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/jose/dist/node/cjs/runtime/cbc_tag.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/jose/dist/node/cjs/runtime/check_cek_length.js":
/*!*********************************************************************!*\
  !*** ./node_modules/jose/dist/node/cjs/runtime/check_cek_length.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nconst errors_js_1 = __webpack_require__(/*! ../util/errors.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/util/errors.js\");\nconst is_key_object_js_1 = __webpack_require__(/*! ./is_key_object.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/runtime/is_key_object.js\");\nconst checkCekLength = (enc, cek)=>{\n    let expected;\n    switch(enc){\n        case \"A128CBC-HS256\":\n        case \"A192CBC-HS384\":\n        case \"A256CBC-HS512\":\n            expected = parseInt(enc.slice(-3), 10);\n            break;\n        case \"A128GCM\":\n        case \"A192GCM\":\n        case \"A256GCM\":\n            expected = parseInt(enc.slice(1, 4), 10);\n            break;\n        default:\n            throw new errors_js_1.JOSENotSupported(`Content Encryption Algorithm ${enc} is not supported either by JOSE or your javascript runtime`);\n    }\n    if (cek instanceof Uint8Array) {\n        const actual = cek.byteLength << 3;\n        if (actual !== expected) {\n            throw new errors_js_1.JWEInvalid(`Invalid Content Encryption Key length. Expected ${expected} bits, got ${actual} bits`);\n        }\n        return;\n    }\n    if ((0, is_key_object_js_1.default)(cek) && cek.type === \"secret\") {\n        const actual = cek.symmetricKeySize << 3;\n        if (actual !== expected) {\n            throw new errors_js_1.JWEInvalid(`Invalid Content Encryption Key length. Expected ${expected} bits, got ${actual} bits`);\n        }\n        return;\n    }\n    throw new TypeError(\"Invalid Content Encryption Key type\");\n};\nexports[\"default\"] = checkCekLength;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvam9zZS9kaXN0L25vZGUvY2pzL3J1bnRpbWUvY2hlY2tfY2VrX2xlbmd0aC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFBRUcsT0FBTztBQUFLLENBQUMsRUFBQztBQUM3RCxNQUFNQyxjQUFjQyxtQkFBT0EsQ0FBQyx1RkFBbUI7QUFDL0MsTUFBTUMscUJBQXFCRCxtQkFBT0EsQ0FBQyxrR0FBb0I7QUFDdkQsTUFBTUUsaUJBQWlCLENBQUNDLEtBQUtDO0lBQ3pCLElBQUlDO0lBQ0osT0FBUUY7UUFDSixLQUFLO1FBQ0wsS0FBSztRQUNMLEtBQUs7WUFDREUsV0FBV0MsU0FBU0gsSUFBSUksTUFBTSxDQUFDLElBQUk7WUFDbkM7UUFDSixLQUFLO1FBQ0wsS0FBSztRQUNMLEtBQUs7WUFDREYsV0FBV0MsU0FBU0gsSUFBSUksTUFBTSxHQUFHLElBQUk7WUFDckM7UUFDSjtZQUNJLE1BQU0sSUFBSVIsWUFBWVMsaUJBQWlCLENBQUMsNkJBQTZCLEVBQUVMLElBQUksMkRBQTJELENBQUM7SUFDL0k7SUFDQSxJQUFJQyxlQUFlSyxZQUFZO1FBQzNCLE1BQU1DLFNBQVNOLElBQUlPLGNBQWM7UUFDakMsSUFBSUQsV0FBV0wsVUFBVTtZQUNyQixNQUFNLElBQUlOLFlBQVlhLFdBQVcsQ0FBQyxnREFBZ0QsRUFBRVAsU0FBUyxXQUFXLEVBQUVLLE9BQU8sS0FBSyxDQUFDO1FBQzNIO1FBQ0E7SUFDSjtJQUNBLElBQUksQ0FBQyxHQUFHVCxtQkFBbUJZLE9BQU0sRUFBR1QsUUFBUUEsSUFBSVUsU0FBUyxVQUFVO1FBQy9ELE1BQU1KLFNBQVNOLElBQUlXLG9CQUFvQjtRQUN2QyxJQUFJTCxXQUFXTCxVQUFVO1lBQ3JCLE1BQU0sSUFBSU4sWUFBWWEsV0FBVyxDQUFDLGdEQUFnRCxFQUFFUCxTQUFTLFdBQVcsRUFBRUssT0FBTyxLQUFLLENBQUM7UUFDM0g7UUFDQTtJQUNKO0lBQ0EsTUFBTSxJQUFJTSxVQUFVO0FBQ3hCO0FBQ0FuQixrQkFBZWdCLEdBQUdYIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZnVsbHN0YWNrLXJvbGUtYmFzZWQtbmV4dGpzLTIvLi9ub2RlX21vZHVsZXMvam9zZS9kaXN0L25vZGUvY2pzL3J1bnRpbWUvY2hlY2tfY2VrX2xlbmd0aC5qcz81NmNlIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuY29uc3QgZXJyb3JzX2pzXzEgPSByZXF1aXJlKFwiLi4vdXRpbC9lcnJvcnMuanNcIik7XG5jb25zdCBpc19rZXlfb2JqZWN0X2pzXzEgPSByZXF1aXJlKFwiLi9pc19rZXlfb2JqZWN0LmpzXCIpO1xuY29uc3QgY2hlY2tDZWtMZW5ndGggPSAoZW5jLCBjZWspID0+IHtcbiAgICBsZXQgZXhwZWN0ZWQ7XG4gICAgc3dpdGNoIChlbmMpIHtcbiAgICAgICAgY2FzZSAnQTEyOENCQy1IUzI1Nic6XG4gICAgICAgIGNhc2UgJ0ExOTJDQkMtSFMzODQnOlxuICAgICAgICBjYXNlICdBMjU2Q0JDLUhTNTEyJzpcbiAgICAgICAgICAgIGV4cGVjdGVkID0gcGFyc2VJbnQoZW5jLnNsaWNlKC0zKSwgMTApO1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgIGNhc2UgJ0ExMjhHQ00nOlxuICAgICAgICBjYXNlICdBMTkyR0NNJzpcbiAgICAgICAgY2FzZSAnQTI1NkdDTSc6XG4gICAgICAgICAgICBleHBlY3RlZCA9IHBhcnNlSW50KGVuYy5zbGljZSgxLCA0KSwgMTApO1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICB0aHJvdyBuZXcgZXJyb3JzX2pzXzEuSk9TRU5vdFN1cHBvcnRlZChgQ29udGVudCBFbmNyeXB0aW9uIEFsZ29yaXRobSAke2VuY30gaXMgbm90IHN1cHBvcnRlZCBlaXRoZXIgYnkgSk9TRSBvciB5b3VyIGphdmFzY3JpcHQgcnVudGltZWApO1xuICAgIH1cbiAgICBpZiAoY2VrIGluc3RhbmNlb2YgVWludDhBcnJheSkge1xuICAgICAgICBjb25zdCBhY3R1YWwgPSBjZWsuYnl0ZUxlbmd0aCA8PCAzO1xuICAgICAgICBpZiAoYWN0dWFsICE9PSBleHBlY3RlZCkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IGVycm9yc19qc18xLkpXRUludmFsaWQoYEludmFsaWQgQ29udGVudCBFbmNyeXB0aW9uIEtleSBsZW5ndGguIEV4cGVjdGVkICR7ZXhwZWN0ZWR9IGJpdHMsIGdvdCAke2FjdHVhbH0gYml0c2ApO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybjtcbiAgICB9XG4gICAgaWYgKCgwLCBpc19rZXlfb2JqZWN0X2pzXzEuZGVmYXVsdCkoY2VrKSAmJiBjZWsudHlwZSA9PT0gJ3NlY3JldCcpIHtcbiAgICAgICAgY29uc3QgYWN0dWFsID0gY2VrLnN5bW1ldHJpY0tleVNpemUgPDwgMztcbiAgICAgICAgaWYgKGFjdHVhbCAhPT0gZXhwZWN0ZWQpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBlcnJvcnNfanNfMS5KV0VJbnZhbGlkKGBJbnZhbGlkIENvbnRlbnQgRW5jcnlwdGlvbiBLZXkgbGVuZ3RoLiBFeHBlY3RlZCAke2V4cGVjdGVkfSBiaXRzLCBnb3QgJHthY3R1YWx9IGJpdHNgKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm47XG4gICAgfVxuICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ0ludmFsaWQgQ29udGVudCBFbmNyeXB0aW9uIEtleSB0eXBlJyk7XG59O1xuZXhwb3J0cy5kZWZhdWx0ID0gY2hlY2tDZWtMZW5ndGg7XG4iXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJlcnJvcnNfanNfMSIsInJlcXVpcmUiLCJpc19rZXlfb2JqZWN0X2pzXzEiLCJjaGVja0Nla0xlbmd0aCIsImVuYyIsImNlayIsImV4cGVjdGVkIiwicGFyc2VJbnQiLCJzbGljZSIsIkpPU0VOb3RTdXBwb3J0ZWQiLCJVaW50OEFycmF5IiwiYWN0dWFsIiwiYnl0ZUxlbmd0aCIsIkpXRUludmFsaWQiLCJkZWZhdWx0IiwidHlwZSIsInN5bW1ldHJpY0tleVNpemUiLCJUeXBlRXJyb3IiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/jose/dist/node/cjs/runtime/check_cek_length.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/jose/dist/node/cjs/runtime/check_modulus_length.js":
/*!*************************************************************************!*\
  !*** ./node_modules/jose/dist/node/cjs/runtime/check_modulus_length.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.setModulusLength = exports.weakMap = void 0;\nexports.weakMap = new WeakMap();\nconst getLength = (buf, index)=>{\n    let len = buf.readUInt8(1);\n    if ((len & 0x80) === 0) {\n        if (index === 0) {\n            return len;\n        }\n        return getLength(buf.subarray(2 + len), index - 1);\n    }\n    const num = len & 0x7f;\n    len = 0;\n    for(let i = 0; i < num; i++){\n        len <<= 8;\n        const j = buf.readUInt8(2 + i);\n        len |= j;\n    }\n    if (index === 0) {\n        return len;\n    }\n    return getLength(buf.subarray(2 + len), index - 1);\n};\nconst getLengthOfSeqIndex = (sequence, index)=>{\n    const len = sequence.readUInt8(1);\n    if ((len & 0x80) === 0) {\n        return getLength(sequence.subarray(2), index);\n    }\n    const num = len & 0x7f;\n    return getLength(sequence.subarray(2 + num), index);\n};\nconst getModulusLength = (key)=>{\n    var _a, _b;\n    if (exports.weakMap.has(key)) {\n        return exports.weakMap.get(key);\n    }\n    const modulusLength = (_b = (_a = key.asymmetricKeyDetails) === null || _a === void 0 ? void 0 : _a.modulusLength) !== null && _b !== void 0 ? _b : getLengthOfSeqIndex(key.export({\n        format: \"der\",\n        type: \"pkcs1\"\n    }), key.type === \"private\" ? 1 : 0) - 1 << 3;\n    exports.weakMap.set(key, modulusLength);\n    return modulusLength;\n};\nconst setModulusLength = (keyObject, modulusLength)=>{\n    exports.weakMap.set(keyObject, modulusLength);\n};\nexports.setModulusLength = setModulusLength;\nexports[\"default\"] = (key, alg)=>{\n    if (getModulusLength(key) < 2048) {\n        throw new TypeError(`${alg} requires key modulusLength to be 2048 bits or larger`);\n    }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvam9zZS9kaXN0L25vZGUvY2pzL3J1bnRpbWUvY2hlY2tfbW9kdWx1c19sZW5ndGguanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYkEsOENBQTZDO0lBQUVHLE9BQU87QUFBSyxDQUFDLEVBQUM7QUFDN0RELHdCQUF3QkUsR0FBR0YsZUFBZUcsR0FBRyxLQUFLO0FBQ2xESCxlQUFlRyxHQUFHLElBQUlDO0FBQ3RCLE1BQU1DLFlBQVksQ0FBQ0MsS0FBS0M7SUFDcEIsSUFBSUMsTUFBTUYsSUFBSUcsVUFBVTtJQUN4QixJQUFJLENBQUNELE1BQU0sSUFBRyxNQUFPLEdBQUc7UUFDcEIsSUFBSUQsVUFBVSxHQUFHO1lBQ2IsT0FBT0M7UUFDWDtRQUNBLE9BQU9ILFVBQVVDLElBQUlJLFNBQVMsSUFBSUYsTUFBTUQsUUFBUTtJQUNwRDtJQUNBLE1BQU1JLE1BQU1ILE1BQU07SUFDbEJBLE1BQU07SUFDTixJQUFLLElBQUlJLElBQUksR0FBR0EsSUFBSUQsS0FBS0MsSUFBSztRQUMxQkosUUFBUTtRQUNSLE1BQU1LLElBQUlQLElBQUlHLFVBQVUsSUFBSUc7UUFDNUJKLE9BQU9LO0lBQ1g7SUFDQSxJQUFJTixVQUFVLEdBQUc7UUFDYixPQUFPQztJQUNYO0lBQ0EsT0FBT0gsVUFBVUMsSUFBSUksU0FBUyxJQUFJRixNQUFNRCxRQUFRO0FBQ3BEO0FBQ0EsTUFBTU8sc0JBQXNCLENBQUNDLFVBQVVSO0lBQ25DLE1BQU1DLE1BQU1PLFNBQVNOLFVBQVU7SUFDL0IsSUFBSSxDQUFDRCxNQUFNLElBQUcsTUFBTyxHQUFHO1FBQ3BCLE9BQU9ILFVBQVVVLFNBQVNMLFNBQVMsSUFBSUg7SUFDM0M7SUFDQSxNQUFNSSxNQUFNSCxNQUFNO0lBQ2xCLE9BQU9ILFVBQVVVLFNBQVNMLFNBQVMsSUFBSUMsTUFBTUo7QUFDakQ7QUFDQSxNQUFNUyxtQkFBbUIsQ0FBQ0M7SUFDdEIsSUFBSUMsSUFBSUM7SUFDUixJQUFJbkIsUUFBUUcsUUFBUWlCLElBQUlILE1BQU07UUFDMUIsT0FBT2pCLFFBQVFHLFFBQVFrQixJQUFJSjtJQUMvQjtJQUNBLE1BQU1LLGdCQUFnQixDQUFDSCxLQUFLLENBQUNELEtBQUtELElBQUlNLG9CQUFtQixNQUFPLFFBQVFMLE9BQU8sS0FBSyxJQUFJLEtBQUssSUFBSUEsR0FBR0ksYUFBWSxNQUFPLFFBQVFILE9BQU8sS0FBSyxJQUFJQSxLQUFLLG9CQUFxQkYsSUFBSU8sT0FBTztRQUFFQyxRQUFRO1FBQU9DLE1BQU07SUFBUSxJQUFJVCxJQUFJUyxTQUFTLFlBQVksSUFBSSxLQUNoUCxLQUNBO0lBQ0oxQixRQUFRRyxRQUFRd0IsSUFBSVYsS0FBS0s7SUFDekIsT0FBT0E7QUFDWDtBQUNBLE1BQU1wQixtQkFBbUIsQ0FBQzBCLFdBQVdOO0lBQ2pDdEIsUUFBUUcsUUFBUXdCLElBQUlDLFdBQVdOO0FBQ25DO0FBQ0F0Qix3QkFBd0JFLEdBQUdBO0FBQzNCRixrQkFBZTZCLEdBQUcsQ0FBQ1osS0FBS2E7SUFDcEIsSUFBSWQsaUJBQWlCQyxPQUFPLE1BQU07UUFDOUIsTUFBTSxJQUFJYyxVQUFVLENBQUMsRUFBRUQsSUFBSSxxREFBcUQsQ0FBQztJQUNyRjtBQUNKIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZnVsbHN0YWNrLXJvbGUtYmFzZWQtbmV4dGpzLTIvLi9ub2RlX21vZHVsZXMvam9zZS9kaXN0L25vZGUvY2pzL3J1bnRpbWUvY2hlY2tfbW9kdWx1c19sZW5ndGguanM/MzY2ZCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuc2V0TW9kdWx1c0xlbmd0aCA9IGV4cG9ydHMud2Vha01hcCA9IHZvaWQgMDtcbmV4cG9ydHMud2Vha01hcCA9IG5ldyBXZWFrTWFwKCk7XG5jb25zdCBnZXRMZW5ndGggPSAoYnVmLCBpbmRleCkgPT4ge1xuICAgIGxldCBsZW4gPSBidWYucmVhZFVJbnQ4KDEpO1xuICAgIGlmICgobGVuICYgMHg4MCkgPT09IDApIHtcbiAgICAgICAgaWYgKGluZGV4ID09PSAwKSB7XG4gICAgICAgICAgICByZXR1cm4gbGVuO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBnZXRMZW5ndGgoYnVmLnN1YmFycmF5KDIgKyBsZW4pLCBpbmRleCAtIDEpO1xuICAgIH1cbiAgICBjb25zdCBudW0gPSBsZW4gJiAweDdmO1xuICAgIGxlbiA9IDA7XG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBudW07IGkrKykge1xuICAgICAgICBsZW4gPDw9IDg7XG4gICAgICAgIGNvbnN0IGogPSBidWYucmVhZFVJbnQ4KDIgKyBpKTtcbiAgICAgICAgbGVuIHw9IGo7XG4gICAgfVxuICAgIGlmIChpbmRleCA9PT0gMCkge1xuICAgICAgICByZXR1cm4gbGVuO1xuICAgIH1cbiAgICByZXR1cm4gZ2V0TGVuZ3RoKGJ1Zi5zdWJhcnJheSgyICsgbGVuKSwgaW5kZXggLSAxKTtcbn07XG5jb25zdCBnZXRMZW5ndGhPZlNlcUluZGV4ID0gKHNlcXVlbmNlLCBpbmRleCkgPT4ge1xuICAgIGNvbnN0IGxlbiA9IHNlcXVlbmNlLnJlYWRVSW50OCgxKTtcbiAgICBpZiAoKGxlbiAmIDB4ODApID09PSAwKSB7XG4gICAgICAgIHJldHVybiBnZXRMZW5ndGgoc2VxdWVuY2Uuc3ViYXJyYXkoMiksIGluZGV4KTtcbiAgICB9XG4gICAgY29uc3QgbnVtID0gbGVuICYgMHg3ZjtcbiAgICByZXR1cm4gZ2V0TGVuZ3RoKHNlcXVlbmNlLnN1YmFycmF5KDIgKyBudW0pLCBpbmRleCk7XG59O1xuY29uc3QgZ2V0TW9kdWx1c0xlbmd0aCA9IChrZXkpID0+IHtcbiAgICB2YXIgX2EsIF9iO1xuICAgIGlmIChleHBvcnRzLndlYWtNYXAuaGFzKGtleSkpIHtcbiAgICAgICAgcmV0dXJuIGV4cG9ydHMud2Vha01hcC5nZXQoa2V5KTtcbiAgICB9XG4gICAgY29uc3QgbW9kdWx1c0xlbmd0aCA9IChfYiA9IChfYSA9IGtleS5hc3ltbWV0cmljS2V5RGV0YWlscykgPT09IG51bGwgfHwgX2EgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9hLm1vZHVsdXNMZW5ndGgpICE9PSBudWxsICYmIF9iICE9PSB2b2lkIDAgPyBfYiA6IChnZXRMZW5ndGhPZlNlcUluZGV4KGtleS5leHBvcnQoeyBmb3JtYXQ6ICdkZXInLCB0eXBlOiAncGtjczEnIH0pLCBrZXkudHlwZSA9PT0gJ3ByaXZhdGUnID8gMSA6IDApIC1cbiAgICAgICAgMSkgPDxcbiAgICAgICAgMztcbiAgICBleHBvcnRzLndlYWtNYXAuc2V0KGtleSwgbW9kdWx1c0xlbmd0aCk7XG4gICAgcmV0dXJuIG1vZHVsdXNMZW5ndGg7XG59O1xuY29uc3Qgc2V0TW9kdWx1c0xlbmd0aCA9IChrZXlPYmplY3QsIG1vZHVsdXNMZW5ndGgpID0+IHtcbiAgICBleHBvcnRzLndlYWtNYXAuc2V0KGtleU9iamVjdCwgbW9kdWx1c0xlbmd0aCk7XG59O1xuZXhwb3J0cy5zZXRNb2R1bHVzTGVuZ3RoID0gc2V0TW9kdWx1c0xlbmd0aDtcbmV4cG9ydHMuZGVmYXVsdCA9IChrZXksIGFsZykgPT4ge1xuICAgIGlmIChnZXRNb2R1bHVzTGVuZ3RoKGtleSkgPCAyMDQ4KSB7XG4gICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoYCR7YWxnfSByZXF1aXJlcyBrZXkgbW9kdWx1c0xlbmd0aCB0byBiZSAyMDQ4IGJpdHMgb3IgbGFyZ2VyYCk7XG4gICAgfVxufTtcbiJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsInNldE1vZHVsdXNMZW5ndGgiLCJ3ZWFrTWFwIiwiV2Vha01hcCIsImdldExlbmd0aCIsImJ1ZiIsImluZGV4IiwibGVuIiwicmVhZFVJbnQ4Iiwic3ViYXJyYXkiLCJudW0iLCJpIiwiaiIsImdldExlbmd0aE9mU2VxSW5kZXgiLCJzZXF1ZW5jZSIsImdldE1vZHVsdXNMZW5ndGgiLCJrZXkiLCJfYSIsIl9iIiwiaGFzIiwiZ2V0IiwibW9kdWx1c0xlbmd0aCIsImFzeW1tZXRyaWNLZXlEZXRhaWxzIiwiZXhwb3J0IiwiZm9ybWF0IiwidHlwZSIsInNldCIsImtleU9iamVjdCIsImRlZmF1bHQiLCJhbGciLCJUeXBlRXJyb3IiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/jose/dist/node/cjs/runtime/check_modulus_length.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/jose/dist/node/cjs/runtime/ciphers.js":
/*!************************************************************!*\
  !*** ./node_modules/jose/dist/node/cjs/runtime/ciphers.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nconst crypto_1 = __webpack_require__(/*! crypto */ \"crypto\");\nlet ciphers;\nexports[\"default\"] = (algorithm)=>{\n    ciphers || (ciphers = new Set((0, crypto_1.getCiphers)()));\n    return ciphers.has(algorithm);\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvam9zZS9kaXN0L25vZGUvY2pzL3J1bnRpbWUvY2lwaGVycy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFBRUcsT0FBTztBQUFLLENBQUMsRUFBQztBQUM3RCxNQUFNQyxXQUFXQyxtQkFBT0EsQ0FBQyxzQkFBUTtBQUNqQyxJQUFJQztBQUNKSixrQkFBZUssR0FBRyxDQUFDQztJQUNmRixXQUFZQSxDQUFBQSxVQUFVLElBQUlHLElBQUksQ0FBQyxHQUFHTCxTQUFTTSxVQUFTLElBQUk7SUFDeEQsT0FBT0osUUFBUUssSUFBSUg7QUFDdkIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mdWxsc3RhY2stcm9sZS1iYXNlZC1uZXh0anMtMi8uL25vZGVfbW9kdWxlcy9qb3NlL2Rpc3Qvbm9kZS9janMvcnVudGltZS9jaXBoZXJzLmpzPzU4YTUiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5jb25zdCBjcnlwdG9fMSA9IHJlcXVpcmUoXCJjcnlwdG9cIik7XG5sZXQgY2lwaGVycztcbmV4cG9ydHMuZGVmYXVsdCA9IChhbGdvcml0aG0pID0+IHtcbiAgICBjaXBoZXJzIHx8IChjaXBoZXJzID0gbmV3IFNldCgoMCwgY3J5cHRvXzEuZ2V0Q2lwaGVycykoKSkpO1xuICAgIHJldHVybiBjaXBoZXJzLmhhcyhhbGdvcml0aG0pO1xufTtcbiJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsImNyeXB0b18xIiwicmVxdWlyZSIsImNpcGhlcnMiLCJkZWZhdWx0IiwiYWxnb3JpdGhtIiwiU2V0IiwiZ2V0Q2lwaGVycyIsImhhcyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/jose/dist/node/cjs/runtime/ciphers.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/jose/dist/node/cjs/runtime/decrypt.js":
/*!************************************************************!*\
  !*** ./node_modules/jose/dist/node/cjs/runtime/decrypt.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nconst crypto_1 = __webpack_require__(/*! crypto */ \"crypto\");\nconst check_iv_length_js_1 = __webpack_require__(/*! ../lib/check_iv_length.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/lib/check_iv_length.js\");\nconst check_cek_length_js_1 = __webpack_require__(/*! ./check_cek_length.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/runtime/check_cek_length.js\");\nconst buffer_utils_js_1 = __webpack_require__(/*! ../lib/buffer_utils.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/lib/buffer_utils.js\");\nconst errors_js_1 = __webpack_require__(/*! ../util/errors.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/util/errors.js\");\nconst timing_safe_equal_js_1 = __webpack_require__(/*! ./timing_safe_equal.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/runtime/timing_safe_equal.js\");\nconst cbc_tag_js_1 = __webpack_require__(/*! ./cbc_tag.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/runtime/cbc_tag.js\");\nconst webcrypto_js_1 = __webpack_require__(/*! ./webcrypto.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/runtime/webcrypto.js\");\nconst crypto_key_js_1 = __webpack_require__(/*! ../lib/crypto_key.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/lib/crypto_key.js\");\nconst is_key_object_js_1 = __webpack_require__(/*! ./is_key_object.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/runtime/is_key_object.js\");\nconst invalid_key_input_js_1 = __webpack_require__(/*! ../lib/invalid_key_input.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/lib/invalid_key_input.js\");\nconst ciphers_js_1 = __webpack_require__(/*! ./ciphers.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/runtime/ciphers.js\");\nconst is_key_like_js_1 = __webpack_require__(/*! ./is_key_like.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/runtime/is_key_like.js\");\nfunction cbcDecrypt(enc, cek, ciphertext, iv, tag, aad) {\n    const keySize = parseInt(enc.slice(1, 4), 10);\n    if ((0, is_key_object_js_1.default)(cek)) {\n        cek = cek.export();\n    }\n    const encKey = cek.subarray(keySize >> 3);\n    const macKey = cek.subarray(0, keySize >> 3);\n    const macSize = parseInt(enc.slice(-3), 10);\n    const algorithm = `aes-${keySize}-cbc`;\n    if (!(0, ciphers_js_1.default)(algorithm)) {\n        throw new errors_js_1.JOSENotSupported(`alg ${enc} is not supported by your javascript runtime`);\n    }\n    const expectedTag = (0, cbc_tag_js_1.default)(aad, iv, ciphertext, macSize, macKey, keySize);\n    let macCheckPassed;\n    try {\n        macCheckPassed = (0, timing_safe_equal_js_1.default)(tag, expectedTag);\n    } catch  {}\n    if (!macCheckPassed) {\n        throw new errors_js_1.JWEDecryptionFailed();\n    }\n    let plaintext;\n    try {\n        const decipher = (0, crypto_1.createDecipheriv)(algorithm, encKey, iv);\n        plaintext = (0, buffer_utils_js_1.concat)(decipher.update(ciphertext), decipher.final());\n    } catch  {}\n    if (!plaintext) {\n        throw new errors_js_1.JWEDecryptionFailed();\n    }\n    return plaintext;\n}\nfunction gcmDecrypt(enc, cek, ciphertext, iv, tag, aad) {\n    const keySize = parseInt(enc.slice(1, 4), 10);\n    const algorithm = `aes-${keySize}-gcm`;\n    if (!(0, ciphers_js_1.default)(algorithm)) {\n        throw new errors_js_1.JOSENotSupported(`alg ${enc} is not supported by your javascript runtime`);\n    }\n    try {\n        const decipher = (0, crypto_1.createDecipheriv)(algorithm, cek, iv, {\n            authTagLength: 16\n        });\n        decipher.setAuthTag(tag);\n        if (aad.byteLength) {\n            decipher.setAAD(aad, {\n                plaintextLength: ciphertext.length\n            });\n        }\n        const plaintext = decipher.update(ciphertext);\n        decipher.final();\n        return plaintext;\n    } catch  {\n        throw new errors_js_1.JWEDecryptionFailed();\n    }\n}\nconst decrypt = (enc, cek, ciphertext, iv, tag, aad)=>{\n    let key;\n    if ((0, webcrypto_js_1.isCryptoKey)(cek)) {\n        (0, crypto_key_js_1.checkEncCryptoKey)(cek, enc, \"decrypt\");\n        key = crypto_1.KeyObject.from(cek);\n    } else if (cek instanceof Uint8Array || (0, is_key_object_js_1.default)(cek)) {\n        key = cek;\n    } else {\n        throw new TypeError((0, invalid_key_input_js_1.default)(cek, ...is_key_like_js_1.types, \"Uint8Array\"));\n    }\n    (0, check_cek_length_js_1.default)(enc, key);\n    (0, check_iv_length_js_1.default)(enc, iv);\n    switch(enc){\n        case \"A128CBC-HS256\":\n        case \"A192CBC-HS384\":\n        case \"A256CBC-HS512\":\n            return cbcDecrypt(enc, key, ciphertext, iv, tag, aad);\n        case \"A128GCM\":\n        case \"A192GCM\":\n        case \"A256GCM\":\n            return gcmDecrypt(enc, key, ciphertext, iv, tag, aad);\n        default:\n            throw new errors_js_1.JOSENotSupported(\"Unsupported JWE Content Encryption Algorithm\");\n    }\n};\nexports[\"default\"] = decrypt;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/jose/dist/node/cjs/runtime/decrypt.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/jose/dist/node/cjs/runtime/digest.js":
/*!***********************************************************!*\
  !*** ./node_modules/jose/dist/node/cjs/runtime/digest.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nconst crypto_1 = __webpack_require__(/*! crypto */ \"crypto\");\nconst digest = (algorithm, data)=>(0, crypto_1.createHash)(algorithm).update(data).digest();\nexports[\"default\"] = digest;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvam9zZS9kaXN0L25vZGUvY2pzL3J1bnRpbWUvZGlnZXN0LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2JBLDhDQUE2QztJQUFFRyxPQUFPO0FBQUssQ0FBQyxFQUFDO0FBQzdELE1BQU1DLFdBQVdDLG1CQUFPQSxDQUFDLHNCQUFRO0FBQ2pDLE1BQU1DLFNBQVMsQ0FBQ0MsV0FBV0MsT0FBUyxDQUFDLEdBQUdKLFNBQVNLLFVBQVMsRUFBR0YsV0FBV0csT0FBT0YsTUFBTUY7QUFDckZKLGtCQUFlUyxHQUFHTCIsInNvdXJjZXMiOlsid2VicGFjazovL2Z1bGxzdGFjay1yb2xlLWJhc2VkLW5leHRqcy0yLy4vbm9kZV9tb2R1bGVzL2pvc2UvZGlzdC9ub2RlL2Nqcy9ydW50aW1lL2RpZ2VzdC5qcz9iMDRiIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuY29uc3QgY3J5cHRvXzEgPSByZXF1aXJlKFwiY3J5cHRvXCIpO1xuY29uc3QgZGlnZXN0ID0gKGFsZ29yaXRobSwgZGF0YSkgPT4gKDAsIGNyeXB0b18xLmNyZWF0ZUhhc2gpKGFsZ29yaXRobSkudXBkYXRlKGRhdGEpLmRpZ2VzdCgpO1xuZXhwb3J0cy5kZWZhdWx0ID0gZGlnZXN0O1xuIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiY3J5cHRvXzEiLCJyZXF1aXJlIiwiZGlnZXN0IiwiYWxnb3JpdGhtIiwiZGF0YSIsImNyZWF0ZUhhc2giLCJ1cGRhdGUiLCJkZWZhdWx0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/jose/dist/node/cjs/runtime/digest.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/jose/dist/node/cjs/runtime/dsa_digest.js":
/*!***************************************************************!*\
  !*** ./node_modules/jose/dist/node/cjs/runtime/dsa_digest.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nconst errors_js_1 = __webpack_require__(/*! ../util/errors.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/util/errors.js\");\nfunction dsaDigest(alg) {\n    switch(alg){\n        case \"PS256\":\n        case \"RS256\":\n        case \"ES256\":\n        case \"ES256K\":\n            return \"sha256\";\n        case \"PS384\":\n        case \"RS384\":\n        case \"ES384\":\n            return \"sha384\";\n        case \"PS512\":\n        case \"RS512\":\n        case \"ES512\":\n            return \"sha512\";\n        case \"EdDSA\":\n            return undefined;\n        default:\n            throw new errors_js_1.JOSENotSupported(`alg ${alg} is not supported either by JOSE or your javascript runtime`);\n    }\n}\nexports[\"default\"] = dsaDigest;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvam9zZS9kaXN0L25vZGUvY2pzL3J1bnRpbWUvZHNhX2RpZ2VzdC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFBRUcsT0FBTztBQUFLLENBQUMsRUFBQztBQUM3RCxNQUFNQyxjQUFjQyxtQkFBT0EsQ0FBQyx1RkFBbUI7QUFDL0MsU0FBU0MsVUFBVUMsR0FBRztJQUNsQixPQUFRQTtRQUNKLEtBQUs7UUFDTCxLQUFLO1FBQ0wsS0FBSztRQUNMLEtBQUs7WUFDRCxPQUFPO1FBQ1gsS0FBSztRQUNMLEtBQUs7UUFDTCxLQUFLO1lBQ0QsT0FBTztRQUNYLEtBQUs7UUFDTCxLQUFLO1FBQ0wsS0FBSztZQUNELE9BQU87UUFDWCxLQUFLO1lBQ0QsT0FBT0M7UUFDWDtZQUNJLE1BQU0sSUFBSUosWUFBWUssaUJBQWlCLENBQUMsSUFBSSxFQUFFRixJQUFJLDJEQUEyRCxDQUFDO0lBQ3RIO0FBQ0o7QUFDQUwsa0JBQWVRLEdBQUdKIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZnVsbHN0YWNrLXJvbGUtYmFzZWQtbmV4dGpzLTIvLi9ub2RlX21vZHVsZXMvam9zZS9kaXN0L25vZGUvY2pzL3J1bnRpbWUvZHNhX2RpZ2VzdC5qcz84YTRjIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuY29uc3QgZXJyb3JzX2pzXzEgPSByZXF1aXJlKFwiLi4vdXRpbC9lcnJvcnMuanNcIik7XG5mdW5jdGlvbiBkc2FEaWdlc3QoYWxnKSB7XG4gICAgc3dpdGNoIChhbGcpIHtcbiAgICAgICAgY2FzZSAnUFMyNTYnOlxuICAgICAgICBjYXNlICdSUzI1Nic6XG4gICAgICAgIGNhc2UgJ0VTMjU2JzpcbiAgICAgICAgY2FzZSAnRVMyNTZLJzpcbiAgICAgICAgICAgIHJldHVybiAnc2hhMjU2JztcbiAgICAgICAgY2FzZSAnUFMzODQnOlxuICAgICAgICBjYXNlICdSUzM4NCc6XG4gICAgICAgIGNhc2UgJ0VTMzg0JzpcbiAgICAgICAgICAgIHJldHVybiAnc2hhMzg0JztcbiAgICAgICAgY2FzZSAnUFM1MTInOlxuICAgICAgICBjYXNlICdSUzUxMic6XG4gICAgICAgIGNhc2UgJ0VTNTEyJzpcbiAgICAgICAgICAgIHJldHVybiAnc2hhNTEyJztcbiAgICAgICAgY2FzZSAnRWREU0EnOlxuICAgICAgICAgICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgIHRocm93IG5ldyBlcnJvcnNfanNfMS5KT1NFTm90U3VwcG9ydGVkKGBhbGcgJHthbGd9IGlzIG5vdCBzdXBwb3J0ZWQgZWl0aGVyIGJ5IEpPU0Ugb3IgeW91ciBqYXZhc2NyaXB0IHJ1bnRpbWVgKTtcbiAgICB9XG59XG5leHBvcnRzLmRlZmF1bHQgPSBkc2FEaWdlc3Q7XG4iXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJlcnJvcnNfanNfMSIsInJlcXVpcmUiLCJkc2FEaWdlc3QiLCJhbGciLCJ1bmRlZmluZWQiLCJKT1NFTm90U3VwcG9ydGVkIiwiZGVmYXVsdCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/jose/dist/node/cjs/runtime/dsa_digest.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/jose/dist/node/cjs/runtime/ecdhes.js":
/*!***********************************************************!*\
  !*** ./node_modules/jose/dist/node/cjs/runtime/ecdhes.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.ecdhAllowed = exports.generateEpk = exports.deriveKey = void 0;\nconst crypto_1 = __webpack_require__(/*! crypto */ \"crypto\");\nconst util_1 = __webpack_require__(/*! util */ \"util\");\nconst get_named_curve_js_1 = __webpack_require__(/*! ./get_named_curve.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/runtime/get_named_curve.js\");\nconst buffer_utils_js_1 = __webpack_require__(/*! ../lib/buffer_utils.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/lib/buffer_utils.js\");\nconst errors_js_1 = __webpack_require__(/*! ../util/errors.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/util/errors.js\");\nconst webcrypto_js_1 = __webpack_require__(/*! ./webcrypto.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/runtime/webcrypto.js\");\nconst crypto_key_js_1 = __webpack_require__(/*! ../lib/crypto_key.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/lib/crypto_key.js\");\nconst is_key_object_js_1 = __webpack_require__(/*! ./is_key_object.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/runtime/is_key_object.js\");\nconst invalid_key_input_js_1 = __webpack_require__(/*! ../lib/invalid_key_input.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/lib/invalid_key_input.js\");\nconst is_key_like_js_1 = __webpack_require__(/*! ./is_key_like.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/runtime/is_key_like.js\");\nconst generateKeyPair = (0, util_1.promisify)(crypto_1.generateKeyPair);\nasync function deriveKey(publicKee, privateKee, algorithm, keyLength, apu = new Uint8Array(0), apv = new Uint8Array(0)) {\n    let publicKey;\n    if ((0, webcrypto_js_1.isCryptoKey)(publicKee)) {\n        (0, crypto_key_js_1.checkEncCryptoKey)(publicKee, \"ECDH\");\n        publicKey = crypto_1.KeyObject.from(publicKee);\n    } else if ((0, is_key_object_js_1.default)(publicKee)) {\n        publicKey = publicKee;\n    } else {\n        throw new TypeError((0, invalid_key_input_js_1.default)(publicKee, ...is_key_like_js_1.types));\n    }\n    let privateKey;\n    if ((0, webcrypto_js_1.isCryptoKey)(privateKee)) {\n        (0, crypto_key_js_1.checkEncCryptoKey)(privateKee, \"ECDH\", \"deriveBits\");\n        privateKey = crypto_1.KeyObject.from(privateKee);\n    } else if ((0, is_key_object_js_1.default)(privateKee)) {\n        privateKey = privateKee;\n    } else {\n        throw new TypeError((0, invalid_key_input_js_1.default)(privateKee, ...is_key_like_js_1.types));\n    }\n    const value = (0, buffer_utils_js_1.concat)((0, buffer_utils_js_1.lengthAndInput)(buffer_utils_js_1.encoder.encode(algorithm)), (0, buffer_utils_js_1.lengthAndInput)(apu), (0, buffer_utils_js_1.lengthAndInput)(apv), (0, buffer_utils_js_1.uint32be)(keyLength));\n    const sharedSecret = (0, crypto_1.diffieHellman)({\n        privateKey,\n        publicKey\n    });\n    return (0, buffer_utils_js_1.concatKdf)(sharedSecret, keyLength, value);\n}\nexports.deriveKey = deriveKey;\nasync function generateEpk(kee) {\n    let key;\n    if ((0, webcrypto_js_1.isCryptoKey)(kee)) {\n        key = crypto_1.KeyObject.from(kee);\n    } else if ((0, is_key_object_js_1.default)(kee)) {\n        key = kee;\n    } else {\n        throw new TypeError((0, invalid_key_input_js_1.default)(kee, ...is_key_like_js_1.types));\n    }\n    switch(key.asymmetricKeyType){\n        case \"x25519\":\n            return generateKeyPair(\"x25519\");\n        case \"x448\":\n            {\n                return generateKeyPair(\"x448\");\n            }\n        case \"ec\":\n            {\n                const namedCurve = (0, get_named_curve_js_1.default)(key);\n                return generateKeyPair(\"ec\", {\n                    namedCurve\n                });\n            }\n        default:\n            throw new errors_js_1.JOSENotSupported(\"Invalid or unsupported EPK\");\n    }\n}\nexports.generateEpk = generateEpk;\nconst ecdhAllowed = (key)=>[\n        \"P-256\",\n        \"P-384\",\n        \"P-521\",\n        \"X25519\",\n        \"X448\"\n    ].includes((0, get_named_curve_js_1.default)(key));\nexports.ecdhAllowed = ecdhAllowed;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/jose/dist/node/cjs/runtime/ecdhes.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/jose/dist/node/cjs/runtime/encrypt.js":
/*!************************************************************!*\
  !*** ./node_modules/jose/dist/node/cjs/runtime/encrypt.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nconst crypto_1 = __webpack_require__(/*! crypto */ \"crypto\");\nconst check_iv_length_js_1 = __webpack_require__(/*! ../lib/check_iv_length.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/lib/check_iv_length.js\");\nconst check_cek_length_js_1 = __webpack_require__(/*! ./check_cek_length.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/runtime/check_cek_length.js\");\nconst buffer_utils_js_1 = __webpack_require__(/*! ../lib/buffer_utils.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/lib/buffer_utils.js\");\nconst cbc_tag_js_1 = __webpack_require__(/*! ./cbc_tag.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/runtime/cbc_tag.js\");\nconst webcrypto_js_1 = __webpack_require__(/*! ./webcrypto.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/runtime/webcrypto.js\");\nconst crypto_key_js_1 = __webpack_require__(/*! ../lib/crypto_key.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/lib/crypto_key.js\");\nconst is_key_object_js_1 = __webpack_require__(/*! ./is_key_object.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/runtime/is_key_object.js\");\nconst invalid_key_input_js_1 = __webpack_require__(/*! ../lib/invalid_key_input.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/lib/invalid_key_input.js\");\nconst errors_js_1 = __webpack_require__(/*! ../util/errors.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/util/errors.js\");\nconst ciphers_js_1 = __webpack_require__(/*! ./ciphers.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/runtime/ciphers.js\");\nconst is_key_like_js_1 = __webpack_require__(/*! ./is_key_like.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/runtime/is_key_like.js\");\nfunction cbcEncrypt(enc, plaintext, cek, iv, aad) {\n    const keySize = parseInt(enc.slice(1, 4), 10);\n    if ((0, is_key_object_js_1.default)(cek)) {\n        cek = cek.export();\n    }\n    const encKey = cek.subarray(keySize >> 3);\n    const macKey = cek.subarray(0, keySize >> 3);\n    const algorithm = `aes-${keySize}-cbc`;\n    if (!(0, ciphers_js_1.default)(algorithm)) {\n        throw new errors_js_1.JOSENotSupported(`alg ${enc} is not supported by your javascript runtime`);\n    }\n    const cipher = (0, crypto_1.createCipheriv)(algorithm, encKey, iv);\n    const ciphertext = (0, buffer_utils_js_1.concat)(cipher.update(plaintext), cipher.final());\n    const macSize = parseInt(enc.slice(-3), 10);\n    const tag = (0, cbc_tag_js_1.default)(aad, iv, ciphertext, macSize, macKey, keySize);\n    return {\n        ciphertext,\n        tag\n    };\n}\nfunction gcmEncrypt(enc, plaintext, cek, iv, aad) {\n    const keySize = parseInt(enc.slice(1, 4), 10);\n    const algorithm = `aes-${keySize}-gcm`;\n    if (!(0, ciphers_js_1.default)(algorithm)) {\n        throw new errors_js_1.JOSENotSupported(`alg ${enc} is not supported by your javascript runtime`);\n    }\n    const cipher = (0, crypto_1.createCipheriv)(algorithm, cek, iv, {\n        authTagLength: 16\n    });\n    if (aad.byteLength) {\n        cipher.setAAD(aad, {\n            plaintextLength: plaintext.length\n        });\n    }\n    const ciphertext = cipher.update(plaintext);\n    cipher.final();\n    const tag = cipher.getAuthTag();\n    return {\n        ciphertext,\n        tag\n    };\n}\nconst encrypt = (enc, plaintext, cek, iv, aad)=>{\n    let key;\n    if ((0, webcrypto_js_1.isCryptoKey)(cek)) {\n        (0, crypto_key_js_1.checkEncCryptoKey)(cek, enc, \"encrypt\");\n        key = crypto_1.KeyObject.from(cek);\n    } else if (cek instanceof Uint8Array || (0, is_key_object_js_1.default)(cek)) {\n        key = cek;\n    } else {\n        throw new TypeError((0, invalid_key_input_js_1.default)(cek, ...is_key_like_js_1.types, \"Uint8Array\"));\n    }\n    (0, check_cek_length_js_1.default)(enc, key);\n    (0, check_iv_length_js_1.default)(enc, iv);\n    switch(enc){\n        case \"A128CBC-HS256\":\n        case \"A192CBC-HS384\":\n        case \"A256CBC-HS512\":\n            return cbcEncrypt(enc, plaintext, key, iv, aad);\n        case \"A128GCM\":\n        case \"A192GCM\":\n        case \"A256GCM\":\n            return gcmEncrypt(enc, plaintext, key, iv, aad);\n        default:\n            throw new errors_js_1.JOSENotSupported(\"Unsupported JWE Content Encryption Algorithm\");\n    }\n};\nexports[\"default\"] = encrypt;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/jose/dist/node/cjs/runtime/encrypt.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/jose/dist/node/cjs/runtime/fetch_jwks.js":
/*!***************************************************************!*\
  !*** ./node_modules/jose/dist/node/cjs/runtime/fetch_jwks.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nconst http = __webpack_require__(/*! http */ \"http\");\nconst https = __webpack_require__(/*! https */ \"https\");\nconst events_1 = __webpack_require__(/*! events */ \"events\");\nconst errors_js_1 = __webpack_require__(/*! ../util/errors.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/util/errors.js\");\nconst buffer_utils_js_1 = __webpack_require__(/*! ../lib/buffer_utils.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/lib/buffer_utils.js\");\nconst fetchJwks = async (url, timeout, options)=>{\n    let get;\n    switch(url.protocol){\n        case \"https:\":\n            get = https.get;\n            break;\n        case \"http:\":\n            get = http.get;\n            break;\n        default:\n            throw new TypeError(\"Unsupported URL protocol.\");\n    }\n    const { agent , headers  } = options;\n    const req = get(url.href, {\n        agent,\n        timeout,\n        headers\n    });\n    const [response] = await Promise.race([\n        (0, events_1.once)(req, \"response\"),\n        (0, events_1.once)(req, \"timeout\")\n    ]);\n    if (!response) {\n        req.destroy();\n        throw new errors_js_1.JWKSTimeout();\n    }\n    if (response.statusCode !== 200) {\n        throw new errors_js_1.JOSEError(\"Expected 200 OK from the JSON Web Key Set HTTP response\");\n    }\n    const parts = [];\n    for await (const part of response){\n        parts.push(part);\n    }\n    try {\n        return JSON.parse(buffer_utils_js_1.decoder.decode((0, buffer_utils_js_1.concat)(...parts)));\n    } catch  {\n        throw new errors_js_1.JOSEError(\"Failed to parse the JSON Web Key Set HTTP response as JSON\");\n    }\n};\nexports[\"default\"] = fetchJwks;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvam9zZS9kaXN0L25vZGUvY2pzL3J1bnRpbWUvZmV0Y2hfandrcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFBRUcsT0FBTztBQUFLLENBQUMsRUFBQztBQUM3RCxNQUFNQyxPQUFPQyxtQkFBT0EsQ0FBQyxrQkFBTTtBQUMzQixNQUFNQyxRQUFRRCxtQkFBT0EsQ0FBQyxvQkFBTztBQUM3QixNQUFNRSxXQUFXRixtQkFBT0EsQ0FBQyxzQkFBUTtBQUNqQyxNQUFNRyxjQUFjSCxtQkFBT0EsQ0FBQyx1RkFBbUI7QUFDL0MsTUFBTUksb0JBQW9CSixtQkFBT0EsQ0FBQyxpR0FBd0I7QUFDMUQsTUFBTUssWUFBWSxPQUFPQyxLQUFLQyxTQUFTQztJQUNuQyxJQUFJQztJQUNKLE9BQVFILElBQUlJO1FBQ1IsS0FBSztZQUNERCxNQUFNUixNQUFNUTtZQUNaO1FBQ0osS0FBSztZQUNEQSxNQUFNVixLQUFLVTtZQUNYO1FBQ0o7WUFDSSxNQUFNLElBQUlFLFVBQVU7SUFDNUI7SUFDQSxNQUFNLEVBQUVDLE1BQUssRUFBRUMsUUFBTyxFQUFFLEdBQUdMO0lBQzNCLE1BQU1NLE1BQU1MLElBQUlILElBQUlTLE1BQU07UUFDdEJIO1FBQ0FMO1FBQ0FNO0lBQ0o7SUFDQSxNQUFNLENBQUNHLFNBQVMsR0FBSSxNQUFNQyxRQUFRQyxLQUFLO1FBQUUsSUFBR2hCLFNBQVNpQixJQUFHLEVBQUdMLEtBQUs7UUFBYyxJQUFHWixTQUFTaUIsSUFBRyxFQUFHTCxLQUFLO0tBQVc7SUFDaEgsSUFBSSxDQUFDRSxVQUFVO1FBQ1hGLElBQUlNO1FBQ0osTUFBTSxJQUFJakIsWUFBWWtCO0lBQzFCO0lBQ0EsSUFBSUwsU0FBU00sZUFBZSxLQUFLO1FBQzdCLE1BQU0sSUFBSW5CLFlBQVlvQixVQUFVO0lBQ3BDO0lBQ0EsTUFBTUMsUUFBUSxFQUFFO0lBQ2hCLFdBQVcsTUFBTUMsUUFBUVQsU0FBVTtRQUMvQlEsTUFBTUUsS0FBS0Q7SUFDZjtJQUNBLElBQUk7UUFDQSxPQUFPRSxLQUFLQyxNQUFNeEIsa0JBQWtCeUIsUUFBUUMsT0FBTyxDQUFDLEdBQUcxQixrQkFBa0IyQixNQUFLLEtBQU1QO0lBQ3hGLEVBQ0EsT0FBTTtRQUNGLE1BQU0sSUFBSXJCLFlBQVlvQixVQUFVO0lBQ3BDO0FBQ0o7QUFDQTFCLGtCQUFlbUMsR0FBRzNCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZnVsbHN0YWNrLXJvbGUtYmFzZWQtbmV4dGpzLTIvLi9ub2RlX21vZHVsZXMvam9zZS9kaXN0L25vZGUvY2pzL3J1bnRpbWUvZmV0Y2hfandrcy5qcz81YmYwIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuY29uc3QgaHR0cCA9IHJlcXVpcmUoXCJodHRwXCIpO1xuY29uc3QgaHR0cHMgPSByZXF1aXJlKFwiaHR0cHNcIik7XG5jb25zdCBldmVudHNfMSA9IHJlcXVpcmUoXCJldmVudHNcIik7XG5jb25zdCBlcnJvcnNfanNfMSA9IHJlcXVpcmUoXCIuLi91dGlsL2Vycm9ycy5qc1wiKTtcbmNvbnN0IGJ1ZmZlcl91dGlsc19qc18xID0gcmVxdWlyZShcIi4uL2xpYi9idWZmZXJfdXRpbHMuanNcIik7XG5jb25zdCBmZXRjaEp3a3MgPSBhc3luYyAodXJsLCB0aW1lb3V0LCBvcHRpb25zKSA9PiB7XG4gICAgbGV0IGdldDtcbiAgICBzd2l0Y2ggKHVybC5wcm90b2NvbCkge1xuICAgICAgICBjYXNlICdodHRwczonOlxuICAgICAgICAgICAgZ2V0ID0gaHR0cHMuZ2V0O1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgIGNhc2UgJ2h0dHA6JzpcbiAgICAgICAgICAgIGdldCA9IGh0dHAuZ2V0O1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdVbnN1cHBvcnRlZCBVUkwgcHJvdG9jb2wuJyk7XG4gICAgfVxuICAgIGNvbnN0IHsgYWdlbnQsIGhlYWRlcnMgfSA9IG9wdGlvbnM7XG4gICAgY29uc3QgcmVxID0gZ2V0KHVybC5ocmVmLCB7XG4gICAgICAgIGFnZW50LFxuICAgICAgICB0aW1lb3V0LFxuICAgICAgICBoZWFkZXJzLFxuICAgIH0pO1xuICAgIGNvbnN0IFtyZXNwb25zZV0gPSAoYXdhaXQgUHJvbWlzZS5yYWNlKFsoMCwgZXZlbnRzXzEub25jZSkocmVxLCAncmVzcG9uc2UnKSwgKDAsIGV2ZW50c18xLm9uY2UpKHJlcSwgJ3RpbWVvdXQnKV0pKTtcbiAgICBpZiAoIXJlc3BvbnNlKSB7XG4gICAgICAgIHJlcS5kZXN0cm95KCk7XG4gICAgICAgIHRocm93IG5ldyBlcnJvcnNfanNfMS5KV0tTVGltZW91dCgpO1xuICAgIH1cbiAgICBpZiAocmVzcG9uc2Uuc3RhdHVzQ29kZSAhPT0gMjAwKSB7XG4gICAgICAgIHRocm93IG5ldyBlcnJvcnNfanNfMS5KT1NFRXJyb3IoJ0V4cGVjdGVkIDIwMCBPSyBmcm9tIHRoZSBKU09OIFdlYiBLZXkgU2V0IEhUVFAgcmVzcG9uc2UnKTtcbiAgICB9XG4gICAgY29uc3QgcGFydHMgPSBbXTtcbiAgICBmb3IgYXdhaXQgKGNvbnN0IHBhcnQgb2YgcmVzcG9uc2UpIHtcbiAgICAgICAgcGFydHMucHVzaChwYXJ0KTtcbiAgICB9XG4gICAgdHJ5IHtcbiAgICAgICAgcmV0dXJuIEpTT04ucGFyc2UoYnVmZmVyX3V0aWxzX2pzXzEuZGVjb2Rlci5kZWNvZGUoKDAsIGJ1ZmZlcl91dGlsc19qc18xLmNvbmNhdCkoLi4ucGFydHMpKSk7XG4gICAgfVxuICAgIGNhdGNoIHtcbiAgICAgICAgdGhyb3cgbmV3IGVycm9yc19qc18xLkpPU0VFcnJvcignRmFpbGVkIHRvIHBhcnNlIHRoZSBKU09OIFdlYiBLZXkgU2V0IEhUVFAgcmVzcG9uc2UgYXMgSlNPTicpO1xuICAgIH1cbn07XG5leHBvcnRzLmRlZmF1bHQgPSBmZXRjaEp3a3M7XG4iXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJodHRwIiwicmVxdWlyZSIsImh0dHBzIiwiZXZlbnRzXzEiLCJlcnJvcnNfanNfMSIsImJ1ZmZlcl91dGlsc19qc18xIiwiZmV0Y2hKd2tzIiwidXJsIiwidGltZW91dCIsIm9wdGlvbnMiLCJnZXQiLCJwcm90b2NvbCIsIlR5cGVFcnJvciIsImFnZW50IiwiaGVhZGVycyIsInJlcSIsImhyZWYiLCJyZXNwb25zZSIsIlByb21pc2UiLCJyYWNlIiwib25jZSIsImRlc3Ryb3kiLCJKV0tTVGltZW91dCIsInN0YXR1c0NvZGUiLCJKT1NFRXJyb3IiLCJwYXJ0cyIsInBhcnQiLCJwdXNoIiwiSlNPTiIsInBhcnNlIiwiZGVjb2RlciIsImRlY29kZSIsImNvbmNhdCIsImRlZmF1bHQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/jose/dist/node/cjs/runtime/fetch_jwks.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/jose/dist/node/cjs/runtime/flags.js":
/*!**********************************************************!*\
  !*** ./node_modules/jose/dist/node/cjs/runtime/flags.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.jwkImport = exports.jwkExport = exports.rsaPssParams = exports.oneShotCallback = void 0;\nconst [major, minor] = process.versions.node.split(\".\").map((str)=>parseInt(str, 10));\nexports.oneShotCallback = major >= 16 || major === 15 && minor >= 13;\nexports.rsaPssParams = !(\"electron\" in process.versions) && (major >= 17 || major === 16 && minor >= 9);\nexports.jwkExport = major >= 16 || major === 15 && minor >= 9;\nexports.jwkImport = major >= 16 || major === 15 && minor >= 12;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvam9zZS9kaXN0L25vZGUvY2pzL3J1bnRpbWUvZmxhZ3MuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYkEsOENBQTZDO0lBQUVHLE9BQU87QUFBSyxDQUFDLEVBQUM7QUFDN0RELGlCQUFpQkUsR0FBR0YsaUJBQWlCRyxHQUFHSCxvQkFBb0JJLEdBQUdKLHVCQUF1QkssR0FBRyxLQUFLO0FBQzlGLE1BQU0sQ0FBQ0MsT0FBT0MsTUFBTSxHQUFHQyxRQUFRQyxTQUFTQyxLQUFLQyxNQUFNLEtBQUtDLElBQUksQ0FBQ0MsTUFBUUMsU0FBU0QsS0FBSztBQUNuRmIsdUJBQXVCSyxHQUFHQyxTQUFTLE1BQU9BLFVBQVUsTUFBTUMsU0FBUztBQUNuRVAsb0JBQW9CSSxHQUFHLENBQUUsZUFBY0ksUUFBUUMsUUFBTyxLQUFPSCxDQUFBQSxTQUFTLE1BQU9BLFVBQVUsTUFBTUMsU0FBUyxDQUFDO0FBQ3ZHUCxpQkFBaUJHLEdBQUdHLFNBQVMsTUFBT0EsVUFBVSxNQUFNQyxTQUFTO0FBQzdEUCxpQkFBaUJFLEdBQUdJLFNBQVMsTUFBT0EsVUFBVSxNQUFNQyxTQUFTIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZnVsbHN0YWNrLXJvbGUtYmFzZWQtbmV4dGpzLTIvLi9ub2RlX21vZHVsZXMvam9zZS9kaXN0L25vZGUvY2pzL3J1bnRpbWUvZmxhZ3MuanM/NTA3YSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuandrSW1wb3J0ID0gZXhwb3J0cy5qd2tFeHBvcnQgPSBleHBvcnRzLnJzYVBzc1BhcmFtcyA9IGV4cG9ydHMub25lU2hvdENhbGxiYWNrID0gdm9pZCAwO1xuY29uc3QgW21ham9yLCBtaW5vcl0gPSBwcm9jZXNzLnZlcnNpb25zLm5vZGUuc3BsaXQoJy4nKS5tYXAoKHN0cikgPT4gcGFyc2VJbnQoc3RyLCAxMCkpO1xuZXhwb3J0cy5vbmVTaG90Q2FsbGJhY2sgPSBtYWpvciA+PSAxNiB8fCAobWFqb3IgPT09IDE1ICYmIG1pbm9yID49IDEzKTtcbmV4cG9ydHMucnNhUHNzUGFyYW1zID0gISgnZWxlY3Ryb24nIGluIHByb2Nlc3MudmVyc2lvbnMpICYmIChtYWpvciA+PSAxNyB8fCAobWFqb3IgPT09IDE2ICYmIG1pbm9yID49IDkpKTtcbmV4cG9ydHMuandrRXhwb3J0ID0gbWFqb3IgPj0gMTYgfHwgKG1ham9yID09PSAxNSAmJiBtaW5vciA+PSA5KTtcbmV4cG9ydHMuandrSW1wb3J0ID0gbWFqb3IgPj0gMTYgfHwgKG1ham9yID09PSAxNSAmJiBtaW5vciA+PSAxMik7XG4iXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJqd2tJbXBvcnQiLCJqd2tFeHBvcnQiLCJyc2FQc3NQYXJhbXMiLCJvbmVTaG90Q2FsbGJhY2siLCJtYWpvciIsIm1pbm9yIiwicHJvY2VzcyIsInZlcnNpb25zIiwibm9kZSIsInNwbGl0IiwibWFwIiwic3RyIiwicGFyc2VJbnQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/jose/dist/node/cjs/runtime/flags.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/jose/dist/node/cjs/runtime/generate.js":
/*!*************************************************************!*\
  !*** ./node_modules/jose/dist/node/cjs/runtime/generate.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.generateKeyPair = exports.generateSecret = void 0;\nconst crypto_1 = __webpack_require__(/*! crypto */ \"crypto\");\nconst util_1 = __webpack_require__(/*! util */ \"util\");\nconst random_js_1 = __webpack_require__(/*! ./random.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/runtime/random.js\");\nconst check_modulus_length_js_1 = __webpack_require__(/*! ./check_modulus_length.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/runtime/check_modulus_length.js\");\nconst errors_js_1 = __webpack_require__(/*! ../util/errors.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/util/errors.js\");\nconst generate = (0, util_1.promisify)(crypto_1.generateKeyPair);\nasync function generateSecret(alg, options) {\n    let length;\n    switch(alg){\n        case \"HS256\":\n        case \"HS384\":\n        case \"HS512\":\n        case \"A128CBC-HS256\":\n        case \"A192CBC-HS384\":\n        case \"A256CBC-HS512\":\n            length = parseInt(alg.slice(-3), 10);\n            break;\n        case \"A128KW\":\n        case \"A192KW\":\n        case \"A256KW\":\n        case \"A128GCMKW\":\n        case \"A192GCMKW\":\n        case \"A256GCMKW\":\n        case \"A128GCM\":\n        case \"A192GCM\":\n        case \"A256GCM\":\n            length = parseInt(alg.slice(1, 4), 10);\n            break;\n        default:\n            throw new errors_js_1.JOSENotSupported('Invalid or unsupported JWK \"alg\" (Algorithm) Parameter value');\n    }\n    return (0, crypto_1.createSecretKey)((0, random_js_1.default)(new Uint8Array(length >> 3)));\n}\nexports.generateSecret = generateSecret;\nasync function generateKeyPair(alg, options) {\n    var _a, _b;\n    switch(alg){\n        case \"RS256\":\n        case \"RS384\":\n        case \"RS512\":\n        case \"PS256\":\n        case \"PS384\":\n        case \"PS512\":\n        case \"RSA-OAEP\":\n        case \"RSA-OAEP-256\":\n        case \"RSA-OAEP-384\":\n        case \"RSA-OAEP-512\":\n        case \"RSA1_5\":\n            {\n                const modulusLength = (_a = options === null || options === void 0 ? void 0 : options.modulusLength) !== null && _a !== void 0 ? _a : 2048;\n                if (typeof modulusLength !== \"number\" || modulusLength < 2048) {\n                    throw new errors_js_1.JOSENotSupported(\"Invalid or unsupported modulusLength option provided, 2048 bits or larger keys must be used\");\n                }\n                const keypair = await generate(\"rsa\", {\n                    modulusLength,\n                    publicExponent: 0x10001\n                });\n                (0, check_modulus_length_js_1.setModulusLength)(keypair.privateKey, modulusLength);\n                (0, check_modulus_length_js_1.setModulusLength)(keypair.publicKey, modulusLength);\n                return keypair;\n            }\n        case \"ES256\":\n            return generate(\"ec\", {\n                namedCurve: \"P-256\"\n            });\n        case \"ES256K\":\n            return generate(\"ec\", {\n                namedCurve: \"secp256k1\"\n            });\n        case \"ES384\":\n            return generate(\"ec\", {\n                namedCurve: \"P-384\"\n            });\n        case \"ES512\":\n            return generate(\"ec\", {\n                namedCurve: \"P-521\"\n            });\n        case \"EdDSA\":\n            {\n                switch(options === null || options === void 0 ? void 0 : options.crv){\n                    case undefined:\n                    case \"Ed25519\":\n                        return generate(\"ed25519\");\n                    case \"Ed448\":\n                        return generate(\"ed448\");\n                    default:\n                        throw new errors_js_1.JOSENotSupported(\"Invalid or unsupported crv option provided, supported values are Ed25519 and Ed448\");\n                }\n            }\n        case \"ECDH-ES\":\n        case \"ECDH-ES+A128KW\":\n        case \"ECDH-ES+A192KW\":\n        case \"ECDH-ES+A256KW\":\n            const crv = (_b = options === null || options === void 0 ? void 0 : options.crv) !== null && _b !== void 0 ? _b : \"P-256\";\n            switch(crv){\n                case undefined:\n                case \"P-256\":\n                case \"P-384\":\n                case \"P-521\":\n                    return generate(\"ec\", {\n                        namedCurve: crv\n                    });\n                case \"X25519\":\n                    return generate(\"x25519\");\n                case \"X448\":\n                    return generate(\"x448\");\n                default:\n                    throw new errors_js_1.JOSENotSupported(\"Invalid or unsupported crv option provided, supported values are P-256, P-384, P-521, X25519, and X448\");\n            }\n        default:\n            throw new errors_js_1.JOSENotSupported('Invalid or unsupported JWK \"alg\" (Algorithm) Parameter value');\n    }\n}\nexports.generateKeyPair = generateKeyPair;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/jose/dist/node/cjs/runtime/generate.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/jose/dist/node/cjs/runtime/get_named_curve.js":
/*!********************************************************************!*\
  !*** ./node_modules/jose/dist/node/cjs/runtime/get_named_curve.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.setCurve = exports.weakMap = void 0;\nconst buffer_1 = __webpack_require__(/*! buffer */ \"buffer\");\nconst crypto_1 = __webpack_require__(/*! crypto */ \"crypto\");\nconst errors_js_1 = __webpack_require__(/*! ../util/errors.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/util/errors.js\");\nconst webcrypto_js_1 = __webpack_require__(/*! ./webcrypto.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/runtime/webcrypto.js\");\nconst is_key_object_js_1 = __webpack_require__(/*! ./is_key_object.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/runtime/is_key_object.js\");\nconst invalid_key_input_js_1 = __webpack_require__(/*! ../lib/invalid_key_input.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/lib/invalid_key_input.js\");\nconst is_key_like_js_1 = __webpack_require__(/*! ./is_key_like.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/runtime/is_key_like.js\");\nconst p256 = buffer_1.Buffer.from([\n    42,\n    134,\n    72,\n    206,\n    61,\n    3,\n    1,\n    7\n]);\nconst p384 = buffer_1.Buffer.from([\n    43,\n    129,\n    4,\n    0,\n    34\n]);\nconst p521 = buffer_1.Buffer.from([\n    43,\n    129,\n    4,\n    0,\n    35\n]);\nconst secp256k1 = buffer_1.Buffer.from([\n    43,\n    129,\n    4,\n    0,\n    10\n]);\nexports.weakMap = new WeakMap();\nconst namedCurveToJOSE = (namedCurve)=>{\n    switch(namedCurve){\n        case \"prime256v1\":\n            return \"P-256\";\n        case \"secp384r1\":\n            return \"P-384\";\n        case \"secp521r1\":\n            return \"P-521\";\n        case \"secp256k1\":\n            return \"secp256k1\";\n        default:\n            throw new errors_js_1.JOSENotSupported(\"Unsupported key curve for this operation\");\n    }\n};\nconst getNamedCurve = (kee, raw)=>{\n    var _a;\n    let key;\n    if ((0, webcrypto_js_1.isCryptoKey)(kee)) {\n        key = crypto_1.KeyObject.from(kee);\n    } else if ((0, is_key_object_js_1.default)(kee)) {\n        key = kee;\n    } else {\n        throw new TypeError((0, invalid_key_input_js_1.default)(kee, ...is_key_like_js_1.types));\n    }\n    if (key.type === \"secret\") {\n        throw new TypeError('only \"private\" or \"public\" type keys can be used for this operation');\n    }\n    switch(key.asymmetricKeyType){\n        case \"ed25519\":\n        case \"ed448\":\n            return `Ed${key.asymmetricKeyType.slice(2)}`;\n        case \"x25519\":\n        case \"x448\":\n            return `X${key.asymmetricKeyType.slice(1)}`;\n        case \"ec\":\n            {\n                if (exports.weakMap.has(key)) {\n                    return exports.weakMap.get(key);\n                }\n                let namedCurve = (_a = key.asymmetricKeyDetails) === null || _a === void 0 ? void 0 : _a.namedCurve;\n                if (!namedCurve && key.type === \"private\") {\n                    namedCurve = getNamedCurve((0, crypto_1.createPublicKey)(key), true);\n                } else if (!namedCurve) {\n                    const buf = key.export({\n                        format: \"der\",\n                        type: \"spki\"\n                    });\n                    const i = buf[1] < 128 ? 14 : 15;\n                    const len = buf[i];\n                    const curveOid = buf.slice(i + 1, i + 1 + len);\n                    if (curveOid.equals(p256)) {\n                        namedCurve = \"prime256v1\";\n                    } else if (curveOid.equals(p384)) {\n                        namedCurve = \"secp384r1\";\n                    } else if (curveOid.equals(p521)) {\n                        namedCurve = \"secp521r1\";\n                    } else if (curveOid.equals(secp256k1)) {\n                        namedCurve = \"secp256k1\";\n                    } else {\n                        throw new errors_js_1.JOSENotSupported(\"Unsupported key curve for this operation\");\n                    }\n                }\n                if (raw) return namedCurve;\n                const curve = namedCurveToJOSE(namedCurve);\n                exports.weakMap.set(key, curve);\n                return curve;\n            }\n        default:\n            throw new TypeError(\"Invalid asymmetric key type for this operation\");\n    }\n};\nfunction setCurve(keyObject, curve) {\n    exports.weakMap.set(keyObject, curve);\n}\nexports.setCurve = setCurve;\nexports[\"default\"] = getNamedCurve;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/jose/dist/node/cjs/runtime/get_named_curve.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/jose/dist/node/cjs/runtime/get_sign_verify_key.js":
/*!************************************************************************!*\
  !*** ./node_modules/jose/dist/node/cjs/runtime/get_sign_verify_key.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nconst crypto_1 = __webpack_require__(/*! crypto */ \"crypto\");\nconst webcrypto_js_1 = __webpack_require__(/*! ./webcrypto.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/runtime/webcrypto.js\");\nconst crypto_key_js_1 = __webpack_require__(/*! ../lib/crypto_key.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/lib/crypto_key.js\");\nconst invalid_key_input_js_1 = __webpack_require__(/*! ../lib/invalid_key_input.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/lib/invalid_key_input.js\");\nconst is_key_like_js_1 = __webpack_require__(/*! ./is_key_like.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/runtime/is_key_like.js\");\nfunction getSignVerifyKey(alg, key, usage) {\n    if (key instanceof Uint8Array) {\n        if (!alg.startsWith(\"HS\")) {\n            throw new TypeError((0, invalid_key_input_js_1.default)(key, ...is_key_like_js_1.types));\n        }\n        return (0, crypto_1.createSecretKey)(key);\n    }\n    if (key instanceof crypto_1.KeyObject) {\n        return key;\n    }\n    if ((0, webcrypto_js_1.isCryptoKey)(key)) {\n        (0, crypto_key_js_1.checkSigCryptoKey)(key, alg, usage);\n        return crypto_1.KeyObject.from(key);\n    }\n    throw new TypeError((0, invalid_key_input_js_1.default)(key, ...is_key_like_js_1.types, \"Uint8Array\"));\n}\nexports[\"default\"] = getSignVerifyKey;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvam9zZS9kaXN0L25vZGUvY2pzL3J1bnRpbWUvZ2V0X3NpZ25fdmVyaWZ5X2tleS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFBRUcsT0FBTztBQUFLLENBQUMsRUFBQztBQUM3RCxNQUFNQyxXQUFXQyxtQkFBT0EsQ0FBQyxzQkFBUTtBQUNqQyxNQUFNQyxpQkFBaUJELG1CQUFPQSxDQUFDLDBGQUFnQjtBQUMvQyxNQUFNRSxrQkFBa0JGLG1CQUFPQSxDQUFDLDZGQUFzQjtBQUN0RCxNQUFNRyx5QkFBeUJILG1CQUFPQSxDQUFDLDJHQUE2QjtBQUNwRSxNQUFNSSxtQkFBbUJKLG1CQUFPQSxDQUFDLDhGQUFrQjtBQUNuRCxTQUFTSyxpQkFBaUJDLEdBQUcsRUFBRUMsR0FBRyxFQUFFQyxLQUFLO0lBQ3JDLElBQUlELGVBQWVFLFlBQVk7UUFDM0IsSUFBSSxDQUFDSCxJQUFJSSxXQUFXLE9BQU87WUFDdkIsTUFBTSxJQUFJQyxVQUFVLENBQUMsR0FBR1IsdUJBQXVCUyxPQUFNLEVBQUdMLFFBQVFILGlCQUFpQlM7UUFDckY7UUFDQSxPQUFPLENBQUMsR0FBR2QsU0FBU2UsZUFBYyxFQUFHUDtJQUN6QztJQUNBLElBQUlBLGVBQWVSLFNBQVNnQixXQUFXO1FBQ25DLE9BQU9SO0lBQ1g7SUFDQSxJQUFJLENBQUMsR0FBR04sZUFBZWUsV0FBVSxFQUFHVCxNQUFNO1FBQ3JDLElBQUdMLGdCQUFnQmUsaUJBQWdCLEVBQUdWLEtBQUtELEtBQUtFO1FBQ2pELE9BQU9ULFNBQVNnQixVQUFVRyxLQUFLWDtJQUNuQztJQUNBLE1BQU0sSUFBSUksVUFBVSxDQUFDLEdBQUdSLHVCQUF1QlMsT0FBTSxFQUFHTCxRQUFRSCxpQkFBaUJTLE9BQU87QUFDNUY7QUFDQWhCLGtCQUFlZSxHQUFHUCIsInNvdXJjZXMiOlsid2VicGFjazovL2Z1bGxzdGFjay1yb2xlLWJhc2VkLW5leHRqcy0yLy4vbm9kZV9tb2R1bGVzL2pvc2UvZGlzdC9ub2RlL2Nqcy9ydW50aW1lL2dldF9zaWduX3ZlcmlmeV9rZXkuanM/ZjhiMCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmNvbnN0IGNyeXB0b18xID0gcmVxdWlyZShcImNyeXB0b1wiKTtcbmNvbnN0IHdlYmNyeXB0b19qc18xID0gcmVxdWlyZShcIi4vd2ViY3J5cHRvLmpzXCIpO1xuY29uc3QgY3J5cHRvX2tleV9qc18xID0gcmVxdWlyZShcIi4uL2xpYi9jcnlwdG9fa2V5LmpzXCIpO1xuY29uc3QgaW52YWxpZF9rZXlfaW5wdXRfanNfMSA9IHJlcXVpcmUoXCIuLi9saWIvaW52YWxpZF9rZXlfaW5wdXQuanNcIik7XG5jb25zdCBpc19rZXlfbGlrZV9qc18xID0gcmVxdWlyZShcIi4vaXNfa2V5X2xpa2UuanNcIik7XG5mdW5jdGlvbiBnZXRTaWduVmVyaWZ5S2V5KGFsZywga2V5LCB1c2FnZSkge1xuICAgIGlmIChrZXkgaW5zdGFuY2VvZiBVaW50OEFycmF5KSB7XG4gICAgICAgIGlmICghYWxnLnN0YXJ0c1dpdGgoJ0hTJykpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoKDAsIGludmFsaWRfa2V5X2lucHV0X2pzXzEuZGVmYXVsdCkoa2V5LCAuLi5pc19rZXlfbGlrZV9qc18xLnR5cGVzKSk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuICgwLCBjcnlwdG9fMS5jcmVhdGVTZWNyZXRLZXkpKGtleSk7XG4gICAgfVxuICAgIGlmIChrZXkgaW5zdGFuY2VvZiBjcnlwdG9fMS5LZXlPYmplY3QpIHtcbiAgICAgICAgcmV0dXJuIGtleTtcbiAgICB9XG4gICAgaWYgKCgwLCB3ZWJjcnlwdG9fanNfMS5pc0NyeXB0b0tleSkoa2V5KSkge1xuICAgICAgICAoMCwgY3J5cHRvX2tleV9qc18xLmNoZWNrU2lnQ3J5cHRvS2V5KShrZXksIGFsZywgdXNhZ2UpO1xuICAgICAgICByZXR1cm4gY3J5cHRvXzEuS2V5T2JqZWN0LmZyb20oa2V5KTtcbiAgICB9XG4gICAgdGhyb3cgbmV3IFR5cGVFcnJvcigoMCwgaW52YWxpZF9rZXlfaW5wdXRfanNfMS5kZWZhdWx0KShrZXksIC4uLmlzX2tleV9saWtlX2pzXzEudHlwZXMsICdVaW50OEFycmF5JykpO1xufVxuZXhwb3J0cy5kZWZhdWx0ID0gZ2V0U2lnblZlcmlmeUtleTtcbiJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsImNyeXB0b18xIiwicmVxdWlyZSIsIndlYmNyeXB0b19qc18xIiwiY3J5cHRvX2tleV9qc18xIiwiaW52YWxpZF9rZXlfaW5wdXRfanNfMSIsImlzX2tleV9saWtlX2pzXzEiLCJnZXRTaWduVmVyaWZ5S2V5IiwiYWxnIiwia2V5IiwidXNhZ2UiLCJVaW50OEFycmF5Iiwic3RhcnRzV2l0aCIsIlR5cGVFcnJvciIsImRlZmF1bHQiLCJ0eXBlcyIsImNyZWF0ZVNlY3JldEtleSIsIktleU9iamVjdCIsImlzQ3J5cHRvS2V5IiwiY2hlY2tTaWdDcnlwdG9LZXkiLCJmcm9tIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/jose/dist/node/cjs/runtime/get_sign_verify_key.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/jose/dist/node/cjs/runtime/hmac_digest.js":
/*!****************************************************************!*\
  !*** ./node_modules/jose/dist/node/cjs/runtime/hmac_digest.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nconst errors_js_1 = __webpack_require__(/*! ../util/errors.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/util/errors.js\");\nfunction hmacDigest(alg) {\n    switch(alg){\n        case \"HS256\":\n            return \"sha256\";\n        case \"HS384\":\n            return \"sha384\";\n        case \"HS512\":\n            return \"sha512\";\n        default:\n            throw new errors_js_1.JOSENotSupported(`alg ${alg} is not supported either by JOSE or your javascript runtime`);\n    }\n}\nexports[\"default\"] = hmacDigest;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvam9zZS9kaXN0L25vZGUvY2pzL3J1bnRpbWUvaG1hY19kaWdlc3QuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYkEsOENBQTZDO0lBQUVHLE9BQU87QUFBSyxDQUFDLEVBQUM7QUFDN0QsTUFBTUMsY0FBY0MsbUJBQU9BLENBQUMsdUZBQW1CO0FBQy9DLFNBQVNDLFdBQVdDLEdBQUc7SUFDbkIsT0FBUUE7UUFDSixLQUFLO1lBQ0QsT0FBTztRQUNYLEtBQUs7WUFDRCxPQUFPO1FBQ1gsS0FBSztZQUNELE9BQU87UUFDWDtZQUNJLE1BQU0sSUFBSUgsWUFBWUksaUJBQWlCLENBQUMsSUFBSSxFQUFFRCxJQUFJLDJEQUEyRCxDQUFDO0lBQ3RIO0FBQ0o7QUFDQUwsa0JBQWVPLEdBQUdIIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZnVsbHN0YWNrLXJvbGUtYmFzZWQtbmV4dGpzLTIvLi9ub2RlX21vZHVsZXMvam9zZS9kaXN0L25vZGUvY2pzL3J1bnRpbWUvaG1hY19kaWdlc3QuanM/MDFjMiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmNvbnN0IGVycm9yc19qc18xID0gcmVxdWlyZShcIi4uL3V0aWwvZXJyb3JzLmpzXCIpO1xuZnVuY3Rpb24gaG1hY0RpZ2VzdChhbGcpIHtcbiAgICBzd2l0Y2ggKGFsZykge1xuICAgICAgICBjYXNlICdIUzI1Nic6XG4gICAgICAgICAgICByZXR1cm4gJ3NoYTI1Nic7XG4gICAgICAgIGNhc2UgJ0hTMzg0JzpcbiAgICAgICAgICAgIHJldHVybiAnc2hhMzg0JztcbiAgICAgICAgY2FzZSAnSFM1MTInOlxuICAgICAgICAgICAgcmV0dXJuICdzaGE1MTInO1xuICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgdGhyb3cgbmV3IGVycm9yc19qc18xLkpPU0VOb3RTdXBwb3J0ZWQoYGFsZyAke2FsZ30gaXMgbm90IHN1cHBvcnRlZCBlaXRoZXIgYnkgSk9TRSBvciB5b3VyIGphdmFzY3JpcHQgcnVudGltZWApO1xuICAgIH1cbn1cbmV4cG9ydHMuZGVmYXVsdCA9IGhtYWNEaWdlc3Q7XG4iXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJlcnJvcnNfanNfMSIsInJlcXVpcmUiLCJobWFjRGlnZXN0IiwiYWxnIiwiSk9TRU5vdFN1cHBvcnRlZCIsImRlZmF1bHQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/jose/dist/node/cjs/runtime/hmac_digest.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/jose/dist/node/cjs/runtime/is_key_like.js":
/*!****************************************************************!*\
  !*** ./node_modules/jose/dist/node/cjs/runtime/is_key_like.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.types = void 0;\nconst webcrypto_js_1 = __webpack_require__(/*! ./webcrypto.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/runtime/webcrypto.js\");\nconst is_key_object_js_1 = __webpack_require__(/*! ./is_key_object.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/runtime/is_key_object.js\");\nexports[\"default\"] = (key)=>(0, is_key_object_js_1.default)(key) || (0, webcrypto_js_1.isCryptoKey)(key);\nconst types = [\n    \"KeyObject\"\n];\nexports.types = types;\nif (globalThis.CryptoKey || (webcrypto_js_1.default === null || webcrypto_js_1.default === void 0 ? void 0 : webcrypto_js_1.default.CryptoKey)) {\n    types.push(\"CryptoKey\");\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvam9zZS9kaXN0L25vZGUvY2pzL3J1bnRpbWUvaXNfa2V5X2xpa2UuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYkEsOENBQTZDO0lBQUVHLE9BQU87QUFBSyxDQUFDLEVBQUM7QUFDN0RELGFBQWFFLEdBQUcsS0FBSztBQUNyQixNQUFNQyxpQkFBaUJDLG1CQUFPQSxDQUFDLDBGQUFnQjtBQUMvQyxNQUFNQyxxQkFBcUJELG1CQUFPQSxDQUFDLGtHQUFvQjtBQUN2REosa0JBQWVNLEdBQUcsQ0FBQ0MsTUFBUSxDQUFDLEdBQUdGLG1CQUFtQkMsT0FBTSxFQUFHQyxRQUFRLENBQUMsR0FBR0osZUFBZUssV0FBVSxFQUFHRDtBQUNuRyxNQUFNTCxRQUFRO0lBQUM7Q0FBWTtBQUMzQkYsYUFBYUUsR0FBR0E7QUFDaEIsSUFBSU8sV0FBV0MsYUFBY1AsQ0FBQUEsZUFBZUcsWUFBWSxRQUFRSCxlQUFlRyxZQUFZLEtBQUssSUFBSSxLQUFLLElBQUlILGVBQWVHLFFBQVFJLFNBQVEsR0FBSTtJQUM1SVIsTUFBTVMsS0FBSztBQUNmIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZnVsbHN0YWNrLXJvbGUtYmFzZWQtbmV4dGpzLTIvLi9ub2RlX21vZHVsZXMvam9zZS9kaXN0L25vZGUvY2pzL3J1bnRpbWUvaXNfa2V5X2xpa2UuanM/MmQ2NyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMudHlwZXMgPSB2b2lkIDA7XG5jb25zdCB3ZWJjcnlwdG9fanNfMSA9IHJlcXVpcmUoXCIuL3dlYmNyeXB0by5qc1wiKTtcbmNvbnN0IGlzX2tleV9vYmplY3RfanNfMSA9IHJlcXVpcmUoXCIuL2lzX2tleV9vYmplY3QuanNcIik7XG5leHBvcnRzLmRlZmF1bHQgPSAoa2V5KSA9PiAoMCwgaXNfa2V5X29iamVjdF9qc18xLmRlZmF1bHQpKGtleSkgfHwgKDAsIHdlYmNyeXB0b19qc18xLmlzQ3J5cHRvS2V5KShrZXkpO1xuY29uc3QgdHlwZXMgPSBbJ0tleU9iamVjdCddO1xuZXhwb3J0cy50eXBlcyA9IHR5cGVzO1xuaWYgKGdsb2JhbFRoaXMuQ3J5cHRvS2V5IHx8ICh3ZWJjcnlwdG9fanNfMS5kZWZhdWx0ID09PSBudWxsIHx8IHdlYmNyeXB0b19qc18xLmRlZmF1bHQgPT09IHZvaWQgMCA/IHZvaWQgMCA6IHdlYmNyeXB0b19qc18xLmRlZmF1bHQuQ3J5cHRvS2V5KSkge1xuICAgIHR5cGVzLnB1c2goJ0NyeXB0b0tleScpO1xufVxuIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwidHlwZXMiLCJ3ZWJjcnlwdG9fanNfMSIsInJlcXVpcmUiLCJpc19rZXlfb2JqZWN0X2pzXzEiLCJkZWZhdWx0Iiwia2V5IiwiaXNDcnlwdG9LZXkiLCJnbG9iYWxUaGlzIiwiQ3J5cHRvS2V5IiwicHVzaCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/jose/dist/node/cjs/runtime/is_key_like.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/jose/dist/node/cjs/runtime/is_key_object.js":
/*!******************************************************************!*\
  !*** ./node_modules/jose/dist/node/cjs/runtime/is_key_object.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nconst crypto_1 = __webpack_require__(/*! crypto */ \"crypto\");\nconst util = __webpack_require__(/*! util */ \"util\");\nexports[\"default\"] = util.types.isKeyObject ? (obj)=>util.types.isKeyObject(obj) : (obj)=>obj != null && obj instanceof crypto_1.KeyObject;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvam9zZS9kaXN0L25vZGUvY2pzL3J1bnRpbWUvaXNfa2V5X29iamVjdC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFBRUcsT0FBTztBQUFLLENBQUMsRUFBQztBQUM3RCxNQUFNQyxXQUFXQyxtQkFBT0EsQ0FBQyxzQkFBUTtBQUNqQyxNQUFNQyxPQUFPRCxtQkFBT0EsQ0FBQyxrQkFBTTtBQUMzQkgsa0JBQWVLLEdBQUdELEtBQUtFLE1BQU1DLGNBQ3ZCLENBQUNDLE1BQVFKLEtBQUtFLE1BQU1DLFlBQVlDLE9BQ2hDLENBQUNBLE1BQVFBLE9BQU8sUUFBUUEsZUFBZU4sU0FBU08iLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mdWxsc3RhY2stcm9sZS1iYXNlZC1uZXh0anMtMi8uL25vZGVfbW9kdWxlcy9qb3NlL2Rpc3Qvbm9kZS9janMvcnVudGltZS9pc19rZXlfb2JqZWN0LmpzPzVjZGIiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5jb25zdCBjcnlwdG9fMSA9IHJlcXVpcmUoXCJjcnlwdG9cIik7XG5jb25zdCB1dGlsID0gcmVxdWlyZShcInV0aWxcIik7XG5leHBvcnRzLmRlZmF1bHQgPSB1dGlsLnR5cGVzLmlzS2V5T2JqZWN0XG4gICAgPyAob2JqKSA9PiB1dGlsLnR5cGVzLmlzS2V5T2JqZWN0KG9iailcbiAgICA6IChvYmopID0+IG9iaiAhPSBudWxsICYmIG9iaiBpbnN0YW5jZW9mIGNyeXB0b18xLktleU9iamVjdDtcbiJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsImNyeXB0b18xIiwicmVxdWlyZSIsInV0aWwiLCJkZWZhdWx0IiwidHlwZXMiLCJpc0tleU9iamVjdCIsIm9iaiIsIktleU9iamVjdCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/jose/dist/node/cjs/runtime/is_key_object.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/jose/dist/node/cjs/runtime/jwk_to_key.js":
/*!***************************************************************!*\
  !*** ./node_modules/jose/dist/node/cjs/runtime/jwk_to_key.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nconst buffer_1 = __webpack_require__(/*! buffer */ \"buffer\");\nconst crypto_1 = __webpack_require__(/*! crypto */ \"crypto\");\nconst base64url_js_1 = __webpack_require__(/*! ./base64url.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/runtime/base64url.js\");\nconst errors_js_1 = __webpack_require__(/*! ../util/errors.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/util/errors.js\");\nconst get_named_curve_js_1 = __webpack_require__(/*! ./get_named_curve.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/runtime/get_named_curve.js\");\nconst check_modulus_length_js_1 = __webpack_require__(/*! ./check_modulus_length.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/runtime/check_modulus_length.js\");\nconst asn1_sequence_encoder_js_1 = __webpack_require__(/*! ./asn1_sequence_encoder.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/runtime/asn1_sequence_encoder.js\");\nconst flags_js_1 = __webpack_require__(/*! ./flags.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/runtime/flags.js\");\nconst parse = (jwk)=>{\n    if (flags_js_1.jwkImport && jwk.kty !== \"oct\") {\n        return jwk.d ? (0, crypto_1.createPrivateKey)({\n            format: \"jwk\",\n            key: jwk\n        }) : (0, crypto_1.createPublicKey)({\n            format: \"jwk\",\n            key: jwk\n        });\n    }\n    switch(jwk.kty){\n        case \"oct\":\n            {\n                return (0, crypto_1.createSecretKey)((0, base64url_js_1.decode)(jwk.k));\n            }\n        case \"RSA\":\n            {\n                const enc = new asn1_sequence_encoder_js_1.default();\n                const isPrivate = jwk.d !== undefined;\n                const modulus = buffer_1.Buffer.from(jwk.n, \"base64\");\n                const exponent = buffer_1.Buffer.from(jwk.e, \"base64\");\n                if (isPrivate) {\n                    enc.zero();\n                    enc.unsignedInteger(modulus);\n                    enc.unsignedInteger(exponent);\n                    enc.unsignedInteger(buffer_1.Buffer.from(jwk.d, \"base64\"));\n                    enc.unsignedInteger(buffer_1.Buffer.from(jwk.p, \"base64\"));\n                    enc.unsignedInteger(buffer_1.Buffer.from(jwk.q, \"base64\"));\n                    enc.unsignedInteger(buffer_1.Buffer.from(jwk.dp, \"base64\"));\n                    enc.unsignedInteger(buffer_1.Buffer.from(jwk.dq, \"base64\"));\n                    enc.unsignedInteger(buffer_1.Buffer.from(jwk.qi, \"base64\"));\n                } else {\n                    enc.unsignedInteger(modulus);\n                    enc.unsignedInteger(exponent);\n                }\n                const der = enc.end();\n                const createInput = {\n                    key: der,\n                    format: \"der\",\n                    type: \"pkcs1\"\n                };\n                const keyObject = isPrivate ? (0, crypto_1.createPrivateKey)(createInput) : (0, crypto_1.createPublicKey)(createInput);\n                (0, check_modulus_length_js_1.setModulusLength)(keyObject, modulus.length << 3);\n                return keyObject;\n            }\n        case \"EC\":\n            {\n                const enc = new asn1_sequence_encoder_js_1.default();\n                const isPrivate = jwk.d !== undefined;\n                const pub = buffer_1.Buffer.concat([\n                    buffer_1.Buffer.alloc(1, 4),\n                    buffer_1.Buffer.from(jwk.x, \"base64\"),\n                    buffer_1.Buffer.from(jwk.y, \"base64\")\n                ]);\n                if (isPrivate) {\n                    enc.zero();\n                    const enc$1 = new asn1_sequence_encoder_js_1.default();\n                    enc$1.oidFor(\"ecPublicKey\");\n                    enc$1.oidFor(jwk.crv);\n                    enc.add(enc$1.end());\n                    const enc$2 = new asn1_sequence_encoder_js_1.default();\n                    enc$2.one();\n                    enc$2.octStr(buffer_1.Buffer.from(jwk.d, \"base64\"));\n                    const enc$3 = new asn1_sequence_encoder_js_1.default();\n                    enc$3.bitStr(pub);\n                    const f2 = enc$3.end(buffer_1.Buffer.from([\n                        0xa1\n                    ]));\n                    enc$2.add(f2);\n                    const f = enc$2.end();\n                    const enc$4 = new asn1_sequence_encoder_js_1.default();\n                    enc$4.add(f);\n                    const f3 = enc$4.end(buffer_1.Buffer.from([\n                        0x04\n                    ]));\n                    enc.add(f3);\n                    const der = enc.end();\n                    const keyObject = (0, crypto_1.createPrivateKey)({\n                        key: der,\n                        format: \"der\",\n                        type: \"pkcs8\"\n                    });\n                    (0, get_named_curve_js_1.setCurve)(keyObject, jwk.crv);\n                    return keyObject;\n                }\n                const enc$1 = new asn1_sequence_encoder_js_1.default();\n                enc$1.oidFor(\"ecPublicKey\");\n                enc$1.oidFor(jwk.crv);\n                enc.add(enc$1.end());\n                enc.bitStr(pub);\n                const der = enc.end();\n                const keyObject = (0, crypto_1.createPublicKey)({\n                    key: der,\n                    format: \"der\",\n                    type: \"spki\"\n                });\n                (0, get_named_curve_js_1.setCurve)(keyObject, jwk.crv);\n                return keyObject;\n            }\n        case \"OKP\":\n            {\n                const enc = new asn1_sequence_encoder_js_1.default();\n                const isPrivate = jwk.d !== undefined;\n                if (isPrivate) {\n                    enc.zero();\n                    const enc$1 = new asn1_sequence_encoder_js_1.default();\n                    enc$1.oidFor(jwk.crv);\n                    enc.add(enc$1.end());\n                    const enc$2 = new asn1_sequence_encoder_js_1.default();\n                    enc$2.octStr(buffer_1.Buffer.from(jwk.d, \"base64\"));\n                    const f = enc$2.end(buffer_1.Buffer.from([\n                        0x04\n                    ]));\n                    enc.add(f);\n                    const der = enc.end();\n                    return (0, crypto_1.createPrivateKey)({\n                        key: der,\n                        format: \"der\",\n                        type: \"pkcs8\"\n                    });\n                }\n                const enc$1 = new asn1_sequence_encoder_js_1.default();\n                enc$1.oidFor(jwk.crv);\n                enc.add(enc$1.end());\n                enc.bitStr(buffer_1.Buffer.from(jwk.x, \"base64\"));\n                const der = enc.end();\n                return (0, crypto_1.createPublicKey)({\n                    key: der,\n                    format: \"der\",\n                    type: \"spki\"\n                });\n            }\n        default:\n            throw new errors_js_1.JOSENotSupported('Invalid or unsupported JWK \"kty\" (Key Type) Parameter value');\n    }\n};\nexports[\"default\"] = parse;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/jose/dist/node/cjs/runtime/jwk_to_key.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/jose/dist/node/cjs/runtime/key_to_jwk.js":
/*!***************************************************************!*\
  !*** ./node_modules/jose/dist/node/cjs/runtime/key_to_jwk.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nconst crypto_1 = __webpack_require__(/*! crypto */ \"crypto\");\nconst base64url_js_1 = __webpack_require__(/*! ./base64url.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/runtime/base64url.js\");\nconst asn1_sequence_decoder_js_1 = __webpack_require__(/*! ./asn1_sequence_decoder.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/runtime/asn1_sequence_decoder.js\");\nconst errors_js_1 = __webpack_require__(/*! ../util/errors.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/util/errors.js\");\nconst get_named_curve_js_1 = __webpack_require__(/*! ./get_named_curve.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/runtime/get_named_curve.js\");\nconst webcrypto_js_1 = __webpack_require__(/*! ./webcrypto.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/runtime/webcrypto.js\");\nconst is_key_object_js_1 = __webpack_require__(/*! ./is_key_object.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/runtime/is_key_object.js\");\nconst invalid_key_input_js_1 = __webpack_require__(/*! ../lib/invalid_key_input.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/lib/invalid_key_input.js\");\nconst is_key_like_js_1 = __webpack_require__(/*! ./is_key_like.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/runtime/is_key_like.js\");\nconst flags_js_1 = __webpack_require__(/*! ./flags.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/runtime/flags.js\");\nconst keyToJWK = (key)=>{\n    let keyObject;\n    if ((0, webcrypto_js_1.isCryptoKey)(key)) {\n        if (!key.extractable) {\n            throw new TypeError(\"CryptoKey is not extractable\");\n        }\n        keyObject = crypto_1.KeyObject.from(key);\n    } else if ((0, is_key_object_js_1.default)(key)) {\n        keyObject = key;\n    } else if (key instanceof Uint8Array) {\n        return {\n            kty: \"oct\",\n            k: (0, base64url_js_1.encode)(key)\n        };\n    } else {\n        throw new TypeError((0, invalid_key_input_js_1.default)(key, ...is_key_like_js_1.types, \"Uint8Array\"));\n    }\n    if (flags_js_1.jwkExport) {\n        if (keyObject.type !== \"secret\" && ![\n            \"rsa\",\n            \"ec\",\n            \"ed25519\",\n            \"x25519\",\n            \"ed448\",\n            \"x448\"\n        ].includes(keyObject.asymmetricKeyType)) {\n            throw new errors_js_1.JOSENotSupported(\"Unsupported key asymmetricKeyType\");\n        }\n        return keyObject.export({\n            format: \"jwk\"\n        });\n    }\n    switch(keyObject.type){\n        case \"secret\":\n            return {\n                kty: \"oct\",\n                k: (0, base64url_js_1.encode)(keyObject.export())\n            };\n        case \"private\":\n        case \"public\":\n            {\n                switch(keyObject.asymmetricKeyType){\n                    case \"rsa\":\n                        {\n                            const der = keyObject.export({\n                                format: \"der\",\n                                type: \"pkcs1\"\n                            });\n                            const dec = new asn1_sequence_decoder_js_1.default(der);\n                            if (keyObject.type === \"private\") {\n                                dec.unsignedInteger();\n                            }\n                            const n = (0, base64url_js_1.encode)(dec.unsignedInteger());\n                            const e = (0, base64url_js_1.encode)(dec.unsignedInteger());\n                            let jwk;\n                            if (keyObject.type === \"private\") {\n                                jwk = {\n                                    d: (0, base64url_js_1.encode)(dec.unsignedInteger()),\n                                    p: (0, base64url_js_1.encode)(dec.unsignedInteger()),\n                                    q: (0, base64url_js_1.encode)(dec.unsignedInteger()),\n                                    dp: (0, base64url_js_1.encode)(dec.unsignedInteger()),\n                                    dq: (0, base64url_js_1.encode)(dec.unsignedInteger()),\n                                    qi: (0, base64url_js_1.encode)(dec.unsignedInteger())\n                                };\n                            }\n                            dec.end();\n                            return {\n                                kty: \"RSA\",\n                                n,\n                                e,\n                                ...jwk\n                            };\n                        }\n                    case \"ec\":\n                        {\n                            const crv = (0, get_named_curve_js_1.default)(keyObject);\n                            let len;\n                            let offset;\n                            let correction;\n                            switch(crv){\n                                case \"secp256k1\":\n                                    len = 64;\n                                    offset = 31 + 2;\n                                    correction = -1;\n                                    break;\n                                case \"P-256\":\n                                    len = 64;\n                                    offset = 34 + 2;\n                                    correction = -1;\n                                    break;\n                                case \"P-384\":\n                                    len = 96;\n                                    offset = 33 + 2;\n                                    correction = -3;\n                                    break;\n                                case \"P-521\":\n                                    len = 132;\n                                    offset = 33 + 2;\n                                    correction = -3;\n                                    break;\n                                default:\n                                    throw new errors_js_1.JOSENotSupported(\"Unsupported curve\");\n                            }\n                            if (keyObject.type === \"public\") {\n                                const der = keyObject.export({\n                                    type: \"spki\",\n                                    format: \"der\"\n                                });\n                                return {\n                                    kty: \"EC\",\n                                    crv,\n                                    x: (0, base64url_js_1.encode)(der.subarray(-len, -len / 2)),\n                                    y: (0, base64url_js_1.encode)(der.subarray(-len / 2))\n                                };\n                            }\n                            const der = keyObject.export({\n                                type: \"pkcs8\",\n                                format: \"der\"\n                            });\n                            if (der.length < 100) {\n                                offset += correction;\n                            }\n                            return {\n                                ...keyToJWK((0, crypto_1.createPublicKey)(keyObject)),\n                                d: (0, base64url_js_1.encode)(der.subarray(offset, offset + len / 2))\n                            };\n                        }\n                    case \"ed25519\":\n                    case \"x25519\":\n                        {\n                            const crv = (0, get_named_curve_js_1.default)(keyObject);\n                            if (keyObject.type === \"public\") {\n                                const der = keyObject.export({\n                                    type: \"spki\",\n                                    format: \"der\"\n                                });\n                                return {\n                                    kty: \"OKP\",\n                                    crv,\n                                    x: (0, base64url_js_1.encode)(der.subarray(-32))\n                                };\n                            }\n                            const der = keyObject.export({\n                                type: \"pkcs8\",\n                                format: \"der\"\n                            });\n                            return {\n                                ...keyToJWK((0, crypto_1.createPublicKey)(keyObject)),\n                                d: (0, base64url_js_1.encode)(der.subarray(-32))\n                            };\n                        }\n                    case \"ed448\":\n                    case \"x448\":\n                        {\n                            const crv = (0, get_named_curve_js_1.default)(keyObject);\n                            if (keyObject.type === \"public\") {\n                                const der = keyObject.export({\n                                    type: \"spki\",\n                                    format: \"der\"\n                                });\n                                return {\n                                    kty: \"OKP\",\n                                    crv,\n                                    x: (0, base64url_js_1.encode)(der.subarray(crv === \"Ed448\" ? -57 : -56))\n                                };\n                            }\n                            const der = keyObject.export({\n                                type: \"pkcs8\",\n                                format: \"der\"\n                            });\n                            return {\n                                ...keyToJWK((0, crypto_1.createPublicKey)(keyObject)),\n                                d: (0, base64url_js_1.encode)(der.subarray(crv === \"Ed448\" ? -57 : -56))\n                            };\n                        }\n                    default:\n                        throw new errors_js_1.JOSENotSupported(\"Unsupported key asymmetricKeyType\");\n                }\n            }\n        default:\n            throw new errors_js_1.JOSENotSupported(\"Unsupported key type\");\n    }\n};\nexports[\"default\"] = keyToJWK;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/jose/dist/node/cjs/runtime/key_to_jwk.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/jose/dist/node/cjs/runtime/node_key.js":
/*!*************************************************************!*\
  !*** ./node_modules/jose/dist/node/cjs/runtime/node_key.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nconst crypto_1 = __webpack_require__(/*! crypto */ \"crypto\");\nconst get_named_curve_js_1 = __webpack_require__(/*! ./get_named_curve.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/runtime/get_named_curve.js\");\nconst errors_js_1 = __webpack_require__(/*! ../util/errors.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/util/errors.js\");\nconst check_modulus_length_js_1 = __webpack_require__(/*! ./check_modulus_length.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/runtime/check_modulus_length.js\");\nconst flags_js_1 = __webpack_require__(/*! ./flags.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/runtime/flags.js\");\nconst PSS = {\n    padding: crypto_1.constants.RSA_PKCS1_PSS_PADDING,\n    saltLength: crypto_1.constants.RSA_PSS_SALTLEN_DIGEST\n};\nconst ecCurveAlgMap = new Map([\n    [\n        \"ES256\",\n        \"P-256\"\n    ],\n    [\n        \"ES256K\",\n        \"secp256k1\"\n    ],\n    [\n        \"ES384\",\n        \"P-384\"\n    ],\n    [\n        \"ES512\",\n        \"P-521\"\n    ]\n]);\nfunction keyForCrypto(alg, key) {\n    switch(alg){\n        case \"EdDSA\":\n            if (![\n                \"ed25519\",\n                \"ed448\"\n            ].includes(key.asymmetricKeyType)) {\n                throw new TypeError(\"Invalid key for this operation, its asymmetricKeyType must be ed25519 or ed448\");\n            }\n            return key;\n        case \"RS256\":\n        case \"RS384\":\n        case \"RS512\":\n            if (key.asymmetricKeyType !== \"rsa\") {\n                throw new TypeError(\"Invalid key for this operation, its asymmetricKeyType must be rsa\");\n            }\n            (0, check_modulus_length_js_1.default)(key, alg);\n            return key;\n        case flags_js_1.rsaPssParams && \"PS256\":\n        case flags_js_1.rsaPssParams && \"PS384\":\n        case flags_js_1.rsaPssParams && \"PS512\":\n            if (key.asymmetricKeyType === \"rsa-pss\") {\n                const { hashAlgorithm , mgf1HashAlgorithm , saltLength  } = key.asymmetricKeyDetails;\n                const length = parseInt(alg.slice(-3), 10);\n                if (hashAlgorithm !== undefined && (hashAlgorithm !== `sha${length}` || mgf1HashAlgorithm !== hashAlgorithm)) {\n                    throw new TypeError(`Invalid key for this operation, its RSA-PSS parameters do not meet the requirements of \"alg\" ${alg}`);\n                }\n                if (saltLength !== undefined && saltLength > length >> 3) {\n                    throw new TypeError(`Invalid key for this operation, its RSA-PSS parameter saltLength does not meet the requirements of \"alg\" ${alg}`);\n                }\n            } else if (key.asymmetricKeyType !== \"rsa\") {\n                throw new TypeError(\"Invalid key for this operation, its asymmetricKeyType must be rsa or rsa-pss\");\n            }\n            (0, check_modulus_length_js_1.default)(key, alg);\n            return {\n                key,\n                ...PSS\n            };\n        case !flags_js_1.rsaPssParams && \"PS256\":\n        case !flags_js_1.rsaPssParams && \"PS384\":\n        case !flags_js_1.rsaPssParams && \"PS512\":\n            if (key.asymmetricKeyType !== \"rsa\") {\n                throw new TypeError(\"Invalid key for this operation, its asymmetricKeyType must be rsa\");\n            }\n            (0, check_modulus_length_js_1.default)(key, alg);\n            return {\n                key,\n                ...PSS\n            };\n        case \"ES256\":\n        case \"ES256K\":\n        case \"ES384\":\n        case \"ES512\":\n            {\n                if (key.asymmetricKeyType !== \"ec\") {\n                    throw new TypeError(\"Invalid key for this operation, its asymmetricKeyType must be ec\");\n                }\n                const actual = (0, get_named_curve_js_1.default)(key);\n                const expected = ecCurveAlgMap.get(alg);\n                if (actual !== expected) {\n                    throw new TypeError(`Invalid key curve for the algorithm, its curve must be ${expected}, got ${actual}`);\n                }\n                return {\n                    dsaEncoding: \"ieee-p1363\",\n                    key\n                };\n            }\n        default:\n            throw new errors_js_1.JOSENotSupported(`alg ${alg} is not supported either by JOSE or your javascript runtime`);\n    }\n}\nexports[\"default\"] = keyForCrypto;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/jose/dist/node/cjs/runtime/node_key.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/jose/dist/node/cjs/runtime/pbes2kw.js":
/*!************************************************************!*\
  !*** ./node_modules/jose/dist/node/cjs/runtime/pbes2kw.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.decrypt = exports.encrypt = void 0;\nconst util_1 = __webpack_require__(/*! util */ \"util\");\nconst crypto_1 = __webpack_require__(/*! crypto */ \"crypto\");\nconst random_js_1 = __webpack_require__(/*! ./random.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/runtime/random.js\");\nconst buffer_utils_js_1 = __webpack_require__(/*! ../lib/buffer_utils.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/lib/buffer_utils.js\");\nconst base64url_js_1 = __webpack_require__(/*! ./base64url.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/runtime/base64url.js\");\nconst aeskw_js_1 = __webpack_require__(/*! ./aeskw.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/runtime/aeskw.js\");\nconst check_p2s_js_1 = __webpack_require__(/*! ../lib/check_p2s.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/lib/check_p2s.js\");\nconst webcrypto_js_1 = __webpack_require__(/*! ./webcrypto.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/runtime/webcrypto.js\");\nconst crypto_key_js_1 = __webpack_require__(/*! ../lib/crypto_key.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/lib/crypto_key.js\");\nconst is_key_object_js_1 = __webpack_require__(/*! ./is_key_object.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/runtime/is_key_object.js\");\nconst invalid_key_input_js_1 = __webpack_require__(/*! ../lib/invalid_key_input.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/lib/invalid_key_input.js\");\nconst is_key_like_js_1 = __webpack_require__(/*! ./is_key_like.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/runtime/is_key_like.js\");\nconst pbkdf2 = (0, util_1.promisify)(crypto_1.pbkdf2);\nfunction getPassword(key, alg) {\n    if ((0, is_key_object_js_1.default)(key)) {\n        return key.export();\n    }\n    if (key instanceof Uint8Array) {\n        return key;\n    }\n    if ((0, webcrypto_js_1.isCryptoKey)(key)) {\n        (0, crypto_key_js_1.checkEncCryptoKey)(key, alg, \"deriveBits\", \"deriveKey\");\n        return crypto_1.KeyObject.from(key).export();\n    }\n    throw new TypeError((0, invalid_key_input_js_1.default)(key, ...is_key_like_js_1.types, \"Uint8Array\"));\n}\nconst encrypt = async (alg, key, cek, p2c = 2048, p2s = (0, random_js_1.default)(new Uint8Array(16)))=>{\n    (0, check_p2s_js_1.default)(p2s);\n    const salt = (0, buffer_utils_js_1.p2s)(alg, p2s);\n    const keylen = parseInt(alg.slice(13, 16), 10) >> 3;\n    const password = getPassword(key, alg);\n    const derivedKey = await pbkdf2(password, salt, p2c, keylen, `sha${alg.slice(8, 11)}`);\n    const encryptedKey = await (0, aeskw_js_1.wrap)(alg.slice(-6), derivedKey, cek);\n    return {\n        encryptedKey,\n        p2c,\n        p2s: (0, base64url_js_1.encode)(p2s)\n    };\n};\nexports.encrypt = encrypt;\nconst decrypt = async (alg, key, encryptedKey, p2c, p2s)=>{\n    (0, check_p2s_js_1.default)(p2s);\n    const salt = (0, buffer_utils_js_1.p2s)(alg, p2s);\n    const keylen = parseInt(alg.slice(13, 16), 10) >> 3;\n    const password = getPassword(key, alg);\n    const derivedKey = await pbkdf2(password, salt, p2c, keylen, `sha${alg.slice(8, 11)}`);\n    return (0, aeskw_js_1.unwrap)(alg.slice(-6), derivedKey, encryptedKey);\n};\nexports.decrypt = decrypt;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvam9zZS9kaXN0L25vZGUvY2pzL3J1bnRpbWUvcGJlczJrdy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFBRUcsT0FBTztBQUFLLENBQUMsRUFBQztBQUM3REQsZUFBZUUsR0FBR0YsZUFBZUcsR0FBRyxLQUFLO0FBQ3pDLE1BQU1DLFNBQVNDLG1CQUFPQSxDQUFDLGtCQUFNO0FBQzdCLE1BQU1DLFdBQVdELG1CQUFPQSxDQUFDLHNCQUFRO0FBQ2pDLE1BQU1FLGNBQWNGLG1CQUFPQSxDQUFDLG9GQUFhO0FBQ3pDLE1BQU1HLG9CQUFvQkgsbUJBQU9BLENBQUMsaUdBQXdCO0FBQzFELE1BQU1JLGlCQUFpQkosbUJBQU9BLENBQUMsMEZBQWdCO0FBQy9DLE1BQU1LLGFBQWFMLG1CQUFPQSxDQUFDLGtGQUFZO0FBQ3ZDLE1BQU1NLGlCQUFpQk4sbUJBQU9BLENBQUMsMkZBQXFCO0FBQ3BELE1BQU1PLGlCQUFpQlAsbUJBQU9BLENBQUMsMEZBQWdCO0FBQy9DLE1BQU1RLGtCQUFrQlIsbUJBQU9BLENBQUMsNkZBQXNCO0FBQ3RELE1BQU1TLHFCQUFxQlQsbUJBQU9BLENBQUMsa0dBQW9CO0FBQ3ZELE1BQU1VLHlCQUF5QlYsbUJBQU9BLENBQUMsMkdBQTZCO0FBQ3BFLE1BQU1XLG1CQUFtQlgsbUJBQU9BLENBQUMsOEZBQWtCO0FBQ25ELE1BQU1ZLFNBQVMsQ0FBQyxHQUFHYixPQUFPYyxTQUFRLEVBQUdaLFNBQVNXO0FBQzlDLFNBQVNFLFlBQVlDLEdBQUcsRUFBRUMsR0FBRztJQUN6QixJQUFJLENBQUMsR0FBR1AsbUJBQW1CUSxPQUFNLEVBQUdGLE1BQU07UUFDdEMsT0FBT0EsSUFBSUc7SUFDZjtJQUNBLElBQUlILGVBQWVJLFlBQVk7UUFDM0IsT0FBT0o7SUFDWDtJQUNBLElBQUksQ0FBQyxHQUFHUixlQUFlYSxXQUFVLEVBQUdMLE1BQU07UUFDckMsSUFBR1AsZ0JBQWdCYSxpQkFBZ0IsRUFBR04sS0FBS0MsS0FBSyxjQUFjO1FBQy9ELE9BQU9mLFNBQVNxQixVQUFVQyxLQUFLUixLQUFLRztJQUN4QztJQUNBLE1BQU0sSUFBSU0sVUFBVSxDQUFDLEdBQUdkLHVCQUF1Qk8sT0FBTSxFQUFHRixRQUFRSixpQkFBaUJjLE9BQU87QUFDNUY7QUFDQSxNQUFNM0IsVUFBVSxPQUFPa0IsS0FBS0QsS0FBS1csS0FBS0MsTUFBTSxJQUFJLEVBQUVDLE1BQU0sQ0FBQyxHQUFHMUIsWUFBWWUsT0FBTSxFQUFHLElBQUlFLFdBQVcsSUFBSTtJQUMvRixJQUFHYixlQUFlVyxPQUFNLEVBQUdXO0lBQzVCLE1BQU1DLE9BQU8sQ0FBQyxHQUFHMUIsa0JBQWtCeUIsR0FBRSxFQUFHWixLQUFLWTtJQUM3QyxNQUFNRSxTQUFTQyxTQUFTZixJQUFJZ0IsTUFBTSxJQUFJLEtBQUssT0FBTztJQUNsRCxNQUFNQyxXQUFXbkIsWUFBWUMsS0FBS0M7SUFDbEMsTUFBTWtCLGFBQWEsTUFBTXRCLE9BQU9xQixVQUFVSixNQUFNRixLQUFLRyxRQUFRLENBQUMsR0FBRyxFQUFFZCxJQUFJZ0IsTUFBTSxHQUFHLElBQUksQ0FBQztJQUNyRixNQUFNRyxlQUFlLE1BQU0sQ0FBQyxHQUFHOUIsV0FBVytCLElBQUcsRUFBR3BCLElBQUlnQixNQUFNLENBQUMsSUFBSUUsWUFBWVI7SUFDM0UsT0FBTztRQUFFUztRQUFjUjtRQUFLQyxLQUFLLENBQUMsR0FBR3hCLGVBQWVpQyxNQUFLLEVBQUdUO0lBQUs7QUFDckU7QUFDQWpDLGVBQWVHLEdBQUdBO0FBQ2xCLE1BQU1ELFVBQVUsT0FBT21CLEtBQUtELEtBQUtvQixjQUFjUixLQUFLQztJQUMvQyxJQUFHdEIsZUFBZVcsT0FBTSxFQUFHVztJQUM1QixNQUFNQyxPQUFPLENBQUMsR0FBRzFCLGtCQUFrQnlCLEdBQUUsRUFBR1osS0FBS1k7SUFDN0MsTUFBTUUsU0FBU0MsU0FBU2YsSUFBSWdCLE1BQU0sSUFBSSxLQUFLLE9BQU87SUFDbEQsTUFBTUMsV0FBV25CLFlBQVlDLEtBQUtDO0lBQ2xDLE1BQU1rQixhQUFhLE1BQU10QixPQUFPcUIsVUFBVUosTUFBTUYsS0FBS0csUUFBUSxDQUFDLEdBQUcsRUFBRWQsSUFBSWdCLE1BQU0sR0FBRyxJQUFJLENBQUM7SUFDckYsT0FBTyxDQUFDLEdBQUczQixXQUFXaUMsTUFBSyxFQUFHdEIsSUFBSWdCLE1BQU0sQ0FBQyxJQUFJRSxZQUFZQztBQUM3RDtBQUNBeEMsZUFBZUUsR0FBR0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mdWxsc3RhY2stcm9sZS1iYXNlZC1uZXh0anMtMi8uL25vZGVfbW9kdWxlcy9qb3NlL2Rpc3Qvbm9kZS9janMvcnVudGltZS9wYmVzMmt3LmpzPzg2MWMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmRlY3J5cHQgPSBleHBvcnRzLmVuY3J5cHQgPSB2b2lkIDA7XG5jb25zdCB1dGlsXzEgPSByZXF1aXJlKFwidXRpbFwiKTtcbmNvbnN0IGNyeXB0b18xID0gcmVxdWlyZShcImNyeXB0b1wiKTtcbmNvbnN0IHJhbmRvbV9qc18xID0gcmVxdWlyZShcIi4vcmFuZG9tLmpzXCIpO1xuY29uc3QgYnVmZmVyX3V0aWxzX2pzXzEgPSByZXF1aXJlKFwiLi4vbGliL2J1ZmZlcl91dGlscy5qc1wiKTtcbmNvbnN0IGJhc2U2NHVybF9qc18xID0gcmVxdWlyZShcIi4vYmFzZTY0dXJsLmpzXCIpO1xuY29uc3QgYWVza3dfanNfMSA9IHJlcXVpcmUoXCIuL2Flc2t3LmpzXCIpO1xuY29uc3QgY2hlY2tfcDJzX2pzXzEgPSByZXF1aXJlKFwiLi4vbGliL2NoZWNrX3Aycy5qc1wiKTtcbmNvbnN0IHdlYmNyeXB0b19qc18xID0gcmVxdWlyZShcIi4vd2ViY3J5cHRvLmpzXCIpO1xuY29uc3QgY3J5cHRvX2tleV9qc18xID0gcmVxdWlyZShcIi4uL2xpYi9jcnlwdG9fa2V5LmpzXCIpO1xuY29uc3QgaXNfa2V5X29iamVjdF9qc18xID0gcmVxdWlyZShcIi4vaXNfa2V5X29iamVjdC5qc1wiKTtcbmNvbnN0IGludmFsaWRfa2V5X2lucHV0X2pzXzEgPSByZXF1aXJlKFwiLi4vbGliL2ludmFsaWRfa2V5X2lucHV0LmpzXCIpO1xuY29uc3QgaXNfa2V5X2xpa2VfanNfMSA9IHJlcXVpcmUoXCIuL2lzX2tleV9saWtlLmpzXCIpO1xuY29uc3QgcGJrZGYyID0gKDAsIHV0aWxfMS5wcm9taXNpZnkpKGNyeXB0b18xLnBia2RmMik7XG5mdW5jdGlvbiBnZXRQYXNzd29yZChrZXksIGFsZykge1xuICAgIGlmICgoMCwgaXNfa2V5X29iamVjdF9qc18xLmRlZmF1bHQpKGtleSkpIHtcbiAgICAgICAgcmV0dXJuIGtleS5leHBvcnQoKTtcbiAgICB9XG4gICAgaWYgKGtleSBpbnN0YW5jZW9mIFVpbnQ4QXJyYXkpIHtcbiAgICAgICAgcmV0dXJuIGtleTtcbiAgICB9XG4gICAgaWYgKCgwLCB3ZWJjcnlwdG9fanNfMS5pc0NyeXB0b0tleSkoa2V5KSkge1xuICAgICAgICAoMCwgY3J5cHRvX2tleV9qc18xLmNoZWNrRW5jQ3J5cHRvS2V5KShrZXksIGFsZywgJ2Rlcml2ZUJpdHMnLCAnZGVyaXZlS2V5Jyk7XG4gICAgICAgIHJldHVybiBjcnlwdG9fMS5LZXlPYmplY3QuZnJvbShrZXkpLmV4cG9ydCgpO1xuICAgIH1cbiAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCgwLCBpbnZhbGlkX2tleV9pbnB1dF9qc18xLmRlZmF1bHQpKGtleSwgLi4uaXNfa2V5X2xpa2VfanNfMS50eXBlcywgJ1VpbnQ4QXJyYXknKSk7XG59XG5jb25zdCBlbmNyeXB0ID0gYXN5bmMgKGFsZywga2V5LCBjZWssIHAyYyA9IDIwNDgsIHAycyA9ICgwLCByYW5kb21fanNfMS5kZWZhdWx0KShuZXcgVWludDhBcnJheSgxNikpKSA9PiB7XG4gICAgKDAsIGNoZWNrX3Ayc19qc18xLmRlZmF1bHQpKHAycyk7XG4gICAgY29uc3Qgc2FsdCA9ICgwLCBidWZmZXJfdXRpbHNfanNfMS5wMnMpKGFsZywgcDJzKTtcbiAgICBjb25zdCBrZXlsZW4gPSBwYXJzZUludChhbGcuc2xpY2UoMTMsIDE2KSwgMTApID4+IDM7XG4gICAgY29uc3QgcGFzc3dvcmQgPSBnZXRQYXNzd29yZChrZXksIGFsZyk7XG4gICAgY29uc3QgZGVyaXZlZEtleSA9IGF3YWl0IHBia2RmMihwYXNzd29yZCwgc2FsdCwgcDJjLCBrZXlsZW4sIGBzaGEke2FsZy5zbGljZSg4LCAxMSl9YCk7XG4gICAgY29uc3QgZW5jcnlwdGVkS2V5ID0gYXdhaXQgKDAsIGFlc2t3X2pzXzEud3JhcCkoYWxnLnNsaWNlKC02KSwgZGVyaXZlZEtleSwgY2VrKTtcbiAgICByZXR1cm4geyBlbmNyeXB0ZWRLZXksIHAyYywgcDJzOiAoMCwgYmFzZTY0dXJsX2pzXzEuZW5jb2RlKShwMnMpIH07XG59O1xuZXhwb3J0cy5lbmNyeXB0ID0gZW5jcnlwdDtcbmNvbnN0IGRlY3J5cHQgPSBhc3luYyAoYWxnLCBrZXksIGVuY3J5cHRlZEtleSwgcDJjLCBwMnMpID0+IHtcbiAgICAoMCwgY2hlY2tfcDJzX2pzXzEuZGVmYXVsdCkocDJzKTtcbiAgICBjb25zdCBzYWx0ID0gKDAsIGJ1ZmZlcl91dGlsc19qc18xLnAycykoYWxnLCBwMnMpO1xuICAgIGNvbnN0IGtleWxlbiA9IHBhcnNlSW50KGFsZy5zbGljZSgxMywgMTYpLCAxMCkgPj4gMztcbiAgICBjb25zdCBwYXNzd29yZCA9IGdldFBhc3N3b3JkKGtleSwgYWxnKTtcbiAgICBjb25zdCBkZXJpdmVkS2V5ID0gYXdhaXQgcGJrZGYyKHBhc3N3b3JkLCBzYWx0LCBwMmMsIGtleWxlbiwgYHNoYSR7YWxnLnNsaWNlKDgsIDExKX1gKTtcbiAgICByZXR1cm4gKDAsIGFlc2t3X2pzXzEudW53cmFwKShhbGcuc2xpY2UoLTYpLCBkZXJpdmVkS2V5LCBlbmNyeXB0ZWRLZXkpO1xufTtcbmV4cG9ydHMuZGVjcnlwdCA9IGRlY3J5cHQ7XG4iXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJkZWNyeXB0IiwiZW5jcnlwdCIsInV0aWxfMSIsInJlcXVpcmUiLCJjcnlwdG9fMSIsInJhbmRvbV9qc18xIiwiYnVmZmVyX3V0aWxzX2pzXzEiLCJiYXNlNjR1cmxfanNfMSIsImFlc2t3X2pzXzEiLCJjaGVja19wMnNfanNfMSIsIndlYmNyeXB0b19qc18xIiwiY3J5cHRvX2tleV9qc18xIiwiaXNfa2V5X29iamVjdF9qc18xIiwiaW52YWxpZF9rZXlfaW5wdXRfanNfMSIsImlzX2tleV9saWtlX2pzXzEiLCJwYmtkZjIiLCJwcm9taXNpZnkiLCJnZXRQYXNzd29yZCIsImtleSIsImFsZyIsImRlZmF1bHQiLCJleHBvcnQiLCJVaW50OEFycmF5IiwiaXNDcnlwdG9LZXkiLCJjaGVja0VuY0NyeXB0b0tleSIsIktleU9iamVjdCIsImZyb20iLCJUeXBlRXJyb3IiLCJ0eXBlcyIsImNlayIsInAyYyIsInAycyIsInNhbHQiLCJrZXlsZW4iLCJwYXJzZUludCIsInNsaWNlIiwicGFzc3dvcmQiLCJkZXJpdmVkS2V5IiwiZW5jcnlwdGVkS2V5Iiwid3JhcCIsImVuY29kZSIsInVud3JhcCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/jose/dist/node/cjs/runtime/pbes2kw.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/jose/dist/node/cjs/runtime/random.js":
/*!***********************************************************!*\
  !*** ./node_modules/jose/dist/node/cjs/runtime/random.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports[\"default\"] = void 0;\nvar crypto_1 = __webpack_require__(/*! crypto */ \"crypto\");\nObject.defineProperty(exports, \"default\", ({\n    enumerable: true,\n    get: function() {\n        return crypto_1.randomFillSync;\n    }\n}));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvam9zZS9kaXN0L25vZGUvY2pzL3J1bnRpbWUvcmFuZG9tLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2JBLDhDQUE2QztJQUFFRyxPQUFPO0FBQUssQ0FBQyxFQUFDO0FBQzdERCxrQkFBZUUsR0FBRyxLQUFLO0FBQ3ZCLElBQUlDLFdBQVdDLG1CQUFPQSxDQUFDLHNCQUFRO0FBQy9CTiwyQ0FBMEM7SUFBRU8sWUFBWTtJQUFNQyxLQUFLO1FBQWMsT0FBT0gsU0FBU0k7SUFBZ0I7QUFBRSxDQUFDLEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mdWxsc3RhY2stcm9sZS1iYXNlZC1uZXh0anMtMi8uL25vZGVfbW9kdWxlcy9qb3NlL2Rpc3Qvbm9kZS9janMvcnVudGltZS9yYW5kb20uanM/ZmE1MCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuZGVmYXVsdCA9IHZvaWQgMDtcbnZhciBjcnlwdG9fMSA9IHJlcXVpcmUoXCJjcnlwdG9cIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJkZWZhdWx0XCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBjcnlwdG9fMS5yYW5kb21GaWxsU3luYzsgfSB9KTtcbiJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsImRlZmF1bHQiLCJjcnlwdG9fMSIsInJlcXVpcmUiLCJlbnVtZXJhYmxlIiwiZ2V0IiwicmFuZG9tRmlsbFN5bmMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/jose/dist/node/cjs/runtime/random.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/jose/dist/node/cjs/runtime/rsaes.js":
/*!**********************************************************!*\
  !*** ./node_modules/jose/dist/node/cjs/runtime/rsaes.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.decrypt = exports.encrypt = void 0;\nconst crypto_1 = __webpack_require__(/*! crypto */ \"crypto\");\nconst check_modulus_length_js_1 = __webpack_require__(/*! ./check_modulus_length.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/runtime/check_modulus_length.js\");\nconst webcrypto_js_1 = __webpack_require__(/*! ./webcrypto.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/runtime/webcrypto.js\");\nconst crypto_key_js_1 = __webpack_require__(/*! ../lib/crypto_key.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/lib/crypto_key.js\");\nconst is_key_object_js_1 = __webpack_require__(/*! ./is_key_object.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/runtime/is_key_object.js\");\nconst invalid_key_input_js_1 = __webpack_require__(/*! ../lib/invalid_key_input.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/lib/invalid_key_input.js\");\nconst is_key_like_js_1 = __webpack_require__(/*! ./is_key_like.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/runtime/is_key_like.js\");\nconst checkKey = (key, alg)=>{\n    if (key.asymmetricKeyType !== \"rsa\") {\n        throw new TypeError(\"Invalid key for this operation, its asymmetricKeyType must be rsa\");\n    }\n    (0, check_modulus_length_js_1.default)(key, alg);\n};\nconst resolvePadding = (alg)=>{\n    switch(alg){\n        case \"RSA-OAEP\":\n        case \"RSA-OAEP-256\":\n        case \"RSA-OAEP-384\":\n        case \"RSA-OAEP-512\":\n            return crypto_1.constants.RSA_PKCS1_OAEP_PADDING;\n        case \"RSA1_5\":\n            return crypto_1.constants.RSA_PKCS1_PADDING;\n        default:\n            return undefined;\n    }\n};\nconst resolveOaepHash = (alg)=>{\n    switch(alg){\n        case \"RSA-OAEP\":\n            return \"sha1\";\n        case \"RSA-OAEP-256\":\n            return \"sha256\";\n        case \"RSA-OAEP-384\":\n            return \"sha384\";\n        case \"RSA-OAEP-512\":\n            return \"sha512\";\n        default:\n            return undefined;\n    }\n};\nfunction ensureKeyObject(key, alg, ...usages) {\n    if ((0, is_key_object_js_1.default)(key)) {\n        return key;\n    }\n    if ((0, webcrypto_js_1.isCryptoKey)(key)) {\n        (0, crypto_key_js_1.checkEncCryptoKey)(key, alg, ...usages);\n        return crypto_1.KeyObject.from(key);\n    }\n    throw new TypeError((0, invalid_key_input_js_1.default)(key, ...is_key_like_js_1.types));\n}\nconst encrypt = (alg, key, cek)=>{\n    const padding = resolvePadding(alg);\n    const oaepHash = resolveOaepHash(alg);\n    const keyObject = ensureKeyObject(key, alg, \"wrapKey\", \"encrypt\");\n    checkKey(keyObject, alg);\n    return (0, crypto_1.publicEncrypt)({\n        key: keyObject,\n        oaepHash,\n        padding\n    }, cek);\n};\nexports.encrypt = encrypt;\nconst decrypt = (alg, key, encryptedKey)=>{\n    const padding = resolvePadding(alg);\n    const oaepHash = resolveOaepHash(alg);\n    const keyObject = ensureKeyObject(key, alg, \"unwrapKey\", \"decrypt\");\n    checkKey(keyObject, alg);\n    return (0, crypto_1.privateDecrypt)({\n        key: keyObject,\n        oaepHash,\n        padding\n    }, encryptedKey);\n};\nexports.decrypt = decrypt;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvam9zZS9kaXN0L25vZGUvY2pzL3J1bnRpbWUvcnNhZXMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYkEsOENBQTZDO0lBQUVHLE9BQU87QUFBSyxDQUFDLEVBQUM7QUFDN0RELGVBQWVFLEdBQUdGLGVBQWVHLEdBQUcsS0FBSztBQUN6QyxNQUFNQyxXQUFXQyxtQkFBT0EsQ0FBQyxzQkFBUTtBQUNqQyxNQUFNQyw0QkFBNEJELG1CQUFPQSxDQUFDLGdIQUEyQjtBQUNyRSxNQUFNRSxpQkFBaUJGLG1CQUFPQSxDQUFDLDBGQUFnQjtBQUMvQyxNQUFNRyxrQkFBa0JILG1CQUFPQSxDQUFDLDZGQUFzQjtBQUN0RCxNQUFNSSxxQkFBcUJKLG1CQUFPQSxDQUFDLGtHQUFvQjtBQUN2RCxNQUFNSyx5QkFBeUJMLG1CQUFPQSxDQUFDLDJHQUE2QjtBQUNwRSxNQUFNTSxtQkFBbUJOLG1CQUFPQSxDQUFDLDhGQUFrQjtBQUNuRCxNQUFNTyxXQUFXLENBQUNDLEtBQUtDO0lBQ25CLElBQUlELElBQUlFLHNCQUFzQixPQUFPO1FBQ2pDLE1BQU0sSUFBSUMsVUFBVTtJQUN4QjtJQUNDLElBQUdWLDBCQUEwQlcsT0FBTSxFQUFHSixLQUFLQztBQUNoRDtBQUNBLE1BQU1JLGlCQUFpQixDQUFDSjtJQUNwQixPQUFRQTtRQUNKLEtBQUs7UUFDTCxLQUFLO1FBQ0wsS0FBSztRQUNMLEtBQUs7WUFDRCxPQUFPVixTQUFTZSxVQUFVQztRQUM5QixLQUFLO1lBQ0QsT0FBT2hCLFNBQVNlLFVBQVVFO1FBQzlCO1lBQ0ksT0FBT0M7SUFDZjtBQUNKO0FBQ0EsTUFBTUMsa0JBQWtCLENBQUNUO0lBQ3JCLE9BQVFBO1FBQ0osS0FBSztZQUNELE9BQU87UUFDWCxLQUFLO1lBQ0QsT0FBTztRQUNYLEtBQUs7WUFDRCxPQUFPO1FBQ1gsS0FBSztZQUNELE9BQU87UUFDWDtZQUNJLE9BQU9RO0lBQ2Y7QUFDSjtBQUNBLFNBQVNFLGdCQUFnQlgsR0FBRyxFQUFFQyxHQUFHLEVBQUUsR0FBR1csTUFBTTtJQUN4QyxJQUFJLENBQUMsR0FBR2hCLG1CQUFtQlEsT0FBTSxFQUFHSixNQUFNO1FBQ3RDLE9BQU9BO0lBQ1g7SUFDQSxJQUFJLENBQUMsR0FBR04sZUFBZW1CLFdBQVUsRUFBR2IsTUFBTTtRQUNyQyxJQUFHTCxnQkFBZ0JtQixpQkFBZ0IsRUFBR2QsS0FBS0MsUUFBUVc7UUFDcEQsT0FBT3JCLFNBQVN3QixVQUFVQyxLQUFLaEI7SUFDbkM7SUFDQSxNQUFNLElBQUlHLFVBQVUsQ0FBQyxHQUFHTix1QkFBdUJPLE9BQU0sRUFBR0osUUFBUUYsaUJBQWlCbUI7QUFDckY7QUFDQSxNQUFNM0IsVUFBVSxDQUFDVyxLQUFLRCxLQUFLa0I7SUFDdkIsTUFBTUMsVUFBVWQsZUFBZUo7SUFDL0IsTUFBTW1CLFdBQVdWLGdCQUFnQlQ7SUFDakMsTUFBTW9CLFlBQVlWLGdCQUFnQlgsS0FBS0MsS0FBSyxXQUFXO0lBQ3ZERixTQUFTc0IsV0FBV3BCO0lBQ3BCLE9BQU8sQ0FBQyxHQUFHVixTQUFTK0IsYUFBWSxFQUFHO1FBQUV0QixLQUFLcUI7UUFBV0Q7UUFBVUQ7SUFBUSxHQUFHRDtBQUM5RTtBQUNBL0IsZUFBZUcsR0FBR0E7QUFDbEIsTUFBTUQsVUFBVSxDQUFDWSxLQUFLRCxLQUFLdUI7SUFDdkIsTUFBTUosVUFBVWQsZUFBZUo7SUFDL0IsTUFBTW1CLFdBQVdWLGdCQUFnQlQ7SUFDakMsTUFBTW9CLFlBQVlWLGdCQUFnQlgsS0FBS0MsS0FBSyxhQUFhO0lBQ3pERixTQUFTc0IsV0FBV3BCO0lBQ3BCLE9BQU8sQ0FBQyxHQUFHVixTQUFTaUMsY0FBYSxFQUFHO1FBQUV4QixLQUFLcUI7UUFBV0Q7UUFBVUQ7SUFBUSxHQUFHSTtBQUMvRTtBQUNBcEMsZUFBZUUsR0FBR0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mdWxsc3RhY2stcm9sZS1iYXNlZC1uZXh0anMtMi8uL25vZGVfbW9kdWxlcy9qb3NlL2Rpc3Qvbm9kZS9janMvcnVudGltZS9yc2Flcy5qcz9iMDBlIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5kZWNyeXB0ID0gZXhwb3J0cy5lbmNyeXB0ID0gdm9pZCAwO1xuY29uc3QgY3J5cHRvXzEgPSByZXF1aXJlKFwiY3J5cHRvXCIpO1xuY29uc3QgY2hlY2tfbW9kdWx1c19sZW5ndGhfanNfMSA9IHJlcXVpcmUoXCIuL2NoZWNrX21vZHVsdXNfbGVuZ3RoLmpzXCIpO1xuY29uc3Qgd2ViY3J5cHRvX2pzXzEgPSByZXF1aXJlKFwiLi93ZWJjcnlwdG8uanNcIik7XG5jb25zdCBjcnlwdG9fa2V5X2pzXzEgPSByZXF1aXJlKFwiLi4vbGliL2NyeXB0b19rZXkuanNcIik7XG5jb25zdCBpc19rZXlfb2JqZWN0X2pzXzEgPSByZXF1aXJlKFwiLi9pc19rZXlfb2JqZWN0LmpzXCIpO1xuY29uc3QgaW52YWxpZF9rZXlfaW5wdXRfanNfMSA9IHJlcXVpcmUoXCIuLi9saWIvaW52YWxpZF9rZXlfaW5wdXQuanNcIik7XG5jb25zdCBpc19rZXlfbGlrZV9qc18xID0gcmVxdWlyZShcIi4vaXNfa2V5X2xpa2UuanNcIik7XG5jb25zdCBjaGVja0tleSA9IChrZXksIGFsZykgPT4ge1xuICAgIGlmIChrZXkuYXN5bW1ldHJpY0tleVR5cGUgIT09ICdyc2EnKSB7XG4gICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ0ludmFsaWQga2V5IGZvciB0aGlzIG9wZXJhdGlvbiwgaXRzIGFzeW1tZXRyaWNLZXlUeXBlIG11c3QgYmUgcnNhJyk7XG4gICAgfVxuICAgICgwLCBjaGVja19tb2R1bHVzX2xlbmd0aF9qc18xLmRlZmF1bHQpKGtleSwgYWxnKTtcbn07XG5jb25zdCByZXNvbHZlUGFkZGluZyA9IChhbGcpID0+IHtcbiAgICBzd2l0Y2ggKGFsZykge1xuICAgICAgICBjYXNlICdSU0EtT0FFUCc6XG4gICAgICAgIGNhc2UgJ1JTQS1PQUVQLTI1Nic6XG4gICAgICAgIGNhc2UgJ1JTQS1PQUVQLTM4NCc6XG4gICAgICAgIGNhc2UgJ1JTQS1PQUVQLTUxMic6XG4gICAgICAgICAgICByZXR1cm4gY3J5cHRvXzEuY29uc3RhbnRzLlJTQV9QS0NTMV9PQUVQX1BBRERJTkc7XG4gICAgICAgIGNhc2UgJ1JTQTFfNSc6XG4gICAgICAgICAgICByZXR1cm4gY3J5cHRvXzEuY29uc3RhbnRzLlJTQV9QS0NTMV9QQURESU5HO1xuICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgICB9XG59O1xuY29uc3QgcmVzb2x2ZU9hZXBIYXNoID0gKGFsZykgPT4ge1xuICAgIHN3aXRjaCAoYWxnKSB7XG4gICAgICAgIGNhc2UgJ1JTQS1PQUVQJzpcbiAgICAgICAgICAgIHJldHVybiAnc2hhMSc7XG4gICAgICAgIGNhc2UgJ1JTQS1PQUVQLTI1Nic6XG4gICAgICAgICAgICByZXR1cm4gJ3NoYTI1Nic7XG4gICAgICAgIGNhc2UgJ1JTQS1PQUVQLTM4NCc6XG4gICAgICAgICAgICByZXR1cm4gJ3NoYTM4NCc7XG4gICAgICAgIGNhc2UgJ1JTQS1PQUVQLTUxMic6XG4gICAgICAgICAgICByZXR1cm4gJ3NoYTUxMic7XG4gICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICByZXR1cm4gdW5kZWZpbmVkO1xuICAgIH1cbn07XG5mdW5jdGlvbiBlbnN1cmVLZXlPYmplY3Qoa2V5LCBhbGcsIC4uLnVzYWdlcykge1xuICAgIGlmICgoMCwgaXNfa2V5X29iamVjdF9qc18xLmRlZmF1bHQpKGtleSkpIHtcbiAgICAgICAgcmV0dXJuIGtleTtcbiAgICB9XG4gICAgaWYgKCgwLCB3ZWJjcnlwdG9fanNfMS5pc0NyeXB0b0tleSkoa2V5KSkge1xuICAgICAgICAoMCwgY3J5cHRvX2tleV9qc18xLmNoZWNrRW5jQ3J5cHRvS2V5KShrZXksIGFsZywgLi4udXNhZ2VzKTtcbiAgICAgICAgcmV0dXJuIGNyeXB0b18xLktleU9iamVjdC5mcm9tKGtleSk7XG4gICAgfVxuICAgIHRocm93IG5ldyBUeXBlRXJyb3IoKDAsIGludmFsaWRfa2V5X2lucHV0X2pzXzEuZGVmYXVsdCkoa2V5LCAuLi5pc19rZXlfbGlrZV9qc18xLnR5cGVzKSk7XG59XG5jb25zdCBlbmNyeXB0ID0gKGFsZywga2V5LCBjZWspID0+IHtcbiAgICBjb25zdCBwYWRkaW5nID0gcmVzb2x2ZVBhZGRpbmcoYWxnKTtcbiAgICBjb25zdCBvYWVwSGFzaCA9IHJlc29sdmVPYWVwSGFzaChhbGcpO1xuICAgIGNvbnN0IGtleU9iamVjdCA9IGVuc3VyZUtleU9iamVjdChrZXksIGFsZywgJ3dyYXBLZXknLCAnZW5jcnlwdCcpO1xuICAgIGNoZWNrS2V5KGtleU9iamVjdCwgYWxnKTtcbiAgICByZXR1cm4gKDAsIGNyeXB0b18xLnB1YmxpY0VuY3J5cHQpKHsga2V5OiBrZXlPYmplY3QsIG9hZXBIYXNoLCBwYWRkaW5nIH0sIGNlayk7XG59O1xuZXhwb3J0cy5lbmNyeXB0ID0gZW5jcnlwdDtcbmNvbnN0IGRlY3J5cHQgPSAoYWxnLCBrZXksIGVuY3J5cHRlZEtleSkgPT4ge1xuICAgIGNvbnN0IHBhZGRpbmcgPSByZXNvbHZlUGFkZGluZyhhbGcpO1xuICAgIGNvbnN0IG9hZXBIYXNoID0gcmVzb2x2ZU9hZXBIYXNoKGFsZyk7XG4gICAgY29uc3Qga2V5T2JqZWN0ID0gZW5zdXJlS2V5T2JqZWN0KGtleSwgYWxnLCAndW53cmFwS2V5JywgJ2RlY3J5cHQnKTtcbiAgICBjaGVja0tleShrZXlPYmplY3QsIGFsZyk7XG4gICAgcmV0dXJuICgwLCBjcnlwdG9fMS5wcml2YXRlRGVjcnlwdCkoeyBrZXk6IGtleU9iamVjdCwgb2FlcEhhc2gsIHBhZGRpbmcgfSwgZW5jcnlwdGVkS2V5KTtcbn07XG5leHBvcnRzLmRlY3J5cHQgPSBkZWNyeXB0O1xuIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiZGVjcnlwdCIsImVuY3J5cHQiLCJjcnlwdG9fMSIsInJlcXVpcmUiLCJjaGVja19tb2R1bHVzX2xlbmd0aF9qc18xIiwid2ViY3J5cHRvX2pzXzEiLCJjcnlwdG9fa2V5X2pzXzEiLCJpc19rZXlfb2JqZWN0X2pzXzEiLCJpbnZhbGlkX2tleV9pbnB1dF9qc18xIiwiaXNfa2V5X2xpa2VfanNfMSIsImNoZWNrS2V5Iiwia2V5IiwiYWxnIiwiYXN5bW1ldHJpY0tleVR5cGUiLCJUeXBlRXJyb3IiLCJkZWZhdWx0IiwicmVzb2x2ZVBhZGRpbmciLCJjb25zdGFudHMiLCJSU0FfUEtDUzFfT0FFUF9QQURESU5HIiwiUlNBX1BLQ1MxX1BBRERJTkciLCJ1bmRlZmluZWQiLCJyZXNvbHZlT2FlcEhhc2giLCJlbnN1cmVLZXlPYmplY3QiLCJ1c2FnZXMiLCJpc0NyeXB0b0tleSIsImNoZWNrRW5jQ3J5cHRvS2V5IiwiS2V5T2JqZWN0IiwiZnJvbSIsInR5cGVzIiwiY2VrIiwicGFkZGluZyIsIm9hZXBIYXNoIiwia2V5T2JqZWN0IiwicHVibGljRW5jcnlwdCIsImVuY3J5cHRlZEtleSIsInByaXZhdGVEZWNyeXB0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/jose/dist/node/cjs/runtime/rsaes.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/jose/dist/node/cjs/runtime/sign.js":
/*!*********************************************************!*\
  !*** ./node_modules/jose/dist/node/cjs/runtime/sign.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nconst crypto = __webpack_require__(/*! crypto */ \"crypto\");\nconst util_1 = __webpack_require__(/*! util */ \"util\");\nconst dsa_digest_js_1 = __webpack_require__(/*! ./dsa_digest.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/runtime/dsa_digest.js\");\nconst hmac_digest_js_1 = __webpack_require__(/*! ./hmac_digest.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/runtime/hmac_digest.js\");\nconst node_key_js_1 = __webpack_require__(/*! ./node_key.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/runtime/node_key.js\");\nconst get_sign_verify_key_js_1 = __webpack_require__(/*! ./get_sign_verify_key.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/runtime/get_sign_verify_key.js\");\nlet oneShotSign;\nif (crypto.sign.length > 3) {\n    oneShotSign = (0, util_1.promisify)(crypto.sign);\n} else {\n    oneShotSign = crypto.sign;\n}\nconst sign = async (alg, key, data)=>{\n    const keyObject = (0, get_sign_verify_key_js_1.default)(alg, key, \"sign\");\n    if (alg.startsWith(\"HS\")) {\n        const hmac = crypto.createHmac((0, hmac_digest_js_1.default)(alg), keyObject);\n        hmac.update(data);\n        return hmac.digest();\n    }\n    return oneShotSign((0, dsa_digest_js_1.default)(alg), data, (0, node_key_js_1.default)(alg, keyObject));\n};\nexports[\"default\"] = sign;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvam9zZS9kaXN0L25vZGUvY2pzL3J1bnRpbWUvc2lnbi5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFBRUcsT0FBTztBQUFLLENBQUMsRUFBQztBQUM3RCxNQUFNQyxTQUFTQyxtQkFBT0EsQ0FBQyxzQkFBUTtBQUMvQixNQUFNQyxTQUFTRCxtQkFBT0EsQ0FBQyxrQkFBTTtBQUM3QixNQUFNRSxrQkFBa0JGLG1CQUFPQSxDQUFDLDRGQUFpQjtBQUNqRCxNQUFNRyxtQkFBbUJILG1CQUFPQSxDQUFDLDhGQUFrQjtBQUNuRCxNQUFNSSxnQkFBZ0JKLG1CQUFPQSxDQUFDLHdGQUFlO0FBQzdDLE1BQU1LLDJCQUEyQkwsbUJBQU9BLENBQUMsOEdBQTBCO0FBQ25FLElBQUlNO0FBQ0osSUFBSVAsT0FBT1EsS0FBS0MsU0FBUyxHQUFHO0lBQ3hCRixjQUFjLENBQUMsR0FBR0wsT0FBT1EsU0FBUSxFQUFHVixPQUFPUTtBQUMvQyxPQUNLO0lBQ0RELGNBQWNQLE9BQU9RO0FBQ3pCO0FBQ0EsTUFBTUEsT0FBTyxPQUFPRyxLQUFLQyxLQUFLQztJQUMxQixNQUFNQyxZQUFZLENBQUMsR0FBR1IseUJBQXlCUyxPQUFNLEVBQUdKLEtBQUtDLEtBQUs7SUFDbEUsSUFBSUQsSUFBSUssV0FBVyxPQUFPO1FBQ3RCLE1BQU1DLE9BQU9qQixPQUFPa0IsV0FBVyxDQUFDLEdBQUdkLGlCQUFpQlcsT0FBTSxFQUFHSixNQUFNRztRQUNuRUcsS0FBS0UsT0FBT047UUFDWixPQUFPSSxLQUFLRztJQUNoQjtJQUNBLE9BQU9iLFlBQVksQ0FBQyxHQUFHSixnQkFBZ0JZLE9BQU0sRUFBR0osTUFBTUUsTUFBTSxDQUFDLEdBQUdSLGNBQWNVLE9BQU0sRUFBR0osS0FBS0c7QUFDaEc7QUFDQWhCLGtCQUFlaUIsR0FBR1AiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mdWxsc3RhY2stcm9sZS1iYXNlZC1uZXh0anMtMi8uL25vZGVfbW9kdWxlcy9qb3NlL2Rpc3Qvbm9kZS9janMvcnVudGltZS9zaWduLmpzP2JlOWEiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5jb25zdCBjcnlwdG8gPSByZXF1aXJlKFwiY3J5cHRvXCIpO1xuY29uc3QgdXRpbF8xID0gcmVxdWlyZShcInV0aWxcIik7XG5jb25zdCBkc2FfZGlnZXN0X2pzXzEgPSByZXF1aXJlKFwiLi9kc2FfZGlnZXN0LmpzXCIpO1xuY29uc3QgaG1hY19kaWdlc3RfanNfMSA9IHJlcXVpcmUoXCIuL2htYWNfZGlnZXN0LmpzXCIpO1xuY29uc3Qgbm9kZV9rZXlfanNfMSA9IHJlcXVpcmUoXCIuL25vZGVfa2V5LmpzXCIpO1xuY29uc3QgZ2V0X3NpZ25fdmVyaWZ5X2tleV9qc18xID0gcmVxdWlyZShcIi4vZ2V0X3NpZ25fdmVyaWZ5X2tleS5qc1wiKTtcbmxldCBvbmVTaG90U2lnbjtcbmlmIChjcnlwdG8uc2lnbi5sZW5ndGggPiAzKSB7XG4gICAgb25lU2hvdFNpZ24gPSAoMCwgdXRpbF8xLnByb21pc2lmeSkoY3J5cHRvLnNpZ24pO1xufVxuZWxzZSB7XG4gICAgb25lU2hvdFNpZ24gPSBjcnlwdG8uc2lnbjtcbn1cbmNvbnN0IHNpZ24gPSBhc3luYyAoYWxnLCBrZXksIGRhdGEpID0+IHtcbiAgICBjb25zdCBrZXlPYmplY3QgPSAoMCwgZ2V0X3NpZ25fdmVyaWZ5X2tleV9qc18xLmRlZmF1bHQpKGFsZywga2V5LCAnc2lnbicpO1xuICAgIGlmIChhbGcuc3RhcnRzV2l0aCgnSFMnKSkge1xuICAgICAgICBjb25zdCBobWFjID0gY3J5cHRvLmNyZWF0ZUhtYWMoKDAsIGhtYWNfZGlnZXN0X2pzXzEuZGVmYXVsdCkoYWxnKSwga2V5T2JqZWN0KTtcbiAgICAgICAgaG1hYy51cGRhdGUoZGF0YSk7XG4gICAgICAgIHJldHVybiBobWFjLmRpZ2VzdCgpO1xuICAgIH1cbiAgICByZXR1cm4gb25lU2hvdFNpZ24oKDAsIGRzYV9kaWdlc3RfanNfMS5kZWZhdWx0KShhbGcpLCBkYXRhLCAoMCwgbm9kZV9rZXlfanNfMS5kZWZhdWx0KShhbGcsIGtleU9iamVjdCkpO1xufTtcbmV4cG9ydHMuZGVmYXVsdCA9IHNpZ247XG4iXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJjcnlwdG8iLCJyZXF1aXJlIiwidXRpbF8xIiwiZHNhX2RpZ2VzdF9qc18xIiwiaG1hY19kaWdlc3RfanNfMSIsIm5vZGVfa2V5X2pzXzEiLCJnZXRfc2lnbl92ZXJpZnlfa2V5X2pzXzEiLCJvbmVTaG90U2lnbiIsInNpZ24iLCJsZW5ndGgiLCJwcm9taXNpZnkiLCJhbGciLCJrZXkiLCJkYXRhIiwia2V5T2JqZWN0IiwiZGVmYXVsdCIsInN0YXJ0c1dpdGgiLCJobWFjIiwiY3JlYXRlSG1hYyIsInVwZGF0ZSIsImRpZ2VzdCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/jose/dist/node/cjs/runtime/sign.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/jose/dist/node/cjs/runtime/timing_safe_equal.js":
/*!**********************************************************************!*\
  !*** ./node_modules/jose/dist/node/cjs/runtime/timing_safe_equal.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nconst crypto_1 = __webpack_require__(/*! crypto */ \"crypto\");\nconst timingSafeEqual = crypto_1.timingSafeEqual;\nexports[\"default\"] = timingSafeEqual;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvam9zZS9kaXN0L25vZGUvY2pzL3J1bnRpbWUvdGltaW5nX3NhZmVfZXF1YWwuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYkEsOENBQTZDO0lBQUVHLE9BQU87QUFBSyxDQUFDLEVBQUM7QUFDN0QsTUFBTUMsV0FBV0MsbUJBQU9BLENBQUMsc0JBQVE7QUFDakMsTUFBTUMsa0JBQWtCRixTQUFTRTtBQUNqQ0osa0JBQWVLLEdBQUdEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZnVsbHN0YWNrLXJvbGUtYmFzZWQtbmV4dGpzLTIvLi9ub2RlX21vZHVsZXMvam9zZS9kaXN0L25vZGUvY2pzL3J1bnRpbWUvdGltaW5nX3NhZmVfZXF1YWwuanM/ZDAzNiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmNvbnN0IGNyeXB0b18xID0gcmVxdWlyZShcImNyeXB0b1wiKTtcbmNvbnN0IHRpbWluZ1NhZmVFcXVhbCA9IGNyeXB0b18xLnRpbWluZ1NhZmVFcXVhbDtcbmV4cG9ydHMuZGVmYXVsdCA9IHRpbWluZ1NhZmVFcXVhbDtcbiJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsImNyeXB0b18xIiwicmVxdWlyZSIsInRpbWluZ1NhZmVFcXVhbCIsImRlZmF1bHQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/jose/dist/node/cjs/runtime/timing_safe_equal.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/jose/dist/node/cjs/runtime/verify.js":
/*!***********************************************************!*\
  !*** ./node_modules/jose/dist/node/cjs/runtime/verify.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nconst crypto = __webpack_require__(/*! crypto */ \"crypto\");\nconst util_1 = __webpack_require__(/*! util */ \"util\");\nconst dsa_digest_js_1 = __webpack_require__(/*! ./dsa_digest.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/runtime/dsa_digest.js\");\nconst node_key_js_1 = __webpack_require__(/*! ./node_key.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/runtime/node_key.js\");\nconst sign_js_1 = __webpack_require__(/*! ./sign.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/runtime/sign.js\");\nconst get_sign_verify_key_js_1 = __webpack_require__(/*! ./get_sign_verify_key.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/runtime/get_sign_verify_key.js\");\nconst flags_js_1 = __webpack_require__(/*! ./flags.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/runtime/flags.js\");\nlet oneShotVerify;\nif (crypto.verify.length > 4 && flags_js_1.oneShotCallback) {\n    oneShotVerify = (0, util_1.promisify)(crypto.verify);\n} else {\n    oneShotVerify = crypto.verify;\n}\nconst verify = async (alg, key, signature, data)=>{\n    const keyObject = (0, get_sign_verify_key_js_1.default)(alg, key, \"verify\");\n    if (alg.startsWith(\"HS\")) {\n        const expected = await (0, sign_js_1.default)(alg, keyObject, data);\n        const actual = signature;\n        try {\n            return crypto.timingSafeEqual(actual, expected);\n        } catch  {\n            return false;\n        }\n    }\n    const algorithm = (0, dsa_digest_js_1.default)(alg);\n    const keyInput = (0, node_key_js_1.default)(alg, keyObject);\n    try {\n        return await oneShotVerify(algorithm, data, keyInput, signature);\n    } catch  {\n        return false;\n    }\n};\nexports[\"default\"] = verify;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvam9zZS9kaXN0L25vZGUvY2pzL3J1bnRpbWUvdmVyaWZ5LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2JBLDhDQUE2QztJQUFFRyxPQUFPO0FBQUssQ0FBQyxFQUFDO0FBQzdELE1BQU1DLFNBQVNDLG1CQUFPQSxDQUFDLHNCQUFRO0FBQy9CLE1BQU1DLFNBQVNELG1CQUFPQSxDQUFDLGtCQUFNO0FBQzdCLE1BQU1FLGtCQUFrQkYsbUJBQU9BLENBQUMsNEZBQWlCO0FBQ2pELE1BQU1HLGdCQUFnQkgsbUJBQU9BLENBQUMsd0ZBQWU7QUFDN0MsTUFBTUksWUFBWUosbUJBQU9BLENBQUMsZ0ZBQVc7QUFDckMsTUFBTUssMkJBQTJCTCxtQkFBT0EsQ0FBQyw4R0FBMEI7QUFDbkUsTUFBTU0sYUFBYU4sbUJBQU9BLENBQUMsa0ZBQVk7QUFDdkMsSUFBSU87QUFDSixJQUFJUixPQUFPUyxPQUFPQyxTQUFTLEtBQUtILFdBQVdJLGlCQUFpQjtJQUN4REgsZ0JBQWdCLENBQUMsR0FBR04sT0FBT1UsU0FBUSxFQUFHWixPQUFPUztBQUNqRCxPQUNLO0lBQ0RELGdCQUFnQlIsT0FBT1M7QUFDM0I7QUFDQSxNQUFNQSxTQUFTLE9BQU9JLEtBQUtDLEtBQUtDLFdBQVdDO0lBQ3ZDLE1BQU1DLFlBQVksQ0FBQyxHQUFHWCx5QkFBeUJZLE9BQU0sRUFBR0wsS0FBS0MsS0FBSztJQUNsRSxJQUFJRCxJQUFJTSxXQUFXLE9BQU87UUFDdEIsTUFBTUMsV0FBVyxNQUFNLENBQUMsR0FBR2YsVUFBVWEsT0FBTSxFQUFHTCxLQUFLSSxXQUFXRDtRQUM5RCxNQUFNSyxTQUFTTjtRQUNmLElBQUk7WUFDQSxPQUFPZixPQUFPc0IsZ0JBQWdCRCxRQUFRRDtRQUMxQyxFQUNBLE9BQU07WUFDRixPQUFPO1FBQ1g7SUFDSjtJQUNBLE1BQU1HLFlBQVksQ0FBQyxHQUFHcEIsZ0JBQWdCZSxPQUFNLEVBQUdMO0lBQy9DLE1BQU1XLFdBQVcsQ0FBQyxHQUFHcEIsY0FBY2MsT0FBTSxFQUFHTCxLQUFLSTtJQUNqRCxJQUFJO1FBQ0EsT0FBTyxNQUFNVCxjQUFjZSxXQUFXUCxNQUFNUSxVQUFVVDtJQUMxRCxFQUNBLE9BQU07UUFDRixPQUFPO0lBQ1g7QUFDSjtBQUNBakIsa0JBQWVvQixHQUFHVCIsInNvdXJjZXMiOlsid2VicGFjazovL2Z1bGxzdGFjay1yb2xlLWJhc2VkLW5leHRqcy0yLy4vbm9kZV9tb2R1bGVzL2pvc2UvZGlzdC9ub2RlL2Nqcy9ydW50aW1lL3ZlcmlmeS5qcz9jNjE2Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuY29uc3QgY3J5cHRvID0gcmVxdWlyZShcImNyeXB0b1wiKTtcbmNvbnN0IHV0aWxfMSA9IHJlcXVpcmUoXCJ1dGlsXCIpO1xuY29uc3QgZHNhX2RpZ2VzdF9qc18xID0gcmVxdWlyZShcIi4vZHNhX2RpZ2VzdC5qc1wiKTtcbmNvbnN0IG5vZGVfa2V5X2pzXzEgPSByZXF1aXJlKFwiLi9ub2RlX2tleS5qc1wiKTtcbmNvbnN0IHNpZ25fanNfMSA9IHJlcXVpcmUoXCIuL3NpZ24uanNcIik7XG5jb25zdCBnZXRfc2lnbl92ZXJpZnlfa2V5X2pzXzEgPSByZXF1aXJlKFwiLi9nZXRfc2lnbl92ZXJpZnlfa2V5LmpzXCIpO1xuY29uc3QgZmxhZ3NfanNfMSA9IHJlcXVpcmUoXCIuL2ZsYWdzLmpzXCIpO1xubGV0IG9uZVNob3RWZXJpZnk7XG5pZiAoY3J5cHRvLnZlcmlmeS5sZW5ndGggPiA0ICYmIGZsYWdzX2pzXzEub25lU2hvdENhbGxiYWNrKSB7XG4gICAgb25lU2hvdFZlcmlmeSA9ICgwLCB1dGlsXzEucHJvbWlzaWZ5KShjcnlwdG8udmVyaWZ5KTtcbn1cbmVsc2Uge1xuICAgIG9uZVNob3RWZXJpZnkgPSBjcnlwdG8udmVyaWZ5O1xufVxuY29uc3QgdmVyaWZ5ID0gYXN5bmMgKGFsZywga2V5LCBzaWduYXR1cmUsIGRhdGEpID0+IHtcbiAgICBjb25zdCBrZXlPYmplY3QgPSAoMCwgZ2V0X3NpZ25fdmVyaWZ5X2tleV9qc18xLmRlZmF1bHQpKGFsZywga2V5LCAndmVyaWZ5Jyk7XG4gICAgaWYgKGFsZy5zdGFydHNXaXRoKCdIUycpKSB7XG4gICAgICAgIGNvbnN0IGV4cGVjdGVkID0gYXdhaXQgKDAsIHNpZ25fanNfMS5kZWZhdWx0KShhbGcsIGtleU9iamVjdCwgZGF0YSk7XG4gICAgICAgIGNvbnN0IGFjdHVhbCA9IHNpZ25hdHVyZTtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIHJldHVybiBjcnlwdG8udGltaW5nU2FmZUVxdWFsKGFjdHVhbCwgZXhwZWN0ZWQpO1xuICAgICAgICB9XG4gICAgICAgIGNhdGNoIHtcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBjb25zdCBhbGdvcml0aG0gPSAoMCwgZHNhX2RpZ2VzdF9qc18xLmRlZmF1bHQpKGFsZyk7XG4gICAgY29uc3Qga2V5SW5wdXQgPSAoMCwgbm9kZV9rZXlfanNfMS5kZWZhdWx0KShhbGcsIGtleU9iamVjdCk7XG4gICAgdHJ5IHtcbiAgICAgICAgcmV0dXJuIGF3YWl0IG9uZVNob3RWZXJpZnkoYWxnb3JpdGhtLCBkYXRhLCBrZXlJbnB1dCwgc2lnbmF0dXJlKTtcbiAgICB9XG4gICAgY2F0Y2gge1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxufTtcbmV4cG9ydHMuZGVmYXVsdCA9IHZlcmlmeTtcbiJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsImNyeXB0byIsInJlcXVpcmUiLCJ1dGlsXzEiLCJkc2FfZGlnZXN0X2pzXzEiLCJub2RlX2tleV9qc18xIiwic2lnbl9qc18xIiwiZ2V0X3NpZ25fdmVyaWZ5X2tleV9qc18xIiwiZmxhZ3NfanNfMSIsIm9uZVNob3RWZXJpZnkiLCJ2ZXJpZnkiLCJsZW5ndGgiLCJvbmVTaG90Q2FsbGJhY2siLCJwcm9taXNpZnkiLCJhbGciLCJrZXkiLCJzaWduYXR1cmUiLCJkYXRhIiwia2V5T2JqZWN0IiwiZGVmYXVsdCIsInN0YXJ0c1dpdGgiLCJleHBlY3RlZCIsImFjdHVhbCIsInRpbWluZ1NhZmVFcXVhbCIsImFsZ29yaXRobSIsImtleUlucHV0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/jose/dist/node/cjs/runtime/verify.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/jose/dist/node/cjs/runtime/webcrypto.js":
/*!**************************************************************!*\
  !*** ./node_modules/jose/dist/node/cjs/runtime/webcrypto.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.isCryptoKey = void 0;\nconst crypto = __webpack_require__(/*! crypto */ \"crypto\");\nconst util = __webpack_require__(/*! util */ \"util\");\nconst webcrypto = crypto.webcrypto;\nexports[\"default\"] = webcrypto;\nexports.isCryptoKey = util.types.isCryptoKey ? (key)=>util.types.isCryptoKey(key) : (key)=>false;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvam9zZS9kaXN0L25vZGUvY2pzL3J1bnRpbWUvd2ViY3J5cHRvLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2JBLDhDQUE2QztJQUFFRyxPQUFPO0FBQUssQ0FBQyxFQUFDO0FBQzdERCxtQkFBbUJFLEdBQUcsS0FBSztBQUMzQixNQUFNQyxTQUFTQyxtQkFBT0EsQ0FBQyxzQkFBUTtBQUMvQixNQUFNQyxPQUFPRCxtQkFBT0EsQ0FBQyxrQkFBTTtBQUMzQixNQUFNRSxZQUFZSCxPQUFPRztBQUN6Qk4sa0JBQWVPLEdBQUdEO0FBQ2xCTixtQkFBbUJFLEdBQUdHLEtBQUtHLE1BQU1OLGNBQzNCLENBQUNPLE1BQVFKLEtBQUtHLE1BQU1OLFlBQVlPLE9BRTlCLENBQUNBLE1BQVEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mdWxsc3RhY2stcm9sZS1iYXNlZC1uZXh0anMtMi8uL25vZGVfbW9kdWxlcy9qb3NlL2Rpc3Qvbm9kZS9janMvcnVudGltZS93ZWJjcnlwdG8uanM/MTc3YSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuaXNDcnlwdG9LZXkgPSB2b2lkIDA7XG5jb25zdCBjcnlwdG8gPSByZXF1aXJlKFwiY3J5cHRvXCIpO1xuY29uc3QgdXRpbCA9IHJlcXVpcmUoXCJ1dGlsXCIpO1xuY29uc3Qgd2ViY3J5cHRvID0gY3J5cHRvLndlYmNyeXB0bztcbmV4cG9ydHMuZGVmYXVsdCA9IHdlYmNyeXB0bztcbmV4cG9ydHMuaXNDcnlwdG9LZXkgPSB1dGlsLnR5cGVzLmlzQ3J5cHRvS2V5XG4gICAgPyAoa2V5KSA9PiB1dGlsLnR5cGVzLmlzQ3J5cHRvS2V5KGtleSlcbiAgICA6XG4gICAgICAgIChrZXkpID0+IGZhbHNlO1xuIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiaXNDcnlwdG9LZXkiLCJjcnlwdG8iLCJyZXF1aXJlIiwidXRpbCIsIndlYmNyeXB0byIsImRlZmF1bHQiLCJ0eXBlcyIsImtleSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/jose/dist/node/cjs/runtime/webcrypto.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/jose/dist/node/cjs/runtime/zlib.js":
/*!*********************************************************!*\
  !*** ./node_modules/jose/dist/node/cjs/runtime/zlib.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.deflate = exports.inflate = void 0;\nconst util_1 = __webpack_require__(/*! util */ \"util\");\nconst zlib_1 = __webpack_require__(/*! zlib */ \"zlib\");\nconst inflateRaw = (0, util_1.promisify)(zlib_1.inflateRaw);\nconst deflateRaw = (0, util_1.promisify)(zlib_1.deflateRaw);\nconst inflate = (input)=>inflateRaw(input);\nexports.inflate = inflate;\nconst deflate = (input)=>deflateRaw(input);\nexports.deflate = deflate;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvam9zZS9kaXN0L25vZGUvY2pzL3J1bnRpbWUvemxpYi5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFBRUcsT0FBTztBQUFLLENBQUMsRUFBQztBQUM3REQsZUFBZUUsR0FBR0YsZUFBZUcsR0FBRyxLQUFLO0FBQ3pDLE1BQU1DLFNBQVNDLG1CQUFPQSxDQUFDLGtCQUFNO0FBQzdCLE1BQU1DLFNBQVNELG1CQUFPQSxDQUFDLGtCQUFNO0FBQzdCLE1BQU1FLGFBQWEsQ0FBQyxHQUFHSCxPQUFPSSxTQUFRLEVBQUdGLE9BQU9DO0FBQ2hELE1BQU1FLGFBQWEsQ0FBQyxHQUFHTCxPQUFPSSxTQUFRLEVBQUdGLE9BQU9HO0FBQ2hELE1BQU1OLFVBQVUsQ0FBQ08sUUFBVUgsV0FBV0c7QUFDdENWLGVBQWVHLEdBQUdBO0FBQ2xCLE1BQU1ELFVBQVUsQ0FBQ1EsUUFBVUQsV0FBV0M7QUFDdENWLGVBQWVFLEdBQUdBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZnVsbHN0YWNrLXJvbGUtYmFzZWQtbmV4dGpzLTIvLi9ub2RlX21vZHVsZXMvam9zZS9kaXN0L25vZGUvY2pzL3J1bnRpbWUvemxpYi5qcz8xYjBiIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5kZWZsYXRlID0gZXhwb3J0cy5pbmZsYXRlID0gdm9pZCAwO1xuY29uc3QgdXRpbF8xID0gcmVxdWlyZShcInV0aWxcIik7XG5jb25zdCB6bGliXzEgPSByZXF1aXJlKFwiemxpYlwiKTtcbmNvbnN0IGluZmxhdGVSYXcgPSAoMCwgdXRpbF8xLnByb21pc2lmeSkoemxpYl8xLmluZmxhdGVSYXcpO1xuY29uc3QgZGVmbGF0ZVJhdyA9ICgwLCB1dGlsXzEucHJvbWlzaWZ5KSh6bGliXzEuZGVmbGF0ZVJhdyk7XG5jb25zdCBpbmZsYXRlID0gKGlucHV0KSA9PiBpbmZsYXRlUmF3KGlucHV0KTtcbmV4cG9ydHMuaW5mbGF0ZSA9IGluZmxhdGU7XG5jb25zdCBkZWZsYXRlID0gKGlucHV0KSA9PiBkZWZsYXRlUmF3KGlucHV0KTtcbmV4cG9ydHMuZGVmbGF0ZSA9IGRlZmxhdGU7XG4iXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJkZWZsYXRlIiwiaW5mbGF0ZSIsInV0aWxfMSIsInJlcXVpcmUiLCJ6bGliXzEiLCJpbmZsYXRlUmF3IiwicHJvbWlzaWZ5IiwiZGVmbGF0ZVJhdyIsImlucHV0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/jose/dist/node/cjs/runtime/zlib.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/jose/dist/node/cjs/util/base64url.js":
/*!***********************************************************!*\
  !*** ./node_modules/jose/dist/node/cjs/util/base64url.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.decode = exports.encode = void 0;\nconst base64url = __webpack_require__(/*! ../runtime/base64url.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/runtime/base64url.js\");\nexports.encode = base64url.encode;\nexports.decode = base64url.decode;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvam9zZS9kaXN0L25vZGUvY2pzL3V0aWwvYmFzZTY0dXJsLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2JBLDhDQUE2QztJQUFFRyxPQUFPO0FBQUssQ0FBQyxFQUFDO0FBQzdERCxjQUFjRSxHQUFHRixjQUFjRyxHQUFHLEtBQUs7QUFDdkMsTUFBTUMsWUFBWUMsbUJBQU9BLENBQUMsbUdBQXlCO0FBQ25ETCxjQUFjRyxHQUFHQyxVQUFVRDtBQUMzQkgsY0FBY0UsR0FBR0UsVUFBVUYiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mdWxsc3RhY2stcm9sZS1iYXNlZC1uZXh0anMtMi8uL25vZGVfbW9kdWxlcy9qb3NlL2Rpc3Qvbm9kZS9janMvdXRpbC9iYXNlNjR1cmwuanM/YjlmNSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuZGVjb2RlID0gZXhwb3J0cy5lbmNvZGUgPSB2b2lkIDA7XG5jb25zdCBiYXNlNjR1cmwgPSByZXF1aXJlKFwiLi4vcnVudGltZS9iYXNlNjR1cmwuanNcIik7XG5leHBvcnRzLmVuY29kZSA9IGJhc2U2NHVybC5lbmNvZGU7XG5leHBvcnRzLmRlY29kZSA9IGJhc2U2NHVybC5kZWNvZGU7XG4iXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJkZWNvZGUiLCJlbmNvZGUiLCJiYXNlNjR1cmwiLCJyZXF1aXJlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/jose/dist/node/cjs/util/base64url.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/jose/dist/node/cjs/util/decode_jwt.js":
/*!************************************************************!*\
  !*** ./node_modules/jose/dist/node/cjs/util/decode_jwt.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.decodeJwt = void 0;\nconst base64url_js_1 = __webpack_require__(/*! ./base64url.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/util/base64url.js\");\nconst buffer_utils_js_1 = __webpack_require__(/*! ../lib/buffer_utils.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/lib/buffer_utils.js\");\nconst is_object_js_1 = __webpack_require__(/*! ../lib/is_object.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/lib/is_object.js\");\nconst errors_js_1 = __webpack_require__(/*! ./errors.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/util/errors.js\");\nfunction decodeJwt(jwt) {\n    if (typeof jwt !== \"string\") throw new errors_js_1.JWTInvalid(\"JWTs must use Compact JWS serialization, JWT must be a string\");\n    const { 1: payload , length  } = jwt.split(\".\");\n    if (length === 5) throw new errors_js_1.JWTInvalid(\"Only JWTs using Compact JWS serialization can be decoded\");\n    if (length !== 3) throw new errors_js_1.JWTInvalid(\"Invalid JWT\");\n    if (!payload) throw new errors_js_1.JWTInvalid(\"JWTs must contain a payload\");\n    let decoded;\n    try {\n        decoded = (0, base64url_js_1.decode)(payload);\n    } catch  {\n        throw new errors_js_1.JWTInvalid(\"Failed to parse the base64url encoded payload\");\n    }\n    let result;\n    try {\n        result = JSON.parse(buffer_utils_js_1.decoder.decode(decoded));\n    } catch  {\n        throw new errors_js_1.JWTInvalid(\"Failed to parse the decoded payload as JSON\");\n    }\n    if (!(0, is_object_js_1.default)(result)) throw new errors_js_1.JWTInvalid(\"Invalid JWT Claims Set\");\n    return result;\n}\nexports.decodeJwt = decodeJwt;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvam9zZS9kaXN0L25vZGUvY2pzL3V0aWwvZGVjb2RlX2p3dC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFBRUcsT0FBTztBQUFLLENBQUMsRUFBQztBQUM3REQsaUJBQWlCRSxHQUFHLEtBQUs7QUFDekIsTUFBTUMsaUJBQWlCQyxtQkFBT0EsQ0FBQyx1RkFBZ0I7QUFDL0MsTUFBTUMsb0JBQW9CRCxtQkFBT0EsQ0FBQyxpR0FBd0I7QUFDMUQsTUFBTUUsaUJBQWlCRixtQkFBT0EsQ0FBQywyRkFBcUI7QUFDcEQsTUFBTUcsY0FBY0gsbUJBQU9BLENBQUMsaUZBQWE7QUFDekMsU0FBU0YsVUFBVU0sR0FBRztJQUNsQixJQUFJLE9BQU9BLFFBQVEsVUFDZixNQUFNLElBQUlELFlBQVlFLFdBQVc7SUFDckMsTUFBTSxFQUFFLEdBQUdDLFFBQU8sRUFBRUMsT0FBTSxFQUFFLEdBQUdILElBQUlJLE1BQU07SUFDekMsSUFBSUQsV0FBVyxHQUNYLE1BQU0sSUFBSUosWUFBWUUsV0FBVztJQUNyQyxJQUFJRSxXQUFXLEdBQ1gsTUFBTSxJQUFJSixZQUFZRSxXQUFXO0lBQ3JDLElBQUksQ0FBQ0MsU0FDRCxNQUFNLElBQUlILFlBQVlFLFdBQVc7SUFDckMsSUFBSUk7SUFDSixJQUFJO1FBQ0FBLFVBQVUsQ0FBQyxHQUFHVixlQUFlVyxNQUFLLEVBQUdKO0lBQ3pDLEVBQ0EsT0FBTTtRQUNGLE1BQU0sSUFBSUgsWUFBWUUsV0FBVztJQUNyQztJQUNBLElBQUlNO0lBQ0osSUFBSTtRQUNBQSxTQUFTQyxLQUFLQyxNQUFNWixrQkFBa0JhLFFBQVFKLE9BQU9EO0lBQ3pELEVBQ0EsT0FBTTtRQUNGLE1BQU0sSUFBSU4sWUFBWUUsV0FBVztJQUNyQztJQUNBLElBQUksQ0FBQyxDQUFDLEdBQUdILGVBQWVhLE9BQU0sRUFBR0osU0FDN0IsTUFBTSxJQUFJUixZQUFZRSxXQUFXO0lBQ3JDLE9BQU9NO0FBQ1g7QUFDQWYsaUJBQWlCRSxHQUFHQSIsInNvdXJjZXMiOlsid2VicGFjazovL2Z1bGxzdGFjay1yb2xlLWJhc2VkLW5leHRqcy0yLy4vbm9kZV9tb2R1bGVzL2pvc2UvZGlzdC9ub2RlL2Nqcy91dGlsL2RlY29kZV9qd3QuanM/MWI0NyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuZGVjb2RlSnd0ID0gdm9pZCAwO1xuY29uc3QgYmFzZTY0dXJsX2pzXzEgPSByZXF1aXJlKFwiLi9iYXNlNjR1cmwuanNcIik7XG5jb25zdCBidWZmZXJfdXRpbHNfanNfMSA9IHJlcXVpcmUoXCIuLi9saWIvYnVmZmVyX3V0aWxzLmpzXCIpO1xuY29uc3QgaXNfb2JqZWN0X2pzXzEgPSByZXF1aXJlKFwiLi4vbGliL2lzX29iamVjdC5qc1wiKTtcbmNvbnN0IGVycm9yc19qc18xID0gcmVxdWlyZShcIi4vZXJyb3JzLmpzXCIpO1xuZnVuY3Rpb24gZGVjb2RlSnd0KGp3dCkge1xuICAgIGlmICh0eXBlb2Ygand0ICE9PSAnc3RyaW5nJylcbiAgICAgICAgdGhyb3cgbmV3IGVycm9yc19qc18xLkpXVEludmFsaWQoJ0pXVHMgbXVzdCB1c2UgQ29tcGFjdCBKV1Mgc2VyaWFsaXphdGlvbiwgSldUIG11c3QgYmUgYSBzdHJpbmcnKTtcbiAgICBjb25zdCB7IDE6IHBheWxvYWQsIGxlbmd0aCB9ID0gand0LnNwbGl0KCcuJyk7XG4gICAgaWYgKGxlbmd0aCA9PT0gNSlcbiAgICAgICAgdGhyb3cgbmV3IGVycm9yc19qc18xLkpXVEludmFsaWQoJ09ubHkgSldUcyB1c2luZyBDb21wYWN0IEpXUyBzZXJpYWxpemF0aW9uIGNhbiBiZSBkZWNvZGVkJyk7XG4gICAgaWYgKGxlbmd0aCAhPT0gMylcbiAgICAgICAgdGhyb3cgbmV3IGVycm9yc19qc18xLkpXVEludmFsaWQoJ0ludmFsaWQgSldUJyk7XG4gICAgaWYgKCFwYXlsb2FkKVxuICAgICAgICB0aHJvdyBuZXcgZXJyb3JzX2pzXzEuSldUSW52YWxpZCgnSldUcyBtdXN0IGNvbnRhaW4gYSBwYXlsb2FkJyk7XG4gICAgbGV0IGRlY29kZWQ7XG4gICAgdHJ5IHtcbiAgICAgICAgZGVjb2RlZCA9ICgwLCBiYXNlNjR1cmxfanNfMS5kZWNvZGUpKHBheWxvYWQpO1xuICAgIH1cbiAgICBjYXRjaCB7XG4gICAgICAgIHRocm93IG5ldyBlcnJvcnNfanNfMS5KV1RJbnZhbGlkKCdGYWlsZWQgdG8gcGFyc2UgdGhlIGJhc2U2NHVybCBlbmNvZGVkIHBheWxvYWQnKTtcbiAgICB9XG4gICAgbGV0IHJlc3VsdDtcbiAgICB0cnkge1xuICAgICAgICByZXN1bHQgPSBKU09OLnBhcnNlKGJ1ZmZlcl91dGlsc19qc18xLmRlY29kZXIuZGVjb2RlKGRlY29kZWQpKTtcbiAgICB9XG4gICAgY2F0Y2gge1xuICAgICAgICB0aHJvdyBuZXcgZXJyb3JzX2pzXzEuSldUSW52YWxpZCgnRmFpbGVkIHRvIHBhcnNlIHRoZSBkZWNvZGVkIHBheWxvYWQgYXMgSlNPTicpO1xuICAgIH1cbiAgICBpZiAoISgwLCBpc19vYmplY3RfanNfMS5kZWZhdWx0KShyZXN1bHQpKVxuICAgICAgICB0aHJvdyBuZXcgZXJyb3JzX2pzXzEuSldUSW52YWxpZCgnSW52YWxpZCBKV1QgQ2xhaW1zIFNldCcpO1xuICAgIHJldHVybiByZXN1bHQ7XG59XG5leHBvcnRzLmRlY29kZUp3dCA9IGRlY29kZUp3dDtcbiJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsImRlY29kZUp3dCIsImJhc2U2NHVybF9qc18xIiwicmVxdWlyZSIsImJ1ZmZlcl91dGlsc19qc18xIiwiaXNfb2JqZWN0X2pzXzEiLCJlcnJvcnNfanNfMSIsImp3dCIsIkpXVEludmFsaWQiLCJwYXlsb2FkIiwibGVuZ3RoIiwic3BsaXQiLCJkZWNvZGVkIiwiZGVjb2RlIiwicmVzdWx0IiwiSlNPTiIsInBhcnNlIiwiZGVjb2RlciIsImRlZmF1bHQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/jose/dist/node/cjs/util/decode_jwt.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/jose/dist/node/cjs/util/decode_protected_header.js":
/*!*************************************************************************!*\
  !*** ./node_modules/jose/dist/node/cjs/util/decode_protected_header.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.decodeProtectedHeader = void 0;\nconst base64url_js_1 = __webpack_require__(/*! ./base64url.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/util/base64url.js\");\nconst buffer_utils_js_1 = __webpack_require__(/*! ../lib/buffer_utils.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/lib/buffer_utils.js\");\nconst is_object_js_1 = __webpack_require__(/*! ../lib/is_object.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/lib/is_object.js\");\nfunction decodeProtectedHeader(token) {\n    let protectedB64u;\n    if (typeof token === \"string\") {\n        const parts = token.split(\".\");\n        if (parts.length === 3 || parts.length === 5) {\n            ;\n            [protectedB64u] = parts;\n        }\n    } else if (typeof token === \"object\" && token) {\n        if (\"protected\" in token) {\n            protectedB64u = token.protected;\n        } else {\n            throw new TypeError(\"Token does not contain a Protected Header\");\n        }\n    }\n    try {\n        if (typeof protectedB64u !== \"string\" || !protectedB64u) {\n            throw new Error();\n        }\n        const result = JSON.parse(buffer_utils_js_1.decoder.decode((0, base64url_js_1.decode)(protectedB64u)));\n        if (!(0, is_object_js_1.default)(result)) {\n            throw new Error();\n        }\n        return result;\n    } catch  {\n        throw new TypeError(\"Invalid Token or Protected Header formatting\");\n    }\n}\nexports.decodeProtectedHeader = decodeProtectedHeader;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvam9zZS9kaXN0L25vZGUvY2pzL3V0aWwvZGVjb2RlX3Byb3RlY3RlZF9oZWFkZXIuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYkEsOENBQTZDO0lBQUVHLE9BQU87QUFBSyxDQUFDLEVBQUM7QUFDN0RELDZCQUE2QkUsR0FBRyxLQUFLO0FBQ3JDLE1BQU1DLGlCQUFpQkMsbUJBQU9BLENBQUMsdUZBQWdCO0FBQy9DLE1BQU1DLG9CQUFvQkQsbUJBQU9BLENBQUMsaUdBQXdCO0FBQzFELE1BQU1FLGlCQUFpQkYsbUJBQU9BLENBQUMsMkZBQXFCO0FBQ3BELFNBQVNGLHNCQUFzQkssS0FBSztJQUNoQyxJQUFJQztJQUNKLElBQUksT0FBT0QsVUFBVSxVQUFVO1FBQzNCLE1BQU1FLFFBQVFGLE1BQU1HLE1BQU07UUFDMUIsSUFBSUQsTUFBTUUsV0FBVyxLQUFLRixNQUFNRSxXQUFXLEdBQUc7O1lBRTFDLENBQUNILGNBQWMsR0FBR0M7UUFDdEI7SUFDSixPQUNLLElBQUksT0FBT0YsVUFBVSxZQUFZQSxPQUFPO1FBQ3pDLElBQUksZUFBZUEsT0FBTztZQUN0QkMsZ0JBQWdCRCxNQUFNSztRQUMxQixPQUNLO1lBQ0QsTUFBTSxJQUFJQyxVQUFVO1FBQ3hCO0lBQ0o7SUFDQSxJQUFJO1FBQ0EsSUFBSSxPQUFPTCxrQkFBa0IsWUFBWSxDQUFDQSxlQUFlO1lBQ3JELE1BQU0sSUFBSU07UUFDZDtRQUNBLE1BQU1DLFNBQVNDLEtBQUtDLE1BQU1aLGtCQUFrQmEsUUFBUUMsT0FBTyxDQUFDLEdBQUdoQixlQUFlZ0IsTUFBSyxFQUFHWDtRQUN0RixJQUFJLENBQUMsQ0FBQyxHQUFHRixlQUFlYyxPQUFNLEVBQUdMLFNBQVM7WUFDdEMsTUFBTSxJQUFJRDtRQUNkO1FBQ0EsT0FBT0M7SUFDWCxFQUNBLE9BQU07UUFDRixNQUFNLElBQUlGLFVBQVU7SUFDeEI7QUFDSjtBQUNBYiw2QkFBNkJFLEdBQUdBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZnVsbHN0YWNrLXJvbGUtYmFzZWQtbmV4dGpzLTIvLi9ub2RlX21vZHVsZXMvam9zZS9kaXN0L25vZGUvY2pzL3V0aWwvZGVjb2RlX3Byb3RlY3RlZF9oZWFkZXIuanM/ZWQyNCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuZGVjb2RlUHJvdGVjdGVkSGVhZGVyID0gdm9pZCAwO1xuY29uc3QgYmFzZTY0dXJsX2pzXzEgPSByZXF1aXJlKFwiLi9iYXNlNjR1cmwuanNcIik7XG5jb25zdCBidWZmZXJfdXRpbHNfanNfMSA9IHJlcXVpcmUoXCIuLi9saWIvYnVmZmVyX3V0aWxzLmpzXCIpO1xuY29uc3QgaXNfb2JqZWN0X2pzXzEgPSByZXF1aXJlKFwiLi4vbGliL2lzX29iamVjdC5qc1wiKTtcbmZ1bmN0aW9uIGRlY29kZVByb3RlY3RlZEhlYWRlcih0b2tlbikge1xuICAgIGxldCBwcm90ZWN0ZWRCNjR1O1xuICAgIGlmICh0eXBlb2YgdG9rZW4gPT09ICdzdHJpbmcnKSB7XG4gICAgICAgIGNvbnN0IHBhcnRzID0gdG9rZW4uc3BsaXQoJy4nKTtcbiAgICAgICAgaWYgKHBhcnRzLmxlbmd0aCA9PT0gMyB8fCBwYXJ0cy5sZW5ndGggPT09IDUpIHtcbiAgICAgICAgICAgIDtcbiAgICAgICAgICAgIFtwcm90ZWN0ZWRCNjR1XSA9IHBhcnRzO1xuICAgICAgICB9XG4gICAgfVxuICAgIGVsc2UgaWYgKHR5cGVvZiB0b2tlbiA9PT0gJ29iamVjdCcgJiYgdG9rZW4pIHtcbiAgICAgICAgaWYgKCdwcm90ZWN0ZWQnIGluIHRva2VuKSB7XG4gICAgICAgICAgICBwcm90ZWN0ZWRCNjR1ID0gdG9rZW4ucHJvdGVjdGVkO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcignVG9rZW4gZG9lcyBub3QgY29udGFpbiBhIFByb3RlY3RlZCBIZWFkZXInKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICB0cnkge1xuICAgICAgICBpZiAodHlwZW9mIHByb3RlY3RlZEI2NHUgIT09ICdzdHJpbmcnIHx8ICFwcm90ZWN0ZWRCNjR1KSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoKTtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCByZXN1bHQgPSBKU09OLnBhcnNlKGJ1ZmZlcl91dGlsc19qc18xLmRlY29kZXIuZGVjb2RlKCgwLCBiYXNlNjR1cmxfanNfMS5kZWNvZGUpKHByb3RlY3RlZEI2NHUpKSk7XG4gICAgICAgIGlmICghKDAsIGlzX29iamVjdF9qc18xLmRlZmF1bHQpKHJlc3VsdCkpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcigpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgfVxuICAgIGNhdGNoIHtcbiAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcignSW52YWxpZCBUb2tlbiBvciBQcm90ZWN0ZWQgSGVhZGVyIGZvcm1hdHRpbmcnKTtcbiAgICB9XG59XG5leHBvcnRzLmRlY29kZVByb3RlY3RlZEhlYWRlciA9IGRlY29kZVByb3RlY3RlZEhlYWRlcjtcbiJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsImRlY29kZVByb3RlY3RlZEhlYWRlciIsImJhc2U2NHVybF9qc18xIiwicmVxdWlyZSIsImJ1ZmZlcl91dGlsc19qc18xIiwiaXNfb2JqZWN0X2pzXzEiLCJ0b2tlbiIsInByb3RlY3RlZEI2NHUiLCJwYXJ0cyIsInNwbGl0IiwibGVuZ3RoIiwicHJvdGVjdGVkIiwiVHlwZUVycm9yIiwiRXJyb3IiLCJyZXN1bHQiLCJKU09OIiwicGFyc2UiLCJkZWNvZGVyIiwiZGVjb2RlIiwiZGVmYXVsdCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/jose/dist/node/cjs/util/decode_protected_header.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/jose/dist/node/cjs/util/errors.js":
/*!********************************************************!*\
  !*** ./node_modules/jose/dist/node/cjs/util/errors.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.JWSSignatureVerificationFailed = exports.JWKSTimeout = exports.JWKSMultipleMatchingKeys = exports.JWKSNoMatchingKey = exports.JWKSInvalid = exports.JWKInvalid = exports.JWTInvalid = exports.JWSInvalid = exports.JWEInvalid = exports.JWEDecryptionFailed = exports.JOSENotSupported = exports.JOSEAlgNotAllowed = exports.JWTExpired = exports.JWTClaimValidationFailed = exports.JOSEError = void 0;\nclass JOSEError extends Error {\n    static get code() {\n        return \"ERR_JOSE_GENERIC\";\n    }\n    constructor(message){\n        var _a;\n        super(message);\n        this.code = \"ERR_JOSE_GENERIC\";\n        this.name = this.constructor.name;\n        (_a = Error.captureStackTrace) === null || _a === void 0 ? void 0 : _a.call(Error, this, this.constructor);\n    }\n}\nexports.JOSEError = JOSEError;\nclass JWTClaimValidationFailed extends JOSEError {\n    static get code() {\n        return \"ERR_JWT_CLAIM_VALIDATION_FAILED\";\n    }\n    constructor(message, claim = \"unspecified\", reason = \"unspecified\"){\n        super(message);\n        this.code = \"ERR_JWT_CLAIM_VALIDATION_FAILED\";\n        this.claim = claim;\n        this.reason = reason;\n    }\n}\nexports.JWTClaimValidationFailed = JWTClaimValidationFailed;\nclass JWTExpired extends JOSEError {\n    static get code() {\n        return \"ERR_JWT_EXPIRED\";\n    }\n    constructor(message, claim = \"unspecified\", reason = \"unspecified\"){\n        super(message);\n        this.code = \"ERR_JWT_EXPIRED\";\n        this.claim = claim;\n        this.reason = reason;\n    }\n}\nexports.JWTExpired = JWTExpired;\nclass JOSEAlgNotAllowed extends JOSEError {\n    constructor(){\n        super(...arguments);\n        this.code = \"ERR_JOSE_ALG_NOT_ALLOWED\";\n    }\n    static get code() {\n        return \"ERR_JOSE_ALG_NOT_ALLOWED\";\n    }\n}\nexports.JOSEAlgNotAllowed = JOSEAlgNotAllowed;\nclass JOSENotSupported extends JOSEError {\n    constructor(){\n        super(...arguments);\n        this.code = \"ERR_JOSE_NOT_SUPPORTED\";\n    }\n    static get code() {\n        return \"ERR_JOSE_NOT_SUPPORTED\";\n    }\n}\nexports.JOSENotSupported = JOSENotSupported;\nclass JWEDecryptionFailed extends JOSEError {\n    constructor(){\n        super(...arguments);\n        this.code = \"ERR_JWE_DECRYPTION_FAILED\";\n        this.message = \"decryption operation failed\";\n    }\n    static get code() {\n        return \"ERR_JWE_DECRYPTION_FAILED\";\n    }\n}\nexports.JWEDecryptionFailed = JWEDecryptionFailed;\nclass JWEInvalid extends JOSEError {\n    constructor(){\n        super(...arguments);\n        this.code = \"ERR_JWE_INVALID\";\n    }\n    static get code() {\n        return \"ERR_JWE_INVALID\";\n    }\n}\nexports.JWEInvalid = JWEInvalid;\nclass JWSInvalid extends JOSEError {\n    constructor(){\n        super(...arguments);\n        this.code = \"ERR_JWS_INVALID\";\n    }\n    static get code() {\n        return \"ERR_JWS_INVALID\";\n    }\n}\nexports.JWSInvalid = JWSInvalid;\nclass JWTInvalid extends JOSEError {\n    constructor(){\n        super(...arguments);\n        this.code = \"ERR_JWT_INVALID\";\n    }\n    static get code() {\n        return \"ERR_JWT_INVALID\";\n    }\n}\nexports.JWTInvalid = JWTInvalid;\nclass JWKInvalid extends JOSEError {\n    constructor(){\n        super(...arguments);\n        this.code = \"ERR_JWK_INVALID\";\n    }\n    static get code() {\n        return \"ERR_JWK_INVALID\";\n    }\n}\nexports.JWKInvalid = JWKInvalid;\nclass JWKSInvalid extends JOSEError {\n    constructor(){\n        super(...arguments);\n        this.code = \"ERR_JWKS_INVALID\";\n    }\n    static get code() {\n        return \"ERR_JWKS_INVALID\";\n    }\n}\nexports.JWKSInvalid = JWKSInvalid;\nclass JWKSNoMatchingKey extends JOSEError {\n    constructor(){\n        super(...arguments);\n        this.code = \"ERR_JWKS_NO_MATCHING_KEY\";\n        this.message = \"no applicable key found in the JSON Web Key Set\";\n    }\n    static get code() {\n        return \"ERR_JWKS_NO_MATCHING_KEY\";\n    }\n}\nexports.JWKSNoMatchingKey = JWKSNoMatchingKey;\nclass JWKSMultipleMatchingKeys extends JOSEError {\n    constructor(){\n        super(...arguments);\n        this.code = \"ERR_JWKS_MULTIPLE_MATCHING_KEYS\";\n        this.message = \"multiple matching keys found in the JSON Web Key Set\";\n    }\n    static get code() {\n        return \"ERR_JWKS_MULTIPLE_MATCHING_KEYS\";\n    }\n}\nexports.JWKSMultipleMatchingKeys = JWKSMultipleMatchingKeys;\nSymbol.asyncIterator;\nclass JWKSTimeout extends JOSEError {\n    constructor(){\n        super(...arguments);\n        this.code = \"ERR_JWKS_TIMEOUT\";\n        this.message = \"request timed out\";\n    }\n    static get code() {\n        return \"ERR_JWKS_TIMEOUT\";\n    }\n}\nexports.JWKSTimeout = JWKSTimeout;\nclass JWSSignatureVerificationFailed extends JOSEError {\n    constructor(){\n        super(...arguments);\n        this.code = \"ERR_JWS_SIGNATURE_VERIFICATION_FAILED\";\n        this.message = \"signature verification failed\";\n    }\n    static get code() {\n        return \"ERR_JWS_SIGNATURE_VERIFICATION_FAILED\";\n    }\n}\nexports.JWSSignatureVerificationFailed = JWSSignatureVerificationFailed;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/jose/dist/node/cjs/util/errors.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/lru-cache/index.js":
/*!*****************************************!*\
  !*** ./node_modules/lru-cache/index.js ***!
  \*****************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n// A linked list to keep track of recently-used-ness\nconst Yallist = __webpack_require__(/*! yallist */ \"(sc_server)/./node_modules/yallist/yallist.js\");\nconst MAX = Symbol(\"max\");\nconst LENGTH = Symbol(\"length\");\nconst LENGTH_CALCULATOR = Symbol(\"lengthCalculator\");\nconst ALLOW_STALE = Symbol(\"allowStale\");\nconst MAX_AGE = Symbol(\"maxAge\");\nconst DISPOSE = Symbol(\"dispose\");\nconst NO_DISPOSE_ON_SET = Symbol(\"noDisposeOnSet\");\nconst LRU_LIST = Symbol(\"lruList\");\nconst CACHE = Symbol(\"cache\");\nconst UPDATE_AGE_ON_GET = Symbol(\"updateAgeOnGet\");\nconst naiveLength = ()=>1;\n// lruList is a yallist where the head is the youngest\n// item, and the tail is the oldest.  the list contains the Hit\n// objects as the entries.\n// Each Hit object has a reference to its Yallist.Node.  This\n// never changes.\n//\n// cache is a Map (or PseudoMap) that matches the keys to\n// the Yallist.Node object.\nclass LRUCache {\n    constructor(options){\n        if (typeof options === \"number\") options = {\n            max: options\n        };\n        if (!options) options = {};\n        if (options.max && (typeof options.max !== \"number\" || options.max < 0)) throw new TypeError(\"max must be a non-negative number\");\n        // Kind of weird to have a default max of Infinity, but oh well.\n        const max = this[MAX] = options.max || Infinity;\n        const lc = options.length || naiveLength;\n        this[LENGTH_CALCULATOR] = typeof lc !== \"function\" ? naiveLength : lc;\n        this[ALLOW_STALE] = options.stale || false;\n        if (options.maxAge && typeof options.maxAge !== \"number\") throw new TypeError(\"maxAge must be a number\");\n        this[MAX_AGE] = options.maxAge || 0;\n        this[DISPOSE] = options.dispose;\n        this[NO_DISPOSE_ON_SET] = options.noDisposeOnSet || false;\n        this[UPDATE_AGE_ON_GET] = options.updateAgeOnGet || false;\n        this.reset();\n    }\n    // resize the cache when the max changes.\n    set max(mL) {\n        if (typeof mL !== \"number\" || mL < 0) throw new TypeError(\"max must be a non-negative number\");\n        this[MAX] = mL || Infinity;\n        trim(this);\n    }\n    get max() {\n        return this[MAX];\n    }\n    set allowStale(allowStale) {\n        this[ALLOW_STALE] = !!allowStale;\n    }\n    get allowStale() {\n        return this[ALLOW_STALE];\n    }\n    set maxAge(mA) {\n        if (typeof mA !== \"number\") throw new TypeError(\"maxAge must be a non-negative number\");\n        this[MAX_AGE] = mA;\n        trim(this);\n    }\n    get maxAge() {\n        return this[MAX_AGE];\n    }\n    // resize the cache when the lengthCalculator changes.\n    set lengthCalculator(lC) {\n        if (typeof lC !== \"function\") lC = naiveLength;\n        if (lC !== this[LENGTH_CALCULATOR]) {\n            this[LENGTH_CALCULATOR] = lC;\n            this[LENGTH] = 0;\n            this[LRU_LIST].forEach((hit)=>{\n                hit.length = this[LENGTH_CALCULATOR](hit.value, hit.key);\n                this[LENGTH] += hit.length;\n            });\n        }\n        trim(this);\n    }\n    get lengthCalculator() {\n        return this[LENGTH_CALCULATOR];\n    }\n    get length() {\n        return this[LENGTH];\n    }\n    get itemCount() {\n        return this[LRU_LIST].length;\n    }\n    rforEach(fn, thisp) {\n        thisp = thisp || this;\n        for(let walker = this[LRU_LIST].tail; walker !== null;){\n            const prev = walker.prev;\n            forEachStep(this, fn, walker, thisp);\n            walker = prev;\n        }\n    }\n    forEach(fn, thisp) {\n        thisp = thisp || this;\n        for(let walker = this[LRU_LIST].head; walker !== null;){\n            const next = walker.next;\n            forEachStep(this, fn, walker, thisp);\n            walker = next;\n        }\n    }\n    keys() {\n        return this[LRU_LIST].toArray().map((k)=>k.key);\n    }\n    values() {\n        return this[LRU_LIST].toArray().map((k)=>k.value);\n    }\n    reset() {\n        if (this[DISPOSE] && this[LRU_LIST] && this[LRU_LIST].length) {\n            this[LRU_LIST].forEach((hit)=>this[DISPOSE](hit.key, hit.value));\n        }\n        this[CACHE] = new Map() // hash of items by key\n        ;\n        this[LRU_LIST] = new Yallist() // list of items in order of use recency\n        ;\n        this[LENGTH] = 0 // length of items in the list\n        ;\n    }\n    dump() {\n        return this[LRU_LIST].map((hit)=>isStale(this, hit) ? false : {\n                k: hit.key,\n                v: hit.value,\n                e: hit.now + (hit.maxAge || 0)\n            }).toArray().filter((h)=>h);\n    }\n    dumpLru() {\n        return this[LRU_LIST];\n    }\n    set(key, value, maxAge) {\n        maxAge = maxAge || this[MAX_AGE];\n        if (maxAge && typeof maxAge !== \"number\") throw new TypeError(\"maxAge must be a number\");\n        const now = maxAge ? Date.now() : 0;\n        const len = this[LENGTH_CALCULATOR](value, key);\n        if (this[CACHE].has(key)) {\n            if (len > this[MAX]) {\n                del(this, this[CACHE].get(key));\n                return false;\n            }\n            const node = this[CACHE].get(key);\n            const item = node.value;\n            // dispose of the old one before overwriting\n            // split out into 2 ifs for better coverage tracking\n            if (this[DISPOSE]) {\n                if (!this[NO_DISPOSE_ON_SET]) this[DISPOSE](key, item.value);\n            }\n            item.now = now;\n            item.maxAge = maxAge;\n            item.value = value;\n            this[LENGTH] += len - item.length;\n            item.length = len;\n            this.get(key);\n            trim(this);\n            return true;\n        }\n        const hit = new Entry(key, value, len, now, maxAge);\n        // oversized objects fall out of cache automatically.\n        if (hit.length > this[MAX]) {\n            if (this[DISPOSE]) this[DISPOSE](key, value);\n            return false;\n        }\n        this[LENGTH] += hit.length;\n        this[LRU_LIST].unshift(hit);\n        this[CACHE].set(key, this[LRU_LIST].head);\n        trim(this);\n        return true;\n    }\n    has(key) {\n        if (!this[CACHE].has(key)) return false;\n        const hit = this[CACHE].get(key).value;\n        return !isStale(this, hit);\n    }\n    get(key) {\n        return get(this, key, true);\n    }\n    peek(key) {\n        return get(this, key, false);\n    }\n    pop() {\n        const node = this[LRU_LIST].tail;\n        if (!node) return null;\n        del(this, node);\n        return node.value;\n    }\n    del(key) {\n        del(this, this[CACHE].get(key));\n    }\n    load(arr) {\n        // reset the cache\n        this.reset();\n        const now = Date.now();\n        // A previous serialized cache has the most recent items first\n        for(let l = arr.length - 1; l >= 0; l--){\n            const hit = arr[l];\n            const expiresAt = hit.e || 0;\n            if (expiresAt === 0) // the item was created without expiration in a non aged cache\n            this.set(hit.k, hit.v);\n            else {\n                const maxAge = expiresAt - now;\n                // dont add already expired items\n                if (maxAge > 0) {\n                    this.set(hit.k, hit.v, maxAge);\n                }\n            }\n        }\n    }\n    prune() {\n        this[CACHE].forEach((value, key)=>get(this, key, false));\n    }\n}\nconst get = (self, key, doUse)=>{\n    const node = self[CACHE].get(key);\n    if (node) {\n        const hit = node.value;\n        if (isStale(self, hit)) {\n            del(self, node);\n            if (!self[ALLOW_STALE]) return undefined;\n        } else {\n            if (doUse) {\n                if (self[UPDATE_AGE_ON_GET]) node.value.now = Date.now();\n                self[LRU_LIST].unshiftNode(node);\n            }\n        }\n        return hit.value;\n    }\n};\nconst isStale = (self, hit)=>{\n    if (!hit || !hit.maxAge && !self[MAX_AGE]) return false;\n    const diff = Date.now() - hit.now;\n    return hit.maxAge ? diff > hit.maxAge : self[MAX_AGE] && diff > self[MAX_AGE];\n};\nconst trim = (self)=>{\n    if (self[LENGTH] > self[MAX]) {\n        for(let walker = self[LRU_LIST].tail; self[LENGTH] > self[MAX] && walker !== null;){\n            // We know that we're about to delete this one, and also\n            // what the next least recently used key will be, so just\n            // go ahead and set it now.\n            const prev = walker.prev;\n            del(self, walker);\n            walker = prev;\n        }\n    }\n};\nconst del = (self, node)=>{\n    if (node) {\n        const hit = node.value;\n        if (self[DISPOSE]) self[DISPOSE](hit.key, hit.value);\n        self[LENGTH] -= hit.length;\n        self[CACHE].delete(hit.key);\n        self[LRU_LIST].removeNode(node);\n    }\n};\nclass Entry {\n    constructor(key, value, length, now, maxAge){\n        this.key = key;\n        this.value = value;\n        this.length = length;\n        this.now = now;\n        this.maxAge = maxAge || 0;\n    }\n}\nconst forEachStep = (self, fn, node, thisp)=>{\n    let hit = node.value;\n    if (isStale(self, hit)) {\n        del(self, node);\n        if (!self[ALLOW_STALE]) hit = undefined;\n    }\n    if (hit) fn.call(thisp, hit.value, hit.key, self);\n};\nmodule.exports = LRUCache;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/lru-cache/index.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/next-auth/core/errors.js":
/*!***********************************************!*\
  !*** ./node_modules/next-auth/core/errors.js ***!
  \***********************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nvar _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ \"(sc_server)/./node_modules/@babel/runtime/helpers/interopRequireDefault.js\");\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.UnsupportedStrategy = exports.UnknownError = exports.OAuthCallbackError = exports.MissingSecret = exports.MissingAuthorize = exports.MissingAdapterMethods = exports.MissingAdapter = exports.MissingAPIRoute = exports.InvalidCallbackUrl = exports.AccountNotLinkedError = void 0;\nexports.adapterErrorHandler = adapterErrorHandler;\nexports.capitalize = capitalize;\nexports.eventsErrorHandler = eventsErrorHandler;\nexports.upperSnake = upperSnake;\nvar _regenerator = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/regenerator */ \"(sc_server)/./node_modules/@babel/runtime/regenerator/index.js\"));\nvar _asyncToGenerator2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/asyncToGenerator */ \"(sc_server)/./node_modules/@babel/runtime/helpers/asyncToGenerator.js\"));\nvar _assertThisInitialized2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/assertThisInitialized */ \"(sc_server)/./node_modules/@babel/runtime/helpers/assertThisInitialized.js\"));\nvar _defineProperty2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/defineProperty */ \"(sc_server)/./node_modules/@babel/runtime/helpers/defineProperty.js\"));\nvar _classCallCheck2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ \"(sc_server)/./node_modules/@babel/runtime/helpers/classCallCheck.js\"));\nvar _createClass2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/createClass */ \"(sc_server)/./node_modules/@babel/runtime/helpers/createClass.js\"));\nvar _inherits2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/inherits */ \"(sc_server)/./node_modules/@babel/runtime/helpers/inherits.js\"));\nvar _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ \"(sc_server)/./node_modules/@babel/runtime/helpers/possibleConstructorReturn.js\"));\nvar _getPrototypeOf2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ \"(sc_server)/./node_modules/@babel/runtime/helpers/getPrototypeOf.js\"));\nvar _wrapNativeSuper2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/wrapNativeSuper */ \"(sc_server)/./node_modules/@babel/runtime/helpers/wrapNativeSuper.js\"));\nfunction _createSuper(Derived) {\n    var hasNativeReflectConstruct = _isNativeReflectConstruct();\n    return function _createSuperInternal() {\n        var Super = (0, _getPrototypeOf2.default)(Derived), result;\n        if (hasNativeReflectConstruct) {\n            var NewTarget = (0, _getPrototypeOf2.default)(this).constructor;\n            result = Reflect.construct(Super, arguments, NewTarget);\n        } else {\n            result = Super.apply(this, arguments);\n        }\n        return (0, _possibleConstructorReturn2.default)(this, result);\n    };\n}\nfunction _isNativeReflectConstruct() {\n    if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n    if (Reflect.construct.sham) return false;\n    if (typeof Proxy === \"function\") return true;\n    try {\n        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {}));\n        return true;\n    } catch (e) {\n        return false;\n    }\n}\nvar UnknownError = function(_Error) {\n    (0, _inherits2.default)(UnknownError, _Error);\n    var _super = _createSuper(UnknownError);\n    function UnknownError(error) {\n        var _message;\n        var _this;\n        (0, _classCallCheck2.default)(this, UnknownError);\n        _this = _super.call(this, (_message = error === null || error === void 0 ? void 0 : error.message) !== null && _message !== void 0 ? _message : error);\n        _this.name = \"UnknownError\";\n        _this.code = error.code;\n        if (error instanceof Error) {\n            _this.stack = error.stack;\n        }\n        return _this;\n    }\n    (0, _createClass2.default)(UnknownError, [\n        {\n            key: \"toJSON\",\n            value: function toJSON() {\n                return {\n                    name: this.name,\n                    message: this.message,\n                    stack: this.stack\n                };\n            }\n        }\n    ]);\n    return UnknownError;\n}((0, _wrapNativeSuper2.default)(Error));\nexports.UnknownError = UnknownError;\nvar OAuthCallbackError = function(_UnknownError) {\n    (0, _inherits2.default)(OAuthCallbackError, _UnknownError);\n    var _super2 = _createSuper(OAuthCallbackError);\n    function OAuthCallbackError() {\n        var _this2;\n        (0, _classCallCheck2.default)(this, OAuthCallbackError);\n        for(var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++){\n            args[_key] = arguments[_key];\n        }\n        _this2 = _super2.call.apply(_super2, [\n            this\n        ].concat(args));\n        (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this2), \"name\", \"OAuthCallbackError\");\n        return _this2;\n    }\n    return (0, _createClass2.default)(OAuthCallbackError);\n}(UnknownError);\nexports.OAuthCallbackError = OAuthCallbackError;\nvar AccountNotLinkedError = function(_UnknownError2) {\n    (0, _inherits2.default)(AccountNotLinkedError, _UnknownError2);\n    var _super3 = _createSuper(AccountNotLinkedError);\n    function AccountNotLinkedError() {\n        var _this3;\n        (0, _classCallCheck2.default)(this, AccountNotLinkedError);\n        for(var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++){\n            args[_key2] = arguments[_key2];\n        }\n        _this3 = _super3.call.apply(_super3, [\n            this\n        ].concat(args));\n        (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this3), \"name\", \"AccountNotLinkedError\");\n        return _this3;\n    }\n    return (0, _createClass2.default)(AccountNotLinkedError);\n}(UnknownError);\nexports.AccountNotLinkedError = AccountNotLinkedError;\nvar MissingAPIRoute = function(_UnknownError3) {\n    (0, _inherits2.default)(MissingAPIRoute, _UnknownError3);\n    var _super4 = _createSuper(MissingAPIRoute);\n    function MissingAPIRoute() {\n        var _this4;\n        (0, _classCallCheck2.default)(this, MissingAPIRoute);\n        for(var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++){\n            args[_key3] = arguments[_key3];\n        }\n        _this4 = _super4.call.apply(_super4, [\n            this\n        ].concat(args));\n        (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this4), \"name\", \"MissingAPIRouteError\");\n        (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this4), \"code\", \"MISSING_NEXTAUTH_API_ROUTE_ERROR\");\n        return _this4;\n    }\n    return (0, _createClass2.default)(MissingAPIRoute);\n}(UnknownError);\nexports.MissingAPIRoute = MissingAPIRoute;\nvar MissingSecret = function(_UnknownError4) {\n    (0, _inherits2.default)(MissingSecret, _UnknownError4);\n    var _super5 = _createSuper(MissingSecret);\n    function MissingSecret() {\n        var _this5;\n        (0, _classCallCheck2.default)(this, MissingSecret);\n        for(var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++){\n            args[_key4] = arguments[_key4];\n        }\n        _this5 = _super5.call.apply(_super5, [\n            this\n        ].concat(args));\n        (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this5), \"name\", \"MissingSecretError\");\n        (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this5), \"code\", \"NO_SECRET\");\n        return _this5;\n    }\n    return (0, _createClass2.default)(MissingSecret);\n}(UnknownError);\nexports.MissingSecret = MissingSecret;\nvar MissingAuthorize = function(_UnknownError5) {\n    (0, _inherits2.default)(MissingAuthorize, _UnknownError5);\n    var _super6 = _createSuper(MissingAuthorize);\n    function MissingAuthorize() {\n        var _this6;\n        (0, _classCallCheck2.default)(this, MissingAuthorize);\n        for(var _len5 = arguments.length, args = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++){\n            args[_key5] = arguments[_key5];\n        }\n        _this6 = _super6.call.apply(_super6, [\n            this\n        ].concat(args));\n        (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this6), \"name\", \"MissingAuthorizeError\");\n        (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this6), \"code\", \"CALLBACK_CREDENTIALS_HANDLER_ERROR\");\n        return _this6;\n    }\n    return (0, _createClass2.default)(MissingAuthorize);\n}(UnknownError);\nexports.MissingAuthorize = MissingAuthorize;\nvar MissingAdapter = function(_UnknownError6) {\n    (0, _inherits2.default)(MissingAdapter, _UnknownError6);\n    var _super7 = _createSuper(MissingAdapter);\n    function MissingAdapter() {\n        var _this7;\n        (0, _classCallCheck2.default)(this, MissingAdapter);\n        for(var _len6 = arguments.length, args = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++){\n            args[_key6] = arguments[_key6];\n        }\n        _this7 = _super7.call.apply(_super7, [\n            this\n        ].concat(args));\n        (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this7), \"name\", \"MissingAdapterError\");\n        (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this7), \"code\", \"EMAIL_REQUIRES_ADAPTER_ERROR\");\n        return _this7;\n    }\n    return (0, _createClass2.default)(MissingAdapter);\n}(UnknownError);\nexports.MissingAdapter = MissingAdapter;\nvar MissingAdapterMethods = function(_UnknownError7) {\n    (0, _inherits2.default)(MissingAdapterMethods, _UnknownError7);\n    var _super8 = _createSuper(MissingAdapterMethods);\n    function MissingAdapterMethods() {\n        var _this8;\n        (0, _classCallCheck2.default)(this, MissingAdapterMethods);\n        for(var _len7 = arguments.length, args = new Array(_len7), _key7 = 0; _key7 < _len7; _key7++){\n            args[_key7] = arguments[_key7];\n        }\n        _this8 = _super8.call.apply(_super8, [\n            this\n        ].concat(args));\n        (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this8), \"name\", \"MissingAdapterMethodsError\");\n        (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this8), \"code\", \"MISSING_ADAPTER_METHODS_ERROR\");\n        return _this8;\n    }\n    return (0, _createClass2.default)(MissingAdapterMethods);\n}(UnknownError);\nexports.MissingAdapterMethods = MissingAdapterMethods;\nvar UnsupportedStrategy = function(_UnknownError8) {\n    (0, _inherits2.default)(UnsupportedStrategy, _UnknownError8);\n    var _super9 = _createSuper(UnsupportedStrategy);\n    function UnsupportedStrategy() {\n        var _this9;\n        (0, _classCallCheck2.default)(this, UnsupportedStrategy);\n        for(var _len8 = arguments.length, args = new Array(_len8), _key8 = 0; _key8 < _len8; _key8++){\n            args[_key8] = arguments[_key8];\n        }\n        _this9 = _super9.call.apply(_super9, [\n            this\n        ].concat(args));\n        (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this9), \"name\", \"UnsupportedStrategyError\");\n        (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this9), \"code\", \"CALLBACK_CREDENTIALS_JWT_ERROR\");\n        return _this9;\n    }\n    return (0, _createClass2.default)(UnsupportedStrategy);\n}(UnknownError);\nexports.UnsupportedStrategy = UnsupportedStrategy;\nvar InvalidCallbackUrl = function(_UnknownError9) {\n    (0, _inherits2.default)(InvalidCallbackUrl, _UnknownError9);\n    var _super10 = _createSuper(InvalidCallbackUrl);\n    function InvalidCallbackUrl() {\n        var _this10;\n        (0, _classCallCheck2.default)(this, InvalidCallbackUrl);\n        for(var _len9 = arguments.length, args = new Array(_len9), _key9 = 0; _key9 < _len9; _key9++){\n            args[_key9] = arguments[_key9];\n        }\n        _this10 = _super10.call.apply(_super10, [\n            this\n        ].concat(args));\n        (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this10), \"name\", \"InvalidCallbackUrl\");\n        (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this10), \"code\", \"INVALID_CALLBACK_URL_ERROR\");\n        return _this10;\n    }\n    return (0, _createClass2.default)(InvalidCallbackUrl);\n}(UnknownError);\nexports.InvalidCallbackUrl = InvalidCallbackUrl;\nfunction upperSnake(s) {\n    return s.replace(/([A-Z])/g, \"_$1\").toUpperCase();\n}\nfunction capitalize(s) {\n    return \"\".concat(s[0].toUpperCase()).concat(s.slice(1));\n}\nfunction eventsErrorHandler(methods, logger) {\n    return Object.keys(methods).reduce(function(acc, name) {\n        acc[name] = (0, _asyncToGenerator2.default)(_regenerator.default.mark(function _callee() {\n            var method, _args = arguments;\n            return _regenerator.default.wrap(function _callee$(_context) {\n                while(1){\n                    switch(_context.prev = _context.next){\n                        case 0:\n                            _context.prev = 0;\n                            method = methods[name];\n                            _context.next = 4;\n                            return method.apply(void 0, _args);\n                        case 4:\n                            return _context.abrupt(\"return\", _context.sent);\n                        case 7:\n                            _context.prev = 7;\n                            _context.t0 = _context[\"catch\"](0);\n                            logger.error(\"\".concat(upperSnake(name), \"_EVENT_ERROR\"), _context.t0);\n                        case 10:\n                        case \"end\":\n                            return _context.stop();\n                    }\n                }\n            }, _callee, null, [\n                [\n                    0,\n                    7\n                ]\n            ]);\n        }));\n        return acc;\n    }, {});\n}\nfunction adapterErrorHandler(adapter, logger) {\n    if (!adapter) return;\n    return Object.keys(adapter).reduce(function(acc, name) {\n        acc[name] = (0, _asyncToGenerator2.default)(_regenerator.default.mark(function _callee2() {\n            var _len10, args, _key10, method, e, _args2 = arguments;\n            return _regenerator.default.wrap(function _callee2$(_context2) {\n                while(1){\n                    switch(_context2.prev = _context2.next){\n                        case 0:\n                            _context2.prev = 0;\n                            for(_len10 = _args2.length, args = new Array(_len10), _key10 = 0; _key10 < _len10; _key10++){\n                                args[_key10] = _args2[_key10];\n                            }\n                            logger.debug(\"adapter_\".concat(name), {\n                                args: args\n                            });\n                            method = adapter[name];\n                            _context2.next = 6;\n                            return method.apply(void 0, args);\n                        case 6:\n                            return _context2.abrupt(\"return\", _context2.sent);\n                        case 9:\n                            _context2.prev = 9;\n                            _context2.t0 = _context2[\"catch\"](0);\n                            logger.error(\"adapter_error_\".concat(name), _context2.t0);\n                            e = new UnknownError(_context2.t0);\n                            e.name = \"\".concat(capitalize(name), \"Error\");\n                            throw e;\n                        case 15:\n                        case \"end\":\n                            return _context2.stop();\n                    }\n                }\n            }, _callee2, null, [\n                [\n                    0,\n                    9\n                ]\n            ]);\n        }));\n        return acc;\n    }, {});\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/next-auth/core/errors.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/next-auth/core/index.js":
/*!**********************************************!*\
  !*** ./node_modules/next-auth/core/index.js ***!
  \**********************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nvar _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ \"(sc_server)/./node_modules/@babel/runtime/helpers/interopRequireDefault.js\");\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.AuthHandler = AuthHandler;\nvar _logger = _interopRequireWildcard(__webpack_require__(/*! ../utils/logger */ \"(sc_server)/./node_modules/next-auth/utils/logger.js\"));\nvar _detectOrigin = __webpack_require__(/*! ../utils/detect-origin */ \"(sc_server)/./node_modules/next-auth/utils/detect-origin.js\");\nvar routes = _interopRequireWildcard(__webpack_require__(/*! ./routes */ \"(sc_server)/./node_modules/next-auth/core/routes/index.js\"));\nvar _pages = _interopRequireDefault(__webpack_require__(/*! ./pages */ \"(sc_server)/./node_modules/next-auth/core/pages/index.js\"));\nvar _init = __webpack_require__(/*! ./init */ \"(sc_server)/./node_modules/next-auth/core/init.js\");\nvar _assert = __webpack_require__(/*! ./lib/assert */ \"(sc_server)/./node_modules/next-auth/core/lib/assert.js\");\nvar _cookie = __webpack_require__(/*! ./lib/cookie */ \"(sc_server)/./node_modules/next-auth/core/lib/cookie.js\");\nvar _cookie2 = __webpack_require__(/*! cookie */ \"(sc_server)/./node_modules/cookie/index.js\");\nfunction _getRequireWildcardCache(nodeInterop) {\n    if (typeof WeakMap !== \"function\") return null;\n    var cacheBabelInterop = new WeakMap();\n    var cacheNodeInterop = new WeakMap();\n    return (_getRequireWildcardCache = function(nodeInterop) {\n        return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n    })(nodeInterop);\n}\nfunction _interopRequireWildcard(obj, nodeInterop) {\n    if (!nodeInterop && obj && obj.__esModule) {\n        return obj;\n    }\n    if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n        return {\n            default: obj\n        };\n    }\n    var cache = _getRequireWildcardCache(nodeInterop);\n    if (cache && cache.has(obj)) {\n        return cache.get(obj);\n    }\n    var newObj = {};\n    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n    for(var key in obj){\n        if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n            if (desc && (desc.get || desc.set)) {\n                Object.defineProperty(newObj, key, desc);\n            } else {\n                newObj[key] = obj[key];\n            }\n        }\n    }\n    newObj.default = obj;\n    if (cache) {\n        cache.set(obj, newObj);\n    }\n    return newObj;\n}\nasync function getBody(req) {\n    try {\n        return await req.json();\n    } catch (_unused) {}\n}\nasync function toInternalRequest(req) {\n    var _headers$xForwarded2;\n    if (req instanceof Request) {\n        var _req$headers$get, _url$searchParams$get, _headers$xForwarded;\n        const url = new URL(req.url);\n        const nextauth = url.pathname.split(\"/\").slice(3);\n        const headers = Object.fromEntries(req.headers);\n        const query = Object.fromEntries(url.searchParams);\n        query.nextauth = nextauth;\n        return {\n            action: nextauth[0],\n            method: req.method,\n            headers,\n            body: await getBody(req),\n            cookies: (0, _cookie2.parse)((_req$headers$get = req.headers.get(\"cookie\")) !== null && _req$headers$get !== void 0 ? _req$headers$get : \"\"),\n            providerId: nextauth[1],\n            error: (_url$searchParams$get = url.searchParams.get(\"error\")) !== null && _url$searchParams$get !== void 0 ? _url$searchParams$get : nextauth[1],\n            origin: (0, _detectOrigin.detectOrigin)((_headers$xForwarded = headers[\"x-forwarded-host\"]) !== null && _headers$xForwarded !== void 0 ? _headers$xForwarded : headers.host, headers[\"x-forwarded-proto\"]),\n            query\n        };\n    }\n    const { headers  } = req;\n    const host = (_headers$xForwarded2 = headers === null || headers === void 0 ? void 0 : headers[\"x-forwarded-host\"]) !== null && _headers$xForwarded2 !== void 0 ? _headers$xForwarded2 : headers === null || headers === void 0 ? void 0 : headers.host;\n    req.origin = (0, _detectOrigin.detectOrigin)(host, headers === null || headers === void 0 ? void 0 : headers[\"x-forwarded-proto\"]);\n    return req;\n}\nasync function AuthHandler(params) {\n    var _req$body$callbackUrl, _req$body, _req$query2, _req$body2;\n    const { options: authOptions , req: incomingRequest  } = params;\n    const req = await toInternalRequest(incomingRequest);\n    (0, _logger.setLogger)(authOptions.logger, authOptions.debug);\n    const assertionResult = (0, _assert.assertConfig)({\n        options: authOptions,\n        req\n    });\n    if (Array.isArray(assertionResult)) {\n        assertionResult.forEach(_logger.default.warn);\n    } else if (assertionResult instanceof Error) {\n        var _req$query, _req$query$callbackUr;\n        _logger.default.error(assertionResult.code, assertionResult);\n        const htmlPages = [\n            \"signin\",\n            \"signout\",\n            \"error\",\n            \"verify-request\"\n        ];\n        if (!htmlPages.includes(req.action) || req.method !== \"GET\") {\n            const message = `There is a problem with the server configuration. Check the server logs for more information.`;\n            return {\n                status: 500,\n                headers: [\n                    {\n                        key: \"Content-Type\",\n                        value: \"application/json\"\n                    }\n                ],\n                body: {\n                    message\n                }\n            };\n        }\n        const { pages , theme  } = authOptions;\n        const authOnErrorPage = (pages === null || pages === void 0 ? void 0 : pages.error) && ((_req$query = req.query) === null || _req$query === void 0 ? void 0 : (_req$query$callbackUr = _req$query.callbackUrl) === null || _req$query$callbackUr === void 0 ? void 0 : _req$query$callbackUr.startsWith(pages.error));\n        if (!(pages !== null && pages !== void 0 && pages.error) || authOnErrorPage) {\n            if (authOnErrorPage) {\n                _logger.default.error(\"AUTH_ON_ERROR_PAGE_ERROR\", new Error(`The error page ${pages === null || pages === void 0 ? void 0 : pages.error} should not require authentication`));\n            }\n            const render = (0, _pages.default)({\n                theme\n            });\n            return render.error({\n                error: \"configuration\"\n            });\n        }\n        return {\n            redirect: `${pages.error}?error=Configuration`\n        };\n    }\n    const { action , providerId , error , method =\"GET\"  } = req;\n    const { options , cookies  } = await (0, _init.init)({\n        authOptions,\n        action,\n        providerId,\n        origin: req.origin,\n        callbackUrl: (_req$body$callbackUrl = (_req$body = req.body) === null || _req$body === void 0 ? void 0 : _req$body.callbackUrl) !== null && _req$body$callbackUrl !== void 0 ? _req$body$callbackUrl : (_req$query2 = req.query) === null || _req$query2 === void 0 ? void 0 : _req$query2.callbackUrl,\n        csrfToken: (_req$body2 = req.body) === null || _req$body2 === void 0 ? void 0 : _req$body2.csrfToken,\n        cookies: req.cookies,\n        isPost: method === \"POST\"\n    });\n    const sessionStore = new _cookie.SessionStore(options.cookies.sessionToken, req, options.logger);\n    if (method === \"GET\") {\n        const render = (0, _pages.default)({\n            ...options,\n            query: req.query,\n            cookies\n        });\n        const { pages  } = options;\n        switch(action){\n            case \"providers\":\n                return await routes.providers(options.providers);\n            case \"session\":\n                {\n                    const session = await routes.session({\n                        options,\n                        sessionStore\n                    });\n                    if (session.cookies) cookies.push(...session.cookies);\n                    return {\n                        ...session,\n                        cookies\n                    };\n                }\n            case \"csrf\":\n                return {\n                    headers: [\n                        {\n                            key: \"Content-Type\",\n                            value: \"application/json\"\n                        }\n                    ],\n                    body: {\n                        csrfToken: options.csrfToken\n                    },\n                    cookies\n                };\n            case \"signin\":\n                if (pages.signIn) {\n                    let signinUrl = `${pages.signIn}${pages.signIn.includes(\"?\") ? \"&\" : \"?\"}callbackUrl=${encodeURIComponent(options.callbackUrl)}`;\n                    if (error) signinUrl = `${signinUrl}&error=${encodeURIComponent(error)}`;\n                    return {\n                        redirect: signinUrl,\n                        cookies\n                    };\n                }\n                return render.signin();\n            case \"signout\":\n                if (pages.signOut) return {\n                    redirect: pages.signOut,\n                    cookies\n                };\n                return render.signout();\n            case \"callback\":\n                if (options.provider) {\n                    const callback = await routes.callback({\n                        body: req.body,\n                        query: req.query,\n                        headers: req.headers,\n                        cookies: req.cookies,\n                        method,\n                        options,\n                        sessionStore\n                    });\n                    if (callback.cookies) cookies.push(...callback.cookies);\n                    return {\n                        ...callback,\n                        cookies\n                    };\n                }\n                break;\n            case \"verify-request\":\n                if (pages.verifyRequest) {\n                    return {\n                        redirect: pages.verifyRequest,\n                        cookies\n                    };\n                }\n                return render.verifyRequest();\n            case \"error\":\n                if ([\n                    \"Signin\",\n                    \"OAuthSignin\",\n                    \"OAuthCallback\",\n                    \"OAuthCreateAccount\",\n                    \"EmailCreateAccount\",\n                    \"Callback\",\n                    \"OAuthAccountNotLinked\",\n                    \"EmailSignin\",\n                    \"CredentialsSignin\",\n                    \"SessionRequired\"\n                ].includes(error)) {\n                    return {\n                        redirect: `${options.url}/signin?error=${error}`,\n                        cookies\n                    };\n                }\n                if (pages.error) {\n                    return {\n                        redirect: `${pages.error}${pages.error.includes(\"?\") ? \"&\" : \"?\"}error=${error}`,\n                        cookies\n                    };\n                }\n                return render.error({\n                    error: error\n                });\n            default:\n        }\n    } else if (method === \"POST\") {\n        switch(action){\n            case \"signin\":\n                if (options.csrfTokenVerified && options.provider) {\n                    const signin = await routes.signin({\n                        query: req.query,\n                        body: req.body,\n                        options\n                    });\n                    if (signin.cookies) cookies.push(...signin.cookies);\n                    return {\n                        ...signin,\n                        cookies\n                    };\n                }\n                return {\n                    redirect: `${options.url}/signin?csrf=true`,\n                    cookies\n                };\n            case \"signout\":\n                if (options.csrfTokenVerified) {\n                    const signout = await routes.signout({\n                        options,\n                        sessionStore\n                    });\n                    if (signout.cookies) cookies.push(...signout.cookies);\n                    return {\n                        ...signout,\n                        cookies\n                    };\n                }\n                return {\n                    redirect: `${options.url}/signout?csrf=true`,\n                    cookies\n                };\n            case \"callback\":\n                if (options.provider) {\n                    if (options.provider.type === \"credentials\" && !options.csrfTokenVerified) {\n                        return {\n                            redirect: `${options.url}/signin?csrf=true`,\n                            cookies\n                        };\n                    }\n                    const callback = await routes.callback({\n                        body: req.body,\n                        query: req.query,\n                        headers: req.headers,\n                        cookies: req.cookies,\n                        method,\n                        options,\n                        sessionStore\n                    });\n                    if (callback.cookies) cookies.push(...callback.cookies);\n                    return {\n                        ...callback,\n                        cookies\n                    };\n                }\n                break;\n            case \"_log\":\n                {\n                    if (authOptions.logger) {\n                        try {\n                            var _req$body3;\n                            const { code , level , ...metadata } = (_req$body3 = req.body) !== null && _req$body3 !== void 0 ? _req$body3 : {};\n                            _logger.default[level](code, metadata);\n                        } catch (error) {\n                            _logger.default.error(\"LOGGER_ERROR\", error);\n                        }\n                    }\n                    return {};\n                }\n            case \"session\":\n                {\n                    if (options.csrfTokenVerified) {\n                        var _req$body4;\n                        const session = await routes.session({\n                            options,\n                            sessionStore,\n                            newSession: (_req$body4 = req.body) === null || _req$body4 === void 0 ? void 0 : _req$body4.data,\n                            isUpdate: true\n                        });\n                        if (session.cookies) cookies.push(...session.cookies);\n                        return {\n                            ...session,\n                            cookies\n                        };\n                    }\n                    return {\n                        status: 400,\n                        body: {},\n                        cookies\n                    };\n                }\n            default:\n        }\n    }\n    return {\n        status: 400,\n        body: `Error: This action with HTTP ${method} is not supported by NextAuth.js`\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/next-auth/core/index.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/next-auth/core/init.js":
/*!*********************************************!*\
  !*** ./node_modules/next-auth/core/init.js ***!
  \*********************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nvar _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ \"(sc_server)/./node_modules/@babel/runtime/helpers/interopRequireDefault.js\");\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.init = init;\nvar _crypto = __webpack_require__(/*! crypto */ \"crypto\");\nvar _logger = _interopRequireDefault(__webpack_require__(/*! ../utils/logger */ \"(sc_server)/./node_modules/next-auth/utils/logger.js\"));\nvar _errors = __webpack_require__(/*! ./errors */ \"(sc_server)/./node_modules/next-auth/core/errors.js\");\nvar _providers = _interopRequireDefault(__webpack_require__(/*! ./lib/providers */ \"(sc_server)/./node_modules/next-auth/core/lib/providers.js\"));\nvar _utils = __webpack_require__(/*! ./lib/utils */ \"(sc_server)/./node_modules/next-auth/core/lib/utils.js\");\nvar cookie = _interopRequireWildcard(__webpack_require__(/*! ./lib/cookie */ \"(sc_server)/./node_modules/next-auth/core/lib/cookie.js\"));\nvar jwt = _interopRequireWildcard(__webpack_require__(/*! ../jwt */ \"(sc_server)/./node_modules/next-auth/jwt/index.js\"));\nvar _defaultCallbacks = __webpack_require__(/*! ./lib/default-callbacks */ \"(sc_server)/./node_modules/next-auth/core/lib/default-callbacks.js\");\nvar _csrfToken = __webpack_require__(/*! ./lib/csrf-token */ \"(sc_server)/./node_modules/next-auth/core/lib/csrf-token.js\");\nvar _callbackUrl = __webpack_require__(/*! ./lib/callback-url */ \"(sc_server)/./node_modules/next-auth/core/lib/callback-url.js\");\nvar _parseUrl = _interopRequireDefault(__webpack_require__(/*! ../utils/parse-url */ \"(sc_server)/./node_modules/next-auth/utils/parse-url.js\"));\nfunction _getRequireWildcardCache(nodeInterop) {\n    if (typeof WeakMap !== \"function\") return null;\n    var cacheBabelInterop = new WeakMap();\n    var cacheNodeInterop = new WeakMap();\n    return (_getRequireWildcardCache = function(nodeInterop) {\n        return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n    })(nodeInterop);\n}\nfunction _interopRequireWildcard(obj, nodeInterop) {\n    if (!nodeInterop && obj && obj.__esModule) {\n        return obj;\n    }\n    if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n        return {\n            default: obj\n        };\n    }\n    var cache = _getRequireWildcardCache(nodeInterop);\n    if (cache && cache.has(obj)) {\n        return cache.get(obj);\n    }\n    var newObj = {};\n    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n    for(var key in obj){\n        if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n            if (desc && (desc.get || desc.set)) {\n                Object.defineProperty(newObj, key, desc);\n            } else {\n                newObj[key] = obj[key];\n            }\n        }\n    }\n    newObj.default = obj;\n    if (cache) {\n        cache.set(obj, newObj);\n    }\n    return newObj;\n}\nasync function init({ authOptions , providerId , action , origin , cookies: reqCookies , callbackUrl: reqCallbackUrl , csrfToken: reqCsrfToken , isPost  }) {\n    var _authOptions$useSecur, _authOptions$events;\n    const url = (0, _parseUrl.default)(origin);\n    const secret = (0, _utils.createSecret)({\n        authOptions,\n        url\n    });\n    const { providers , provider  } = (0, _providers.default)({\n        providers: authOptions.providers,\n        url,\n        providerId\n    });\n    const maxAge = 30 * 24 * 60 * 60;\n    const options = {\n        debug: false,\n        pages: {},\n        theme: {\n            colorScheme: \"auto\",\n            logo: \"\",\n            brandColor: \"\",\n            buttonText: \"\"\n        },\n        ...authOptions,\n        url,\n        action,\n        provider,\n        cookies: {\n            ...cookie.defaultCookies((_authOptions$useSecur = authOptions.useSecureCookies) !== null && _authOptions$useSecur !== void 0 ? _authOptions$useSecur : url.base.startsWith(\"https://\")),\n            ...authOptions.cookies\n        },\n        secret,\n        providers,\n        session: {\n            strategy: authOptions.adapter ? \"database\" : \"jwt\",\n            maxAge,\n            updateAge: 24 * 60 * 60,\n            generateSessionToken: ()=>{\n                var _randomUUID;\n                return (_randomUUID = _crypto.randomUUID === null || _crypto.randomUUID === void 0 ? void 0 : (0, _crypto.randomUUID)()) !== null && _randomUUID !== void 0 ? _randomUUID : (0, _crypto.randomBytes)(32).toString(\"hex\");\n            },\n            ...authOptions.session\n        },\n        jwt: {\n            secret,\n            maxAge,\n            encode: jwt.encode,\n            decode: jwt.decode,\n            ...authOptions.jwt\n        },\n        events: (0, _errors.eventsErrorHandler)((_authOptions$events = authOptions.events) !== null && _authOptions$events !== void 0 ? _authOptions$events : {}, _logger.default),\n        adapter: (0, _errors.adapterErrorHandler)(authOptions.adapter, _logger.default),\n        callbacks: {\n            ..._defaultCallbacks.defaultCallbacks,\n            ...authOptions.callbacks\n        },\n        logger: _logger.default,\n        callbackUrl: url.origin\n    };\n    const cookies = [];\n    const { csrfToken , cookie: csrfCookie , csrfTokenVerified  } = (0, _csrfToken.createCSRFToken)({\n        options,\n        cookieValue: reqCookies === null || reqCookies === void 0 ? void 0 : reqCookies[options.cookies.csrfToken.name],\n        isPost,\n        bodyValue: reqCsrfToken\n    });\n    options.csrfToken = csrfToken;\n    options.csrfTokenVerified = csrfTokenVerified;\n    if (csrfCookie) {\n        cookies.push({\n            name: options.cookies.csrfToken.name,\n            value: csrfCookie,\n            options: options.cookies.csrfToken.options\n        });\n    }\n    const { callbackUrl , callbackUrlCookie  } = await (0, _callbackUrl.createCallbackUrl)({\n        options,\n        cookieValue: reqCookies === null || reqCookies === void 0 ? void 0 : reqCookies[options.cookies.callbackUrl.name],\n        paramValue: reqCallbackUrl\n    });\n    options.callbackUrl = callbackUrl;\n    if (callbackUrlCookie) {\n        cookies.push({\n            name: options.cookies.callbackUrl.name,\n            value: callbackUrlCookie,\n            options: options.cookies.callbackUrl.options\n        });\n    }\n    return {\n        options,\n        cookies\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/next-auth/core/init.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/next-auth/core/lib/assert.js":
/*!***************************************************!*\
  !*** ./node_modules/next-auth/core/lib/assert.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nvar _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ \"(sc_server)/./node_modules/@babel/runtime/helpers/interopRequireDefault.js\");\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.assertConfig = assertConfig;\nvar _errors = __webpack_require__(/*! ../errors */ \"(sc_server)/./node_modules/next-auth/core/errors.js\");\nvar _parseUrl = _interopRequireDefault(__webpack_require__(/*! ../../utils/parse-url */ \"(sc_server)/./node_modules/next-auth/utils/parse-url.js\"));\nvar _cookie = __webpack_require__(/*! ./cookie */ \"(sc_server)/./node_modules/next-auth/core/lib/cookie.js\");\nlet warned = false;\nfunction isValidHttpUrl(url, baseUrl) {\n    try {\n        return /^https?:/.test(new URL(url, url.startsWith(\"/\") ? baseUrl : undefined).protocol);\n    } catch (_unused) {\n        return false;\n    }\n}\nfunction assertConfig(params) {\n    var _req$query, _req$query2, _options$useSecureCoo, _req$cookies, _options$cookies$call, _options$cookies, _options$cookies$call2;\n    const { options , req  } = params;\n    const warnings = [];\n    if (!warned) {\n        if (!req.origin) warnings.push(\"NEXTAUTH_URL\");\n        if (!options.secret && \"development\" !== \"production\") warnings.push(\"NO_SECRET\");\n        if (options.debug) warnings.push(\"DEBUG_ENABLED\");\n    }\n    if (!options.secret && \"development\" === \"production\") {}\n    if (!((_req$query = req.query) !== null && _req$query !== void 0 && _req$query.nextauth) && !req.action) {\n        return new _errors.MissingAPIRoute(\"Cannot find [...nextauth].{js,ts} in `/pages/api/auth`. Make sure the filename is written correctly.\");\n    }\n    const callbackUrlParam = (_req$query2 = req.query) === null || _req$query2 === void 0 ? void 0 : _req$query2.callbackUrl;\n    const url = (0, _parseUrl.default)(req.origin);\n    if (callbackUrlParam && !isValidHttpUrl(callbackUrlParam, url.base)) {\n        return new _errors.InvalidCallbackUrl(`Invalid callback URL. Received: ${callbackUrlParam}`);\n    }\n    const { callbackUrl: defaultCallbackUrl  } = (0, _cookie.defaultCookies)((_options$useSecureCoo = options.useSecureCookies) !== null && _options$useSecureCoo !== void 0 ? _options$useSecureCoo : url.base.startsWith(\"https://\"));\n    const callbackUrlCookie = (_req$cookies = req.cookies) === null || _req$cookies === void 0 ? void 0 : _req$cookies[(_options$cookies$call = (_options$cookies = options.cookies) === null || _options$cookies === void 0 ? void 0 : (_options$cookies$call2 = _options$cookies.callbackUrl) === null || _options$cookies$call2 === void 0 ? void 0 : _options$cookies$call2.name) !== null && _options$cookies$call !== void 0 ? _options$cookies$call : defaultCallbackUrl.name];\n    if (callbackUrlCookie && !isValidHttpUrl(callbackUrlCookie, url.base)) {\n        return new _errors.InvalidCallbackUrl(`Invalid callback URL. Received: ${callbackUrlCookie}`);\n    }\n    let hasCredentials, hasEmail;\n    let hasTwitterOAuth2;\n    for (const provider of options.providers){\n        if (provider.type === \"credentials\") hasCredentials = true;\n        else if (provider.type === \"email\") hasEmail = true;\n        else if (provider.id === \"twitter\" && provider.version === \"2.0\") hasTwitterOAuth2 = true;\n    }\n    if (hasCredentials) {\n        var _options$session;\n        const dbStrategy = ((_options$session = options.session) === null || _options$session === void 0 ? void 0 : _options$session.strategy) === \"database\";\n        const onlyCredentials = !options.providers.some((p)=>p.type !== \"credentials\");\n        if (dbStrategy && onlyCredentials) {\n            return new _errors.UnsupportedStrategy(\"Signin in with credentials only supported if JWT strategy is enabled\");\n        }\n        const credentialsNoAuthorize = options.providers.some((p)=>p.type === \"credentials\" && !p.authorize);\n        if (credentialsNoAuthorize) {\n            return new _errors.MissingAuthorize(\"Must define an authorize() handler to use credentials authentication provider\");\n        }\n    }\n    if (hasEmail) {\n        const { adapter  } = options;\n        if (!adapter) {\n            return new _errors.MissingAdapter(\"E-mail login requires an adapter.\");\n        }\n        const missingMethods = [\n            \"createVerificationToken\",\n            \"useVerificationToken\",\n            \"getUserByEmail\"\n        ].filter((method)=>!adapter[method]);\n        if (missingMethods.length) {\n            return new _errors.MissingAdapterMethods(`Required adapter methods were missing: ${missingMethods.join(\", \")}`);\n        }\n    }\n    if (!warned) {\n        if (hasTwitterOAuth2) warnings.push(\"TWITTER_OAUTH_2_BETA\");\n        warned = true;\n    }\n    return warnings;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/next-auth/core/lib/assert.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/next-auth/core/lib/callback-handler.js":
/*!*************************************************************!*\
  !*** ./node_modules/next-auth/core/lib/callback-handler.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports[\"default\"] = callbackHandler;\nvar _errors = __webpack_require__(/*! ../errors */ \"(sc_server)/./node_modules/next-auth/core/errors.js\");\nvar _utils = __webpack_require__(/*! ./utils */ \"(sc_server)/./node_modules/next-auth/core/lib/utils.js\");\nasync function callbackHandler(params) {\n    const { sessionToken , profile: _profile , account , options  } = params;\n    if (!(account !== null && account !== void 0 && account.providerAccountId) || !account.type) throw new Error(\"Missing or invalid provider account\");\n    if (![\n        \"email\",\n        \"oauth\"\n    ].includes(account.type)) throw new Error(\"Provider not supported\");\n    const { adapter , jwt , events , session: { strategy: sessionStrategy , generateSessionToken  }  } = options;\n    if (!adapter) {\n        return {\n            user: _profile,\n            account\n        };\n    }\n    const profile = _profile;\n    const { createUser , updateUser , getUser , getUserByAccount , getUserByEmail , linkAccount , createSession , getSessionAndUser , deleteSession  } = adapter;\n    let session = null;\n    let user = null;\n    let isNewUser = false;\n    const useJwtSession = sessionStrategy === \"jwt\";\n    if (sessionToken) {\n        if (useJwtSession) {\n            try {\n                session = await jwt.decode({\n                    ...jwt,\n                    token: sessionToken\n                });\n                if (session && \"sub\" in session && session.sub) {\n                    user = await getUser(session.sub);\n                }\n            } catch (_unused) {}\n        } else {\n            const userAndSession = await getSessionAndUser(sessionToken);\n            if (userAndSession) {\n                session = userAndSession.session;\n                user = userAndSession.user;\n            }\n        }\n    }\n    if (account.type === \"email\") {\n        const userByEmail = await getUserByEmail(profile.email);\n        if (userByEmail) {\n            var _user, _events$updateUser;\n            if (((_user = user) === null || _user === void 0 ? void 0 : _user.id) !== userByEmail.id && !useJwtSession && sessionToken) {\n                await deleteSession(sessionToken);\n            }\n            user = await updateUser({\n                id: userByEmail.id,\n                emailVerified: new Date()\n            });\n            await ((_events$updateUser = events.updateUser) === null || _events$updateUser === void 0 ? void 0 : _events$updateUser.call(events, {\n                user\n            }));\n        } else {\n            var _events$createUser;\n            const { id: _ , ...newUser } = {\n                ...profile,\n                emailVerified: new Date()\n            };\n            user = await createUser(newUser);\n            await ((_events$createUser = events.createUser) === null || _events$createUser === void 0 ? void 0 : _events$createUser.call(events, {\n                user\n            }));\n            isNewUser = true;\n        }\n        session = useJwtSession ? {} : await createSession({\n            sessionToken: await generateSessionToken(),\n            userId: user.id,\n            expires: (0, _utils.fromDate)(options.session.maxAge)\n        });\n        return {\n            session,\n            user,\n            isNewUser\n        };\n    } else if (account.type === \"oauth\") {\n        const userByAccount = await getUserByAccount({\n            providerAccountId: account.providerAccountId,\n            provider: account.provider\n        });\n        if (userByAccount) {\n            if (user) {\n                if (userByAccount.id === user.id) {\n                    return {\n                        session,\n                        user,\n                        isNewUser\n                    };\n                }\n                throw new _errors.AccountNotLinkedError(\"The account is already associated with another user\");\n            }\n            session = useJwtSession ? {} : await createSession({\n                sessionToken: await generateSessionToken(),\n                userId: userByAccount.id,\n                expires: (0, _utils.fromDate)(options.session.maxAge)\n            });\n            return {\n                session,\n                user: userByAccount,\n                isNewUser\n            };\n        } else {\n            var _events$createUser2, _events$linkAccount2;\n            if (user) {\n                var _events$linkAccount;\n                await linkAccount({\n                    ...account,\n                    userId: user.id\n                });\n                await ((_events$linkAccount = events.linkAccount) === null || _events$linkAccount === void 0 ? void 0 : _events$linkAccount.call(events, {\n                    user,\n                    account,\n                    profile\n                }));\n                return {\n                    session,\n                    user,\n                    isNewUser\n                };\n            }\n            const userByEmail = profile.email ? await getUserByEmail(profile.email) : null;\n            if (userByEmail) {\n                const provider = options.provider;\n                if (provider !== null && provider !== void 0 && provider.allowDangerousEmailAccountLinking) {\n                    user = userByEmail;\n                } else {\n                    throw new _errors.AccountNotLinkedError(\"Another account already exists with the same e-mail address\");\n                }\n            } else {\n                const { id: _ , ...newUser } = {\n                    ...profile,\n                    emailVerified: null\n                };\n                user = await createUser(newUser);\n            }\n            await ((_events$createUser2 = events.createUser) === null || _events$createUser2 === void 0 ? void 0 : _events$createUser2.call(events, {\n                user\n            }));\n            await linkAccount({\n                ...account,\n                userId: user.id\n            });\n            await ((_events$linkAccount2 = events.linkAccount) === null || _events$linkAccount2 === void 0 ? void 0 : _events$linkAccount2.call(events, {\n                user,\n                account,\n                profile\n            }));\n            session = useJwtSession ? {} : await createSession({\n                sessionToken: await generateSessionToken(),\n                userId: user.id,\n                expires: (0, _utils.fromDate)(options.session.maxAge)\n            });\n            return {\n                session,\n                user,\n                isNewUser: true\n            };\n        }\n    }\n    throw new Error(\"Unsupported account type\");\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/next-auth/core/lib/callback-handler.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/next-auth/core/lib/callback-url.js":
/*!*********************************************************!*\
  !*** ./node_modules/next-auth/core/lib/callback-url.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.createCallbackUrl = createCallbackUrl;\nasync function createCallbackUrl({ options , paramValue , cookieValue  }) {\n    const { url , callbacks  } = options;\n    let callbackUrl = url.origin;\n    if (paramValue) {\n        callbackUrl = await callbacks.redirect({\n            url: paramValue,\n            baseUrl: url.origin\n        });\n    } else if (cookieValue) {\n        callbackUrl = await callbacks.redirect({\n            url: cookieValue,\n            baseUrl: url.origin\n        });\n    }\n    return {\n        callbackUrl,\n        callbackUrlCookie: callbackUrl !== cookieValue ? callbackUrl : undefined\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL2NvcmUvbGliL2NhbGxiYWNrLXVybC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUViQSw4Q0FBNkM7SUFDM0NHLE9BQU87QUFDVCxDQUFDLEVBQUM7QUFDRkQseUJBQXlCRSxHQUFHQTtBQUU1QixlQUFlQSxrQkFBa0IsRUFDL0JDLFFBQU8sRUFDUEMsV0FBVSxFQUNWQyxZQUFXLEVBQ1o7SUFDQyxNQUFNLEVBQ0pDLElBQUcsRUFDSEMsVUFBUyxFQUNWLEdBQUdKO0lBQ0osSUFBSUssY0FBY0YsSUFBSUc7SUFFdEIsSUFBSUwsWUFBWTtRQUNkSSxjQUFjLE1BQU1ELFVBQVVHLFNBQVM7WUFDckNKLEtBQUtGO1lBQ0xPLFNBQVNMLElBQUlHO1FBQ2Y7SUFDRixPQUFPLElBQUlKLGFBQWE7UUFDdEJHLGNBQWMsTUFBTUQsVUFBVUcsU0FBUztZQUNyQ0osS0FBS0Q7WUFDTE0sU0FBU0wsSUFBSUc7UUFDZjtJQUNGO0lBRUEsT0FBTztRQUNMRDtRQUNBSSxtQkFBbUJKLGdCQUFnQkgsY0FBY0csY0FBY0s7SUFDakU7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL2Z1bGxzdGFjay1yb2xlLWJhc2VkLW5leHRqcy0yLy4vbm9kZV9tb2R1bGVzL25leHQtYXV0aC9jb3JlL2xpYi9jYWxsYmFjay11cmwuanM/N2JiZSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuY3JlYXRlQ2FsbGJhY2tVcmwgPSBjcmVhdGVDYWxsYmFja1VybDtcblxuYXN5bmMgZnVuY3Rpb24gY3JlYXRlQ2FsbGJhY2tVcmwoe1xuICBvcHRpb25zLFxuICBwYXJhbVZhbHVlLFxuICBjb29raWVWYWx1ZVxufSkge1xuICBjb25zdCB7XG4gICAgdXJsLFxuICAgIGNhbGxiYWNrc1xuICB9ID0gb3B0aW9ucztcbiAgbGV0IGNhbGxiYWNrVXJsID0gdXJsLm9yaWdpbjtcblxuICBpZiAocGFyYW1WYWx1ZSkge1xuICAgIGNhbGxiYWNrVXJsID0gYXdhaXQgY2FsbGJhY2tzLnJlZGlyZWN0KHtcbiAgICAgIHVybDogcGFyYW1WYWx1ZSxcbiAgICAgIGJhc2VVcmw6IHVybC5vcmlnaW5cbiAgICB9KTtcbiAgfSBlbHNlIGlmIChjb29raWVWYWx1ZSkge1xuICAgIGNhbGxiYWNrVXJsID0gYXdhaXQgY2FsbGJhY2tzLnJlZGlyZWN0KHtcbiAgICAgIHVybDogY29va2llVmFsdWUsXG4gICAgICBiYXNlVXJsOiB1cmwub3JpZ2luXG4gICAgfSk7XG4gIH1cblxuICByZXR1cm4ge1xuICAgIGNhbGxiYWNrVXJsLFxuICAgIGNhbGxiYWNrVXJsQ29va2llOiBjYWxsYmFja1VybCAhPT0gY29va2llVmFsdWUgPyBjYWxsYmFja1VybCA6IHVuZGVmaW5lZFxuICB9O1xufSJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsImNyZWF0ZUNhbGxiYWNrVXJsIiwib3B0aW9ucyIsInBhcmFtVmFsdWUiLCJjb29raWVWYWx1ZSIsInVybCIsImNhbGxiYWNrcyIsImNhbGxiYWNrVXJsIiwib3JpZ2luIiwicmVkaXJlY3QiLCJiYXNlVXJsIiwiY2FsbGJhY2tVcmxDb29raWUiLCJ1bmRlZmluZWQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/next-auth/core/lib/callback-url.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/next-auth/core/lib/cookie.js":
/*!***************************************************!*\
  !*** ./node_modules/next-auth/core/lib/cookie.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nvar _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ \"(sc_server)/./node_modules/@babel/runtime/helpers/interopRequireDefault.js\");\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.SessionStore = void 0;\nexports.defaultCookies = defaultCookies;\nvar _classPrivateFieldGet3 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/classPrivateFieldGet */ \"(sc_server)/./node_modules/@babel/runtime/helpers/classPrivateFieldGet.js\"));\nvar _classPrivateFieldSet2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/classPrivateFieldSet */ \"(sc_server)/./node_modules/@babel/runtime/helpers/classPrivateFieldSet.js\"));\nfunction _classPrivateMethodInitSpec(obj, privateSet) {\n    _checkPrivateRedeclaration(obj, privateSet);\n    privateSet.add(obj);\n}\nfunction _classPrivateFieldInitSpec(obj, privateMap, value) {\n    _checkPrivateRedeclaration(obj, privateMap);\n    privateMap.set(obj, value);\n}\nfunction _checkPrivateRedeclaration(obj, privateCollection) {\n    if (privateCollection.has(obj)) {\n        throw new TypeError(\"Cannot initialize the same private elements twice on an object\");\n    }\n}\nfunction _classPrivateMethodGet(receiver, privateSet, fn) {\n    if (!privateSet.has(receiver)) {\n        throw new TypeError(\"attempted to get private field on non-instance\");\n    }\n    return fn;\n}\nconst ALLOWED_COOKIE_SIZE = 4096;\nconst ESTIMATED_EMPTY_COOKIE_SIZE = 163;\nconst CHUNK_SIZE = ALLOWED_COOKIE_SIZE - ESTIMATED_EMPTY_COOKIE_SIZE;\nfunction defaultCookies(useSecureCookies) {\n    const cookiePrefix = useSecureCookies ? \"__Secure-\" : \"\";\n    return {\n        sessionToken: {\n            name: `${cookiePrefix}next-auth.session-token`,\n            options: {\n                httpOnly: true,\n                sameSite: \"lax\",\n                path: \"/\",\n                secure: useSecureCookies\n            }\n        },\n        callbackUrl: {\n            name: `${cookiePrefix}next-auth.callback-url`,\n            options: {\n                httpOnly: true,\n                sameSite: \"lax\",\n                path: \"/\",\n                secure: useSecureCookies\n            }\n        },\n        csrfToken: {\n            name: `${useSecureCookies ? \"__Host-\" : \"\"}next-auth.csrf-token`,\n            options: {\n                httpOnly: true,\n                sameSite: \"lax\",\n                path: \"/\",\n                secure: useSecureCookies\n            }\n        },\n        pkceCodeVerifier: {\n            name: `${cookiePrefix}next-auth.pkce.code_verifier`,\n            options: {\n                httpOnly: true,\n                sameSite: \"lax\",\n                path: \"/\",\n                secure: useSecureCookies,\n                maxAge: 60 * 15\n            }\n        },\n        state: {\n            name: `${cookiePrefix}next-auth.state`,\n            options: {\n                httpOnly: true,\n                sameSite: \"lax\",\n                path: \"/\",\n                secure: useSecureCookies,\n                maxAge: 60 * 15\n            }\n        },\n        nonce: {\n            name: `${cookiePrefix}next-auth.nonce`,\n            options: {\n                httpOnly: true,\n                sameSite: \"lax\",\n                path: \"/\",\n                secure: useSecureCookies\n            }\n        }\n    };\n}\nvar _chunks = new WeakMap();\nvar _option = new WeakMap();\nvar _logger = new WeakMap();\nvar _chunk = new WeakSet();\nvar _clean = new WeakSet();\nclass SessionStore {\n    constructor(option, req, logger){\n        _classPrivateMethodInitSpec(this, _clean);\n        _classPrivateMethodInitSpec(this, _chunk);\n        _classPrivateFieldInitSpec(this, _chunks, {\n            writable: true,\n            value: {}\n        });\n        _classPrivateFieldInitSpec(this, _option, {\n            writable: true,\n            value: void 0\n        });\n        _classPrivateFieldInitSpec(this, _logger, {\n            writable: true,\n            value: void 0\n        });\n        (0, _classPrivateFieldSet2.default)(this, _logger, logger);\n        (0, _classPrivateFieldSet2.default)(this, _option, option);\n        const { cookies: _cookies  } = req;\n        const { name: cookieName  } = option;\n        if (typeof (_cookies === null || _cookies === void 0 ? void 0 : _cookies.getAll) === \"function\") {\n            for (const { name , value  } of _cookies.getAll()){\n                if (name.startsWith(cookieName)) {\n                    (0, _classPrivateFieldGet3.default)(this, _chunks)[name] = value;\n                }\n            }\n        } else if (_cookies instanceof Map) {\n            for (const name of _cookies.keys()){\n                if (name.startsWith(cookieName)) (0, _classPrivateFieldGet3.default)(this, _chunks)[name] = _cookies.get(name);\n            }\n        } else {\n            for(const name in _cookies){\n                if (name.startsWith(cookieName)) (0, _classPrivateFieldGet3.default)(this, _chunks)[name] = _cookies[name];\n            }\n        }\n    }\n    get value() {\n        var _Object$values;\n        return (_Object$values = Object.values((0, _classPrivateFieldGet3.default)(this, _chunks))) === null || _Object$values === void 0 ? void 0 : _Object$values.join(\"\");\n    }\n    chunk(value, options) {\n        const cookies = _classPrivateMethodGet(this, _clean, _clean2).call(this);\n        const chunked = _classPrivateMethodGet(this, _chunk, _chunk2).call(this, {\n            name: (0, _classPrivateFieldGet3.default)(this, _option).name,\n            value,\n            options: {\n                ...(0, _classPrivateFieldGet3.default)(this, _option).options,\n                ...options\n            }\n        });\n        for (const chunk of chunked){\n            cookies[chunk.name] = chunk;\n        }\n        return Object.values(cookies);\n    }\n    clean() {\n        return Object.values(_classPrivateMethodGet(this, _clean, _clean2).call(this));\n    }\n}\nexports.SessionStore = SessionStore;\nfunction _chunk2(cookie) {\n    const chunkCount = Math.ceil(cookie.value.length / CHUNK_SIZE);\n    if (chunkCount === 1) {\n        (0, _classPrivateFieldGet3.default)(this, _chunks)[cookie.name] = cookie.value;\n        return [\n            cookie\n        ];\n    }\n    const cookies = [];\n    for(let i = 0; i < chunkCount; i++){\n        const name = `${cookie.name}.${i}`;\n        const value = cookie.value.substr(i * CHUNK_SIZE, CHUNK_SIZE);\n        cookies.push({\n            ...cookie,\n            name,\n            value\n        });\n        (0, _classPrivateFieldGet3.default)(this, _chunks)[name] = value;\n    }\n    (0, _classPrivateFieldGet3.default)(this, _logger).debug(\"CHUNKING_SESSION_COOKIE\", {\n        message: `Session cookie exceeds allowed ${ALLOWED_COOKIE_SIZE} bytes.`,\n        emptyCookieSize: ESTIMATED_EMPTY_COOKIE_SIZE,\n        valueSize: cookie.value.length,\n        chunks: cookies.map((c)=>c.value.length + ESTIMATED_EMPTY_COOKIE_SIZE)\n    });\n    return cookies;\n}\nfunction _clean2() {\n    const cleanedChunks = {};\n    for(const name in (0, _classPrivateFieldGet3.default)(this, _chunks)){\n        var _classPrivateFieldGet2;\n        (_classPrivateFieldGet2 = (0, _classPrivateFieldGet3.default)(this, _chunks)) === null || _classPrivateFieldGet2 === void 0 ? true : delete _classPrivateFieldGet2[name];\n        cleanedChunks[name] = {\n            name,\n            value: \"\",\n            options: {\n                ...(0, _classPrivateFieldGet3.default)(this, _option).options,\n                maxAge: 0\n            }\n        };\n    }\n    return cleanedChunks;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/next-auth/core/lib/cookie.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/next-auth/core/lib/csrf-token.js":
/*!*******************************************************!*\
  !*** ./node_modules/next-auth/core/lib/csrf-token.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.createCSRFToken = createCSRFToken;\nvar _crypto = __webpack_require__(/*! crypto */ \"crypto\");\nfunction createCSRFToken({ options , cookieValue , isPost , bodyValue  }) {\n    if (cookieValue) {\n        const [csrfToken, csrfTokenHash] = cookieValue.split(\"|\");\n        const expectedCsrfTokenHash = (0, _crypto.createHash)(\"sha256\").update(`${csrfToken}${options.secret}`).digest(\"hex\");\n        if (csrfTokenHash === expectedCsrfTokenHash) {\n            const csrfTokenVerified = isPost && csrfToken === bodyValue;\n            return {\n                csrfTokenVerified,\n                csrfToken\n            };\n        }\n    }\n    const csrfToken = (0, _crypto.randomBytes)(32).toString(\"hex\");\n    const csrfTokenHash = (0, _crypto.createHash)(\"sha256\").update(`${csrfToken}${options.secret}`).digest(\"hex\");\n    const cookie = `${csrfToken}|${csrfTokenHash}`;\n    return {\n        cookie,\n        csrfToken\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL2NvcmUvbGliL2NzcmYtdG9rZW4uanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFFYkEsOENBQTZDO0lBQzNDRyxPQUFPO0FBQ1QsQ0FBQyxFQUFDO0FBQ0ZELHVCQUF1QkUsR0FBR0E7QUFFMUIsSUFBSUMsVUFBVUMsbUJBQU9BLENBQUMsc0JBQVE7QUFFOUIsU0FBU0YsZ0JBQWdCLEVBQ3ZCRyxRQUFPLEVBQ1BDLFlBQVcsRUFDWEMsT0FBTSxFQUNOQyxVQUFTLEVBQ1Y7SUFDQyxJQUFJRixhQUFhO1FBQ2YsTUFBTSxDQUFDRyxXQUFXQyxjQUFjLEdBQUdKLFlBQVlLLE1BQU07UUFDckQsTUFBTUMsd0JBQXdCLENBQUMsR0FBR1QsUUFBUVUsVUFBUyxFQUFHLFVBQVVDLE9BQU8sQ0FBQyxFQUFFTCxVQUFVLEVBQUVKLFFBQVFVLE9BQU8sQ0FBQyxFQUFFQyxPQUFPO1FBRS9HLElBQUlOLGtCQUFrQkUsdUJBQXVCO1lBQzNDLE1BQU1LLG9CQUFvQlYsVUFBVUUsY0FBY0Q7WUFDbEQsT0FBTztnQkFDTFM7Z0JBQ0FSO1lBQ0Y7UUFDRjtJQUNGO0lBRUEsTUFBTUEsWUFBWSxDQUFDLEdBQUdOLFFBQVFlLFdBQVUsRUFBRyxJQUFJQyxTQUFTO0lBQ3hELE1BQU1ULGdCQUFnQixDQUFDLEdBQUdQLFFBQVFVLFVBQVMsRUFBRyxVQUFVQyxPQUFPLENBQUMsRUFBRUwsVUFBVSxFQUFFSixRQUFRVSxPQUFPLENBQUMsRUFBRUMsT0FBTztJQUN2RyxNQUFNSSxTQUFTLENBQUMsRUFBRVgsVUFBVSxDQUFDLEVBQUVDLGNBQWMsQ0FBQztJQUM5QyxPQUFPO1FBQ0xVO1FBQ0FYO0lBQ0Y7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL2Z1bGxzdGFjay1yb2xlLWJhc2VkLW5leHRqcy0yLy4vbm9kZV9tb2R1bGVzL25leHQtYXV0aC9jb3JlL2xpYi9jc3JmLXRva2VuLmpzPzMwYjQiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmNyZWF0ZUNTUkZUb2tlbiA9IGNyZWF0ZUNTUkZUb2tlbjtcblxudmFyIF9jcnlwdG8gPSByZXF1aXJlKFwiY3J5cHRvXCIpO1xuXG5mdW5jdGlvbiBjcmVhdGVDU1JGVG9rZW4oe1xuICBvcHRpb25zLFxuICBjb29raWVWYWx1ZSxcbiAgaXNQb3N0LFxuICBib2R5VmFsdWVcbn0pIHtcbiAgaWYgKGNvb2tpZVZhbHVlKSB7XG4gICAgY29uc3QgW2NzcmZUb2tlbiwgY3NyZlRva2VuSGFzaF0gPSBjb29raWVWYWx1ZS5zcGxpdChcInxcIik7XG4gICAgY29uc3QgZXhwZWN0ZWRDc3JmVG9rZW5IYXNoID0gKDAsIF9jcnlwdG8uY3JlYXRlSGFzaCkoXCJzaGEyNTZcIikudXBkYXRlKGAke2NzcmZUb2tlbn0ke29wdGlvbnMuc2VjcmV0fWApLmRpZ2VzdChcImhleFwiKTtcblxuICAgIGlmIChjc3JmVG9rZW5IYXNoID09PSBleHBlY3RlZENzcmZUb2tlbkhhc2gpIHtcbiAgICAgIGNvbnN0IGNzcmZUb2tlblZlcmlmaWVkID0gaXNQb3N0ICYmIGNzcmZUb2tlbiA9PT0gYm9keVZhbHVlO1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgY3NyZlRva2VuVmVyaWZpZWQsXG4gICAgICAgIGNzcmZUb2tlblxuICAgICAgfTtcbiAgICB9XG4gIH1cblxuICBjb25zdCBjc3JmVG9rZW4gPSAoMCwgX2NyeXB0by5yYW5kb21CeXRlcykoMzIpLnRvU3RyaW5nKFwiaGV4XCIpO1xuICBjb25zdCBjc3JmVG9rZW5IYXNoID0gKDAsIF9jcnlwdG8uY3JlYXRlSGFzaCkoXCJzaGEyNTZcIikudXBkYXRlKGAke2NzcmZUb2tlbn0ke29wdGlvbnMuc2VjcmV0fWApLmRpZ2VzdChcImhleFwiKTtcbiAgY29uc3QgY29va2llID0gYCR7Y3NyZlRva2VufXwke2NzcmZUb2tlbkhhc2h9YDtcbiAgcmV0dXJuIHtcbiAgICBjb29raWUsXG4gICAgY3NyZlRva2VuXG4gIH07XG59Il0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiY3JlYXRlQ1NSRlRva2VuIiwiX2NyeXB0byIsInJlcXVpcmUiLCJvcHRpb25zIiwiY29va2llVmFsdWUiLCJpc1Bvc3QiLCJib2R5VmFsdWUiLCJjc3JmVG9rZW4iLCJjc3JmVG9rZW5IYXNoIiwic3BsaXQiLCJleHBlY3RlZENzcmZUb2tlbkhhc2giLCJjcmVhdGVIYXNoIiwidXBkYXRlIiwic2VjcmV0IiwiZGlnZXN0IiwiY3NyZlRva2VuVmVyaWZpZWQiLCJyYW5kb21CeXRlcyIsInRvU3RyaW5nIiwiY29va2llIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/next-auth/core/lib/csrf-token.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/next-auth/core/lib/default-callbacks.js":
/*!**************************************************************!*\
  !*** ./node_modules/next-auth/core/lib/default-callbacks.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.defaultCallbacks = void 0;\nconst defaultCallbacks = {\n    signIn () {\n        return true;\n    },\n    redirect ({ url , baseUrl  }) {\n        if (url.startsWith(\"/\")) return `${baseUrl}${url}`;\n        else if (new URL(url).origin === baseUrl) return url;\n        return baseUrl;\n    },\n    session ({ session  }) {\n        return session;\n    },\n    jwt ({ token  }) {\n        return token;\n    }\n};\nexports.defaultCallbacks = defaultCallbacks;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL2NvcmUvbGliL2RlZmF1bHQtY2FsbGJhY2tzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBRWJBLDhDQUE2QztJQUMzQ0csT0FBTztBQUNULENBQUMsRUFBQztBQUNGRCx3QkFBd0JFLEdBQUcsS0FBSztBQUNoQyxNQUFNQSxtQkFBbUI7SUFDdkJDO1FBQ0UsT0FBTztJQUNUO0lBRUFDLFVBQVMsRUFDUEMsSUFBRyxFQUNIQyxRQUFPLEVBQ1I7UUFDQyxJQUFJRCxJQUFJRSxXQUFXLE1BQU0sT0FBTyxDQUFDLEVBQUVELFFBQVEsRUFBRUQsSUFBSSxDQUFDO2FBQU0sSUFBSSxJQUFJRyxJQUFJSCxLQUFLSSxXQUFXSCxTQUFTLE9BQU9EO1FBQ3BHLE9BQU9DO0lBQ1Q7SUFFQUksU0FBUSxFQUNOQSxRQUFPLEVBQ1I7UUFDQyxPQUFPQTtJQUNUO0lBRUFDLEtBQUksRUFDRkMsTUFBSyxFQUNOO1FBQ0MsT0FBT0E7SUFDVDtBQUVGO0FBQ0FaLHdCQUF3QkUsR0FBR0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mdWxsc3RhY2stcm9sZS1iYXNlZC1uZXh0anMtMi8uL25vZGVfbW9kdWxlcy9uZXh0LWF1dGgvY29yZS9saWIvZGVmYXVsdC1jYWxsYmFja3MuanM/ZmY2ZSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuZGVmYXVsdENhbGxiYWNrcyA9IHZvaWQgMDtcbmNvbnN0IGRlZmF1bHRDYWxsYmFja3MgPSB7XG4gIHNpZ25JbigpIHtcbiAgICByZXR1cm4gdHJ1ZTtcbiAgfSxcblxuICByZWRpcmVjdCh7XG4gICAgdXJsLFxuICAgIGJhc2VVcmxcbiAgfSkge1xuICAgIGlmICh1cmwuc3RhcnRzV2l0aChcIi9cIikpIHJldHVybiBgJHtiYXNlVXJsfSR7dXJsfWA7ZWxzZSBpZiAobmV3IFVSTCh1cmwpLm9yaWdpbiA9PT0gYmFzZVVybCkgcmV0dXJuIHVybDtcbiAgICByZXR1cm4gYmFzZVVybDtcbiAgfSxcblxuICBzZXNzaW9uKHtcbiAgICBzZXNzaW9uXG4gIH0pIHtcbiAgICByZXR1cm4gc2Vzc2lvbjtcbiAgfSxcblxuICBqd3Qoe1xuICAgIHRva2VuXG4gIH0pIHtcbiAgICByZXR1cm4gdG9rZW47XG4gIH1cblxufTtcbmV4cG9ydHMuZGVmYXVsdENhbGxiYWNrcyA9IGRlZmF1bHRDYWxsYmFja3M7Il0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiZGVmYXVsdENhbGxiYWNrcyIsInNpZ25JbiIsInJlZGlyZWN0IiwidXJsIiwiYmFzZVVybCIsInN0YXJ0c1dpdGgiLCJVUkwiLCJvcmlnaW4iLCJzZXNzaW9uIiwiand0IiwidG9rZW4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/next-auth/core/lib/default-callbacks.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/next-auth/core/lib/email/getUserFromEmail.js":
/*!*******************************************************************!*\
  !*** ./node_modules/next-auth/core/lib/email/getUserFromEmail.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports[\"default\"] = getAdapterUserFromEmail;\nasync function getAdapterUserFromEmail({ email , adapter  }) {\n    const { getUserByEmail  } = adapter;\n    const adapterUser = email ? await getUserByEmail(email) : null;\n    if (adapterUser) return adapterUser;\n    return {\n        id: email,\n        email,\n        emailVerified: null\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL2NvcmUvbGliL2VtYWlsL2dldFVzZXJGcm9tRW1haWwuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFFYkEsOENBQTZDO0lBQzNDRyxPQUFPO0FBQ1QsQ0FBQyxFQUFDO0FBQ0ZELGtCQUFlRSxHQUFHQztBQUVsQixlQUFlQSx3QkFBd0IsRUFDckNDLE1BQUssRUFDTEMsUUFBTyxFQUNSO0lBQ0MsTUFBTSxFQUNKQyxlQUFjLEVBQ2YsR0FBR0Q7SUFDSixNQUFNRSxjQUFjSCxRQUFRLE1BQU1FLGVBQWVGLFNBQVM7SUFDMUQsSUFBSUcsYUFBYSxPQUFPQTtJQUN4QixPQUFPO1FBQ0xDLElBQUlKO1FBQ0pBO1FBQ0FLLGVBQWU7SUFDakI7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL2Z1bGxzdGFjay1yb2xlLWJhc2VkLW5leHRqcy0yLy4vbm9kZV9tb2R1bGVzL25leHQtYXV0aC9jb3JlL2xpYi9lbWFpbC9nZXRVc2VyRnJvbUVtYWlsLmpzPzFjMDkiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmRlZmF1bHQgPSBnZXRBZGFwdGVyVXNlckZyb21FbWFpbDtcblxuYXN5bmMgZnVuY3Rpb24gZ2V0QWRhcHRlclVzZXJGcm9tRW1haWwoe1xuICBlbWFpbCxcbiAgYWRhcHRlclxufSkge1xuICBjb25zdCB7XG4gICAgZ2V0VXNlckJ5RW1haWxcbiAgfSA9IGFkYXB0ZXI7XG4gIGNvbnN0IGFkYXB0ZXJVc2VyID0gZW1haWwgPyBhd2FpdCBnZXRVc2VyQnlFbWFpbChlbWFpbCkgOiBudWxsO1xuICBpZiAoYWRhcHRlclVzZXIpIHJldHVybiBhZGFwdGVyVXNlcjtcbiAgcmV0dXJuIHtcbiAgICBpZDogZW1haWwsXG4gICAgZW1haWwsXG4gICAgZW1haWxWZXJpZmllZDogbnVsbFxuICB9O1xufSJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsImRlZmF1bHQiLCJnZXRBZGFwdGVyVXNlckZyb21FbWFpbCIsImVtYWlsIiwiYWRhcHRlciIsImdldFVzZXJCeUVtYWlsIiwiYWRhcHRlclVzZXIiLCJpZCIsImVtYWlsVmVyaWZpZWQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/next-auth/core/lib/email/getUserFromEmail.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/next-auth/core/lib/email/signin.js":
/*!*********************************************************!*\
  !*** ./node_modules/next-auth/core/lib/email/signin.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports[\"default\"] = email;\nvar _crypto = __webpack_require__(/*! crypto */ \"crypto\");\nvar _utils = __webpack_require__(/*! ../utils */ \"(sc_server)/./node_modules/next-auth/core/lib/utils.js\");\nasync function email(identifier, options) {\n    var _await$provider$gener, _provider$generateVer, _provider$maxAge;\n    const { url , adapter , provider , callbackUrl , theme  } = options;\n    const token = (_await$provider$gener = await ((_provider$generateVer = provider.generateVerificationToken) === null || _provider$generateVer === void 0 ? void 0 : _provider$generateVer.call(provider))) !== null && _await$provider$gener !== void 0 ? _await$provider$gener : (0, _crypto.randomBytes)(32).toString(\"hex\");\n    const ONE_DAY_IN_SECONDS = 86400;\n    const expires = new Date(Date.now() + ((_provider$maxAge = provider.maxAge) !== null && _provider$maxAge !== void 0 ? _provider$maxAge : ONE_DAY_IN_SECONDS) * 1000);\n    const params = new URLSearchParams({\n        callbackUrl,\n        token,\n        email: identifier\n    });\n    const _url = `${url}/callback/${provider.id}?${params}`;\n    await Promise.all([\n        provider.sendVerificationRequest({\n            identifier,\n            token,\n            expires,\n            url: _url,\n            provider,\n            theme\n        }),\n        adapter.createVerificationToken({\n            identifier,\n            token: (0, _utils.hashToken)(token, options),\n            expires\n        })\n    ]);\n    return `${url}/verify-request?${new URLSearchParams({\n        provider: provider.id,\n        type: provider.type\n    })}`;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL2NvcmUvbGliL2VtYWlsL3NpZ25pbi5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUViQSw4Q0FBNkM7SUFDM0NHLE9BQU87QUFDVCxDQUFDLEVBQUM7QUFDRkQsa0JBQWVFLEdBQUdDO0FBRWxCLElBQUlDLFVBQVVDLG1CQUFPQSxDQUFDLHNCQUFRO0FBRTlCLElBQUlDLFNBQVNELG1CQUFPQSxDQUFDLHdFQUFVO0FBRS9CLGVBQWVGLE1BQU1JLFVBQVUsRUFBRUMsT0FBTztJQUN0QyxJQUFJQyx1QkFBdUJDLHVCQUF1QkM7SUFFbEQsTUFBTSxFQUNKQyxJQUFHLEVBQ0hDLFFBQU8sRUFDUEMsU0FBUSxFQUNSQyxZQUFXLEVBQ1hDLE1BQUssRUFDTixHQUFHUjtJQUNKLE1BQU1TLFFBQVEsQ0FBQ1Isd0JBQXdCLE1BQU8sRUFBQ0Msd0JBQXdCSSxTQUFTSSx5QkFBd0IsTUFBTyxRQUFRUiwwQkFBMEIsS0FBSyxJQUFJLEtBQUssSUFBSUEsc0JBQXNCUyxLQUFLTCxTQUFRLENBQUMsTUFBTyxRQUFRTCwwQkFBMEIsS0FBSyxJQUFJQSx3QkFBd0IsQ0FBQyxHQUFHTCxRQUFRZ0IsV0FBVSxFQUFHLElBQUlDLFNBQVM7SUFDdlQsTUFBTUMscUJBQXFCO0lBQzNCLE1BQU1DLFVBQVUsSUFBSUMsS0FBS0EsS0FBS0MsUUFBUSxDQUFDLENBQUNkLG1CQUFtQkcsU0FBU1ksTUFBSyxNQUFPLFFBQVFmLHFCQUFxQixLQUFLLElBQUlBLG1CQUFtQlcsa0JBQWlCLElBQUs7SUFDL0osTUFBTUssU0FBUyxJQUFJQyxnQkFBZ0I7UUFDakNiO1FBQ0FFO1FBQ0FkLE9BQU9JO0lBQ1Q7SUFDQSxNQUFNc0IsT0FBTyxDQUFDLEVBQUVqQixJQUFJLFVBQVUsRUFBRUUsU0FBU2dCLEdBQUcsQ0FBQyxFQUFFSCxPQUFPLENBQUM7SUFDdkQsTUFBTUksUUFBUUMsSUFBSTtRQUFDbEIsU0FBU21CLHdCQUF3QjtZQUNsRDFCO1lBQ0FVO1lBQ0FNO1lBQ0FYLEtBQUtpQjtZQUNMZjtZQUNBRTtRQUNGO1FBQUlILFFBQVFxQix3QkFBd0I7WUFDbEMzQjtZQUNBVSxPQUFPLENBQUMsR0FBR1gsT0FBTzZCLFNBQVEsRUFBR2xCLE9BQU9UO1lBQ3BDZTtRQUNGO0tBQUc7SUFDSCxPQUFPLENBQUMsRUFBRVgsSUFBSSxnQkFBZ0IsRUFBRSxJQUFJZ0IsZ0JBQWdCO1FBQ2xEZCxVQUFVQSxTQUFTZ0I7UUFDbkJNLE1BQU10QixTQUFTc0I7SUFDakIsR0FBRyxDQUFDO0FBQ04iLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mdWxsc3RhY2stcm9sZS1iYXNlZC1uZXh0anMtMi8uL25vZGVfbW9kdWxlcy9uZXh0LWF1dGgvY29yZS9saWIvZW1haWwvc2lnbmluLmpzP2VjNDciXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmRlZmF1bHQgPSBlbWFpbDtcblxudmFyIF9jcnlwdG8gPSByZXF1aXJlKFwiY3J5cHRvXCIpO1xuXG52YXIgX3V0aWxzID0gcmVxdWlyZShcIi4uL3V0aWxzXCIpO1xuXG5hc3luYyBmdW5jdGlvbiBlbWFpbChpZGVudGlmaWVyLCBvcHRpb25zKSB7XG4gIHZhciBfYXdhaXQkcHJvdmlkZXIkZ2VuZXIsIF9wcm92aWRlciRnZW5lcmF0ZVZlciwgX3Byb3ZpZGVyJG1heEFnZTtcblxuICBjb25zdCB7XG4gICAgdXJsLFxuICAgIGFkYXB0ZXIsXG4gICAgcHJvdmlkZXIsXG4gICAgY2FsbGJhY2tVcmwsXG4gICAgdGhlbWVcbiAgfSA9IG9wdGlvbnM7XG4gIGNvbnN0IHRva2VuID0gKF9hd2FpdCRwcm92aWRlciRnZW5lciA9IGF3YWl0ICgoX3Byb3ZpZGVyJGdlbmVyYXRlVmVyID0gcHJvdmlkZXIuZ2VuZXJhdGVWZXJpZmljYXRpb25Ub2tlbikgPT09IG51bGwgfHwgX3Byb3ZpZGVyJGdlbmVyYXRlVmVyID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfcHJvdmlkZXIkZ2VuZXJhdGVWZXIuY2FsbChwcm92aWRlcikpKSAhPT0gbnVsbCAmJiBfYXdhaXQkcHJvdmlkZXIkZ2VuZXIgIT09IHZvaWQgMCA/IF9hd2FpdCRwcm92aWRlciRnZW5lciA6ICgwLCBfY3J5cHRvLnJhbmRvbUJ5dGVzKSgzMikudG9TdHJpbmcoXCJoZXhcIik7XG4gIGNvbnN0IE9ORV9EQVlfSU5fU0VDT05EUyA9IDg2NDAwO1xuICBjb25zdCBleHBpcmVzID0gbmV3IERhdGUoRGF0ZS5ub3coKSArICgoX3Byb3ZpZGVyJG1heEFnZSA9IHByb3ZpZGVyLm1heEFnZSkgIT09IG51bGwgJiYgX3Byb3ZpZGVyJG1heEFnZSAhPT0gdm9pZCAwID8gX3Byb3ZpZGVyJG1heEFnZSA6IE9ORV9EQVlfSU5fU0VDT05EUykgKiAxMDAwKTtcbiAgY29uc3QgcGFyYW1zID0gbmV3IFVSTFNlYXJjaFBhcmFtcyh7XG4gICAgY2FsbGJhY2tVcmwsXG4gICAgdG9rZW4sXG4gICAgZW1haWw6IGlkZW50aWZpZXJcbiAgfSk7XG4gIGNvbnN0IF91cmwgPSBgJHt1cmx9L2NhbGxiYWNrLyR7cHJvdmlkZXIuaWR9PyR7cGFyYW1zfWA7XG4gIGF3YWl0IFByb21pc2UuYWxsKFtwcm92aWRlci5zZW5kVmVyaWZpY2F0aW9uUmVxdWVzdCh7XG4gICAgaWRlbnRpZmllcixcbiAgICB0b2tlbixcbiAgICBleHBpcmVzLFxuICAgIHVybDogX3VybCxcbiAgICBwcm92aWRlcixcbiAgICB0aGVtZVxuICB9KSwgYWRhcHRlci5jcmVhdGVWZXJpZmljYXRpb25Ub2tlbih7XG4gICAgaWRlbnRpZmllcixcbiAgICB0b2tlbjogKDAsIF91dGlscy5oYXNoVG9rZW4pKHRva2VuLCBvcHRpb25zKSxcbiAgICBleHBpcmVzXG4gIH0pXSk7XG4gIHJldHVybiBgJHt1cmx9L3ZlcmlmeS1yZXF1ZXN0PyR7bmV3IFVSTFNlYXJjaFBhcmFtcyh7XG4gICAgcHJvdmlkZXI6IHByb3ZpZGVyLmlkLFxuICAgIHR5cGU6IHByb3ZpZGVyLnR5cGVcbiAgfSl9YDtcbn0iXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJkZWZhdWx0IiwiZW1haWwiLCJfY3J5cHRvIiwicmVxdWlyZSIsIl91dGlscyIsImlkZW50aWZpZXIiLCJvcHRpb25zIiwiX2F3YWl0JHByb3ZpZGVyJGdlbmVyIiwiX3Byb3ZpZGVyJGdlbmVyYXRlVmVyIiwiX3Byb3ZpZGVyJG1heEFnZSIsInVybCIsImFkYXB0ZXIiLCJwcm92aWRlciIsImNhbGxiYWNrVXJsIiwidGhlbWUiLCJ0b2tlbiIsImdlbmVyYXRlVmVyaWZpY2F0aW9uVG9rZW4iLCJjYWxsIiwicmFuZG9tQnl0ZXMiLCJ0b1N0cmluZyIsIk9ORV9EQVlfSU5fU0VDT05EUyIsImV4cGlyZXMiLCJEYXRlIiwibm93IiwibWF4QWdlIiwicGFyYW1zIiwiVVJMU2VhcmNoUGFyYW1zIiwiX3VybCIsImlkIiwiUHJvbWlzZSIsImFsbCIsInNlbmRWZXJpZmljYXRpb25SZXF1ZXN0IiwiY3JlYXRlVmVyaWZpY2F0aW9uVG9rZW4iLCJoYXNoVG9rZW4iLCJ0eXBlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/next-auth/core/lib/email/signin.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/next-auth/core/lib/oauth/authorization-url.js":
/*!********************************************************************!*\
  !*** ./node_modules/next-auth/core/lib/oauth/authorization-url.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports[\"default\"] = getAuthorizationUrl;\nvar _client = __webpack_require__(/*! ./client */ \"(sc_server)/./node_modules/next-auth/core/lib/oauth/client.js\");\nvar _clientLegacy = __webpack_require__(/*! ./client-legacy */ \"(sc_server)/./node_modules/next-auth/core/lib/oauth/client-legacy.js\");\nvar checks = _interopRequireWildcard(__webpack_require__(/*! ./checks */ \"(sc_server)/./node_modules/next-auth/core/lib/oauth/checks.js\"));\nfunction _getRequireWildcardCache(nodeInterop) {\n    if (typeof WeakMap !== \"function\") return null;\n    var cacheBabelInterop = new WeakMap();\n    var cacheNodeInterop = new WeakMap();\n    return (_getRequireWildcardCache = function(nodeInterop) {\n        return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n    })(nodeInterop);\n}\nfunction _interopRequireWildcard(obj, nodeInterop) {\n    if (!nodeInterop && obj && obj.__esModule) {\n        return obj;\n    }\n    if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n        return {\n            default: obj\n        };\n    }\n    var cache = _getRequireWildcardCache(nodeInterop);\n    if (cache && cache.has(obj)) {\n        return cache.get(obj);\n    }\n    var newObj = {};\n    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n    for(var key in obj){\n        if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n            if (desc && (desc.get || desc.set)) {\n                Object.defineProperty(newObj, key, desc);\n            } else {\n                newObj[key] = obj[key];\n            }\n        }\n    }\n    newObj.default = obj;\n    if (cache) {\n        cache.set(obj, newObj);\n    }\n    return newObj;\n}\nasync function getAuthorizationUrl({ options , query  }) {\n    var _provider$version;\n    const { logger , provider  } = options;\n    let params = {};\n    if (typeof provider.authorization === \"string\") {\n        const parsedUrl = new URL(provider.authorization);\n        const parsedParams = Object.fromEntries(parsedUrl.searchParams);\n        params = {\n            ...params,\n            ...parsedParams\n        };\n    } else {\n        var _provider$authorizati;\n        params = {\n            ...params,\n            ...(_provider$authorizati = provider.authorization) === null || _provider$authorizati === void 0 ? void 0 : _provider$authorizati.params\n        };\n    }\n    params = {\n        ...params,\n        ...query\n    };\n    if ((_provider$version = provider.version) !== null && _provider$version !== void 0 && _provider$version.startsWith(\"1.\")) {\n        var _provider$authorizati2;\n        const client = (0, _clientLegacy.oAuth1Client)(options);\n        const tokens = await client.getOAuthRequestToken(params);\n        const url = `${(_provider$authorizati2 = provider.authorization) === null || _provider$authorizati2 === void 0 ? void 0 : _provider$authorizati2.url}?${new URLSearchParams({\n            oauth_token: tokens.oauth_token,\n            oauth_token_secret: tokens.oauth_token_secret,\n            ...tokens.params\n        })}`;\n        _clientLegacy.oAuth1TokenStore.set(tokens.oauth_token, tokens.oauth_token_secret);\n        logger.debug(\"GET_AUTHORIZATION_URL\", {\n            url,\n            provider\n        });\n        return {\n            redirect: url\n        };\n    }\n    const client = await (0, _client.openidClient)(options);\n    const authorizationParams = params;\n    const cookies = [];\n    await checks.state.create(options, cookies, authorizationParams);\n    await checks.pkce.create(options, cookies, authorizationParams);\n    await checks.nonce.create(options, cookies, authorizationParams);\n    const url = client.authorizationUrl(authorizationParams);\n    logger.debug(\"GET_AUTHORIZATION_URL\", {\n        url,\n        cookies,\n        provider\n    });\n    return {\n        redirect: url,\n        cookies\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL2NvcmUvbGliL29hdXRoL2F1dGhvcml6YXRpb24tdXJsLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBRWJBLDhDQUE2QztJQUMzQ0csT0FBTztBQUNULENBQUMsRUFBQztBQUNGRCxrQkFBZUUsR0FBR0M7QUFFbEIsSUFBSUMsVUFBVUMsbUJBQU9BLENBQUMsK0VBQVU7QUFFaEMsSUFBSUMsZ0JBQWdCRCxtQkFBT0EsQ0FBQyw2RkFBaUI7QUFFN0MsSUFBSUUsU0FBU0Msd0JBQXdCSCxtQkFBT0EsQ0FBQywrRUFBVTtBQUV2RCxTQUFTSSx5QkFBeUJDLFdBQVc7SUFBSSxJQUFJLE9BQU9DLFlBQVksWUFBWSxPQUFPO0lBQU0sSUFBSUMsb0JBQW9CLElBQUlEO0lBQVcsSUFBSUUsbUJBQW1CLElBQUlGO0lBQVcsT0FBTyxDQUFDRiwyQkFBMkIsU0FBVUMsV0FBVztRQUFJLE9BQU9BLGNBQWNHLG1CQUFtQkQ7SUFBbUIsR0FBR0Y7QUFBYztBQUV0VCxTQUFTRix3QkFBd0JNLEdBQUcsRUFBRUosV0FBVztJQUFJLElBQUksQ0FBQ0EsZUFBZUksT0FBT0EsSUFBSUMsWUFBWTtRQUFFLE9BQU9EO0lBQUs7SUFBRSxJQUFJQSxRQUFRLFFBQVEsT0FBT0EsUUFBUSxZQUFZLE9BQU9BLFFBQVEsWUFBWTtRQUFFLE9BQU87WUFBRVosU0FBU1k7UUFBSTtJQUFHO0lBQUUsSUFBSUUsUUFBUVAseUJBQXlCQztJQUFjLElBQUlNLFNBQVNBLE1BQU1DLElBQUlILE1BQU07UUFBRSxPQUFPRSxNQUFNRSxJQUFJSjtJQUFNO0lBQUUsSUFBSUssU0FBUyxDQUFDO0lBQUcsSUFBSUMsd0JBQXdCdEIsT0FBT0Msa0JBQWtCRCxPQUFPdUI7SUFBMEIsSUFBSyxJQUFJQyxPQUFPUixJQUFLO1FBQUUsSUFBSVEsUUFBUSxhQUFheEIsT0FBT3lCLFVBQVVDLGVBQWVDLEtBQUtYLEtBQUtRLE1BQU07WUFBRSxJQUFJSSxPQUFPTix3QkFBd0J0QixPQUFPdUIseUJBQXlCUCxLQUFLUSxPQUFPO1lBQU0sSUFBSUksUUFBU0EsQ0FBQUEsS0FBS1IsT0FBT1EsS0FBS0MsR0FBRSxHQUFJO2dCQUFFN0IsT0FBT0MsZUFBZW9CLFFBQVFHLEtBQUtJO1lBQU8sT0FBTztnQkFBRVAsTUFBTSxDQUFDRyxJQUFJLEdBQUdSLEdBQUcsQ0FBQ1EsSUFBSTtZQUFFO1FBQUU7SUFBRTtJQUFFSCxPQUFPakIsVUFBVVk7SUFBSyxJQUFJRSxPQUFPO1FBQUVBLE1BQU1XLElBQUliLEtBQUtLO0lBQVM7SUFBRSxPQUFPQTtBQUFRO0FBRW55QixlQUFlaEIsb0JBQW9CLEVBQ2pDeUIsUUFBTyxFQUNQQyxNQUFLLEVBQ047SUFDQyxJQUFJQztJQUVKLE1BQU0sRUFDSkMsT0FBTSxFQUNOQyxTQUFRLEVBQ1QsR0FBR0o7SUFDSixJQUFJSyxTQUFTLENBQUM7SUFFZCxJQUFJLE9BQU9ELFNBQVNFLGtCQUFrQixVQUFVO1FBQzlDLE1BQU1DLFlBQVksSUFBSUMsSUFBSUosU0FBU0U7UUFDbkMsTUFBTUcsZUFBZXZDLE9BQU93QyxZQUFZSCxVQUFVSTtRQUNsRE4sU0FBUztZQUFFLEdBQUdBLE1BQU07WUFDbEIsR0FBR0ksWUFBWTtRQUNqQjtJQUNGLE9BQU87UUFDTCxJQUFJRztRQUVKUCxTQUFTO1lBQUUsR0FBR0EsTUFBTTtZQUNsQixHQUFJLENBQUNPLHdCQUF3QlIsU0FBU0UsYUFBWSxNQUFPLFFBQVFNLDBCQUEwQixLQUFLLElBQUksS0FBSyxJQUFJQSxzQkFBc0JQLE1BQU07UUFDM0k7SUFDRjtJQUVBQSxTQUFTO1FBQUUsR0FBR0EsTUFBTTtRQUNsQixHQUFHSixLQUFLO0lBQ1Y7SUFFQSxJQUFJLENBQUNDLG9CQUFvQkUsU0FBU1MsT0FBTSxNQUFPLFFBQVFYLHNCQUFzQixLQUFLLEtBQUtBLGtCQUFrQlksV0FBVyxPQUFPO1FBQ3pILElBQUlDO1FBRUosTUFBTUMsU0FBUyxDQUFDLEdBQUd0QyxjQUFjdUMsWUFBVyxFQUFHakI7UUFDL0MsTUFBTWtCLFNBQVMsTUFBTUYsT0FBT0cscUJBQXFCZDtRQUNqRCxNQUFNZSxNQUFNLENBQUMsRUFBRSxDQUFDTCx5QkFBeUJYLFNBQVNFLGFBQVksTUFBTyxRQUFRUywyQkFBMkIsS0FBSyxJQUFJLEtBQUssSUFBSUEsdUJBQXVCSyxJQUFJLENBQUMsRUFBRSxJQUFJQyxnQkFBZ0I7WUFDMUtDLGFBQWFKLE9BQU9JO1lBQ3BCQyxvQkFBb0JMLE9BQU9LO1lBQzNCLEdBQUdMLE9BQU9iLE1BQU07UUFDbEIsR0FBRyxDQUFDO1FBRUozQixjQUFjOEMsaUJBQWlCekIsSUFBSW1CLE9BQU9JLGFBQWFKLE9BQU9LO1FBRTlEcEIsT0FBT3NCLE1BQU0seUJBQXlCO1lBQ3BDTDtZQUNBaEI7UUFDRjtRQUNBLE9BQU87WUFDTHNCLFVBQVVOO1FBQ1o7SUFDRjtJQUVBLE1BQU1KLFNBQVMsTUFBTSxDQUFDLEdBQUd4QyxRQUFRbUQsWUFBVyxFQUFHM0I7SUFDL0MsTUFBTTRCLHNCQUFzQnZCO0lBQzVCLE1BQU13QixVQUFVLEVBQUU7SUFDbEIsTUFBTWxELE9BQU9tRCxNQUFNQyxPQUFPL0IsU0FBUzZCLFNBQVNEO0lBQzVDLE1BQU1qRCxPQUFPcUQsS0FBS0QsT0FBTy9CLFNBQVM2QixTQUFTRDtJQUMzQyxNQUFNakQsT0FBT3NELE1BQU1GLE9BQU8vQixTQUFTNkIsU0FBU0Q7SUFDNUMsTUFBTVIsTUFBTUosT0FBT2tCLGlCQUFpQk47SUFDcEN6QixPQUFPc0IsTUFBTSx5QkFBeUI7UUFDcENMO1FBQ0FTO1FBQ0F6QjtJQUNGO0lBQ0EsT0FBTztRQUNMc0IsVUFBVU47UUFDVlM7SUFDRjtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZnVsbHN0YWNrLXJvbGUtYmFzZWQtbmV4dGpzLTIvLi9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL2NvcmUvbGliL29hdXRoL2F1dGhvcml6YXRpb24tdXJsLmpzPzEzOWEiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmRlZmF1bHQgPSBnZXRBdXRob3JpemF0aW9uVXJsO1xuXG52YXIgX2NsaWVudCA9IHJlcXVpcmUoXCIuL2NsaWVudFwiKTtcblxudmFyIF9jbGllbnRMZWdhY3kgPSByZXF1aXJlKFwiLi9jbGllbnQtbGVnYWN5XCIpO1xuXG52YXIgY2hlY2tzID0gX2ludGVyb3BSZXF1aXJlV2lsZGNhcmQocmVxdWlyZShcIi4vY2hlY2tzXCIpKTtcblxuZnVuY3Rpb24gX2dldFJlcXVpcmVXaWxkY2FyZENhY2hlKG5vZGVJbnRlcm9wKSB7IGlmICh0eXBlb2YgV2Vha01hcCAhPT0gXCJmdW5jdGlvblwiKSByZXR1cm4gbnVsbDsgdmFyIGNhY2hlQmFiZWxJbnRlcm9wID0gbmV3IFdlYWtNYXAoKTsgdmFyIGNhY2hlTm9kZUludGVyb3AgPSBuZXcgV2Vha01hcCgpOyByZXR1cm4gKF9nZXRSZXF1aXJlV2lsZGNhcmRDYWNoZSA9IGZ1bmN0aW9uIChub2RlSW50ZXJvcCkgeyByZXR1cm4gbm9kZUludGVyb3AgPyBjYWNoZU5vZGVJbnRlcm9wIDogY2FjaGVCYWJlbEludGVyb3A7IH0pKG5vZGVJbnRlcm9wKTsgfVxuXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVXaWxkY2FyZChvYmosIG5vZGVJbnRlcm9wKSB7IGlmICghbm9kZUludGVyb3AgJiYgb2JqICYmIG9iai5fX2VzTW9kdWxlKSB7IHJldHVybiBvYmo7IH0gaWYgKG9iaiA9PT0gbnVsbCB8fCB0eXBlb2Ygb2JqICE9PSBcIm9iamVjdFwiICYmIHR5cGVvZiBvYmogIT09IFwiZnVuY3Rpb25cIikgeyByZXR1cm4geyBkZWZhdWx0OiBvYmogfTsgfSB2YXIgY2FjaGUgPSBfZ2V0UmVxdWlyZVdpbGRjYXJkQ2FjaGUobm9kZUludGVyb3ApOyBpZiAoY2FjaGUgJiYgY2FjaGUuaGFzKG9iaikpIHsgcmV0dXJuIGNhY2hlLmdldChvYmopOyB9IHZhciBuZXdPYmogPSB7fTsgdmFyIGhhc1Byb3BlcnR5RGVzY3JpcHRvciA9IE9iamVjdC5kZWZpbmVQcm9wZXJ0eSAmJiBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yOyBmb3IgKHZhciBrZXkgaW4gb2JqKSB7IGlmIChrZXkgIT09IFwiZGVmYXVsdFwiICYmIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmosIGtleSkpIHsgdmFyIGRlc2MgPSBoYXNQcm9wZXJ0eURlc2NyaXB0b3IgPyBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKG9iaiwga2V5KSA6IG51bGw7IGlmIChkZXNjICYmIChkZXNjLmdldCB8fCBkZXNjLnNldCkpIHsgT2JqZWN0LmRlZmluZVByb3BlcnR5KG5ld09iaiwga2V5LCBkZXNjKTsgfSBlbHNlIHsgbmV3T2JqW2tleV0gPSBvYmpba2V5XTsgfSB9IH0gbmV3T2JqLmRlZmF1bHQgPSBvYmo7IGlmIChjYWNoZSkgeyBjYWNoZS5zZXQob2JqLCBuZXdPYmopOyB9IHJldHVybiBuZXdPYmo7IH1cblxuYXN5bmMgZnVuY3Rpb24gZ2V0QXV0aG9yaXphdGlvblVybCh7XG4gIG9wdGlvbnMsXG4gIHF1ZXJ5XG59KSB7XG4gIHZhciBfcHJvdmlkZXIkdmVyc2lvbjtcblxuICBjb25zdCB7XG4gICAgbG9nZ2VyLFxuICAgIHByb3ZpZGVyXG4gIH0gPSBvcHRpb25zO1xuICBsZXQgcGFyYW1zID0ge307XG5cbiAgaWYgKHR5cGVvZiBwcm92aWRlci5hdXRob3JpemF0aW9uID09PSBcInN0cmluZ1wiKSB7XG4gICAgY29uc3QgcGFyc2VkVXJsID0gbmV3IFVSTChwcm92aWRlci5hdXRob3JpemF0aW9uKTtcbiAgICBjb25zdCBwYXJzZWRQYXJhbXMgPSBPYmplY3QuZnJvbUVudHJpZXMocGFyc2VkVXJsLnNlYXJjaFBhcmFtcyk7XG4gICAgcGFyYW1zID0geyAuLi5wYXJhbXMsXG4gICAgICAuLi5wYXJzZWRQYXJhbXNcbiAgICB9O1xuICB9IGVsc2Uge1xuICAgIHZhciBfcHJvdmlkZXIkYXV0aG9yaXphdGk7XG5cbiAgICBwYXJhbXMgPSB7IC4uLnBhcmFtcyxcbiAgICAgIC4uLigoX3Byb3ZpZGVyJGF1dGhvcml6YXRpID0gcHJvdmlkZXIuYXV0aG9yaXphdGlvbikgPT09IG51bGwgfHwgX3Byb3ZpZGVyJGF1dGhvcml6YXRpID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfcHJvdmlkZXIkYXV0aG9yaXphdGkucGFyYW1zKVxuICAgIH07XG4gIH1cblxuICBwYXJhbXMgPSB7IC4uLnBhcmFtcyxcbiAgICAuLi5xdWVyeVxuICB9O1xuXG4gIGlmICgoX3Byb3ZpZGVyJHZlcnNpb24gPSBwcm92aWRlci52ZXJzaW9uKSAhPT0gbnVsbCAmJiBfcHJvdmlkZXIkdmVyc2lvbiAhPT0gdm9pZCAwICYmIF9wcm92aWRlciR2ZXJzaW9uLnN0YXJ0c1dpdGgoXCIxLlwiKSkge1xuICAgIHZhciBfcHJvdmlkZXIkYXV0aG9yaXphdGkyO1xuXG4gICAgY29uc3QgY2xpZW50ID0gKDAsIF9jbGllbnRMZWdhY3kub0F1dGgxQ2xpZW50KShvcHRpb25zKTtcbiAgICBjb25zdCB0b2tlbnMgPSBhd2FpdCBjbGllbnQuZ2V0T0F1dGhSZXF1ZXN0VG9rZW4ocGFyYW1zKTtcbiAgICBjb25zdCB1cmwgPSBgJHsoX3Byb3ZpZGVyJGF1dGhvcml6YXRpMiA9IHByb3ZpZGVyLmF1dGhvcml6YXRpb24pID09PSBudWxsIHx8IF9wcm92aWRlciRhdXRob3JpemF0aTIgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9wcm92aWRlciRhdXRob3JpemF0aTIudXJsfT8ke25ldyBVUkxTZWFyY2hQYXJhbXMoe1xuICAgICAgb2F1dGhfdG9rZW46IHRva2Vucy5vYXV0aF90b2tlbixcbiAgICAgIG9hdXRoX3Rva2VuX3NlY3JldDogdG9rZW5zLm9hdXRoX3Rva2VuX3NlY3JldCxcbiAgICAgIC4uLnRva2Vucy5wYXJhbXNcbiAgICB9KX1gO1xuXG4gICAgX2NsaWVudExlZ2FjeS5vQXV0aDFUb2tlblN0b3JlLnNldCh0b2tlbnMub2F1dGhfdG9rZW4sIHRva2Vucy5vYXV0aF90b2tlbl9zZWNyZXQpO1xuXG4gICAgbG9nZ2VyLmRlYnVnKFwiR0VUX0FVVEhPUklaQVRJT05fVVJMXCIsIHtcbiAgICAgIHVybCxcbiAgICAgIHByb3ZpZGVyXG4gICAgfSk7XG4gICAgcmV0dXJuIHtcbiAgICAgIHJlZGlyZWN0OiB1cmxcbiAgICB9O1xuICB9XG5cbiAgY29uc3QgY2xpZW50ID0gYXdhaXQgKDAsIF9jbGllbnQub3BlbmlkQ2xpZW50KShvcHRpb25zKTtcbiAgY29uc3QgYXV0aG9yaXphdGlvblBhcmFtcyA9IHBhcmFtcztcbiAgY29uc3QgY29va2llcyA9IFtdO1xuICBhd2FpdCBjaGVja3Muc3RhdGUuY3JlYXRlKG9wdGlvbnMsIGNvb2tpZXMsIGF1dGhvcml6YXRpb25QYXJhbXMpO1xuICBhd2FpdCBjaGVja3MucGtjZS5jcmVhdGUob3B0aW9ucywgY29va2llcywgYXV0aG9yaXphdGlvblBhcmFtcyk7XG4gIGF3YWl0IGNoZWNrcy5ub25jZS5jcmVhdGUob3B0aW9ucywgY29va2llcywgYXV0aG9yaXphdGlvblBhcmFtcyk7XG4gIGNvbnN0IHVybCA9IGNsaWVudC5hdXRob3JpemF0aW9uVXJsKGF1dGhvcml6YXRpb25QYXJhbXMpO1xuICBsb2dnZXIuZGVidWcoXCJHRVRfQVVUSE9SSVpBVElPTl9VUkxcIiwge1xuICAgIHVybCxcbiAgICBjb29raWVzLFxuICAgIHByb3ZpZGVyXG4gIH0pO1xuICByZXR1cm4ge1xuICAgIHJlZGlyZWN0OiB1cmwsXG4gICAgY29va2llc1xuICB9O1xufSJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsImRlZmF1bHQiLCJnZXRBdXRob3JpemF0aW9uVXJsIiwiX2NsaWVudCIsInJlcXVpcmUiLCJfY2xpZW50TGVnYWN5IiwiY2hlY2tzIiwiX2ludGVyb3BSZXF1aXJlV2lsZGNhcmQiLCJfZ2V0UmVxdWlyZVdpbGRjYXJkQ2FjaGUiLCJub2RlSW50ZXJvcCIsIldlYWtNYXAiLCJjYWNoZUJhYmVsSW50ZXJvcCIsImNhY2hlTm9kZUludGVyb3AiLCJvYmoiLCJfX2VzTW9kdWxlIiwiY2FjaGUiLCJoYXMiLCJnZXQiLCJuZXdPYmoiLCJoYXNQcm9wZXJ0eURlc2NyaXB0b3IiLCJnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IiLCJrZXkiLCJwcm90b3R5cGUiLCJoYXNPd25Qcm9wZXJ0eSIsImNhbGwiLCJkZXNjIiwic2V0Iiwib3B0aW9ucyIsInF1ZXJ5IiwiX3Byb3ZpZGVyJHZlcnNpb24iLCJsb2dnZXIiLCJwcm92aWRlciIsInBhcmFtcyIsImF1dGhvcml6YXRpb24iLCJwYXJzZWRVcmwiLCJVUkwiLCJwYXJzZWRQYXJhbXMiLCJmcm9tRW50cmllcyIsInNlYXJjaFBhcmFtcyIsIl9wcm92aWRlciRhdXRob3JpemF0aSIsInZlcnNpb24iLCJzdGFydHNXaXRoIiwiX3Byb3ZpZGVyJGF1dGhvcml6YXRpMiIsImNsaWVudCIsIm9BdXRoMUNsaWVudCIsInRva2VucyIsImdldE9BdXRoUmVxdWVzdFRva2VuIiwidXJsIiwiVVJMU2VhcmNoUGFyYW1zIiwib2F1dGhfdG9rZW4iLCJvYXV0aF90b2tlbl9zZWNyZXQiLCJvQXV0aDFUb2tlblN0b3JlIiwiZGVidWciLCJyZWRpcmVjdCIsIm9wZW5pZENsaWVudCIsImF1dGhvcml6YXRpb25QYXJhbXMiLCJjb29raWVzIiwic3RhdGUiLCJjcmVhdGUiLCJwa2NlIiwibm9uY2UiLCJhdXRob3JpemF0aW9uVXJsIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/next-auth/core/lib/oauth/authorization-url.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/next-auth/core/lib/oauth/callback.js":
/*!***********************************************************!*\
  !*** ./node_modules/next-auth/core/lib/oauth/callback.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports[\"default\"] = oAuthCallback;\nvar _openidClient = __webpack_require__(/*! openid-client */ \"(sc_server)/./node_modules/openid-client/lib/index.js\");\nvar _client = __webpack_require__(/*! ./client */ \"(sc_server)/./node_modules/next-auth/core/lib/oauth/client.js\");\nvar _clientLegacy = __webpack_require__(/*! ./client-legacy */ \"(sc_server)/./node_modules/next-auth/core/lib/oauth/client-legacy.js\");\nvar _checks = _interopRequireWildcard(__webpack_require__(/*! ./checks */ \"(sc_server)/./node_modules/next-auth/core/lib/oauth/checks.js\"));\nvar _errors = __webpack_require__(/*! ../../errors */ \"(sc_server)/./node_modules/next-auth/core/errors.js\");\nfunction _getRequireWildcardCache(nodeInterop) {\n    if (typeof WeakMap !== \"function\") return null;\n    var cacheBabelInterop = new WeakMap();\n    var cacheNodeInterop = new WeakMap();\n    return (_getRequireWildcardCache = function(nodeInterop) {\n        return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n    })(nodeInterop);\n}\nfunction _interopRequireWildcard(obj, nodeInterop) {\n    if (!nodeInterop && obj && obj.__esModule) {\n        return obj;\n    }\n    if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n        return {\n            default: obj\n        };\n    }\n    var cache = _getRequireWildcardCache(nodeInterop);\n    if (cache && cache.has(obj)) {\n        return cache.get(obj);\n    }\n    var newObj = {};\n    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n    for(var key in obj){\n        if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n            if (desc && (desc.get || desc.set)) {\n                Object.defineProperty(newObj, key, desc);\n            } else {\n                newObj[key] = obj[key];\n            }\n        }\n    }\n    newObj.default = obj;\n    if (cache) {\n        cache.set(obj, newObj);\n    }\n    return newObj;\n}\nasync function oAuthCallback(params) {\n    var _body$error, _provider$version;\n    const { options , query , body , method , cookies  } = params;\n    const { logger , provider  } = options;\n    const errorMessage = (_body$error = body === null || body === void 0 ? void 0 : body.error) !== null && _body$error !== void 0 ? _body$error : query === null || query === void 0 ? void 0 : query.error;\n    if (errorMessage) {\n        const error = new Error(errorMessage);\n        logger.error(\"OAUTH_CALLBACK_HANDLER_ERROR\", {\n            error,\n            error_description: query === null || query === void 0 ? void 0 : query.error_description,\n            providerId: provider.id\n        });\n        logger.debug(\"OAUTH_CALLBACK_HANDLER_ERROR\", {\n            body\n        });\n        throw error;\n    }\n    if ((_provider$version = provider.version) !== null && _provider$version !== void 0 && _provider$version.startsWith(\"1.\")) {\n        try {\n            const client = await (0, _clientLegacy.oAuth1Client)(options);\n            const { oauth_token , oauth_verifier  } = query !== null && query !== void 0 ? query : {};\n            const tokens = await client.getOAuthAccessToken(oauth_token, _clientLegacy.oAuth1TokenStore.get(oauth_token), oauth_verifier);\n            let profile = await client.get(provider.profileUrl, tokens.oauth_token, tokens.oauth_token_secret);\n            if (typeof profile === \"string\") {\n                profile = JSON.parse(profile);\n            }\n            const newProfile = await getProfile({\n                profile,\n                tokens,\n                provider,\n                logger\n            });\n            return {\n                ...newProfile,\n                cookies: []\n            };\n        } catch (error) {\n            logger.error(\"OAUTH_V1_GET_ACCESS_TOKEN_ERROR\", error);\n            throw error;\n        }\n    }\n    if (query !== null && query !== void 0 && query.oauth_token) _clientLegacy.oAuth1TokenStore.delete(query.oauth_token);\n    try {\n        var _provider$token, _provider$token2, _provider$userinfo;\n        const client = await (0, _client.openidClient)(options);\n        let tokens;\n        const checks = {};\n        const resCookies = [];\n        await _checks.state.use(cookies, resCookies, options, checks);\n        await _checks.pkce.use(cookies, resCookies, options, checks);\n        await _checks.nonce.use(cookies, resCookies, options, checks);\n        const params = {\n            ...client.callbackParams({\n                url: `http://n?${new URLSearchParams(query)}`,\n                body,\n                method\n            }),\n            ...(_provider$token = provider.token) === null || _provider$token === void 0 ? void 0 : _provider$token.params\n        };\n        if ((_provider$token2 = provider.token) !== null && _provider$token2 !== void 0 && _provider$token2.request) {\n            const response = await provider.token.request({\n                provider,\n                params,\n                checks,\n                client\n            });\n            tokens = new _openidClient.TokenSet(response.tokens);\n        } else if (provider.idToken) {\n            tokens = await client.callback(provider.callbackUrl, params, checks);\n        } else {\n            tokens = await client.oauthCallback(provider.callbackUrl, params, checks);\n        }\n        if (Array.isArray(tokens.scope)) {\n            tokens.scope = tokens.scope.join(\" \");\n        }\n        let profile;\n        if ((_provider$userinfo = provider.userinfo) !== null && _provider$userinfo !== void 0 && _provider$userinfo.request) {\n            profile = await provider.userinfo.request({\n                provider,\n                tokens,\n                client\n            });\n        } else if (provider.idToken) {\n            profile = tokens.claims();\n        } else {\n            var _provider$userinfo2;\n            profile = await client.userinfo(tokens, {\n                params: (_provider$userinfo2 = provider.userinfo) === null || _provider$userinfo2 === void 0 ? void 0 : _provider$userinfo2.params\n            });\n        }\n        const profileResult = await getProfile({\n            profile,\n            provider,\n            tokens,\n            logger\n        });\n        return {\n            ...profileResult,\n            cookies: resCookies\n        };\n    } catch (error) {\n        throw new _errors.OAuthCallbackError(error);\n    }\n}\nasync function getProfile({ profile: OAuthProfile , tokens , provider , logger  }) {\n    try {\n        var _profile$email;\n        logger.debug(\"PROFILE_DATA\", {\n            OAuthProfile\n        });\n        const profile = await provider.profile(OAuthProfile, tokens);\n        profile.email = (_profile$email = profile.email) === null || _profile$email === void 0 ? void 0 : _profile$email.toLowerCase();\n        if (!profile.id) throw new TypeError(`Profile id is missing in ${provider.name} OAuth profile response`);\n        return {\n            profile,\n            account: {\n                provider: provider.id,\n                type: provider.type,\n                providerAccountId: profile.id.toString(),\n                ...tokens\n            },\n            OAuthProfile\n        };\n    } catch (error) {\n        logger.error(\"OAUTH_PARSE_PROFILE_ERROR\", {\n            error: error,\n            OAuthProfile\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/next-auth/core/lib/oauth/callback.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/next-auth/core/lib/oauth/checks.js":
/*!*********************************************************!*\
  !*** ./node_modules/next-auth/core/lib/oauth/checks.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.pkce = exports.nonce = exports.PKCE_CODE_CHALLENGE_METHOD = void 0;\nexports.signCookie = signCookie;\nexports.state = void 0;\nvar _openidClient = __webpack_require__(/*! openid-client */ \"(sc_server)/./node_modules/openid-client/lib/index.js\");\nvar jwt = _interopRequireWildcard(__webpack_require__(/*! ../../../jwt */ \"(sc_server)/./node_modules/next-auth/jwt/index.js\"));\nfunction _getRequireWildcardCache(nodeInterop) {\n    if (typeof WeakMap !== \"function\") return null;\n    var cacheBabelInterop = new WeakMap();\n    var cacheNodeInterop = new WeakMap();\n    return (_getRequireWildcardCache = function(nodeInterop) {\n        return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n    })(nodeInterop);\n}\nfunction _interopRequireWildcard(obj, nodeInterop) {\n    if (!nodeInterop && obj && obj.__esModule) {\n        return obj;\n    }\n    if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n        return {\n            default: obj\n        };\n    }\n    var cache = _getRequireWildcardCache(nodeInterop);\n    if (cache && cache.has(obj)) {\n        return cache.get(obj);\n    }\n    var newObj = {};\n    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n    for(var key in obj){\n        if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n            if (desc && (desc.get || desc.set)) {\n                Object.defineProperty(newObj, key, desc);\n            } else {\n                newObj[key] = obj[key];\n            }\n        }\n    }\n    newObj.default = obj;\n    if (cache) {\n        cache.set(obj, newObj);\n    }\n    return newObj;\n}\nasync function signCookie(type, value, maxAge, options) {\n    const { cookies , logger  } = options;\n    logger.debug(`CREATE_${type.toUpperCase()}`, {\n        value,\n        maxAge\n    });\n    const expires = new Date();\n    expires.setTime(expires.getTime() + maxAge * 1000);\n    return {\n        name: cookies[type].name,\n        value: await jwt.encode({\n            ...options.jwt,\n            maxAge,\n            token: {\n                value\n            }\n        }),\n        options: {\n            ...cookies[type].options,\n            expires\n        }\n    };\n}\nconst PKCE_MAX_AGE = 60 * 15;\nconst PKCE_CODE_CHALLENGE_METHOD = \"S256\";\nexports.PKCE_CODE_CHALLENGE_METHOD = PKCE_CODE_CHALLENGE_METHOD;\nconst pkce = {\n    async create (options, cookies, resParams) {\n        var _options$provider, _options$provider$che, _options$cookies$pkce;\n        if (!((_options$provider = options.provider) !== null && _options$provider !== void 0 && (_options$provider$che = _options$provider.checks) !== null && _options$provider$che !== void 0 && _options$provider$che.includes(\"pkce\"))) return;\n        const code_verifier = _openidClient.generators.codeVerifier();\n        const value = _openidClient.generators.codeChallenge(code_verifier);\n        resParams.code_challenge = value;\n        resParams.code_challenge_method = PKCE_CODE_CHALLENGE_METHOD;\n        const maxAge = (_options$cookies$pkce = options.cookies.pkceCodeVerifier.options.maxAge) !== null && _options$cookies$pkce !== void 0 ? _options$cookies$pkce : PKCE_MAX_AGE;\n        cookies.push(await signCookie(\"pkceCodeVerifier\", code_verifier, maxAge, options));\n    },\n    async use (cookies, resCookies, options, checks) {\n        var _options$provider2, _options$provider2$ch;\n        if (!((_options$provider2 = options.provider) !== null && _options$provider2 !== void 0 && (_options$provider2$ch = _options$provider2.checks) !== null && _options$provider2$ch !== void 0 && _options$provider2$ch.includes(\"pkce\"))) return;\n        const codeVerifier = cookies === null || cookies === void 0 ? void 0 : cookies[options.cookies.pkceCodeVerifier.name];\n        if (!codeVerifier) throw new TypeError(\"PKCE code_verifier cookie was missing.\");\n        const value = await jwt.decode({\n            ...options.jwt,\n            token: codeVerifier\n        });\n        if (!(value !== null && value !== void 0 && value.value)) throw new TypeError(\"PKCE code_verifier value could not be parsed.\");\n        resCookies.push({\n            name: options.cookies.pkceCodeVerifier.name,\n            value: \"\",\n            options: {\n                ...options.cookies.pkceCodeVerifier.options,\n                maxAge: 0\n            }\n        });\n        checks.code_verifier = value.value;\n    }\n};\nexports.pkce = pkce;\nconst STATE_MAX_AGE = 60 * 15;\nconst state = {\n    async create (options, cookies, resParams) {\n        var _options$provider$che2, _options$cookies$stat;\n        if (!((_options$provider$che2 = options.provider.checks) !== null && _options$provider$che2 !== void 0 && _options$provider$che2.includes(\"state\"))) return;\n        const value = _openidClient.generators.state();\n        resParams.state = value;\n        const maxAge = (_options$cookies$stat = options.cookies.state.options.maxAge) !== null && _options$cookies$stat !== void 0 ? _options$cookies$stat : STATE_MAX_AGE;\n        cookies.push(await signCookie(\"state\", value, maxAge, options));\n    },\n    async use (cookies, resCookies, options, checks) {\n        var _options$provider$che3;\n        if (!((_options$provider$che3 = options.provider.checks) !== null && _options$provider$che3 !== void 0 && _options$provider$che3.includes(\"state\"))) return;\n        const state = cookies === null || cookies === void 0 ? void 0 : cookies[options.cookies.state.name];\n        if (!state) throw new TypeError(\"State cookie was missing.\");\n        const value = await jwt.decode({\n            ...options.jwt,\n            token: state\n        });\n        if (!(value !== null && value !== void 0 && value.value)) throw new TypeError(\"State value could not be parsed.\");\n        resCookies.push({\n            name: options.cookies.state.name,\n            value: \"\",\n            options: {\n                ...options.cookies.state.options,\n                maxAge: 0\n            }\n        });\n        checks.state = value.value;\n    }\n};\nexports.state = state;\nconst NONCE_MAX_AGE = 60 * 15;\nconst nonce = {\n    async create (options, cookies, resParams) {\n        var _options$provider$che4, _options$cookies$nonc;\n        if (!((_options$provider$che4 = options.provider.checks) !== null && _options$provider$che4 !== void 0 && _options$provider$che4.includes(\"nonce\"))) return;\n        const value = _openidClient.generators.nonce();\n        resParams.nonce = value;\n        const maxAge = (_options$cookies$nonc = options.cookies.nonce.options.maxAge) !== null && _options$cookies$nonc !== void 0 ? _options$cookies$nonc : NONCE_MAX_AGE;\n        cookies.push(await signCookie(\"nonce\", value, maxAge, options));\n    },\n    async use (cookies, resCookies, options, checks) {\n        var _options$provider3, _options$provider3$ch;\n        if (!((_options$provider3 = options.provider) !== null && _options$provider3 !== void 0 && (_options$provider3$ch = _options$provider3.checks) !== null && _options$provider3$ch !== void 0 && _options$provider3$ch.includes(\"nonce\"))) return;\n        const nonce = cookies === null || cookies === void 0 ? void 0 : cookies[options.cookies.nonce.name];\n        if (!nonce) throw new TypeError(\"Nonce cookie was missing.\");\n        const value = await jwt.decode({\n            ...options.jwt,\n            token: nonce\n        });\n        if (!(value !== null && value !== void 0 && value.value)) throw new TypeError(\"Nonce value could not be parsed.\");\n        resCookies.push({\n            name: options.cookies.nonce.name,\n            value: \"\",\n            options: {\n                ...options.cookies.nonce.options,\n                maxAge: 0\n            }\n        });\n        checks.nonce = value.value;\n    }\n};\nexports.nonce = nonce;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/next-auth/core/lib/oauth/checks.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/next-auth/core/lib/oauth/client-legacy.js":
/*!****************************************************************!*\
  !*** ./node_modules/next-auth/core/lib/oauth/client-legacy.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.oAuth1Client = oAuth1Client;\nexports.oAuth1TokenStore = void 0;\nvar _oauth = __webpack_require__(/*! oauth */ \"(sc_server)/./node_modules/oauth/index.js\");\nfunction oAuth1Client(options) {\n    var _provider$version, _provider$encoding;\n    const provider = options.provider;\n    const oauth1Client = new _oauth.OAuth(provider.requestTokenUrl, provider.accessTokenUrl, provider.clientId, provider.clientSecret, (_provider$version = provider.version) !== null && _provider$version !== void 0 ? _provider$version : \"1.0\", provider.callbackUrl, (_provider$encoding = provider.encoding) !== null && _provider$encoding !== void 0 ? _provider$encoding : \"HMAC-SHA1\");\n    const originalGet = oauth1Client.get.bind(oauth1Client);\n    oauth1Client.get = async (...args)=>{\n        return await new Promise((resolve, reject)=>{\n            originalGet(...args, (error, result)=>{\n                if (error) {\n                    return reject(error);\n                }\n                resolve(result);\n            });\n        });\n    };\n    const originalGetOAuth1AccessToken = oauth1Client.getOAuthAccessToken.bind(oauth1Client);\n    oauth1Client.getOAuthAccessToken = async (...args)=>{\n        return await new Promise((resolve, reject)=>{\n            originalGetOAuth1AccessToken(...args, (error, oauth_token, oauth_token_secret)=>{\n                if (error) {\n                    return reject(error);\n                }\n                resolve({\n                    oauth_token,\n                    oauth_token_secret\n                });\n            });\n        });\n    };\n    const originalGetOAuthRequestToken = oauth1Client.getOAuthRequestToken.bind(oauth1Client);\n    oauth1Client.getOAuthRequestToken = async (params = {})=>{\n        return await new Promise((resolve, reject)=>{\n            originalGetOAuthRequestToken(params, (error, oauth_token, oauth_token_secret, params)=>{\n                if (error) {\n                    return reject(error);\n                }\n                resolve({\n                    oauth_token,\n                    oauth_token_secret,\n                    params\n                });\n            });\n        });\n    };\n    return oauth1Client;\n}\nconst oAuth1TokenStore = new Map();\nexports.oAuth1TokenStore = oAuth1TokenStore;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL2NvcmUvbGliL29hdXRoL2NsaWVudC1sZWdhY3kuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFFYkEsOENBQTZDO0lBQzNDRyxPQUFPO0FBQ1QsQ0FBQyxFQUFDO0FBQ0ZELG9CQUFvQkUsR0FBR0E7QUFDdkJGLHdCQUF3QkcsR0FBRyxLQUFLO0FBRWhDLElBQUlDLFNBQVNDLG1CQUFPQSxDQUFDLHdEQUFPO0FBRTVCLFNBQVNILGFBQWFJLE9BQU87SUFDM0IsSUFBSUMsbUJBQW1CQztJQUV2QixNQUFNQyxXQUFXSCxRQUFRRztJQUN6QixNQUFNQyxlQUFlLElBQUlOLE9BQU9PLE1BQU1GLFNBQVNHLGlCQUFpQkgsU0FBU0ksZ0JBQWdCSixTQUFTSyxVQUFVTCxTQUFTTSxjQUFjLENBQUNSLG9CQUFvQkUsU0FBU08sT0FBTSxNQUFPLFFBQVFULHNCQUFzQixLQUFLLElBQUlBLG9CQUFvQixPQUFPRSxTQUFTUSxhQUFhLENBQUNULHFCQUFxQkMsU0FBU1MsUUFBTyxNQUFPLFFBQVFWLHVCQUF1QixLQUFLLElBQUlBLHFCQUFxQjtJQUNoWCxNQUFNVyxjQUFjVCxhQUFhVSxJQUFJQyxLQUFLWDtJQUUxQ0EsYUFBYVUsTUFBTSxPQUFPLEdBQUdFO1FBQzNCLE9BQU8sTUFBTSxJQUFJQyxRQUFRLENBQUNDLFNBQVNDO1lBQ2pDTixlQUFlRyxNQUFNLENBQUNJLE9BQU9DO2dCQUMzQixJQUFJRCxPQUFPO29CQUNULE9BQU9ELE9BQU9DO2dCQUNoQjtnQkFFQUYsUUFBUUc7WUFDVjtRQUNGO0lBQ0Y7SUFFQSxNQUFNQywrQkFBK0JsQixhQUFhbUIsb0JBQW9CUixLQUFLWDtJQUUzRUEsYUFBYW1CLHNCQUFzQixPQUFPLEdBQUdQO1FBQzNDLE9BQU8sTUFBTSxJQUFJQyxRQUFRLENBQUNDLFNBQVNDO1lBQ2pDRyxnQ0FBZ0NOLE1BQU0sQ0FBQ0ksT0FBT0ksYUFBYUM7Z0JBQ3pELElBQUlMLE9BQU87b0JBQ1QsT0FBT0QsT0FBT0M7Z0JBQ2hCO2dCQUVBRixRQUFRO29CQUNOTTtvQkFDQUM7Z0JBQ0Y7WUFDRjtRQUNGO0lBQ0Y7SUFFQSxNQUFNQywrQkFBK0J0QixhQUFhdUIscUJBQXFCWixLQUFLWDtJQUU1RUEsYUFBYXVCLHVCQUF1QixPQUFPQyxTQUFTLENBQUMsQ0FBQztRQUNwRCxPQUFPLE1BQU0sSUFBSVgsUUFBUSxDQUFDQyxTQUFTQztZQUNqQ08sNkJBQTZCRSxRQUFRLENBQUNSLE9BQU9JLGFBQWFDLG9CQUFvQkc7Z0JBQzVFLElBQUlSLE9BQU87b0JBQ1QsT0FBT0QsT0FBT0M7Z0JBQ2hCO2dCQUVBRixRQUFRO29CQUNOTTtvQkFDQUM7b0JBQ0FHO2dCQUNGO1lBQ0Y7UUFDRjtJQUNGO0lBRUEsT0FBT3hCO0FBQ1Q7QUFFQSxNQUFNUCxtQkFBbUIsSUFBSWdDO0FBQzdCbkMsd0JBQXdCRyxHQUFHQSIsInNvdXJjZXMiOlsid2VicGFjazovL2Z1bGxzdGFjay1yb2xlLWJhc2VkLW5leHRqcy0yLy4vbm9kZV9tb2R1bGVzL25leHQtYXV0aC9jb3JlL2xpYi9vYXV0aC9jbGllbnQtbGVnYWN5LmpzPzg2YzAiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLm9BdXRoMUNsaWVudCA9IG9BdXRoMUNsaWVudDtcbmV4cG9ydHMub0F1dGgxVG9rZW5TdG9yZSA9IHZvaWQgMDtcblxudmFyIF9vYXV0aCA9IHJlcXVpcmUoXCJvYXV0aFwiKTtcblxuZnVuY3Rpb24gb0F1dGgxQ2xpZW50KG9wdGlvbnMpIHtcbiAgdmFyIF9wcm92aWRlciR2ZXJzaW9uLCBfcHJvdmlkZXIkZW5jb2Rpbmc7XG5cbiAgY29uc3QgcHJvdmlkZXIgPSBvcHRpb25zLnByb3ZpZGVyO1xuICBjb25zdCBvYXV0aDFDbGllbnQgPSBuZXcgX29hdXRoLk9BdXRoKHByb3ZpZGVyLnJlcXVlc3RUb2tlblVybCwgcHJvdmlkZXIuYWNjZXNzVG9rZW5VcmwsIHByb3ZpZGVyLmNsaWVudElkLCBwcm92aWRlci5jbGllbnRTZWNyZXQsIChfcHJvdmlkZXIkdmVyc2lvbiA9IHByb3ZpZGVyLnZlcnNpb24pICE9PSBudWxsICYmIF9wcm92aWRlciR2ZXJzaW9uICE9PSB2b2lkIDAgPyBfcHJvdmlkZXIkdmVyc2lvbiA6IFwiMS4wXCIsIHByb3ZpZGVyLmNhbGxiYWNrVXJsLCAoX3Byb3ZpZGVyJGVuY29kaW5nID0gcHJvdmlkZXIuZW5jb2RpbmcpICE9PSBudWxsICYmIF9wcm92aWRlciRlbmNvZGluZyAhPT0gdm9pZCAwID8gX3Byb3ZpZGVyJGVuY29kaW5nIDogXCJITUFDLVNIQTFcIik7XG4gIGNvbnN0IG9yaWdpbmFsR2V0ID0gb2F1dGgxQ2xpZW50LmdldC5iaW5kKG9hdXRoMUNsaWVudCk7XG5cbiAgb2F1dGgxQ2xpZW50LmdldCA9IGFzeW5jICguLi5hcmdzKSA9PiB7XG4gICAgcmV0dXJuIGF3YWl0IG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcbiAgICAgIG9yaWdpbmFsR2V0KC4uLmFyZ3MsIChlcnJvciwgcmVzdWx0KSA9PiB7XG4gICAgICAgIGlmIChlcnJvcikge1xuICAgICAgICAgIHJldHVybiByZWplY3QoZXJyb3IpO1xuICAgICAgICB9XG5cbiAgICAgICAgcmVzb2x2ZShyZXN1bHQpO1xuICAgICAgfSk7XG4gICAgfSk7XG4gIH07XG5cbiAgY29uc3Qgb3JpZ2luYWxHZXRPQXV0aDFBY2Nlc3NUb2tlbiA9IG9hdXRoMUNsaWVudC5nZXRPQXV0aEFjY2Vzc1Rva2VuLmJpbmQob2F1dGgxQ2xpZW50KTtcblxuICBvYXV0aDFDbGllbnQuZ2V0T0F1dGhBY2Nlc3NUb2tlbiA9IGFzeW5jICguLi5hcmdzKSA9PiB7XG4gICAgcmV0dXJuIGF3YWl0IG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcbiAgICAgIG9yaWdpbmFsR2V0T0F1dGgxQWNjZXNzVG9rZW4oLi4uYXJncywgKGVycm9yLCBvYXV0aF90b2tlbiwgb2F1dGhfdG9rZW5fc2VjcmV0KSA9PiB7XG4gICAgICAgIGlmIChlcnJvcikge1xuICAgICAgICAgIHJldHVybiByZWplY3QoZXJyb3IpO1xuICAgICAgICB9XG5cbiAgICAgICAgcmVzb2x2ZSh7XG4gICAgICAgICAgb2F1dGhfdG9rZW4sXG4gICAgICAgICAgb2F1dGhfdG9rZW5fc2VjcmV0XG4gICAgICAgIH0pO1xuICAgICAgfSk7XG4gICAgfSk7XG4gIH07XG5cbiAgY29uc3Qgb3JpZ2luYWxHZXRPQXV0aFJlcXVlc3RUb2tlbiA9IG9hdXRoMUNsaWVudC5nZXRPQXV0aFJlcXVlc3RUb2tlbi5iaW5kKG9hdXRoMUNsaWVudCk7XG5cbiAgb2F1dGgxQ2xpZW50LmdldE9BdXRoUmVxdWVzdFRva2VuID0gYXN5bmMgKHBhcmFtcyA9IHt9KSA9PiB7XG4gICAgcmV0dXJuIGF3YWl0IG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcbiAgICAgIG9yaWdpbmFsR2V0T0F1dGhSZXF1ZXN0VG9rZW4ocGFyYW1zLCAoZXJyb3IsIG9hdXRoX3Rva2VuLCBvYXV0aF90b2tlbl9zZWNyZXQsIHBhcmFtcykgPT4ge1xuICAgICAgICBpZiAoZXJyb3IpIHtcbiAgICAgICAgICByZXR1cm4gcmVqZWN0KGVycm9yKTtcbiAgICAgICAgfVxuXG4gICAgICAgIHJlc29sdmUoe1xuICAgICAgICAgIG9hdXRoX3Rva2VuLFxuICAgICAgICAgIG9hdXRoX3Rva2VuX3NlY3JldCxcbiAgICAgICAgICBwYXJhbXNcbiAgICAgICAgfSk7XG4gICAgICB9KTtcbiAgICB9KTtcbiAgfTtcblxuICByZXR1cm4gb2F1dGgxQ2xpZW50O1xufVxuXG5jb25zdCBvQXV0aDFUb2tlblN0b3JlID0gbmV3IE1hcCgpO1xuZXhwb3J0cy5vQXV0aDFUb2tlblN0b3JlID0gb0F1dGgxVG9rZW5TdG9yZTsiXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJvQXV0aDFDbGllbnQiLCJvQXV0aDFUb2tlblN0b3JlIiwiX29hdXRoIiwicmVxdWlyZSIsIm9wdGlvbnMiLCJfcHJvdmlkZXIkdmVyc2lvbiIsIl9wcm92aWRlciRlbmNvZGluZyIsInByb3ZpZGVyIiwib2F1dGgxQ2xpZW50IiwiT0F1dGgiLCJyZXF1ZXN0VG9rZW5VcmwiLCJhY2Nlc3NUb2tlblVybCIsImNsaWVudElkIiwiY2xpZW50U2VjcmV0IiwidmVyc2lvbiIsImNhbGxiYWNrVXJsIiwiZW5jb2RpbmciLCJvcmlnaW5hbEdldCIsImdldCIsImJpbmQiLCJhcmdzIiwiUHJvbWlzZSIsInJlc29sdmUiLCJyZWplY3QiLCJlcnJvciIsInJlc3VsdCIsIm9yaWdpbmFsR2V0T0F1dGgxQWNjZXNzVG9rZW4iLCJnZXRPQXV0aEFjY2Vzc1Rva2VuIiwib2F1dGhfdG9rZW4iLCJvYXV0aF90b2tlbl9zZWNyZXQiLCJvcmlnaW5hbEdldE9BdXRoUmVxdWVzdFRva2VuIiwiZ2V0T0F1dGhSZXF1ZXN0VG9rZW4iLCJwYXJhbXMiLCJNYXAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/next-auth/core/lib/oauth/client-legacy.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/next-auth/core/lib/oauth/client.js":
/*!*********************************************************!*\
  !*** ./node_modules/next-auth/core/lib/oauth/client.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.openidClient = openidClient;\nvar _openidClient = __webpack_require__(/*! openid-client */ \"(sc_server)/./node_modules/openid-client/lib/index.js\");\nasync function openidClient(options) {\n    const provider = options.provider;\n    if (provider.httpOptions) _openidClient.custom.setHttpOptionsDefaults(provider.httpOptions);\n    let issuer;\n    if (provider.wellKnown) {\n        issuer = await _openidClient.Issuer.discover(provider.wellKnown);\n    } else {\n        var _provider$authorizati, _provider$token, _provider$userinfo;\n        issuer = new _openidClient.Issuer({\n            issuer: provider.issuer,\n            authorization_endpoint: (_provider$authorizati = provider.authorization) === null || _provider$authorizati === void 0 ? void 0 : _provider$authorizati.url,\n            token_endpoint: (_provider$token = provider.token) === null || _provider$token === void 0 ? void 0 : _provider$token.url,\n            userinfo_endpoint: (_provider$userinfo = provider.userinfo) === null || _provider$userinfo === void 0 ? void 0 : _provider$userinfo.url,\n            jwks_uri: provider.jwks_endpoint\n        });\n    }\n    const client = new issuer.Client({\n        client_id: provider.clientId,\n        client_secret: provider.clientSecret,\n        redirect_uris: [\n            provider.callbackUrl\n        ],\n        ...provider.client\n    }, provider.jwks);\n    client[_openidClient.custom.clock_tolerance] = 10;\n    return client;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL2NvcmUvbGliL29hdXRoL2NsaWVudC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUViQSw4Q0FBNkM7SUFDM0NHLE9BQU87QUFDVCxDQUFDLEVBQUM7QUFDRkQsb0JBQW9CRSxHQUFHQTtBQUV2QixJQUFJQyxnQkFBZ0JDLG1CQUFPQSxDQUFDLDRFQUFlO0FBRTNDLGVBQWVGLGFBQWFHLE9BQU87SUFDakMsTUFBTUMsV0FBV0QsUUFBUUM7SUFDekIsSUFBSUEsU0FBU0MsYUFBYUosY0FBY0ssT0FBT0MsdUJBQXVCSCxTQUFTQztJQUMvRSxJQUFJRztJQUVKLElBQUlKLFNBQVNLLFdBQVc7UUFDdEJELFNBQVMsTUFBTVAsY0FBY1MsT0FBT0MsU0FBU1AsU0FBU0s7SUFDeEQsT0FBTztRQUNMLElBQUlHLHVCQUF1QkMsaUJBQWlCQztRQUU1Q04sU0FBUyxJQUFJUCxjQUFjUyxPQUFPO1lBQ2hDRixRQUFRSixTQUFTSTtZQUNqQk8sd0JBQXdCLENBQUNILHdCQUF3QlIsU0FBU1ksYUFBWSxNQUFPLFFBQVFKLDBCQUEwQixLQUFLLElBQUksS0FBSyxJQUFJQSxzQkFBc0JLO1lBQ3ZKQyxnQkFBZ0IsQ0FBQ0wsa0JBQWtCVCxTQUFTZSxLQUFJLE1BQU8sUUFBUU4sb0JBQW9CLEtBQUssSUFBSSxLQUFLLElBQUlBLGdCQUFnQkk7WUFDckhHLG1CQUFtQixDQUFDTixxQkFBcUJWLFNBQVNpQixRQUFPLE1BQU8sUUFBUVAsdUJBQXVCLEtBQUssSUFBSSxLQUFLLElBQUlBLG1CQUFtQkc7WUFDcElLLFVBQVVsQixTQUFTbUI7UUFDckI7SUFDRjtJQUVBLE1BQU1DLFNBQVMsSUFBSWhCLE9BQU9pQixPQUFPO1FBQy9CQyxXQUFXdEIsU0FBU3VCO1FBQ3BCQyxlQUFleEIsU0FBU3lCO1FBQ3hCQyxlQUFlO1lBQUMxQixTQUFTMkI7U0FBWTtRQUNyQyxHQUFHM0IsU0FBU29CLE1BQU07SUFDcEIsR0FBR3BCLFNBQVM0QjtJQUNaUixNQUFNLENBQUN2QixjQUFjSyxPQUFPMkIsZ0JBQWdCLEdBQUc7SUFDL0MsT0FBT1Q7QUFDVCIsInNvdXJjZXMiOlsid2VicGFjazovL2Z1bGxzdGFjay1yb2xlLWJhc2VkLW5leHRqcy0yLy4vbm9kZV9tb2R1bGVzL25leHQtYXV0aC9jb3JlL2xpYi9vYXV0aC9jbGllbnQuanM/MDAzZiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMub3BlbmlkQ2xpZW50ID0gb3BlbmlkQ2xpZW50O1xuXG52YXIgX29wZW5pZENsaWVudCA9IHJlcXVpcmUoXCJvcGVuaWQtY2xpZW50XCIpO1xuXG5hc3luYyBmdW5jdGlvbiBvcGVuaWRDbGllbnQob3B0aW9ucykge1xuICBjb25zdCBwcm92aWRlciA9IG9wdGlvbnMucHJvdmlkZXI7XG4gIGlmIChwcm92aWRlci5odHRwT3B0aW9ucykgX29wZW5pZENsaWVudC5jdXN0b20uc2V0SHR0cE9wdGlvbnNEZWZhdWx0cyhwcm92aWRlci5odHRwT3B0aW9ucyk7XG4gIGxldCBpc3N1ZXI7XG5cbiAgaWYgKHByb3ZpZGVyLndlbGxLbm93bikge1xuICAgIGlzc3VlciA9IGF3YWl0IF9vcGVuaWRDbGllbnQuSXNzdWVyLmRpc2NvdmVyKHByb3ZpZGVyLndlbGxLbm93bik7XG4gIH0gZWxzZSB7XG4gICAgdmFyIF9wcm92aWRlciRhdXRob3JpemF0aSwgX3Byb3ZpZGVyJHRva2VuLCBfcHJvdmlkZXIkdXNlcmluZm87XG5cbiAgICBpc3N1ZXIgPSBuZXcgX29wZW5pZENsaWVudC5Jc3N1ZXIoe1xuICAgICAgaXNzdWVyOiBwcm92aWRlci5pc3N1ZXIsXG4gICAgICBhdXRob3JpemF0aW9uX2VuZHBvaW50OiAoX3Byb3ZpZGVyJGF1dGhvcml6YXRpID0gcHJvdmlkZXIuYXV0aG9yaXphdGlvbikgPT09IG51bGwgfHwgX3Byb3ZpZGVyJGF1dGhvcml6YXRpID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfcHJvdmlkZXIkYXV0aG9yaXphdGkudXJsLFxuICAgICAgdG9rZW5fZW5kcG9pbnQ6IChfcHJvdmlkZXIkdG9rZW4gPSBwcm92aWRlci50b2tlbikgPT09IG51bGwgfHwgX3Byb3ZpZGVyJHRva2VuID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfcHJvdmlkZXIkdG9rZW4udXJsLFxuICAgICAgdXNlcmluZm9fZW5kcG9pbnQ6IChfcHJvdmlkZXIkdXNlcmluZm8gPSBwcm92aWRlci51c2VyaW5mbykgPT09IG51bGwgfHwgX3Byb3ZpZGVyJHVzZXJpbmZvID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfcHJvdmlkZXIkdXNlcmluZm8udXJsLFxuICAgICAgandrc191cmk6IHByb3ZpZGVyLmp3a3NfZW5kcG9pbnRcbiAgICB9KTtcbiAgfVxuXG4gIGNvbnN0IGNsaWVudCA9IG5ldyBpc3N1ZXIuQ2xpZW50KHtcbiAgICBjbGllbnRfaWQ6IHByb3ZpZGVyLmNsaWVudElkLFxuICAgIGNsaWVudF9zZWNyZXQ6IHByb3ZpZGVyLmNsaWVudFNlY3JldCxcbiAgICByZWRpcmVjdF91cmlzOiBbcHJvdmlkZXIuY2FsbGJhY2tVcmxdLFxuICAgIC4uLnByb3ZpZGVyLmNsaWVudFxuICB9LCBwcm92aWRlci5qd2tzKTtcbiAgY2xpZW50W19vcGVuaWRDbGllbnQuY3VzdG9tLmNsb2NrX3RvbGVyYW5jZV0gPSAxMDtcbiAgcmV0dXJuIGNsaWVudDtcbn0iXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJvcGVuaWRDbGllbnQiLCJfb3BlbmlkQ2xpZW50IiwicmVxdWlyZSIsIm9wdGlvbnMiLCJwcm92aWRlciIsImh0dHBPcHRpb25zIiwiY3VzdG9tIiwic2V0SHR0cE9wdGlvbnNEZWZhdWx0cyIsImlzc3VlciIsIndlbGxLbm93biIsIklzc3VlciIsImRpc2NvdmVyIiwiX3Byb3ZpZGVyJGF1dGhvcml6YXRpIiwiX3Byb3ZpZGVyJHRva2VuIiwiX3Byb3ZpZGVyJHVzZXJpbmZvIiwiYXV0aG9yaXphdGlvbl9lbmRwb2ludCIsImF1dGhvcml6YXRpb24iLCJ1cmwiLCJ0b2tlbl9lbmRwb2ludCIsInRva2VuIiwidXNlcmluZm9fZW5kcG9pbnQiLCJ1c2VyaW5mbyIsImp3a3NfdXJpIiwiandrc19lbmRwb2ludCIsImNsaWVudCIsIkNsaWVudCIsImNsaWVudF9pZCIsImNsaWVudElkIiwiY2xpZW50X3NlY3JldCIsImNsaWVudFNlY3JldCIsInJlZGlyZWN0X3VyaXMiLCJjYWxsYmFja1VybCIsImp3a3MiLCJjbG9ja190b2xlcmFuY2UiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/next-auth/core/lib/oauth/client.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/next-auth/core/lib/providers.js":
/*!******************************************************!*\
  !*** ./node_modules/next-auth/core/lib/providers.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports[\"default\"] = parseProviders;\nvar _merge = __webpack_require__(/*! ../../utils/merge */ \"(sc_server)/./node_modules/next-auth/utils/merge.js\");\nfunction parseProviders(params) {\n    const { url , providerId  } = params;\n    const providers = params.providers.map(({ options: userOptions , ...rest })=>{\n        var _ref;\n        if (rest.type === \"oauth\") {\n            var _normalizedUserOption;\n            const normalizedOptions = normalizeOAuthOptions(rest);\n            const normalizedUserOptions = normalizeOAuthOptions(userOptions, true);\n            const id = (_normalizedUserOption = normalizedUserOptions === null || normalizedUserOptions === void 0 ? void 0 : normalizedUserOptions.id) !== null && _normalizedUserOption !== void 0 ? _normalizedUserOption : rest.id;\n            return (0, _merge.merge)(normalizedOptions, {\n                ...normalizedUserOptions,\n                signinUrl: `${url}/signin/${id}`,\n                callbackUrl: `${url}/callback/${id}`\n            });\n        }\n        const id = (_ref = userOptions === null || userOptions === void 0 ? void 0 : userOptions.id) !== null && _ref !== void 0 ? _ref : rest.id;\n        return (0, _merge.merge)(rest, {\n            ...userOptions,\n            signinUrl: `${url}/signin/${id}`,\n            callbackUrl: `${url}/callback/${id}`\n        });\n    });\n    return {\n        providers,\n        provider: providers.find(({ id  })=>id === providerId)\n    };\n}\nfunction normalizeOAuthOptions(oauthOptions, isUserOptions = false) {\n    var _normalized$version;\n    if (!oauthOptions) return;\n    const normalized = Object.entries(oauthOptions).reduce((acc, [key, value])=>{\n        if ([\n            \"authorization\",\n            \"token\",\n            \"userinfo\"\n        ].includes(key) && typeof value === \"string\") {\n            var _url$searchParams;\n            const url = new URL(value);\n            acc[key] = {\n                url: `${url.origin}${url.pathname}`,\n                params: Object.fromEntries((_url$searchParams = url.searchParams) !== null && _url$searchParams !== void 0 ? _url$searchParams : [])\n            };\n        } else {\n            acc[key] = value;\n        }\n        return acc;\n    }, {});\n    if (!isUserOptions && !((_normalized$version = normalized.version) !== null && _normalized$version !== void 0 && _normalized$version.startsWith(\"1.\"))) {\n        var _ref2, _normalized$idToken, _normalized$wellKnown, _normalized$authoriza, _normalized$authoriza2, _normalized$authoriza3;\n        normalized.idToken = Boolean((_ref2 = (_normalized$idToken = normalized.idToken) !== null && _normalized$idToken !== void 0 ? _normalized$idToken : (_normalized$wellKnown = normalized.wellKnown) === null || _normalized$wellKnown === void 0 ? void 0 : _normalized$wellKnown.includes(\"openid-configuration\")) !== null && _ref2 !== void 0 ? _ref2 : (_normalized$authoriza = normalized.authorization) === null || _normalized$authoriza === void 0 ? void 0 : (_normalized$authoriza2 = _normalized$authoriza.params) === null || _normalized$authoriza2 === void 0 ? void 0 : (_normalized$authoriza3 = _normalized$authoriza2.scope) === null || _normalized$authoriza3 === void 0 ? void 0 : _normalized$authoriza3.includes(\"openid\"));\n        if (!normalized.checks) normalized.checks = [\n            \"state\"\n        ];\n    }\n    return normalized;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/next-auth/core/lib/providers.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/next-auth/core/lib/utils.js":
/*!**************************************************!*\
  !*** ./node_modules/next-auth/core/lib/utils.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.createSecret = createSecret;\nexports.fromDate = fromDate;\nexports.hashToken = hashToken;\nvar _crypto = __webpack_require__(/*! crypto */ \"crypto\");\nfunction fromDate(time, date = Date.now()) {\n    return new Date(date + time * 1000);\n}\nfunction hashToken(token, options) {\n    var _provider$secret;\n    const { provider , secret  } = options;\n    return (0, _crypto.createHash)(\"sha256\").update(`${token}${(_provider$secret = provider.secret) !== null && _provider$secret !== void 0 ? _provider$secret : secret}`).digest(\"hex\");\n}\nfunction createSecret(params) {\n    var _authOptions$secret;\n    const { authOptions , url  } = params;\n    return (_authOptions$secret = authOptions.secret) !== null && _authOptions$secret !== void 0 ? _authOptions$secret : (0, _crypto.createHash)(\"sha256\").update(JSON.stringify({\n        ...url,\n        ...authOptions\n    })).digest(\"hex\");\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL2NvcmUvbGliL3V0aWxzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBRWJBLDhDQUE2QztJQUMzQ0csT0FBTztBQUNULENBQUMsRUFBQztBQUNGRCxvQkFBb0JFLEdBQUdBO0FBQ3ZCRixnQkFBZ0JHLEdBQUdBO0FBQ25CSCxpQkFBaUJJLEdBQUdBO0FBRXBCLElBQUlDLFVBQVVDLG1CQUFPQSxDQUFDLHNCQUFRO0FBRTlCLFNBQVNILFNBQVNJLElBQUksRUFBRUMsT0FBT0MsS0FBS0MsS0FBSztJQUN2QyxPQUFPLElBQUlELEtBQUtELE9BQU9ELE9BQU87QUFDaEM7QUFFQSxTQUFTSCxVQUFVTyxLQUFLLEVBQUVDLE9BQU87SUFDL0IsSUFBSUM7SUFFSixNQUFNLEVBQ0pDLFNBQVEsRUFDUkMsT0FBTSxFQUNQLEdBQUdIO0lBQ0osT0FBTyxDQUFDLEdBQUdQLFFBQVFXLFVBQVMsRUFBRyxVQUFVQyxPQUFPLENBQUMsRUFBRU4sTUFBTSxFQUFFLENBQUNFLG1CQUFtQkMsU0FBU0MsTUFBSyxNQUFPLFFBQVFGLHFCQUFxQixLQUFLLElBQUlBLG1CQUFtQkUsT0FBTyxDQUFDLEVBQUVHLE9BQU87QUFDaEw7QUFFQSxTQUFTaEIsYUFBYWlCLE1BQU07SUFDMUIsSUFBSUM7SUFFSixNQUFNLEVBQ0pDLFlBQVcsRUFDWEMsSUFBRyxFQUNKLEdBQUdIO0lBQ0osT0FBTyxDQUFDQyxzQkFBc0JDLFlBQVlOLE1BQUssTUFBTyxRQUFRSyx3QkFBd0IsS0FBSyxJQUFJQSxzQkFBc0IsQ0FBQyxHQUFHZixRQUFRVyxVQUFTLEVBQUcsVUFBVUMsT0FBT00sS0FBS0MsVUFBVTtRQUFFLEdBQUdGLEdBQUc7UUFDbkwsR0FBR0QsV0FBVztJQUNoQixJQUFJSCxPQUFPO0FBQ2IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mdWxsc3RhY2stcm9sZS1iYXNlZC1uZXh0anMtMi8uL25vZGVfbW9kdWxlcy9uZXh0LWF1dGgvY29yZS9saWIvdXRpbHMuanM/MjM2NCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuY3JlYXRlU2VjcmV0ID0gY3JlYXRlU2VjcmV0O1xuZXhwb3J0cy5mcm9tRGF0ZSA9IGZyb21EYXRlO1xuZXhwb3J0cy5oYXNoVG9rZW4gPSBoYXNoVG9rZW47XG5cbnZhciBfY3J5cHRvID0gcmVxdWlyZShcImNyeXB0b1wiKTtcblxuZnVuY3Rpb24gZnJvbURhdGUodGltZSwgZGF0ZSA9IERhdGUubm93KCkpIHtcbiAgcmV0dXJuIG5ldyBEYXRlKGRhdGUgKyB0aW1lICogMTAwMCk7XG59XG5cbmZ1bmN0aW9uIGhhc2hUb2tlbih0b2tlbiwgb3B0aW9ucykge1xuICB2YXIgX3Byb3ZpZGVyJHNlY3JldDtcblxuICBjb25zdCB7XG4gICAgcHJvdmlkZXIsXG4gICAgc2VjcmV0XG4gIH0gPSBvcHRpb25zO1xuICByZXR1cm4gKDAsIF9jcnlwdG8uY3JlYXRlSGFzaCkoXCJzaGEyNTZcIikudXBkYXRlKGAke3Rva2VufSR7KF9wcm92aWRlciRzZWNyZXQgPSBwcm92aWRlci5zZWNyZXQpICE9PSBudWxsICYmIF9wcm92aWRlciRzZWNyZXQgIT09IHZvaWQgMCA/IF9wcm92aWRlciRzZWNyZXQgOiBzZWNyZXR9YCkuZGlnZXN0KFwiaGV4XCIpO1xufVxuXG5mdW5jdGlvbiBjcmVhdGVTZWNyZXQocGFyYW1zKSB7XG4gIHZhciBfYXV0aE9wdGlvbnMkc2VjcmV0O1xuXG4gIGNvbnN0IHtcbiAgICBhdXRoT3B0aW9ucyxcbiAgICB1cmxcbiAgfSA9IHBhcmFtcztcbiAgcmV0dXJuIChfYXV0aE9wdGlvbnMkc2VjcmV0ID0gYXV0aE9wdGlvbnMuc2VjcmV0KSAhPT0gbnVsbCAmJiBfYXV0aE9wdGlvbnMkc2VjcmV0ICE9PSB2b2lkIDAgPyBfYXV0aE9wdGlvbnMkc2VjcmV0IDogKDAsIF9jcnlwdG8uY3JlYXRlSGFzaCkoXCJzaGEyNTZcIikudXBkYXRlKEpTT04uc3RyaW5naWZ5KHsgLi4udXJsLFxuICAgIC4uLmF1dGhPcHRpb25zXG4gIH0pKS5kaWdlc3QoXCJoZXhcIik7XG59Il0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiY3JlYXRlU2VjcmV0IiwiZnJvbURhdGUiLCJoYXNoVG9rZW4iLCJfY3J5cHRvIiwicmVxdWlyZSIsInRpbWUiLCJkYXRlIiwiRGF0ZSIsIm5vdyIsInRva2VuIiwib3B0aW9ucyIsIl9wcm92aWRlciRzZWNyZXQiLCJwcm92aWRlciIsInNlY3JldCIsImNyZWF0ZUhhc2giLCJ1cGRhdGUiLCJkaWdlc3QiLCJwYXJhbXMiLCJfYXV0aE9wdGlvbnMkc2VjcmV0IiwiYXV0aE9wdGlvbnMiLCJ1cmwiLCJKU09OIiwic3RyaW5naWZ5Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/next-auth/core/lib/utils.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/next-auth/core/pages/error.js":
/*!****************************************************!*\
  !*** ./node_modules/next-auth/core/pages/error.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports[\"default\"] = ErrorPage;\nvar _preact = __webpack_require__(/*! preact */ \"(sc_server)/./node_modules/preact/dist/preact.js\");\nfunction ErrorPage(props) {\n    var _errors$error$toLower;\n    const { url , error =\"default\" , theme  } = props;\n    const signinPageUrl = `${url}/signin`;\n    const errors = {\n        default: {\n            status: 200,\n            heading: \"Error\",\n            message: (0, _preact.h)(\"p\", null, (0, _preact.h)(\"a\", {\n                className: \"site\",\n                href: url === null || url === void 0 ? void 0 : url.origin\n            }, url === null || url === void 0 ? void 0 : url.host))\n        },\n        configuration: {\n            status: 500,\n            heading: \"Server error\",\n            message: (0, _preact.h)(\"div\", null, (0, _preact.h)(\"p\", null, \"There is a problem with the server configuration.\"), (0, _preact.h)(\"p\", null, \"Check the server logs for more information.\"))\n        },\n        accessdenied: {\n            status: 403,\n            heading: \"Access Denied\",\n            message: (0, _preact.h)(\"div\", null, (0, _preact.h)(\"p\", null, \"You do not have permission to sign in.\"), (0, _preact.h)(\"p\", null, (0, _preact.h)(\"a\", {\n                className: \"button\",\n                href: signinPageUrl\n            }, \"Sign in\")))\n        },\n        verification: {\n            status: 403,\n            heading: \"Unable to sign in\",\n            message: (0, _preact.h)(\"div\", null, (0, _preact.h)(\"p\", null, \"The sign in link is no longer valid.\"), (0, _preact.h)(\"p\", null, \"It may have been used already or it may have expired.\")),\n            signin: (0, _preact.h)(\"p\", null, (0, _preact.h)(\"a\", {\n                className: \"button\",\n                href: signinPageUrl\n            }, \"Sign in\"))\n        }\n    };\n    const { status , heading , message , signin  } = (_errors$error$toLower = errors[error.toLowerCase()]) !== null && _errors$error$toLower !== void 0 ? _errors$error$toLower : errors.default;\n    return {\n        status,\n        html: (0, _preact.h)(\"div\", {\n            className: \"error\"\n        }, (theme === null || theme === void 0 ? void 0 : theme.brandColor) && (0, _preact.h)(\"style\", {\n            dangerouslySetInnerHTML: {\n                __html: `\n        :root {\n          --brand-color: ${theme === null || theme === void 0 ? void 0 : theme.brandColor}\n        }\n      `\n            }\n        }), (0, _preact.h)(\"div\", {\n            className: \"card\"\n        }, (theme === null || theme === void 0 ? void 0 : theme.logo) && (0, _preact.h)(\"img\", {\n            src: theme.logo,\n            alt: \"Logo\",\n            className: \"logo\"\n        }), (0, _preact.h)(\"h1\", null, heading), (0, _preact.h)(\"div\", {\n            className: \"message\"\n        }, message), signin))\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL2NvcmUvcGFnZXMvZXJyb3IuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFFYkEsOENBQTZDO0lBQzNDRyxPQUFPO0FBQ1QsQ0FBQyxFQUFDO0FBQ0ZELGtCQUFlRSxHQUFHQztBQUVsQixJQUFJQyxVQUFVQyxtQkFBT0EsQ0FBQyxnRUFBUTtBQUU5QixTQUFTRixVQUFVRyxLQUFLO0lBQ3RCLElBQUlDO0lBRUosTUFBTSxFQUNKQyxJQUFHLEVBQ0hDLE9BQVEsVUFBUyxFQUNqQkMsTUFBSyxFQUNOLEdBQUdKO0lBQ0osTUFBTUssZ0JBQWdCLENBQUMsRUFBRUgsSUFBSSxPQUFPLENBQUM7SUFDckMsTUFBTUksU0FBUztRQUNiVixTQUFTO1lBQ1BXLFFBQVE7WUFDUkMsU0FBUztZQUNUQyxTQUFTLENBQUMsR0FBR1gsUUFBUVksQ0FBQUEsRUFBRyxLQUFLLE1BQU0sQ0FBQyxHQUFHWixRQUFRWSxDQUFBQSxFQUFHLEtBQUs7Z0JBQ3JEQyxXQUFXO2dCQUNYQyxNQUFNVixRQUFRLFFBQVFBLFFBQVEsS0FBSyxJQUFJLEtBQUssSUFBSUEsSUFBSVc7WUFDdEQsR0FBR1gsUUFBUSxRQUFRQSxRQUFRLEtBQUssSUFBSSxLQUFLLElBQUlBLElBQUlZO1FBQ25EO1FBQ0FDLGVBQWU7WUFDYlIsUUFBUTtZQUNSQyxTQUFTO1lBQ1RDLFNBQVMsQ0FBQyxHQUFHWCxRQUFRWSxDQUFBQSxFQUFHLE9BQU8sTUFBTSxDQUFDLEdBQUdaLFFBQVFZLENBQUFBLEVBQUcsS0FBSyxNQUFNLHNEQUFzRCxDQUFDLEdBQUdaLFFBQVFZLENBQUFBLEVBQUcsS0FBSyxNQUFNO1FBQ2pKO1FBQ0FNLGNBQWM7WUFDWlQsUUFBUTtZQUNSQyxTQUFTO1lBQ1RDLFNBQVMsQ0FBQyxHQUFHWCxRQUFRWSxDQUFBQSxFQUFHLE9BQU8sTUFBTSxDQUFDLEdBQUdaLFFBQVFZLENBQUFBLEVBQUcsS0FBSyxNQUFNLDJDQUEyQyxDQUFDLEdBQUdaLFFBQVFZLENBQUFBLEVBQUcsS0FBSyxNQUFNLENBQUMsR0FBR1osUUFBUVksQ0FBQUEsRUFBRyxLQUFLO2dCQUN0SkMsV0FBVztnQkFDWEMsTUFBTVA7WUFDUixHQUFHO1FBQ0w7UUFDQVksY0FBYztZQUNaVixRQUFRO1lBQ1JDLFNBQVM7WUFDVEMsU0FBUyxDQUFDLEdBQUdYLFFBQVFZLENBQUFBLEVBQUcsT0FBTyxNQUFNLENBQUMsR0FBR1osUUFBUVksQ0FBQUEsRUFBRyxLQUFLLE1BQU0seUNBQXlDLENBQUMsR0FBR1osUUFBUVksQ0FBQUEsRUFBRyxLQUFLLE1BQU07WUFDbElRLFFBQVEsQ0FBQyxHQUFHcEIsUUFBUVksQ0FBQUEsRUFBRyxLQUFLLE1BQU0sQ0FBQyxHQUFHWixRQUFRWSxDQUFBQSxFQUFHLEtBQUs7Z0JBQ3BEQyxXQUFXO2dCQUNYQyxNQUFNUDtZQUNSLEdBQUc7UUFDTDtJQUNGO0lBQ0EsTUFBTSxFQUNKRSxPQUFNLEVBQ05DLFFBQU8sRUFDUEMsUUFBTyxFQUNQUyxPQUFNLEVBQ1AsR0FBRyxDQUFDakIsd0JBQXdCSyxNQUFNLENBQUNILE1BQU1nQixjQUFjLE1BQU0sUUFBUWxCLDBCQUEwQixLQUFLLElBQUlBLHdCQUF3QkssT0FBT1Y7SUFDeEksT0FBTztRQUNMVztRQUNBYSxNQUFNLENBQUMsR0FBR3RCLFFBQVFZLENBQUFBLEVBQUcsT0FBTztZQUMxQkMsV0FBVztRQUNiLEdBQUcsQ0FBQ1AsVUFBVSxRQUFRQSxVQUFVLEtBQUssSUFBSSxLQUFLLElBQUlBLE1BQU1pQixVQUFTLEtBQU0sQ0FBQyxHQUFHdkIsUUFBUVksQ0FBQUEsRUFBRyxTQUFTO1lBQzdGWSx5QkFBeUI7Z0JBQ3ZCQyxRQUFRLENBQUM7O3lCQUVRLEVBQUVuQixVQUFVLFFBQVFBLFVBQVUsS0FBSyxJQUFJLEtBQUssSUFBSUEsTUFBTWlCLFdBQVc7O01BRXBGLENBQUM7WUFDRDtRQUNGLElBQUksQ0FBQyxHQUFHdkIsUUFBUVksQ0FBQUEsRUFBRyxPQUFPO1lBQ3hCQyxXQUFXO1FBQ2IsR0FBRyxDQUFDUCxVQUFVLFFBQVFBLFVBQVUsS0FBSyxJQUFJLEtBQUssSUFBSUEsTUFBTW9CLElBQUcsS0FBTSxDQUFDLEdBQUcxQixRQUFRWSxDQUFBQSxFQUFHLE9BQU87WUFDckZlLEtBQUtyQixNQUFNb0I7WUFDWEUsS0FBSztZQUNMZixXQUFXO1FBQ2IsSUFBSSxDQUFDLEdBQUdiLFFBQVFZLENBQUFBLEVBQUcsTUFBTSxNQUFNRixVQUFVLENBQUMsR0FBR1YsUUFBUVksQ0FBQUEsRUFBRyxPQUFPO1lBQzdEQyxXQUFXO1FBQ2IsR0FBR0YsVUFBVVM7SUFDZjtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZnVsbHN0YWNrLXJvbGUtYmFzZWQtbmV4dGpzLTIvLi9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL2NvcmUvcGFnZXMvZXJyb3IuanM/MmFlMCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuZGVmYXVsdCA9IEVycm9yUGFnZTtcblxudmFyIF9wcmVhY3QgPSByZXF1aXJlKFwicHJlYWN0XCIpO1xuXG5mdW5jdGlvbiBFcnJvclBhZ2UocHJvcHMpIHtcbiAgdmFyIF9lcnJvcnMkZXJyb3IkdG9Mb3dlcjtcblxuICBjb25zdCB7XG4gICAgdXJsLFxuICAgIGVycm9yID0gXCJkZWZhdWx0XCIsXG4gICAgdGhlbWVcbiAgfSA9IHByb3BzO1xuICBjb25zdCBzaWduaW5QYWdlVXJsID0gYCR7dXJsfS9zaWduaW5gO1xuICBjb25zdCBlcnJvcnMgPSB7XG4gICAgZGVmYXVsdDoge1xuICAgICAgc3RhdHVzOiAyMDAsXG4gICAgICBoZWFkaW5nOiBcIkVycm9yXCIsXG4gICAgICBtZXNzYWdlOiAoMCwgX3ByZWFjdC5oKShcInBcIiwgbnVsbCwgKDAsIF9wcmVhY3QuaCkoXCJhXCIsIHtcbiAgICAgICAgY2xhc3NOYW1lOiBcInNpdGVcIixcbiAgICAgICAgaHJlZjogdXJsID09PSBudWxsIHx8IHVybCA9PT0gdm9pZCAwID8gdm9pZCAwIDogdXJsLm9yaWdpblxuICAgICAgfSwgdXJsID09PSBudWxsIHx8IHVybCA9PT0gdm9pZCAwID8gdm9pZCAwIDogdXJsLmhvc3QpKVxuICAgIH0sXG4gICAgY29uZmlndXJhdGlvbjoge1xuICAgICAgc3RhdHVzOiA1MDAsXG4gICAgICBoZWFkaW5nOiBcIlNlcnZlciBlcnJvclwiLFxuICAgICAgbWVzc2FnZTogKDAsIF9wcmVhY3QuaCkoXCJkaXZcIiwgbnVsbCwgKDAsIF9wcmVhY3QuaCkoXCJwXCIsIG51bGwsIFwiVGhlcmUgaXMgYSBwcm9ibGVtIHdpdGggdGhlIHNlcnZlciBjb25maWd1cmF0aW9uLlwiKSwgKDAsIF9wcmVhY3QuaCkoXCJwXCIsIG51bGwsIFwiQ2hlY2sgdGhlIHNlcnZlciBsb2dzIGZvciBtb3JlIGluZm9ybWF0aW9uLlwiKSlcbiAgICB9LFxuICAgIGFjY2Vzc2RlbmllZDoge1xuICAgICAgc3RhdHVzOiA0MDMsXG4gICAgICBoZWFkaW5nOiBcIkFjY2VzcyBEZW5pZWRcIixcbiAgICAgIG1lc3NhZ2U6ICgwLCBfcHJlYWN0LmgpKFwiZGl2XCIsIG51bGwsICgwLCBfcHJlYWN0LmgpKFwicFwiLCBudWxsLCBcIllvdSBkbyBub3QgaGF2ZSBwZXJtaXNzaW9uIHRvIHNpZ24gaW4uXCIpLCAoMCwgX3ByZWFjdC5oKShcInBcIiwgbnVsbCwgKDAsIF9wcmVhY3QuaCkoXCJhXCIsIHtcbiAgICAgICAgY2xhc3NOYW1lOiBcImJ1dHRvblwiLFxuICAgICAgICBocmVmOiBzaWduaW5QYWdlVXJsXG4gICAgICB9LCBcIlNpZ24gaW5cIikpKVxuICAgIH0sXG4gICAgdmVyaWZpY2F0aW9uOiB7XG4gICAgICBzdGF0dXM6IDQwMyxcbiAgICAgIGhlYWRpbmc6IFwiVW5hYmxlIHRvIHNpZ24gaW5cIixcbiAgICAgIG1lc3NhZ2U6ICgwLCBfcHJlYWN0LmgpKFwiZGl2XCIsIG51bGwsICgwLCBfcHJlYWN0LmgpKFwicFwiLCBudWxsLCBcIlRoZSBzaWduIGluIGxpbmsgaXMgbm8gbG9uZ2VyIHZhbGlkLlwiKSwgKDAsIF9wcmVhY3QuaCkoXCJwXCIsIG51bGwsIFwiSXQgbWF5IGhhdmUgYmVlbiB1c2VkIGFscmVhZHkgb3IgaXQgbWF5IGhhdmUgZXhwaXJlZC5cIikpLFxuICAgICAgc2lnbmluOiAoMCwgX3ByZWFjdC5oKShcInBcIiwgbnVsbCwgKDAsIF9wcmVhY3QuaCkoXCJhXCIsIHtcbiAgICAgICAgY2xhc3NOYW1lOiBcImJ1dHRvblwiLFxuICAgICAgICBocmVmOiBzaWduaW5QYWdlVXJsXG4gICAgICB9LCBcIlNpZ24gaW5cIikpXG4gICAgfVxuICB9O1xuICBjb25zdCB7XG4gICAgc3RhdHVzLFxuICAgIGhlYWRpbmcsXG4gICAgbWVzc2FnZSxcbiAgICBzaWduaW5cbiAgfSA9IChfZXJyb3JzJGVycm9yJHRvTG93ZXIgPSBlcnJvcnNbZXJyb3IudG9Mb3dlckNhc2UoKV0pICE9PSBudWxsICYmIF9lcnJvcnMkZXJyb3IkdG9Mb3dlciAhPT0gdm9pZCAwID8gX2Vycm9ycyRlcnJvciR0b0xvd2VyIDogZXJyb3JzLmRlZmF1bHQ7XG4gIHJldHVybiB7XG4gICAgc3RhdHVzLFxuICAgIGh0bWw6ICgwLCBfcHJlYWN0LmgpKFwiZGl2XCIsIHtcbiAgICAgIGNsYXNzTmFtZTogXCJlcnJvclwiXG4gICAgfSwgKHRoZW1lID09PSBudWxsIHx8IHRoZW1lID09PSB2b2lkIDAgPyB2b2lkIDAgOiB0aGVtZS5icmFuZENvbG9yKSAmJiAoMCwgX3ByZWFjdC5oKShcInN0eWxlXCIsIHtcbiAgICAgIGRhbmdlcm91c2x5U2V0SW5uZXJIVE1MOiB7XG4gICAgICAgIF9faHRtbDogYFxuICAgICAgICA6cm9vdCB7XG4gICAgICAgICAgLS1icmFuZC1jb2xvcjogJHt0aGVtZSA9PT0gbnVsbCB8fCB0aGVtZSA9PT0gdm9pZCAwID8gdm9pZCAwIDogdGhlbWUuYnJhbmRDb2xvcn1cbiAgICAgICAgfVxuICAgICAgYFxuICAgICAgfVxuICAgIH0pLCAoMCwgX3ByZWFjdC5oKShcImRpdlwiLCB7XG4gICAgICBjbGFzc05hbWU6IFwiY2FyZFwiXG4gICAgfSwgKHRoZW1lID09PSBudWxsIHx8IHRoZW1lID09PSB2b2lkIDAgPyB2b2lkIDAgOiB0aGVtZS5sb2dvKSAmJiAoMCwgX3ByZWFjdC5oKShcImltZ1wiLCB7XG4gICAgICBzcmM6IHRoZW1lLmxvZ28sXG4gICAgICBhbHQ6IFwiTG9nb1wiLFxuICAgICAgY2xhc3NOYW1lOiBcImxvZ29cIlxuICAgIH0pLCAoMCwgX3ByZWFjdC5oKShcImgxXCIsIG51bGwsIGhlYWRpbmcpLCAoMCwgX3ByZWFjdC5oKShcImRpdlwiLCB7XG4gICAgICBjbGFzc05hbWU6IFwibWVzc2FnZVwiXG4gICAgfSwgbWVzc2FnZSksIHNpZ25pbikpXG4gIH07XG59Il0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiZGVmYXVsdCIsIkVycm9yUGFnZSIsIl9wcmVhY3QiLCJyZXF1aXJlIiwicHJvcHMiLCJfZXJyb3JzJGVycm9yJHRvTG93ZXIiLCJ1cmwiLCJlcnJvciIsInRoZW1lIiwic2lnbmluUGFnZVVybCIsImVycm9ycyIsInN0YXR1cyIsImhlYWRpbmciLCJtZXNzYWdlIiwiaCIsImNsYXNzTmFtZSIsImhyZWYiLCJvcmlnaW4iLCJob3N0IiwiY29uZmlndXJhdGlvbiIsImFjY2Vzc2RlbmllZCIsInZlcmlmaWNhdGlvbiIsInNpZ25pbiIsInRvTG93ZXJDYXNlIiwiaHRtbCIsImJyYW5kQ29sb3IiLCJkYW5nZXJvdXNseVNldElubmVySFRNTCIsIl9faHRtbCIsImxvZ28iLCJzcmMiLCJhbHQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/next-auth/core/pages/error.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/next-auth/core/pages/index.js":
/*!****************************************************!*\
  !*** ./node_modules/next-auth/core/pages/index.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nvar _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ \"(sc_server)/./node_modules/@babel/runtime/helpers/interopRequireDefault.js\");\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports[\"default\"] = renderPage;\nvar _preactRenderToString = _interopRequireDefault(__webpack_require__(/*! preact-render-to-string */ \"(sc_server)/./node_modules/preact-render-to-string/dist/index.js\"));\nvar _signin = _interopRequireDefault(__webpack_require__(/*! ./signin */ \"(sc_server)/./node_modules/next-auth/core/pages/signin.js\"));\nvar _signout = _interopRequireDefault(__webpack_require__(/*! ./signout */ \"(sc_server)/./node_modules/next-auth/core/pages/signout.js\"));\nvar _verifyRequest = _interopRequireDefault(__webpack_require__(/*! ./verify-request */ \"(sc_server)/./node_modules/next-auth/core/pages/verify-request.js\"));\nvar _error = _interopRequireDefault(__webpack_require__(/*! ./error */ \"(sc_server)/./node_modules/next-auth/core/pages/error.js\"));\nvar _css = _interopRequireDefault(__webpack_require__(/*! ../../css */ \"(sc_server)/./node_modules/next-auth/css/index.js\"));\nfunction renderPage(params) {\n    const { url , theme , query , cookies  } = params;\n    function send({ html , title , status  }) {\n        var _theme$colorScheme;\n        return {\n            cookies,\n            status,\n            headers: [\n                {\n                    key: \"Content-Type\",\n                    value: \"text/html\"\n                }\n            ],\n            body: `<!DOCTYPE html><html lang=\"en\"><head><meta charset=\"UTF-8\"><meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><style>${(0, _css.default)()}</style><title>${title}</title></head><body class=\"__next-auth-theme-${(_theme$colorScheme = theme === null || theme === void 0 ? void 0 : theme.colorScheme) !== null && _theme$colorScheme !== void 0 ? _theme$colorScheme : \"auto\"}\"><div class=\"page\">${(0, _preactRenderToString.default)(html)}</div></body></html>`\n        };\n    }\n    return {\n        signin (props) {\n            return send({\n                html: (0, _signin.default)({\n                    csrfToken: params.csrfToken,\n                    providers: params.providers,\n                    callbackUrl: params.callbackUrl,\n                    theme,\n                    ...query,\n                    ...props\n                }),\n                title: \"Sign In\"\n            });\n        },\n        signout (props) {\n            return send({\n                html: (0, _signout.default)({\n                    csrfToken: params.csrfToken,\n                    url,\n                    theme,\n                    ...props\n                }),\n                title: \"Sign Out\"\n            });\n        },\n        verifyRequest (props) {\n            return send({\n                html: (0, _verifyRequest.default)({\n                    url,\n                    theme,\n                    ...props\n                }),\n                title: \"Verify Request\"\n            });\n        },\n        error (props) {\n            return send({\n                ...(0, _error.default)({\n                    url,\n                    theme,\n                    ...props\n                }),\n                title: \"Error\"\n            });\n        }\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL2NvcmUvcGFnZXMvaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFFYixJQUFJQSx5QkFBeUJDLG1CQUFPQSxDQUFDLGdJQUE4QztBQUVuRkMsOENBQTZDO0lBQzNDRyxPQUFPO0FBQ1QsQ0FBQyxFQUFDO0FBQ0ZELGtCQUFlRSxHQUFHQztBQUVsQixJQUFJQyx3QkFBd0JSLHVCQUF1QkMsbUJBQU9BLENBQUMsaUdBQXlCO0FBRXBGLElBQUlRLFVBQVVULHVCQUF1QkMsbUJBQU9BLENBQUMsMkVBQVU7QUFFdkQsSUFBSVMsV0FBV1YsdUJBQXVCQyxtQkFBT0EsQ0FBQyw2RUFBVztBQUV6RCxJQUFJVSxpQkFBaUJYLHVCQUF1QkMsbUJBQU9BLENBQUMsMkZBQWtCO0FBRXRFLElBQUlXLFNBQVNaLHVCQUF1QkMsbUJBQU9BLENBQUMseUVBQVM7QUFFckQsSUFBSVksT0FBT2IsdUJBQXVCQyxtQkFBT0EsQ0FBQyxvRUFBVztBQUVyRCxTQUFTTSxXQUFXTyxNQUFNO0lBQ3hCLE1BQU0sRUFDSkMsSUFBRyxFQUNIQyxNQUFLLEVBQ0xDLE1BQUssRUFDTEMsUUFBTyxFQUNSLEdBQUdKO0lBRUosU0FBU0ssS0FBSyxFQUNaQyxLQUFJLEVBQ0pDLE1BQUssRUFDTEMsT0FBTSxFQUNQO1FBQ0MsSUFBSUM7UUFFSixPQUFPO1lBQ0xMO1lBQ0FJO1lBQ0FFLFNBQVM7Z0JBQUM7b0JBQ1JDLEtBQUs7b0JBQ0xwQixPQUFPO2dCQUNUO2FBQUU7WUFDRnFCLE1BQU0sQ0FBQyw2TEFBNkwsRUFBRSxDQUFDLEdBQUdiLEtBQUtQLE9BQU0sSUFBSyxlQUFlLEVBQUVlLE1BQU0sOENBQThDLEVBQUUsQ0FBQ0UscUJBQXFCUCxVQUFVLFFBQVFBLFVBQVUsS0FBSyxJQUFJLEtBQUssSUFBSUEsTUFBTVcsV0FBVSxNQUFPLFFBQVFKLHVCQUF1QixLQUFLLElBQUlBLHFCQUFxQixPQUFPLG9CQUFvQixFQUFFLENBQUMsR0FBR2Ysc0JBQXNCRixPQUFNLEVBQUdjLE1BQU0sb0JBQW9CLENBQUM7UUFDdGhCO0lBQ0Y7SUFFQSxPQUFPO1FBQ0xRLFFBQU9DLEtBQUs7WUFDVixPQUFPVixLQUFLO2dCQUNWQyxNQUFNLENBQUMsR0FBR1gsUUFBUUgsT0FBTSxFQUFHO29CQUN6QndCLFdBQVdoQixPQUFPZ0I7b0JBQ2xCQyxXQUFXakIsT0FBT2lCO29CQUNsQkMsYUFBYWxCLE9BQU9rQjtvQkFDcEJoQjtvQkFDQSxHQUFHQyxLQUFLO29CQUNSLEdBQUdZLEtBQUs7Z0JBQ1Y7Z0JBQ0FSLE9BQU87WUFDVDtRQUNGO1FBRUFZLFNBQVFKLEtBQUs7WUFDWCxPQUFPVixLQUFLO2dCQUNWQyxNQUFNLENBQUMsR0FBR1YsU0FBU0osT0FBTSxFQUFHO29CQUMxQndCLFdBQVdoQixPQUFPZ0I7b0JBQ2xCZjtvQkFDQUM7b0JBQ0EsR0FBR2EsS0FBSztnQkFDVjtnQkFDQVIsT0FBTztZQUNUO1FBQ0Y7UUFFQWEsZUFBY0wsS0FBSztZQUNqQixPQUFPVixLQUFLO2dCQUNWQyxNQUFNLENBQUMsR0FBR1QsZUFBZUwsT0FBTSxFQUFHO29CQUNoQ1M7b0JBQ0FDO29CQUNBLEdBQUdhLEtBQUs7Z0JBQ1Y7Z0JBQ0FSLE9BQU87WUFDVDtRQUNGO1FBRUFjLE9BQU1OLEtBQUs7WUFDVCxPQUFPVixLQUFLO2dCQUFFLEdBQUcsQ0FBQyxHQUFHUCxPQUFPTixPQUFNLEVBQUc7b0JBQ2pDUztvQkFDQUM7b0JBQ0EsR0FBR2EsS0FBSztnQkFDVixFQUFFO2dCQUNGUixPQUFPO1lBQ1Q7UUFDRjtJQUVGO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mdWxsc3RhY2stcm9sZS1iYXNlZC1uZXh0anMtMi8uL25vZGVfbW9kdWxlcy9uZXh0LWF1dGgvY29yZS9wYWdlcy9pbmRleC5qcz8yN2IwIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG52YXIgX2ludGVyb3BSZXF1aXJlRGVmYXVsdCA9IHJlcXVpcmUoXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2ludGVyb3BSZXF1aXJlRGVmYXVsdFwiKTtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuZGVmYXVsdCA9IHJlbmRlclBhZ2U7XG5cbnZhciBfcHJlYWN0UmVuZGVyVG9TdHJpbmcgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoXCJwcmVhY3QtcmVuZGVyLXRvLXN0cmluZ1wiKSk7XG5cbnZhciBfc2lnbmluID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKFwiLi9zaWduaW5cIikpO1xuXG52YXIgX3NpZ25vdXQgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoXCIuL3NpZ25vdXRcIikpO1xuXG52YXIgX3ZlcmlmeVJlcXVlc3QgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoXCIuL3ZlcmlmeS1yZXF1ZXN0XCIpKTtcblxudmFyIF9lcnJvciA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZShcIi4vZXJyb3JcIikpO1xuXG52YXIgX2NzcyA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZShcIi4uLy4uL2Nzc1wiKSk7XG5cbmZ1bmN0aW9uIHJlbmRlclBhZ2UocGFyYW1zKSB7XG4gIGNvbnN0IHtcbiAgICB1cmwsXG4gICAgdGhlbWUsXG4gICAgcXVlcnksXG4gICAgY29va2llc1xuICB9ID0gcGFyYW1zO1xuXG4gIGZ1bmN0aW9uIHNlbmQoe1xuICAgIGh0bWwsXG4gICAgdGl0bGUsXG4gICAgc3RhdHVzXG4gIH0pIHtcbiAgICB2YXIgX3RoZW1lJGNvbG9yU2NoZW1lO1xuXG4gICAgcmV0dXJuIHtcbiAgICAgIGNvb2tpZXMsXG4gICAgICBzdGF0dXMsXG4gICAgICBoZWFkZXJzOiBbe1xuICAgICAgICBrZXk6IFwiQ29udGVudC1UeXBlXCIsXG4gICAgICAgIHZhbHVlOiBcInRleHQvaHRtbFwiXG4gICAgICB9XSxcbiAgICAgIGJvZHk6IGA8IURPQ1RZUEUgaHRtbD48aHRtbCBsYW5nPVwiZW5cIj48aGVhZD48bWV0YSBjaGFyc2V0PVwiVVRGLThcIj48bWV0YSBodHRwLWVxdWl2PVwiWC1VQS1Db21wYXRpYmxlXCIgY29udGVudD1cIklFPWVkZ2VcIj48bWV0YSBuYW1lPVwidmlld3BvcnRcIiBjb250ZW50PVwid2lkdGg9ZGV2aWNlLXdpZHRoLCBpbml0aWFsLXNjYWxlPTEuMFwiPjxzdHlsZT4keygwLCBfY3NzLmRlZmF1bHQpKCl9PC9zdHlsZT48dGl0bGU+JHt0aXRsZX08L3RpdGxlPjwvaGVhZD48Ym9keSBjbGFzcz1cIl9fbmV4dC1hdXRoLXRoZW1lLSR7KF90aGVtZSRjb2xvclNjaGVtZSA9IHRoZW1lID09PSBudWxsIHx8IHRoZW1lID09PSB2b2lkIDAgPyB2b2lkIDAgOiB0aGVtZS5jb2xvclNjaGVtZSkgIT09IG51bGwgJiYgX3RoZW1lJGNvbG9yU2NoZW1lICE9PSB2b2lkIDAgPyBfdGhlbWUkY29sb3JTY2hlbWUgOiBcImF1dG9cIn1cIj48ZGl2IGNsYXNzPVwicGFnZVwiPiR7KDAsIF9wcmVhY3RSZW5kZXJUb1N0cmluZy5kZWZhdWx0KShodG1sKX08L2Rpdj48L2JvZHk+PC9odG1sPmBcbiAgICB9O1xuICB9XG5cbiAgcmV0dXJuIHtcbiAgICBzaWduaW4ocHJvcHMpIHtcbiAgICAgIHJldHVybiBzZW5kKHtcbiAgICAgICAgaHRtbDogKDAsIF9zaWduaW4uZGVmYXVsdCkoe1xuICAgICAgICAgIGNzcmZUb2tlbjogcGFyYW1zLmNzcmZUb2tlbixcbiAgICAgICAgICBwcm92aWRlcnM6IHBhcmFtcy5wcm92aWRlcnMsXG4gICAgICAgICAgY2FsbGJhY2tVcmw6IHBhcmFtcy5jYWxsYmFja1VybCxcbiAgICAgICAgICB0aGVtZSxcbiAgICAgICAgICAuLi5xdWVyeSxcbiAgICAgICAgICAuLi5wcm9wc1xuICAgICAgICB9KSxcbiAgICAgICAgdGl0bGU6IFwiU2lnbiBJblwiXG4gICAgICB9KTtcbiAgICB9LFxuXG4gICAgc2lnbm91dChwcm9wcykge1xuICAgICAgcmV0dXJuIHNlbmQoe1xuICAgICAgICBodG1sOiAoMCwgX3NpZ25vdXQuZGVmYXVsdCkoe1xuICAgICAgICAgIGNzcmZUb2tlbjogcGFyYW1zLmNzcmZUb2tlbixcbiAgICAgICAgICB1cmwsXG4gICAgICAgICAgdGhlbWUsXG4gICAgICAgICAgLi4ucHJvcHNcbiAgICAgICAgfSksXG4gICAgICAgIHRpdGxlOiBcIlNpZ24gT3V0XCJcbiAgICAgIH0pO1xuICAgIH0sXG5cbiAgICB2ZXJpZnlSZXF1ZXN0KHByb3BzKSB7XG4gICAgICByZXR1cm4gc2VuZCh7XG4gICAgICAgIGh0bWw6ICgwLCBfdmVyaWZ5UmVxdWVzdC5kZWZhdWx0KSh7XG4gICAgICAgICAgdXJsLFxuICAgICAgICAgIHRoZW1lLFxuICAgICAgICAgIC4uLnByb3BzXG4gICAgICAgIH0pLFxuICAgICAgICB0aXRsZTogXCJWZXJpZnkgUmVxdWVzdFwiXG4gICAgICB9KTtcbiAgICB9LFxuXG4gICAgZXJyb3IocHJvcHMpIHtcbiAgICAgIHJldHVybiBzZW5kKHsgLi4uKDAsIF9lcnJvci5kZWZhdWx0KSh7XG4gICAgICAgICAgdXJsLFxuICAgICAgICAgIHRoZW1lLFxuICAgICAgICAgIC4uLnByb3BzXG4gICAgICAgIH0pLFxuICAgICAgICB0aXRsZTogXCJFcnJvclwiXG4gICAgICB9KTtcbiAgICB9XG5cbiAgfTtcbn0iXSwibmFtZXMiOlsiX2ludGVyb3BSZXF1aXJlRGVmYXVsdCIsInJlcXVpcmUiLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsImRlZmF1bHQiLCJyZW5kZXJQYWdlIiwiX3ByZWFjdFJlbmRlclRvU3RyaW5nIiwiX3NpZ25pbiIsIl9zaWdub3V0IiwiX3ZlcmlmeVJlcXVlc3QiLCJfZXJyb3IiLCJfY3NzIiwicGFyYW1zIiwidXJsIiwidGhlbWUiLCJxdWVyeSIsImNvb2tpZXMiLCJzZW5kIiwiaHRtbCIsInRpdGxlIiwic3RhdHVzIiwiX3RoZW1lJGNvbG9yU2NoZW1lIiwiaGVhZGVycyIsImtleSIsImJvZHkiLCJjb2xvclNjaGVtZSIsInNpZ25pbiIsInByb3BzIiwiY3NyZlRva2VuIiwicHJvdmlkZXJzIiwiY2FsbGJhY2tVcmwiLCJzaWdub3V0IiwidmVyaWZ5UmVxdWVzdCIsImVycm9yIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/next-auth/core/pages/index.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/next-auth/core/pages/signin.js":
/*!*****************************************************!*\
  !*** ./node_modules/next-auth/core/pages/signin.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nvar _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ \"(sc_server)/./node_modules/@babel/runtime/helpers/interopRequireDefault.js\");\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports[\"default\"] = SigninPage;\nvar _preact = __webpack_require__(/*! preact */ \"(sc_server)/./node_modules/preact/dist/preact.js\");\nvar _extends2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/extends */ \"(sc_server)/./node_modules/@babel/runtime/helpers/extends.js\"));\nfunction SigninPage(props) {\n    var _errors$errorType;\n    const { csrfToken , providers , callbackUrl , theme , email , error: errorType  } = props;\n    const providersToRender = providers.filter((provider)=>{\n        if (provider.type === \"oauth\" || provider.type === \"email\") {\n            return true;\n        } else if (provider.type === \"credentials\" && provider.credentials) {\n            return true;\n        }\n        return false;\n    });\n    if (typeof document !== \"undefined\" && theme.buttonText) {\n        document.documentElement.style.setProperty(\"--button-text-color\", theme.buttonText);\n    }\n    if (typeof document !== \"undefined\" && theme.brandColor) {\n        document.documentElement.style.setProperty(\"--brand-color\", theme.brandColor);\n    }\n    const errors = {\n        Signin: \"Try signing in with a different account.\",\n        OAuthSignin: \"Try signing in with a different account.\",\n        OAuthCallback: \"Try signing in with a different account.\",\n        OAuthCreateAccount: \"Try signing in with a different account.\",\n        EmailCreateAccount: \"Try signing in with a different account.\",\n        Callback: \"Try signing in with a different account.\",\n        OAuthAccountNotLinked: \"To confirm your identity, sign in with the same account you used originally.\",\n        EmailSignin: \"The e-mail could not be sent.\",\n        CredentialsSignin: \"Sign in failed. Check the details you provided are correct.\",\n        SessionRequired: \"Please sign in to access this page.\",\n        default: \"Unable to sign in.\"\n    };\n    const error = errorType && ((_errors$errorType = errors[errorType]) !== null && _errors$errorType !== void 0 ? _errors$errorType : errors.default);\n    const logos = \"https://authjs.dev/img/providers\";\n    return (0, _preact.h)(\"div\", {\n        className: \"signin\"\n    }, theme.brandColor && (0, _preact.h)(\"style\", {\n        dangerouslySetInnerHTML: {\n            __html: `\n        :root {\n          --brand-color: ${theme.brandColor}\n        }\n      `\n        }\n    }), theme.buttonText && (0, _preact.h)(\"style\", {\n        dangerouslySetInnerHTML: {\n            __html: `\n        :root {\n          --button-text-color: ${theme.buttonText}\n        }\n      `\n        }\n    }), (0, _preact.h)(\"div\", {\n        className: \"card\"\n    }, theme.logo && (0, _preact.h)(\"img\", {\n        src: theme.logo,\n        alt: \"Logo\",\n        className: \"logo\"\n    }), error && (0, _preact.h)(\"div\", {\n        className: \"error\"\n    }, (0, _preact.h)(\"p\", null, error)), providersToRender.map((provider, i)=>{\n        var _provider$style$bg, _provider$style, _provider$style$bgDar, _provider$style2, _provider$style$text, _provider$style3, _provider$style$textD, _provider$style4, _provider$style5, _provider$style6;\n        return (0, _preact.h)(\"div\", {\n            key: provider.id,\n            className: \"provider\"\n        }, provider.type === \"oauth\" && (0, _preact.h)(\"form\", {\n            action: provider.signinUrl,\n            method: \"POST\"\n        }, (0, _preact.h)(\"input\", {\n            type: \"hidden\",\n            name: \"csrfToken\",\n            value: csrfToken\n        }), callbackUrl && (0, _preact.h)(\"input\", {\n            type: \"hidden\",\n            name: \"callbackUrl\",\n            value: callbackUrl\n        }), (0, _preact.h)(\"button\", {\n            type: \"submit\",\n            className: \"button\",\n            style: {\n                \"--provider-bg\": (_provider$style$bg = (_provider$style = provider.style) === null || _provider$style === void 0 ? void 0 : _provider$style.bg) !== null && _provider$style$bg !== void 0 ? _provider$style$bg : \"\",\n                \"--provider-dark-bg\": (_provider$style$bgDar = (_provider$style2 = provider.style) === null || _provider$style2 === void 0 ? void 0 : _provider$style2.bgDark) !== null && _provider$style$bgDar !== void 0 ? _provider$style$bgDar : \"\",\n                \"--provider-color\": (_provider$style$text = (_provider$style3 = provider.style) === null || _provider$style3 === void 0 ? void 0 : _provider$style3.text) !== null && _provider$style$text !== void 0 ? _provider$style$text : \"\",\n                \"--provider-dark-color\": (_provider$style$textD = (_provider$style4 = provider.style) === null || _provider$style4 === void 0 ? void 0 : _provider$style4.textDark) !== null && _provider$style$textD !== void 0 ? _provider$style$textD : \"\"\n            }\n        }, ((_provider$style5 = provider.style) === null || _provider$style5 === void 0 ? void 0 : _provider$style5.logo) && (0, _preact.h)(\"img\", {\n            loading: \"lazy\",\n            height: 24,\n            width: 24,\n            id: \"provider-logo\",\n            src: `${provider.style.logo.startsWith(\"/\") ? logos : \"\"}${provider.style.logo}`\n        }), ((_provider$style6 = provider.style) === null || _provider$style6 === void 0 ? void 0 : _provider$style6.logoDark) && (0, _preact.h)(\"img\", {\n            loading: \"lazy\",\n            height: 24,\n            width: 24,\n            id: \"provider-logo-dark\",\n            src: `${provider.style.logo.startsWith(\"/\") ? logos : \"\"}${provider.style.logoDark}`\n        }), (0, _preact.h)(\"span\", null, \"Sign in with \", provider.name))), (provider.type === \"email\" || provider.type === \"credentials\") && i > 0 && providersToRender[i - 1].type !== \"email\" && providersToRender[i - 1].type !== \"credentials\" && (0, _preact.h)(\"hr\", null), provider.type === \"email\" && (0, _preact.h)(\"form\", {\n            action: provider.signinUrl,\n            method: \"POST\"\n        }, (0, _preact.h)(\"input\", {\n            type: \"hidden\",\n            name: \"csrfToken\",\n            value: csrfToken\n        }), (0, _preact.h)(\"label\", {\n            className: \"section-header\",\n            htmlFor: `input-email-for-${provider.id}-provider`\n        }, \"Email\"), (0, _preact.h)(\"input\", {\n            id: `input-email-for-${provider.id}-provider`,\n            autoFocus: true,\n            type: \"email\",\n            name: \"email\",\n            value: email,\n            placeholder: \"email@example.com\",\n            required: true\n        }), (0, _preact.h)(\"button\", {\n            id: \"submitButton\",\n            type: \"submit\"\n        }, \"Sign in with \", provider.name)), provider.type === \"credentials\" && (0, _preact.h)(\"form\", {\n            action: provider.callbackUrl,\n            method: \"POST\"\n        }, (0, _preact.h)(\"input\", {\n            type: \"hidden\",\n            name: \"csrfToken\",\n            value: csrfToken\n        }), Object.keys(provider.credentials).map((credential)=>{\n            var _provider$credentials, _provider$credentials2, _provider$credentials3;\n            return (0, _preact.h)(\"div\", {\n                key: `input-group-${provider.id}`\n            }, (0, _preact.h)(\"label\", {\n                className: \"section-header\",\n                htmlFor: `input-${credential}-for-${provider.id}-provider`\n            }, (_provider$credentials = provider.credentials[credential].label) !== null && _provider$credentials !== void 0 ? _provider$credentials : credential), (0, _preact.h)(\"input\", (0, _extends2.default)({\n                name: credential,\n                id: `input-${credential}-for-${provider.id}-provider`,\n                type: (_provider$credentials2 = provider.credentials[credential].type) !== null && _provider$credentials2 !== void 0 ? _provider$credentials2 : \"text\",\n                placeholder: (_provider$credentials3 = provider.credentials[credential].placeholder) !== null && _provider$credentials3 !== void 0 ? _provider$credentials3 : \"\"\n            }, provider.credentials[credential])));\n        }), (0, _preact.h)(\"button\", {\n            type: \"submit\"\n        }, \"Sign in with \", provider.name)), (provider.type === \"email\" || provider.type === \"credentials\") && i + 1 < providersToRender.length && (0, _preact.h)(\"hr\", null));\n    })));\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/next-auth/core/pages/signin.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/next-auth/core/pages/signout.js":
/*!******************************************************!*\
  !*** ./node_modules/next-auth/core/pages/signout.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports[\"default\"] = SignoutPage;\nvar _preact = __webpack_require__(/*! preact */ \"(sc_server)/./node_modules/preact/dist/preact.js\");\nfunction SignoutPage(props) {\n    const { url , csrfToken , theme  } = props;\n    return (0, _preact.h)(\"div\", {\n        className: \"signout\"\n    }, theme.brandColor && (0, _preact.h)(\"style\", {\n        dangerouslySetInnerHTML: {\n            __html: `\n        :root {\n          --brand-color: ${theme.brandColor}\n        }\n      `\n        }\n    }), theme.buttonText && (0, _preact.h)(\"style\", {\n        dangerouslySetInnerHTML: {\n            __html: `\n        :root {\n          --button-text-color: ${theme.buttonText}\n        }\n      `\n        }\n    }), (0, _preact.h)(\"div\", {\n        className: \"card\"\n    }, theme.logo && (0, _preact.h)(\"img\", {\n        src: theme.logo,\n        alt: \"Logo\",\n        className: \"logo\"\n    }), (0, _preact.h)(\"h1\", null, \"Signout\"), (0, _preact.h)(\"p\", null, \"Are you sure you want to sign out?\"), (0, _preact.h)(\"form\", {\n        action: `${url}/signout`,\n        method: \"POST\"\n    }, (0, _preact.h)(\"input\", {\n        type: \"hidden\",\n        name: \"csrfToken\",\n        value: csrfToken\n    }), (0, _preact.h)(\"button\", {\n        id: \"submitButton\",\n        type: \"submit\"\n    }, \"Sign out\"))));\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL2NvcmUvcGFnZXMvc2lnbm91dC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUViQSw4Q0FBNkM7SUFDM0NHLE9BQU87QUFDVCxDQUFDLEVBQUM7QUFDRkQsa0JBQWVFLEdBQUdDO0FBRWxCLElBQUlDLFVBQVVDLG1CQUFPQSxDQUFDLGdFQUFRO0FBRTlCLFNBQVNGLFlBQVlHLEtBQUs7SUFDeEIsTUFBTSxFQUNKQyxJQUFHLEVBQ0hDLFVBQVMsRUFDVEMsTUFBSyxFQUNOLEdBQUdIO0lBQ0osT0FBTyxDQUFDLEdBQUdGLFFBQVFNLENBQUFBLEVBQUcsT0FBTztRQUMzQkMsV0FBVztJQUNiLEdBQUdGLE1BQU1HLGNBQWMsQ0FBQyxHQUFHUixRQUFRTSxDQUFBQSxFQUFHLFNBQVM7UUFDN0NHLHlCQUF5QjtZQUN2QkMsUUFBUSxDQUFDOzt5QkFFVSxFQUFFTCxNQUFNRyxXQUFXOztNQUV0QyxDQUFDO1FBQ0g7SUFDRixJQUFJSCxNQUFNTSxjQUFjLENBQUMsR0FBR1gsUUFBUU0sQ0FBQUEsRUFBRyxTQUFTO1FBQzlDRyx5QkFBeUI7WUFDdkJDLFFBQVEsQ0FBQzs7K0JBRWdCLEVBQUVMLE1BQU1NLFdBQVc7O01BRTVDLENBQUM7UUFDSDtJQUNGLElBQUksQ0FBQyxHQUFHWCxRQUFRTSxDQUFBQSxFQUFHLE9BQU87UUFDeEJDLFdBQVc7SUFDYixHQUFHRixNQUFNTyxRQUFRLENBQUMsR0FBR1osUUFBUU0sQ0FBQUEsRUFBRyxPQUFPO1FBQ3JDTyxLQUFLUixNQUFNTztRQUNYRSxLQUFLO1FBQ0xQLFdBQVc7SUFDYixJQUFJLENBQUMsR0FBR1AsUUFBUU0sQ0FBQUEsRUFBRyxNQUFNLE1BQU0sWUFBWSxDQUFDLEdBQUdOLFFBQVFNLENBQUFBLEVBQUcsS0FBSyxNQUFNLHVDQUF1QyxDQUFDLEdBQUdOLFFBQVFNLENBQUFBLEVBQUcsUUFBUTtRQUNqSVMsUUFBUSxDQUFDLEVBQUVaLElBQUksUUFBUSxDQUFDO1FBQ3hCYSxRQUFRO0lBQ1YsR0FBRyxDQUFDLEdBQUdoQixRQUFRTSxDQUFBQSxFQUFHLFNBQVM7UUFDekJXLE1BQU07UUFDTkMsTUFBTTtRQUNOckIsT0FBT087SUFDVCxJQUFJLENBQUMsR0FBR0osUUFBUU0sQ0FBQUEsRUFBRyxVQUFVO1FBQzNCYSxJQUFJO1FBQ0pGLE1BQU07SUFDUixHQUFHO0FBQ0wiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mdWxsc3RhY2stcm9sZS1iYXNlZC1uZXh0anMtMi8uL25vZGVfbW9kdWxlcy9uZXh0LWF1dGgvY29yZS9wYWdlcy9zaWdub3V0LmpzPzBkM2EiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmRlZmF1bHQgPSBTaWdub3V0UGFnZTtcblxudmFyIF9wcmVhY3QgPSByZXF1aXJlKFwicHJlYWN0XCIpO1xuXG5mdW5jdGlvbiBTaWdub3V0UGFnZShwcm9wcykge1xuICBjb25zdCB7XG4gICAgdXJsLFxuICAgIGNzcmZUb2tlbixcbiAgICB0aGVtZVxuICB9ID0gcHJvcHM7XG4gIHJldHVybiAoMCwgX3ByZWFjdC5oKShcImRpdlwiLCB7XG4gICAgY2xhc3NOYW1lOiBcInNpZ25vdXRcIlxuICB9LCB0aGVtZS5icmFuZENvbG9yICYmICgwLCBfcHJlYWN0LmgpKFwic3R5bGVcIiwge1xuICAgIGRhbmdlcm91c2x5U2V0SW5uZXJIVE1MOiB7XG4gICAgICBfX2h0bWw6IGBcbiAgICAgICAgOnJvb3Qge1xuICAgICAgICAgIC0tYnJhbmQtY29sb3I6ICR7dGhlbWUuYnJhbmRDb2xvcn1cbiAgICAgICAgfVxuICAgICAgYFxuICAgIH1cbiAgfSksIHRoZW1lLmJ1dHRvblRleHQgJiYgKDAsIF9wcmVhY3QuaCkoXCJzdHlsZVwiLCB7XG4gICAgZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUw6IHtcbiAgICAgIF9faHRtbDogYFxuICAgICAgICA6cm9vdCB7XG4gICAgICAgICAgLS1idXR0b24tdGV4dC1jb2xvcjogJHt0aGVtZS5idXR0b25UZXh0fVxuICAgICAgICB9XG4gICAgICBgXG4gICAgfVxuICB9KSwgKDAsIF9wcmVhY3QuaCkoXCJkaXZcIiwge1xuICAgIGNsYXNzTmFtZTogXCJjYXJkXCJcbiAgfSwgdGhlbWUubG9nbyAmJiAoMCwgX3ByZWFjdC5oKShcImltZ1wiLCB7XG4gICAgc3JjOiB0aGVtZS5sb2dvLFxuICAgIGFsdDogXCJMb2dvXCIsXG4gICAgY2xhc3NOYW1lOiBcImxvZ29cIlxuICB9KSwgKDAsIF9wcmVhY3QuaCkoXCJoMVwiLCBudWxsLCBcIlNpZ25vdXRcIiksICgwLCBfcHJlYWN0LmgpKFwicFwiLCBudWxsLCBcIkFyZSB5b3Ugc3VyZSB5b3Ugd2FudCB0byBzaWduIG91dD9cIiksICgwLCBfcHJlYWN0LmgpKFwiZm9ybVwiLCB7XG4gICAgYWN0aW9uOiBgJHt1cmx9L3NpZ25vdXRgLFxuICAgIG1ldGhvZDogXCJQT1NUXCJcbiAgfSwgKDAsIF9wcmVhY3QuaCkoXCJpbnB1dFwiLCB7XG4gICAgdHlwZTogXCJoaWRkZW5cIixcbiAgICBuYW1lOiBcImNzcmZUb2tlblwiLFxuICAgIHZhbHVlOiBjc3JmVG9rZW5cbiAgfSksICgwLCBfcHJlYWN0LmgpKFwiYnV0dG9uXCIsIHtcbiAgICBpZDogXCJzdWJtaXRCdXR0b25cIixcbiAgICB0eXBlOiBcInN1Ym1pdFwiXG4gIH0sIFwiU2lnbiBvdXRcIikpKSk7XG59Il0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiZGVmYXVsdCIsIlNpZ25vdXRQYWdlIiwiX3ByZWFjdCIsInJlcXVpcmUiLCJwcm9wcyIsInVybCIsImNzcmZUb2tlbiIsInRoZW1lIiwiaCIsImNsYXNzTmFtZSIsImJyYW5kQ29sb3IiLCJkYW5nZXJvdXNseVNldElubmVySFRNTCIsIl9faHRtbCIsImJ1dHRvblRleHQiLCJsb2dvIiwic3JjIiwiYWx0IiwiYWN0aW9uIiwibWV0aG9kIiwidHlwZSIsIm5hbWUiLCJpZCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/next-auth/core/pages/signout.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/next-auth/core/pages/verify-request.js":
/*!*************************************************************!*\
  !*** ./node_modules/next-auth/core/pages/verify-request.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports[\"default\"] = VerifyRequestPage;\nvar _preact = __webpack_require__(/*! preact */ \"(sc_server)/./node_modules/preact/dist/preact.js\");\nfunction VerifyRequestPage(props) {\n    const { url , theme  } = props;\n    return (0, _preact.h)(\"div\", {\n        className: \"verify-request\"\n    }, theme.brandColor && (0, _preact.h)(\"style\", {\n        dangerouslySetInnerHTML: {\n            __html: `\n        :root {\n          --brand-color: ${theme.brandColor}\n        }\n      `\n        }\n    }), (0, _preact.h)(\"div\", {\n        className: \"card\"\n    }, theme.logo && (0, _preact.h)(\"img\", {\n        src: theme.logo,\n        alt: \"Logo\",\n        className: \"logo\"\n    }), (0, _preact.h)(\"h1\", null, \"Check your email\"), (0, _preact.h)(\"p\", null, \"A sign in link has been sent to your email address.\"), (0, _preact.h)(\"p\", null, (0, _preact.h)(\"a\", {\n        className: \"site\",\n        href: url.origin\n    }, url.host))));\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL2NvcmUvcGFnZXMvdmVyaWZ5LXJlcXVlc3QuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFFYkEsOENBQTZDO0lBQzNDRyxPQUFPO0FBQ1QsQ0FBQyxFQUFDO0FBQ0ZELGtCQUFlRSxHQUFHQztBQUVsQixJQUFJQyxVQUFVQyxtQkFBT0EsQ0FBQyxnRUFBUTtBQUU5QixTQUFTRixrQkFBa0JHLEtBQUs7SUFDOUIsTUFBTSxFQUNKQyxJQUFHLEVBQ0hDLE1BQUssRUFDTixHQUFHRjtJQUNKLE9BQU8sQ0FBQyxHQUFHRixRQUFRSyxDQUFBQSxFQUFHLE9BQU87UUFDM0JDLFdBQVc7SUFDYixHQUFHRixNQUFNRyxjQUFjLENBQUMsR0FBR1AsUUFBUUssQ0FBQUEsRUFBRyxTQUFTO1FBQzdDRyx5QkFBeUI7WUFDdkJDLFFBQVEsQ0FBQzs7eUJBRVUsRUFBRUwsTUFBTUcsV0FBVzs7TUFFdEMsQ0FBQztRQUNIO0lBQ0YsSUFBSSxDQUFDLEdBQUdQLFFBQVFLLENBQUFBLEVBQUcsT0FBTztRQUN4QkMsV0FBVztJQUNiLEdBQUdGLE1BQU1NLFFBQVEsQ0FBQyxHQUFHVixRQUFRSyxDQUFBQSxFQUFHLE9BQU87UUFDckNNLEtBQUtQLE1BQU1NO1FBQ1hFLEtBQUs7UUFDTE4sV0FBVztJQUNiLElBQUksQ0FBQyxHQUFHTixRQUFRSyxDQUFBQSxFQUFHLE1BQU0sTUFBTSxxQkFBcUIsQ0FBQyxHQUFHTCxRQUFRSyxDQUFBQSxFQUFHLEtBQUssTUFBTSx3REFBd0QsQ0FBQyxHQUFHTCxRQUFRSyxDQUFBQSxFQUFHLEtBQUssTUFBTSxDQUFDLEdBQUdMLFFBQVFLLENBQUFBLEVBQUcsS0FBSztRQUNsTEMsV0FBVztRQUNYTyxNQUFNVixJQUFJVztJQUNaLEdBQUdYLElBQUlZO0FBQ1QiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mdWxsc3RhY2stcm9sZS1iYXNlZC1uZXh0anMtMi8uL25vZGVfbW9kdWxlcy9uZXh0LWF1dGgvY29yZS9wYWdlcy92ZXJpZnktcmVxdWVzdC5qcz82ZjFjIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5kZWZhdWx0ID0gVmVyaWZ5UmVxdWVzdFBhZ2U7XG5cbnZhciBfcHJlYWN0ID0gcmVxdWlyZShcInByZWFjdFwiKTtcblxuZnVuY3Rpb24gVmVyaWZ5UmVxdWVzdFBhZ2UocHJvcHMpIHtcbiAgY29uc3Qge1xuICAgIHVybCxcbiAgICB0aGVtZVxuICB9ID0gcHJvcHM7XG4gIHJldHVybiAoMCwgX3ByZWFjdC5oKShcImRpdlwiLCB7XG4gICAgY2xhc3NOYW1lOiBcInZlcmlmeS1yZXF1ZXN0XCJcbiAgfSwgdGhlbWUuYnJhbmRDb2xvciAmJiAoMCwgX3ByZWFjdC5oKShcInN0eWxlXCIsIHtcbiAgICBkYW5nZXJvdXNseVNldElubmVySFRNTDoge1xuICAgICAgX19odG1sOiBgXG4gICAgICAgIDpyb290IHtcbiAgICAgICAgICAtLWJyYW5kLWNvbG9yOiAke3RoZW1lLmJyYW5kQ29sb3J9XG4gICAgICAgIH1cbiAgICAgIGBcbiAgICB9XG4gIH0pLCAoMCwgX3ByZWFjdC5oKShcImRpdlwiLCB7XG4gICAgY2xhc3NOYW1lOiBcImNhcmRcIlxuICB9LCB0aGVtZS5sb2dvICYmICgwLCBfcHJlYWN0LmgpKFwiaW1nXCIsIHtcbiAgICBzcmM6IHRoZW1lLmxvZ28sXG4gICAgYWx0OiBcIkxvZ29cIixcbiAgICBjbGFzc05hbWU6IFwibG9nb1wiXG4gIH0pLCAoMCwgX3ByZWFjdC5oKShcImgxXCIsIG51bGwsIFwiQ2hlY2sgeW91ciBlbWFpbFwiKSwgKDAsIF9wcmVhY3QuaCkoXCJwXCIsIG51bGwsIFwiQSBzaWduIGluIGxpbmsgaGFzIGJlZW4gc2VudCB0byB5b3VyIGVtYWlsIGFkZHJlc3MuXCIpLCAoMCwgX3ByZWFjdC5oKShcInBcIiwgbnVsbCwgKDAsIF9wcmVhY3QuaCkoXCJhXCIsIHtcbiAgICBjbGFzc05hbWU6IFwic2l0ZVwiLFxuICAgIGhyZWY6IHVybC5vcmlnaW5cbiAgfSwgdXJsLmhvc3QpKSkpO1xufSJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsImRlZmF1bHQiLCJWZXJpZnlSZXF1ZXN0UGFnZSIsIl9wcmVhY3QiLCJyZXF1aXJlIiwicHJvcHMiLCJ1cmwiLCJ0aGVtZSIsImgiLCJjbGFzc05hbWUiLCJicmFuZENvbG9yIiwiZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwiLCJfX2h0bWwiLCJsb2dvIiwic3JjIiwiYWx0IiwiaHJlZiIsIm9yaWdpbiIsImhvc3QiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/next-auth/core/pages/verify-request.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/next-auth/core/routes/callback.js":
/*!********************************************************!*\
  !*** ./node_modules/next-auth/core/routes/callback.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nvar _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ \"(sc_server)/./node_modules/@babel/runtime/helpers/interopRequireDefault.js\");\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports[\"default\"] = callback;\nvar _callback = _interopRequireDefault(__webpack_require__(/*! ../lib/oauth/callback */ \"(sc_server)/./node_modules/next-auth/core/lib/oauth/callback.js\"));\nvar _callbackHandler = _interopRequireDefault(__webpack_require__(/*! ../lib/callback-handler */ \"(sc_server)/./node_modules/next-auth/core/lib/callback-handler.js\"));\nvar _utils = __webpack_require__(/*! ../lib/utils */ \"(sc_server)/./node_modules/next-auth/core/lib/utils.js\");\nvar _getUserFromEmail = _interopRequireDefault(__webpack_require__(/*! ../lib/email/getUserFromEmail */ \"(sc_server)/./node_modules/next-auth/core/lib/email/getUserFromEmail.js\"));\nasync function callback(params) {\n    const { options , query , body , method , headers , sessionStore  } = params;\n    const { provider , adapter , url , callbackUrl , pages , jwt , events , callbacks , session: { strategy: sessionStrategy , maxAge: sessionMaxAge  } , logger  } = options;\n    const cookies = [];\n    const useJwtSession = sessionStrategy === \"jwt\";\n    if (provider.type === \"oauth\") {\n        try {\n            const { profile , account , OAuthProfile , cookies: oauthCookies  } = await (0, _callback.default)({\n                query,\n                body,\n                method,\n                options,\n                cookies: params.cookies\n            });\n            if (oauthCookies.length) cookies.push(...oauthCookies);\n            try {\n                var _events$signIn;\n                logger.debug(\"OAUTH_CALLBACK_RESPONSE\", {\n                    profile,\n                    account,\n                    OAuthProfile\n                });\n                if (!profile || !account || !OAuthProfile) {\n                    return {\n                        redirect: `${url}/signin`,\n                        cookies\n                    };\n                }\n                let userOrProfile = profile;\n                if (adapter) {\n                    const { getUserByAccount  } = adapter;\n                    const userByAccount = await getUserByAccount({\n                        providerAccountId: account.providerAccountId,\n                        provider: provider.id\n                    });\n                    if (userByAccount) userOrProfile = userByAccount;\n                }\n                try {\n                    const isAllowed = await callbacks.signIn({\n                        user: userOrProfile,\n                        account,\n                        profile: OAuthProfile\n                    });\n                    if (!isAllowed) {\n                        return {\n                            redirect: `${url}/error?error=AccessDenied`,\n                            cookies\n                        };\n                    } else if (typeof isAllowed === \"string\") {\n                        return {\n                            redirect: isAllowed,\n                            cookies\n                        };\n                    }\n                } catch (error) {\n                    return {\n                        redirect: `${url}/error?error=${encodeURIComponent(error.message)}`,\n                        cookies\n                    };\n                }\n                const { user , session , isNewUser  } = await (0, _callbackHandler.default)({\n                    sessionToken: sessionStore.value,\n                    profile,\n                    account,\n                    options\n                });\n                if (useJwtSession) {\n                    var _user$id;\n                    const defaultToken = {\n                        name: user.name,\n                        email: user.email,\n                        picture: user.image,\n                        sub: (_user$id = user.id) === null || _user$id === void 0 ? void 0 : _user$id.toString()\n                    };\n                    const token = await callbacks.jwt({\n                        token: defaultToken,\n                        user,\n                        account,\n                        profile: OAuthProfile,\n                        isNewUser,\n                        trigger: isNewUser ? \"signUp\" : \"signIn\"\n                    });\n                    const newToken = await jwt.encode({\n                        ...jwt,\n                        token\n                    });\n                    const cookieExpires = new Date();\n                    cookieExpires.setTime(cookieExpires.getTime() + sessionMaxAge * 1000);\n                    const sessionCookies = sessionStore.chunk(newToken, {\n                        expires: cookieExpires\n                    });\n                    cookies.push(...sessionCookies);\n                } else {\n                    cookies.push({\n                        name: options.cookies.sessionToken.name,\n                        value: session.sessionToken,\n                        options: {\n                            ...options.cookies.sessionToken.options,\n                            expires: session.expires\n                        }\n                    });\n                }\n                await ((_events$signIn = events.signIn) === null || _events$signIn === void 0 ? void 0 : _events$signIn.call(events, {\n                    user,\n                    account,\n                    profile,\n                    isNewUser\n                }));\n                if (isNewUser && pages.newUser) {\n                    return {\n                        redirect: `${pages.newUser}${pages.newUser.includes(\"?\") ? \"&\" : \"?\"}callbackUrl=${encodeURIComponent(callbackUrl)}`,\n                        cookies\n                    };\n                }\n                return {\n                    redirect: callbackUrl,\n                    cookies\n                };\n            } catch (error) {\n                if (error.name === \"AccountNotLinkedError\") {\n                    return {\n                        redirect: `${url}/error?error=OAuthAccountNotLinked`,\n                        cookies\n                    };\n                } else if (error.name === \"CreateUserError\") {\n                    return {\n                        redirect: `${url}/error?error=OAuthCreateAccount`,\n                        cookies\n                    };\n                }\n                logger.error(\"OAUTH_CALLBACK_HANDLER_ERROR\", error);\n                return {\n                    redirect: `${url}/error?error=Callback`,\n                    cookies\n                };\n            }\n        } catch (error) {\n            if (error.name === \"OAuthCallbackError\") {\n                logger.error(\"OAUTH_CALLBACK_ERROR\", {\n                    error: error,\n                    providerId: provider.id\n                });\n                return {\n                    redirect: `${url}/error?error=OAuthCallback`,\n                    cookies\n                };\n            }\n            logger.error(\"OAUTH_CALLBACK_ERROR\", error);\n            return {\n                redirect: `${url}/error?error=Callback`,\n                cookies\n            };\n        }\n    } else if (provider.type === \"email\") {\n        try {\n            var _events$signIn2;\n            const token = query === null || query === void 0 ? void 0 : query.token;\n            const identifier = query === null || query === void 0 ? void 0 : query.email;\n            if (!token || !identifier) {\n                return {\n                    redirect: `${url}/error?error=configuration`,\n                    cookies\n                };\n            }\n            const invite = await adapter.useVerificationToken({\n                identifier,\n                token: (0, _utils.hashToken)(token, options)\n            });\n            const invalidInvite = !invite || invite.expires.valueOf() < Date.now();\n            if (invalidInvite) {\n                return {\n                    redirect: `${url}/error?error=Verification`,\n                    cookies\n                };\n            }\n            const profile = await (0, _getUserFromEmail.default)({\n                email: identifier,\n                adapter\n            });\n            const account = {\n                providerAccountId: profile.email,\n                type: \"email\",\n                provider: provider.id\n            };\n            try {\n                const signInCallbackResponse = await callbacks.signIn({\n                    user: profile,\n                    account\n                });\n                if (!signInCallbackResponse) {\n                    return {\n                        redirect: `${url}/error?error=AccessDenied`,\n                        cookies\n                    };\n                } else if (typeof signInCallbackResponse === \"string\") {\n                    return {\n                        redirect: signInCallbackResponse,\n                        cookies\n                    };\n                }\n            } catch (error) {\n                return {\n                    redirect: `${url}/error?error=${encodeURIComponent(error.message)}`,\n                    cookies\n                };\n            }\n            const { user , session , isNewUser  } = await (0, _callbackHandler.default)({\n                sessionToken: sessionStore.value,\n                profile,\n                account,\n                options\n            });\n            if (useJwtSession) {\n                var _user$id2;\n                const defaultToken = {\n                    name: user.name,\n                    email: user.email,\n                    picture: user.image,\n                    sub: (_user$id2 = user.id) === null || _user$id2 === void 0 ? void 0 : _user$id2.toString()\n                };\n                const token = await callbacks.jwt({\n                    token: defaultToken,\n                    user,\n                    account,\n                    isNewUser,\n                    trigger: isNewUser ? \"signUp\" : \"signIn\"\n                });\n                const newToken = await jwt.encode({\n                    ...jwt,\n                    token\n                });\n                const cookieExpires = new Date();\n                cookieExpires.setTime(cookieExpires.getTime() + sessionMaxAge * 1000);\n                const sessionCookies = sessionStore.chunk(newToken, {\n                    expires: cookieExpires\n                });\n                cookies.push(...sessionCookies);\n            } else {\n                cookies.push({\n                    name: options.cookies.sessionToken.name,\n                    value: session.sessionToken,\n                    options: {\n                        ...options.cookies.sessionToken.options,\n                        expires: session.expires\n                    }\n                });\n            }\n            await ((_events$signIn2 = events.signIn) === null || _events$signIn2 === void 0 ? void 0 : _events$signIn2.call(events, {\n                user,\n                account,\n                isNewUser\n            }));\n            if (isNewUser && pages.newUser) {\n                return {\n                    redirect: `${pages.newUser}${pages.newUser.includes(\"?\") ? \"&\" : \"?\"}callbackUrl=${encodeURIComponent(callbackUrl)}`,\n                    cookies\n                };\n            }\n            return {\n                redirect: callbackUrl,\n                cookies\n            };\n        } catch (error) {\n            if (error.name === \"CreateUserError\") {\n                return {\n                    redirect: `${url}/error?error=EmailCreateAccount`,\n                    cookies\n                };\n            }\n            logger.error(\"CALLBACK_EMAIL_ERROR\", error);\n            return {\n                redirect: `${url}/error?error=Callback`,\n                cookies\n            };\n        }\n    } else if (provider.type === \"credentials\" && method === \"POST\") {\n        var _user$id3, _events$signIn3;\n        const credentials = body;\n        let user;\n        try {\n            user = await provider.authorize(credentials, {\n                query,\n                body,\n                headers,\n                method\n            });\n            if (!user) {\n                return {\n                    status: 401,\n                    redirect: `${url}/error?${new URLSearchParams({\n                        error: \"CredentialsSignin\",\n                        provider: provider.id\n                    })}`,\n                    cookies\n                };\n            }\n        } catch (error) {\n            return {\n                status: 401,\n                redirect: `${url}/error?error=${encodeURIComponent(error.message)}`,\n                cookies\n            };\n        }\n        const account = {\n            providerAccountId: user.id,\n            type: \"credentials\",\n            provider: provider.id\n        };\n        try {\n            const isAllowed = await callbacks.signIn({\n                user,\n                account,\n                credentials\n            });\n            if (!isAllowed) {\n                return {\n                    status: 403,\n                    redirect: `${url}/error?error=AccessDenied`,\n                    cookies\n                };\n            } else if (typeof isAllowed === \"string\") {\n                return {\n                    redirect: isAllowed,\n                    cookies\n                };\n            }\n        } catch (error) {\n            return {\n                redirect: `${url}/error?error=${encodeURIComponent(error.message)}`,\n                cookies\n            };\n        }\n        const defaultToken = {\n            name: user.name,\n            email: user.email,\n            picture: user.image,\n            sub: (_user$id3 = user.id) === null || _user$id3 === void 0 ? void 0 : _user$id3.toString()\n        };\n        const token = await callbacks.jwt({\n            token: defaultToken,\n            user,\n            account,\n            isNewUser: false,\n            trigger: \"signIn\"\n        });\n        const newToken = await jwt.encode({\n            ...jwt,\n            token\n        });\n        const cookieExpires = new Date();\n        cookieExpires.setTime(cookieExpires.getTime() + sessionMaxAge * 1000);\n        const sessionCookies = sessionStore.chunk(newToken, {\n            expires: cookieExpires\n        });\n        cookies.push(...sessionCookies);\n        await ((_events$signIn3 = events.signIn) === null || _events$signIn3 === void 0 ? void 0 : _events$signIn3.call(events, {\n            user,\n            account\n        }));\n        return {\n            redirect: callbackUrl,\n            cookies\n        };\n    }\n    return {\n        status: 500,\n        body: `Error: Callback for provider type ${provider.type} not supported`,\n        cookies\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/next-auth/core/routes/callback.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/next-auth/core/routes/index.js":
/*!*****************************************************!*\
  !*** ./node_modules/next-auth/core/routes/index.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nvar _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ \"(sc_server)/./node_modules/@babel/runtime/helpers/interopRequireDefault.js\");\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nObject.defineProperty(exports, \"callback\", ({\n    enumerable: true,\n    get: function() {\n        return _callback.default;\n    }\n}));\nObject.defineProperty(exports, \"providers\", ({\n    enumerable: true,\n    get: function() {\n        return _providers.default;\n    }\n}));\nObject.defineProperty(exports, \"session\", ({\n    enumerable: true,\n    get: function() {\n        return _session.default;\n    }\n}));\nObject.defineProperty(exports, \"signin\", ({\n    enumerable: true,\n    get: function() {\n        return _signin.default;\n    }\n}));\nObject.defineProperty(exports, \"signout\", ({\n    enumerable: true,\n    get: function() {\n        return _signout.default;\n    }\n}));\nvar _callback = _interopRequireDefault(__webpack_require__(/*! ./callback */ \"(sc_server)/./node_modules/next-auth/core/routes/callback.js\"));\nvar _signin = _interopRequireDefault(__webpack_require__(/*! ./signin */ \"(sc_server)/./node_modules/next-auth/core/routes/signin.js\"));\nvar _signout = _interopRequireDefault(__webpack_require__(/*! ./signout */ \"(sc_server)/./node_modules/next-auth/core/routes/signout.js\"));\nvar _session = _interopRequireDefault(__webpack_require__(/*! ./session */ \"(sc_server)/./node_modules/next-auth/core/routes/session.js\"));\nvar _providers = _interopRequireDefault(__webpack_require__(/*! ./providers */ \"(sc_server)/./node_modules/next-auth/core/routes/providers.js\"));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL2NvcmUvcm91dGVzL2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBRWIsSUFBSUEseUJBQXlCQyxtQkFBT0EsQ0FBQyxnSUFBOEM7QUFFbkZDLDhDQUE2QztJQUMzQ0csT0FBTztBQUNULENBQUMsRUFBQztBQUNGSCw0Q0FBMkM7SUFDekNJLFlBQVk7SUFDWkMsS0FBSztRQUNILE9BQU9DLFVBQVVDO0lBQ25CO0FBQ0YsQ0FBQyxFQUFDO0FBQ0ZQLDZDQUE0QztJQUMxQ0ksWUFBWTtJQUNaQyxLQUFLO1FBQ0gsT0FBT0csV0FBV0Q7SUFDcEI7QUFDRixDQUFDLEVBQUM7QUFDRlAsMkNBQTBDO0lBQ3hDSSxZQUFZO0lBQ1pDLEtBQUs7UUFDSCxPQUFPSSxTQUFTRjtJQUNsQjtBQUNGLENBQUMsRUFBQztBQUNGUCwwQ0FBeUM7SUFDdkNJLFlBQVk7SUFDWkMsS0FBSztRQUNILE9BQU9LLFFBQVFIO0lBQ2pCO0FBQ0YsQ0FBQyxFQUFDO0FBQ0ZQLDJDQUEwQztJQUN4Q0ksWUFBWTtJQUNaQyxLQUFLO1FBQ0gsT0FBT00sU0FBU0o7SUFDbEI7QUFDRixDQUFDLEVBQUM7QUFFRixJQUFJRCxZQUFZUix1QkFBdUJDLG1CQUFPQSxDQUFDLGdGQUFZO0FBRTNELElBQUlXLFVBQVVaLHVCQUF1QkMsbUJBQU9BLENBQUMsNEVBQVU7QUFFdkQsSUFBSVksV0FBV2IsdUJBQXVCQyxtQkFBT0EsQ0FBQyw4RUFBVztBQUV6RCxJQUFJVSxXQUFXWCx1QkFBdUJDLG1CQUFPQSxDQUFDLDhFQUFXO0FBRXpELElBQUlTLGFBQWFWLHVCQUF1QkMsbUJBQU9BLENBQUMsa0ZBQWEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mdWxsc3RhY2stcm9sZS1iYXNlZC1uZXh0anMtMi8uL25vZGVfbW9kdWxlcy9uZXh0LWF1dGgvY29yZS9yb3V0ZXMvaW5kZXguanM/YzZlZiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxudmFyIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQgPSByZXF1aXJlKFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9pbnRlcm9wUmVxdWlyZURlZmF1bHRcIik7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJjYWxsYmFja1wiLCB7XG4gIGVudW1lcmFibGU6IHRydWUsXG4gIGdldDogZnVuY3Rpb24gKCkge1xuICAgIHJldHVybiBfY2FsbGJhY2suZGVmYXVsdDtcbiAgfVxufSk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJwcm92aWRlcnNcIiwge1xuICBlbnVtZXJhYmxlOiB0cnVlLFxuICBnZXQ6IGZ1bmN0aW9uICgpIHtcbiAgICByZXR1cm4gX3Byb3ZpZGVycy5kZWZhdWx0O1xuICB9XG59KTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcInNlc3Npb25cIiwge1xuICBlbnVtZXJhYmxlOiB0cnVlLFxuICBnZXQ6IGZ1bmN0aW9uICgpIHtcbiAgICByZXR1cm4gX3Nlc3Npb24uZGVmYXVsdDtcbiAgfVxufSk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJzaWduaW5cIiwge1xuICBlbnVtZXJhYmxlOiB0cnVlLFxuICBnZXQ6IGZ1bmN0aW9uICgpIHtcbiAgICByZXR1cm4gX3NpZ25pbi5kZWZhdWx0O1xuICB9XG59KTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcInNpZ25vdXRcIiwge1xuICBlbnVtZXJhYmxlOiB0cnVlLFxuICBnZXQ6IGZ1bmN0aW9uICgpIHtcbiAgICByZXR1cm4gX3NpZ25vdXQuZGVmYXVsdDtcbiAgfVxufSk7XG5cbnZhciBfY2FsbGJhY2sgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoXCIuL2NhbGxiYWNrXCIpKTtcblxudmFyIF9zaWduaW4gPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoXCIuL3NpZ25pblwiKSk7XG5cbnZhciBfc2lnbm91dCA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZShcIi4vc2lnbm91dFwiKSk7XG5cbnZhciBfc2Vzc2lvbiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZShcIi4vc2Vzc2lvblwiKSk7XG5cbnZhciBfcHJvdmlkZXJzID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKFwiLi9wcm92aWRlcnNcIikpOyJdLCJuYW1lcyI6WyJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwicmVxdWlyZSIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiZW51bWVyYWJsZSIsImdldCIsIl9jYWxsYmFjayIsImRlZmF1bHQiLCJfcHJvdmlkZXJzIiwiX3Nlc3Npb24iLCJfc2lnbmluIiwiX3NpZ25vdXQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/next-auth/core/routes/index.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/next-auth/core/routes/providers.js":
/*!*********************************************************!*\
  !*** ./node_modules/next-auth/core/routes/providers.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports[\"default\"] = providers;\nfunction providers(providers) {\n    return {\n        headers: [\n            {\n                key: \"Content-Type\",\n                value: \"application/json\"\n            }\n        ],\n        body: providers.reduce((acc, { id , name , type , signinUrl , callbackUrl  })=>{\n            acc[id] = {\n                id,\n                name,\n                type,\n                signinUrl,\n                callbackUrl\n            };\n            return acc;\n        }, {})\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL2NvcmUvcm91dGVzL3Byb3ZpZGVycy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUViQSw4Q0FBNkM7SUFDM0NHLE9BQU87QUFDVCxDQUFDLEVBQUM7QUFDRkQsa0JBQWVFLEdBQUdDO0FBRWxCLFNBQVNBLFVBQVVBLFNBQVM7SUFDMUIsT0FBTztRQUNMQyxTQUFTO1lBQUM7Z0JBQ1JDLEtBQUs7Z0JBQ0xKLE9BQU87WUFDVDtTQUFFO1FBQ0ZLLE1BQU1ILFVBQVVJLE9BQU8sQ0FBQ0MsS0FBSyxFQUMzQkMsR0FBRSxFQUNGQyxLQUFJLEVBQ0pDLEtBQUksRUFDSkMsVUFBUyxFQUNUQyxZQUFXLEVBQ1o7WUFDQ0wsR0FBRyxDQUFDQyxHQUFHLEdBQUc7Z0JBQ1JBO2dCQUNBQztnQkFDQUM7Z0JBQ0FDO2dCQUNBQztZQUNGO1lBQ0EsT0FBT0w7UUFDVCxHQUFHLENBQUM7SUFDTjtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZnVsbHN0YWNrLXJvbGUtYmFzZWQtbmV4dGpzLTIvLi9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL2NvcmUvcm91dGVzL3Byb3ZpZGVycy5qcz9mZjMwIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5kZWZhdWx0ID0gcHJvdmlkZXJzO1xuXG5mdW5jdGlvbiBwcm92aWRlcnMocHJvdmlkZXJzKSB7XG4gIHJldHVybiB7XG4gICAgaGVhZGVyczogW3tcbiAgICAgIGtleTogXCJDb250ZW50LVR5cGVcIixcbiAgICAgIHZhbHVlOiBcImFwcGxpY2F0aW9uL2pzb25cIlxuICAgIH1dLFxuICAgIGJvZHk6IHByb3ZpZGVycy5yZWR1Y2UoKGFjYywge1xuICAgICAgaWQsXG4gICAgICBuYW1lLFxuICAgICAgdHlwZSxcbiAgICAgIHNpZ25pblVybCxcbiAgICAgIGNhbGxiYWNrVXJsXG4gICAgfSkgPT4ge1xuICAgICAgYWNjW2lkXSA9IHtcbiAgICAgICAgaWQsXG4gICAgICAgIG5hbWUsXG4gICAgICAgIHR5cGUsXG4gICAgICAgIHNpZ25pblVybCxcbiAgICAgICAgY2FsbGJhY2tVcmxcbiAgICAgIH07XG4gICAgICByZXR1cm4gYWNjO1xuICAgIH0sIHt9KVxuICB9O1xufSJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsImRlZmF1bHQiLCJwcm92aWRlcnMiLCJoZWFkZXJzIiwia2V5IiwiYm9keSIsInJlZHVjZSIsImFjYyIsImlkIiwibmFtZSIsInR5cGUiLCJzaWduaW5VcmwiLCJjYWxsYmFja1VybCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/next-auth/core/routes/providers.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/next-auth/core/routes/session.js":
/*!*******************************************************!*\
  !*** ./node_modules/next-auth/core/routes/session.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports[\"default\"] = session;\nvar _utils = __webpack_require__(/*! ../lib/utils */ \"(sc_server)/./node_modules/next-auth/core/lib/utils.js\");\nasync function session(params) {\n    const { options , sessionStore , newSession , isUpdate  } = params;\n    const { adapter , jwt , events , callbacks , logger , session: { strategy: sessionStrategy , maxAge: sessionMaxAge  }  } = options;\n    const response = {\n        body: {},\n        headers: [\n            {\n                key: \"Content-Type\",\n                value: \"application/json\"\n            }\n        ],\n        cookies: []\n    };\n    const sessionToken = sessionStore.value;\n    if (!sessionToken) return response;\n    if (sessionStrategy === \"jwt\") {\n        try {\n            var _response$cookies, _events$session;\n            const decodedToken = await jwt.decode({\n                ...jwt,\n                token: sessionToken\n            });\n            if (!decodedToken) throw new Error(\"JWT invalid\");\n            const token = await callbacks.jwt({\n                token: decodedToken,\n                ...isUpdate && {\n                    trigger: \"update\"\n                },\n                session: newSession\n            });\n            const newExpires = (0, _utils.fromDate)(sessionMaxAge);\n            const updatedSession = await callbacks.session({\n                session: {\n                    user: {\n                        name: decodedToken === null || decodedToken === void 0 ? void 0 : decodedToken.name,\n                        email: decodedToken === null || decodedToken === void 0 ? void 0 : decodedToken.email,\n                        image: decodedToken === null || decodedToken === void 0 ? void 0 : decodedToken.picture\n                    },\n                    expires: newExpires.toISOString()\n                },\n                token\n            });\n            response.body = updatedSession;\n            const newToken = await jwt.encode({\n                ...jwt,\n                token,\n                maxAge: options.session.maxAge\n            });\n            const sessionCookies = sessionStore.chunk(newToken, {\n                expires: newExpires\n            });\n            (_response$cookies = response.cookies) === null || _response$cookies === void 0 ? void 0 : _response$cookies.push(...sessionCookies);\n            await ((_events$session = events.session) === null || _events$session === void 0 ? void 0 : _events$session.call(events, {\n                session: updatedSession,\n                token\n            }));\n        } catch (error) {\n            var _response$cookies2;\n            logger.error(\"JWT_SESSION_ERROR\", error);\n            (_response$cookies2 = response.cookies) === null || _response$cookies2 === void 0 ? void 0 : _response$cookies2.push(...sessionStore.clean());\n        }\n    } else {\n        try {\n            const { getSessionAndUser , deleteSession , updateSession  } = adapter;\n            let userAndSession = await getSessionAndUser(sessionToken);\n            if (userAndSession && userAndSession.session.expires.valueOf() < Date.now()) {\n                await deleteSession(sessionToken);\n                userAndSession = null;\n            }\n            if (userAndSession) {\n                var _response$cookies3, _events$session2;\n                const { user , session  } = userAndSession;\n                const sessionUpdateAge = options.session.updateAge;\n                const sessionIsDueToBeUpdatedDate = session.expires.valueOf() - sessionMaxAge * 1000 + sessionUpdateAge * 1000;\n                const newExpires = (0, _utils.fromDate)(sessionMaxAge);\n                if (sessionIsDueToBeUpdatedDate <= Date.now()) {\n                    await updateSession({\n                        sessionToken,\n                        expires: newExpires\n                    });\n                }\n                const sessionPayload = await callbacks.session({\n                    session: {\n                        user: {\n                            name: user.name,\n                            email: user.email,\n                            image: user.image\n                        },\n                        expires: session.expires.toISOString()\n                    },\n                    user,\n                    newSession,\n                    ...isUpdate ? {\n                        trigger: \"update\"\n                    } : {}\n                });\n                response.body = sessionPayload;\n                (_response$cookies3 = response.cookies) === null || _response$cookies3 === void 0 ? void 0 : _response$cookies3.push({\n                    name: options.cookies.sessionToken.name,\n                    value: sessionToken,\n                    options: {\n                        ...options.cookies.sessionToken.options,\n                        expires: newExpires\n                    }\n                });\n                await ((_events$session2 = events.session) === null || _events$session2 === void 0 ? void 0 : _events$session2.call(events, {\n                    session: sessionPayload\n                }));\n            } else if (sessionToken) {\n                var _response$cookies4;\n                (_response$cookies4 = response.cookies) === null || _response$cookies4 === void 0 ? void 0 : _response$cookies4.push(...sessionStore.clean());\n            }\n        } catch (error) {\n            logger.error(\"SESSION_ERROR\", error);\n        }\n    }\n    return response;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/next-auth/core/routes/session.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/next-auth/core/routes/signin.js":
/*!******************************************************!*\
  !*** ./node_modules/next-auth/core/routes/signin.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nvar _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ \"(sc_server)/./node_modules/@babel/runtime/helpers/interopRequireDefault.js\");\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports[\"default\"] = signin;\nvar _authorizationUrl = _interopRequireDefault(__webpack_require__(/*! ../lib/oauth/authorization-url */ \"(sc_server)/./node_modules/next-auth/core/lib/oauth/authorization-url.js\"));\nvar _signin = _interopRequireDefault(__webpack_require__(/*! ../lib/email/signin */ \"(sc_server)/./node_modules/next-auth/core/lib/email/signin.js\"));\nvar _getUserFromEmail = _interopRequireDefault(__webpack_require__(/*! ../lib/email/getUserFromEmail */ \"(sc_server)/./node_modules/next-auth/core/lib/email/getUserFromEmail.js\"));\nasync function signin(params) {\n    const { options , query , body  } = params;\n    const { url , callbacks , logger , provider  } = options;\n    if (!provider.type) {\n        return {\n            status: 500,\n            text: `Error: Type not specified for ${provider.name}`\n        };\n    }\n    if (provider.type === \"oauth\") {\n        try {\n            const response = await (0, _authorizationUrl.default)({\n                options,\n                query\n            });\n            return response;\n        } catch (error) {\n            logger.error(\"SIGNIN_OAUTH_ERROR\", {\n                error: error,\n                providerId: provider.id\n            });\n            return {\n                redirect: `${url}/error?error=OAuthSignin`\n            };\n        }\n    } else if (provider.type === \"email\") {\n        var _provider$normalizeId;\n        let email = body === null || body === void 0 ? void 0 : body.email;\n        if (!email) return {\n            redirect: `${url}/error?error=EmailSignin`\n        };\n        const normalizer = (_provider$normalizeId = provider.normalizeIdentifier) !== null && _provider$normalizeId !== void 0 ? _provider$normalizeId : (identifier)=>{\n            let [local, domain] = identifier.toLowerCase().trim().split(\"@\");\n            domain = domain.split(\",\")[0];\n            return `${local}@${domain}`;\n        };\n        try {\n            email = normalizer(body === null || body === void 0 ? void 0 : body.email);\n        } catch (error) {\n            logger.error(\"SIGNIN_EMAIL_ERROR\", {\n                error,\n                providerId: provider.id\n            });\n            return {\n                redirect: `${url}/error?error=EmailSignin`\n            };\n        }\n        const user = await (0, _getUserFromEmail.default)({\n            email,\n            adapter: options.adapter\n        });\n        const account = {\n            providerAccountId: email,\n            userId: email,\n            type: \"email\",\n            provider: provider.id\n        };\n        try {\n            const signInCallbackResponse = await callbacks.signIn({\n                user,\n                account,\n                email: {\n                    verificationRequest: true\n                }\n            });\n            if (!signInCallbackResponse) {\n                return {\n                    redirect: `${url}/error?error=AccessDenied`\n                };\n            } else if (typeof signInCallbackResponse === \"string\") {\n                return {\n                    redirect: signInCallbackResponse\n                };\n            }\n        } catch (error) {\n            return {\n                redirect: `${url}/error?${new URLSearchParams({\n                    error: error\n                })}`\n            };\n        }\n        try {\n            const redirect = await (0, _signin.default)(email, options);\n            return {\n                redirect\n            };\n        } catch (error) {\n            logger.error(\"SIGNIN_EMAIL_ERROR\", {\n                error,\n                providerId: provider.id\n            });\n            return {\n                redirect: `${url}/error?error=EmailSignin`\n            };\n        }\n    }\n    return {\n        redirect: `${url}/signin`\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/next-auth/core/routes/signin.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/next-auth/core/routes/signout.js":
/*!*******************************************************!*\
  !*** ./node_modules/next-auth/core/routes/signout.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports[\"default\"] = signout;\nasync function signout(params) {\n    const { options , sessionStore  } = params;\n    const { adapter , events , jwt , callbackUrl , logger , session  } = options;\n    const sessionToken = sessionStore === null || sessionStore === void 0 ? void 0 : sessionStore.value;\n    if (!sessionToken) {\n        return {\n            redirect: callbackUrl\n        };\n    }\n    if (session.strategy === \"jwt\") {\n        try {\n            var _events$signOut;\n            const decodedJwt = await jwt.decode({\n                ...jwt,\n                token: sessionToken\n            });\n            await ((_events$signOut = events.signOut) === null || _events$signOut === void 0 ? void 0 : _events$signOut.call(events, {\n                token: decodedJwt\n            }));\n        } catch (error) {\n            logger.error(\"SIGNOUT_ERROR\", error);\n        }\n    } else {\n        try {\n            var _events$signOut2;\n            const session = await adapter.deleteSession(sessionToken);\n            await ((_events$signOut2 = events.signOut) === null || _events$signOut2 === void 0 ? void 0 : _events$signOut2.call(events, {\n                session\n            }));\n        } catch (error) {\n            logger.error(\"SIGNOUT_ERROR\", error);\n        }\n    }\n    const sessionCookies = sessionStore.clean();\n    return {\n        redirect: callbackUrl,\n        cookies: sessionCookies\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL2NvcmUvcm91dGVzL3NpZ25vdXQuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFFYkEsOENBQTZDO0lBQzNDRyxPQUFPO0FBQ1QsQ0FBQyxFQUFDO0FBQ0ZELGtCQUFlRSxHQUFHQztBQUVsQixlQUFlQSxRQUFRQyxNQUFNO0lBQzNCLE1BQU0sRUFDSkMsUUFBTyxFQUNQQyxhQUFZLEVBQ2IsR0FBR0Y7SUFDSixNQUFNLEVBQ0pHLFFBQU8sRUFDUEMsT0FBTSxFQUNOQyxJQUFHLEVBQ0hDLFlBQVcsRUFDWEMsT0FBTSxFQUNOQyxRQUFPLEVBQ1IsR0FBR1A7SUFDSixNQUFNUSxlQUFlUCxpQkFBaUIsUUFBUUEsaUJBQWlCLEtBQUssSUFBSSxLQUFLLElBQUlBLGFBQWFMO0lBRTlGLElBQUksQ0FBQ1ksY0FBYztRQUNqQixPQUFPO1lBQ0xDLFVBQVVKO1FBQ1o7SUFDRjtJQUVBLElBQUlFLFFBQVFHLGFBQWEsT0FBTztRQUM5QixJQUFJO1lBQ0YsSUFBSUM7WUFFSixNQUFNQyxhQUFhLE1BQU1SLElBQUlTLE9BQU87Z0JBQUUsR0FBR1QsR0FBRztnQkFDMUNVLE9BQU9OO1lBQ1Q7WUFDQSxNQUFPLEVBQUNHLGtCQUFrQlIsT0FBT1ksT0FBTSxNQUFPLFFBQVFKLG9CQUFvQixLQUFLLElBQUksS0FBSyxJQUFJQSxnQkFBZ0JLLEtBQUtiLFFBQVE7Z0JBQ3ZIVyxPQUFPRjtZQUNULEVBQUM7UUFDSCxFQUFFLE9BQU9LLE9BQU87WUFDZFgsT0FBT1csTUFBTSxpQkFBaUJBO1FBQ2hDO0lBQ0YsT0FBTztRQUNMLElBQUk7WUFDRixJQUFJQztZQUVKLE1BQU1YLFVBQVUsTUFBTUwsUUFBUWlCLGNBQWNYO1lBQzVDLE1BQU8sRUFBQ1UsbUJBQW1CZixPQUFPWSxPQUFNLE1BQU8sUUFBUUcscUJBQXFCLEtBQUssSUFBSSxLQUFLLElBQUlBLGlCQUFpQkYsS0FBS2IsUUFBUTtnQkFDMUhJO1lBQ0YsRUFBQztRQUNILEVBQUUsT0FBT1UsT0FBTztZQUNkWCxPQUFPVyxNQUFNLGlCQUFpQkE7UUFDaEM7SUFDRjtJQUVBLE1BQU1HLGlCQUFpQm5CLGFBQWFvQjtJQUNwQyxPQUFPO1FBQ0xaLFVBQVVKO1FBQ1ZpQixTQUFTRjtJQUNYO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mdWxsc3RhY2stcm9sZS1iYXNlZC1uZXh0anMtMi8uL25vZGVfbW9kdWxlcy9uZXh0LWF1dGgvY29yZS9yb3V0ZXMvc2lnbm91dC5qcz8yOTUyIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5kZWZhdWx0ID0gc2lnbm91dDtcblxuYXN5bmMgZnVuY3Rpb24gc2lnbm91dChwYXJhbXMpIHtcbiAgY29uc3Qge1xuICAgIG9wdGlvbnMsXG4gICAgc2Vzc2lvblN0b3JlXG4gIH0gPSBwYXJhbXM7XG4gIGNvbnN0IHtcbiAgICBhZGFwdGVyLFxuICAgIGV2ZW50cyxcbiAgICBqd3QsXG4gICAgY2FsbGJhY2tVcmwsXG4gICAgbG9nZ2VyLFxuICAgIHNlc3Npb25cbiAgfSA9IG9wdGlvbnM7XG4gIGNvbnN0IHNlc3Npb25Ub2tlbiA9IHNlc3Npb25TdG9yZSA9PT0gbnVsbCB8fCBzZXNzaW9uU3RvcmUgPT09IHZvaWQgMCA/IHZvaWQgMCA6IHNlc3Npb25TdG9yZS52YWx1ZTtcblxuICBpZiAoIXNlc3Npb25Ub2tlbikge1xuICAgIHJldHVybiB7XG4gICAgICByZWRpcmVjdDogY2FsbGJhY2tVcmxcbiAgICB9O1xuICB9XG5cbiAgaWYgKHNlc3Npb24uc3RyYXRlZ3kgPT09IFwiand0XCIpIHtcbiAgICB0cnkge1xuICAgICAgdmFyIF9ldmVudHMkc2lnbk91dDtcblxuICAgICAgY29uc3QgZGVjb2RlZEp3dCA9IGF3YWl0IGp3dC5kZWNvZGUoeyAuLi5qd3QsXG4gICAgICAgIHRva2VuOiBzZXNzaW9uVG9rZW5cbiAgICAgIH0pO1xuICAgICAgYXdhaXQgKChfZXZlbnRzJHNpZ25PdXQgPSBldmVudHMuc2lnbk91dCkgPT09IG51bGwgfHwgX2V2ZW50cyRzaWduT3V0ID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfZXZlbnRzJHNpZ25PdXQuY2FsbChldmVudHMsIHtcbiAgICAgICAgdG9rZW46IGRlY29kZWRKd3RcbiAgICAgIH0pKTtcbiAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgbG9nZ2VyLmVycm9yKFwiU0lHTk9VVF9FUlJPUlwiLCBlcnJvcik7XG4gICAgfVxuICB9IGVsc2Uge1xuICAgIHRyeSB7XG4gICAgICB2YXIgX2V2ZW50cyRzaWduT3V0MjtcblxuICAgICAgY29uc3Qgc2Vzc2lvbiA9IGF3YWl0IGFkYXB0ZXIuZGVsZXRlU2Vzc2lvbihzZXNzaW9uVG9rZW4pO1xuICAgICAgYXdhaXQgKChfZXZlbnRzJHNpZ25PdXQyID0gZXZlbnRzLnNpZ25PdXQpID09PSBudWxsIHx8IF9ldmVudHMkc2lnbk91dDIgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9ldmVudHMkc2lnbk91dDIuY2FsbChldmVudHMsIHtcbiAgICAgICAgc2Vzc2lvblxuICAgICAgfSkpO1xuICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICBsb2dnZXIuZXJyb3IoXCJTSUdOT1VUX0VSUk9SXCIsIGVycm9yKTtcbiAgICB9XG4gIH1cblxuICBjb25zdCBzZXNzaW9uQ29va2llcyA9IHNlc3Npb25TdG9yZS5jbGVhbigpO1xuICByZXR1cm4ge1xuICAgIHJlZGlyZWN0OiBjYWxsYmFja1VybCxcbiAgICBjb29raWVzOiBzZXNzaW9uQ29va2llc1xuICB9O1xufSJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsImRlZmF1bHQiLCJzaWdub3V0IiwicGFyYW1zIiwib3B0aW9ucyIsInNlc3Npb25TdG9yZSIsImFkYXB0ZXIiLCJldmVudHMiLCJqd3QiLCJjYWxsYmFja1VybCIsImxvZ2dlciIsInNlc3Npb24iLCJzZXNzaW9uVG9rZW4iLCJyZWRpcmVjdCIsInN0cmF0ZWd5IiwiX2V2ZW50cyRzaWduT3V0IiwiZGVjb2RlZEp3dCIsImRlY29kZSIsInRva2VuIiwic2lnbk91dCIsImNhbGwiLCJlcnJvciIsIl9ldmVudHMkc2lnbk91dDIiLCJkZWxldGVTZXNzaW9uIiwic2Vzc2lvbkNvb2tpZXMiLCJjbGVhbiIsImNvb2tpZXMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/next-auth/core/routes/signout.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/next-auth/core/types.js":
/*!**********************************************!*\
  !*** ./node_modules/next-auth/core/types.js ***!
  \**********************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL2NvcmUvdHlwZXMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFFYkEsOENBQTZDO0lBQzNDRyxPQUFPO0FBQ1QsQ0FBQyxFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZnVsbHN0YWNrLXJvbGUtYmFzZWQtbmV4dGpzLTIvLi9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL2NvcmUvdHlwZXMuanM/ZTgxZCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTsiXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/next-auth/core/types.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/next-auth/css/index.js":
/*!*********************************************!*\
  !*** ./node_modules/next-auth/css/index.js ***!
  \*********************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports = function() {\n    return ':root{--border-width:1px;--border-radius:0.5rem;--color-error:#c94b4b;--color-info:#157efb;--color-info-text:#fff}.__next-auth-theme-auto,.__next-auth-theme-light{--color-background:#ececec;--color-background-card:#fff;--color-text:#000;--color-primary:#444;--color-control-border:#bbb;--color-button-active-background:#f9f9f9;--color-button-active-border:#aaa;--color-seperator:#ccc}.__next-auth-theme-dark{--color-background:#161b22;--color-background-card:#0d1117;--color-text:#fff;--color-primary:#ccc;--color-control-border:#555;--color-button-active-background:#060606;--color-button-active-border:#666;--color-seperator:#444}@media (prefers-color-scheme:dark){.__next-auth-theme-auto{--color-background:#161b22;--color-background-card:#0d1117;--color-text:#fff;--color-primary:#ccc;--color-control-border:#555;--color-button-active-background:#060606;--color-button-active-border:#666;--color-seperator:#444}}body{background-color:var(--color-background);font-family:ui-sans-serif,system-ui,-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Helvetica Neue,Arial,Noto Sans,sans-serif,Apple Color Emoji,Segoe UI Emoji,Segoe UI Symbol,Noto Color Emoji;margin:0;padding:0}h1{font-weight:400;margin-bottom:1.5rem;padding:0 1rem}h1,p{color:var(--color-text)}form{margin:0;padding:0}label{font-weight:500;margin-bottom:.25rem;text-align:left}input[type],label{color:var(--color-text);display:block}input[type]{background:var(--color-background-card);border:var(--border-width) solid var(--color-control-border);border-radius:var(--border-radius);box-sizing:border-box;font-size:1rem;padding:.5rem 1rem;width:100%}input[type]:focus{box-shadow:none}p{font-size:1.1rem;line-height:2rem;margin:0 0 1.5rem;padding:0 1rem}a.button{line-height:1rem;text-decoration:none}a.button:link,a.button:visited{background-color:var(--color-background);color:var(--color-primary)}button span{flex-grow:1}a.button,button{align-items:center;background-color:var(--provider-bg,var(--color-background-card));border-color:rgba(0,0,0,.1);border-radius:var(--border-radius);color:var(--provider-color,var(--color-primary));display:flex;font-size:1.1rem;font-weight:500;justify-content:center;margin:0 0 .75rem;min-height:62px;padding:.75rem 1rem;position:relative;transition:all .1s ease-in-out}@media (max-width:450px){a.button,button{font-size:.9rem}}a.button:active,a.button:hover,button:active,button:hover{cursor:pointer}a.button #provider-logo,button #provider-logo{display:block;width:25px}a.button #provider-logo-dark,button #provider-logo-dark{display:none}#submitButton{background-color:var(--brand-color,var(--color-info));color:var(--button-text-color,var(--color-info-text));width:100%}@media (prefers-color-scheme:dark){a.button,button{background-color:var(--provider-dark-bg,var(--color-background));color:var(--provider-dark-color,var(--color-primary))}#provider-logo{display:none!important}#provider-logo-dark{display:block!important;width:25px}}a.site{color:var(--color-primary);font-size:1rem;line-height:2rem;text-decoration:none}a.site:hover{text-decoration:underline}.page{display:grid;height:100%;margin:0;padding:0;place-items:center;position:absolute;width:100%}.page>div{text-align:center}.error a.button{display:inline-block;margin-top:.5rem;padding-left:2rem;padding-right:2rem}.error .message{margin-bottom:1.5rem}.signin input[type=text]{display:block;margin-left:auto;margin-right:auto}.signin hr{border:0;border-top:1px solid var(--color-seperator);display:block;margin:2rem auto 1rem;overflow:visible}.signin hr:before{background:var(--color-background-card);color:#888;content:\"or\";padding:0 .4rem;position:relative;top:-.7rem}.signin .error{background:#f5f5f5;background:var(--color-error);border-radius:.3rem;font-weight:500}.signin .error p{color:var(--color-info-text);font-size:.9rem;line-height:1.2rem;padding:.5rem 1rem;text-align:left}.signin form,.signin>div{display:block}.signin form input[type],.signin>div input[type]{margin-bottom:.5rem}.signin form button,.signin>div button{width:100%}.signin form,.signin>div{max-width:300px}.logo{display:inline-block;margin-bottom:25px;margin-top:20px;max-height:70px;max-width:150px}@media screen and (min-width:450px){.card{width:350px}}@media screen and (max-width:450px){.card{width:200px}}.card{background-color:var(--color-background-card);border-radius:30px;margin:20px 0;padding:20px 50px}.card .header{color:var(--color-primary)}.section-header{color:var(--color-text)}';\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL2Nzcy9pbmRleC5qcyIsIm1hcHBpbmdzIjoiO0FBQUFBLE9BQU9DLFVBQVU7SUFBYSxPQUFPO0FBQTIxSSIsInNvdXJjZXMiOlsid2VicGFjazovL2Z1bGxzdGFjay1yb2xlLWJhc2VkLW5leHRqcy0yLy4vbm9kZV9tb2R1bGVzL25leHQtYXV0aC9jc3MvaW5kZXguanM/YzYxYSJdLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKCkgeyByZXR1cm4gXCI6cm9vdHstLWJvcmRlci13aWR0aDoxcHg7LS1ib3JkZXItcmFkaXVzOjAuNXJlbTstLWNvbG9yLWVycm9yOiNjOTRiNGI7LS1jb2xvci1pbmZvOiMxNTdlZmI7LS1jb2xvci1pbmZvLXRleHQ6I2ZmZn0uX19uZXh0LWF1dGgtdGhlbWUtYXV0bywuX19uZXh0LWF1dGgtdGhlbWUtbGlnaHR7LS1jb2xvci1iYWNrZ3JvdW5kOiNlY2VjZWM7LS1jb2xvci1iYWNrZ3JvdW5kLWNhcmQ6I2ZmZjstLWNvbG9yLXRleHQ6IzAwMDstLWNvbG9yLXByaW1hcnk6IzQ0NDstLWNvbG9yLWNvbnRyb2wtYm9yZGVyOiNiYmI7LS1jb2xvci1idXR0b24tYWN0aXZlLWJhY2tncm91bmQ6I2Y5ZjlmOTstLWNvbG9yLWJ1dHRvbi1hY3RpdmUtYm9yZGVyOiNhYWE7LS1jb2xvci1zZXBlcmF0b3I6I2NjY30uX19uZXh0LWF1dGgtdGhlbWUtZGFya3stLWNvbG9yLWJhY2tncm91bmQ6IzE2MWIyMjstLWNvbG9yLWJhY2tncm91bmQtY2FyZDojMGQxMTE3Oy0tY29sb3ItdGV4dDojZmZmOy0tY29sb3ItcHJpbWFyeTojY2NjOy0tY29sb3ItY29udHJvbC1ib3JkZXI6IzU1NTstLWNvbG9yLWJ1dHRvbi1hY3RpdmUtYmFja2dyb3VuZDojMDYwNjA2Oy0tY29sb3ItYnV0dG9uLWFjdGl2ZS1ib3JkZXI6IzY2NjstLWNvbG9yLXNlcGVyYXRvcjojNDQ0fUBtZWRpYSAocHJlZmVycy1jb2xvci1zY2hlbWU6ZGFyayl7Ll9fbmV4dC1hdXRoLXRoZW1lLWF1dG97LS1jb2xvci1iYWNrZ3JvdW5kOiMxNjFiMjI7LS1jb2xvci1iYWNrZ3JvdW5kLWNhcmQ6IzBkMTExNzstLWNvbG9yLXRleHQ6I2ZmZjstLWNvbG9yLXByaW1hcnk6I2NjYzstLWNvbG9yLWNvbnRyb2wtYm9yZGVyOiM1NTU7LS1jb2xvci1idXR0b24tYWN0aXZlLWJhY2tncm91bmQ6IzA2MDYwNjstLWNvbG9yLWJ1dHRvbi1hY3RpdmUtYm9yZGVyOiM2NjY7LS1jb2xvci1zZXBlcmF0b3I6IzQ0NH19Ym9keXtiYWNrZ3JvdW5kLWNvbG9yOnZhcigtLWNvbG9yLWJhY2tncm91bmQpO2ZvbnQtZmFtaWx5OnVpLXNhbnMtc2VyaWYsc3lzdGVtLXVpLC1hcHBsZS1zeXN0ZW0sQmxpbmtNYWNTeXN0ZW1Gb250LFNlZ29lIFVJLFJvYm90byxIZWx2ZXRpY2EgTmV1ZSxBcmlhbCxOb3RvIFNhbnMsc2Fucy1zZXJpZixBcHBsZSBDb2xvciBFbW9qaSxTZWdvZSBVSSBFbW9qaSxTZWdvZSBVSSBTeW1ib2wsTm90byBDb2xvciBFbW9qaTttYXJnaW46MDtwYWRkaW5nOjB9aDF7Zm9udC13ZWlnaHQ6NDAwO21hcmdpbi1ib3R0b206MS41cmVtO3BhZGRpbmc6MCAxcmVtfWgxLHB7Y29sb3I6dmFyKC0tY29sb3ItdGV4dCl9Zm9ybXttYXJnaW46MDtwYWRkaW5nOjB9bGFiZWx7Zm9udC13ZWlnaHQ6NTAwO21hcmdpbi1ib3R0b206LjI1cmVtO3RleHQtYWxpZ246bGVmdH1pbnB1dFt0eXBlXSxsYWJlbHtjb2xvcjp2YXIoLS1jb2xvci10ZXh0KTtkaXNwbGF5OmJsb2NrfWlucHV0W3R5cGVde2JhY2tncm91bmQ6dmFyKC0tY29sb3ItYmFja2dyb3VuZC1jYXJkKTtib3JkZXI6dmFyKC0tYm9yZGVyLXdpZHRoKSBzb2xpZCB2YXIoLS1jb2xvci1jb250cm9sLWJvcmRlcik7Ym9yZGVyLXJhZGl1czp2YXIoLS1ib3JkZXItcmFkaXVzKTtib3gtc2l6aW5nOmJvcmRlci1ib3g7Zm9udC1zaXplOjFyZW07cGFkZGluZzouNXJlbSAxcmVtO3dpZHRoOjEwMCV9aW5wdXRbdHlwZV06Zm9jdXN7Ym94LXNoYWRvdzpub25lfXB7Zm9udC1zaXplOjEuMXJlbTtsaW5lLWhlaWdodDoycmVtO21hcmdpbjowIDAgMS41cmVtO3BhZGRpbmc6MCAxcmVtfWEuYnV0dG9ue2xpbmUtaGVpZ2h0OjFyZW07dGV4dC1kZWNvcmF0aW9uOm5vbmV9YS5idXR0b246bGluayxhLmJ1dHRvbjp2aXNpdGVke2JhY2tncm91bmQtY29sb3I6dmFyKC0tY29sb3ItYmFja2dyb3VuZCk7Y29sb3I6dmFyKC0tY29sb3ItcHJpbWFyeSl9YnV0dG9uIHNwYW57ZmxleC1ncm93OjF9YS5idXR0b24sYnV0dG9ue2FsaWduLWl0ZW1zOmNlbnRlcjtiYWNrZ3JvdW5kLWNvbG9yOnZhcigtLXByb3ZpZGVyLWJnLHZhcigtLWNvbG9yLWJhY2tncm91bmQtY2FyZCkpO2JvcmRlci1jb2xvcjpyZ2JhKDAsMCwwLC4xKTtib3JkZXItcmFkaXVzOnZhcigtLWJvcmRlci1yYWRpdXMpO2NvbG9yOnZhcigtLXByb3ZpZGVyLWNvbG9yLHZhcigtLWNvbG9yLXByaW1hcnkpKTtkaXNwbGF5OmZsZXg7Zm9udC1zaXplOjEuMXJlbTtmb250LXdlaWdodDo1MDA7anVzdGlmeS1jb250ZW50OmNlbnRlcjttYXJnaW46MCAwIC43NXJlbTttaW4taGVpZ2h0OjYycHg7cGFkZGluZzouNzVyZW0gMXJlbTtwb3NpdGlvbjpyZWxhdGl2ZTt0cmFuc2l0aW9uOmFsbCAuMXMgZWFzZS1pbi1vdXR9QG1lZGlhIChtYXgtd2lkdGg6NDUwcHgpe2EuYnV0dG9uLGJ1dHRvbntmb250LXNpemU6LjlyZW19fWEuYnV0dG9uOmFjdGl2ZSxhLmJ1dHRvbjpob3ZlcixidXR0b246YWN0aXZlLGJ1dHRvbjpob3ZlcntjdXJzb3I6cG9pbnRlcn1hLmJ1dHRvbiAjcHJvdmlkZXItbG9nbyxidXR0b24gI3Byb3ZpZGVyLWxvZ297ZGlzcGxheTpibG9jazt3aWR0aDoyNXB4fWEuYnV0dG9uICNwcm92aWRlci1sb2dvLWRhcmssYnV0dG9uICNwcm92aWRlci1sb2dvLWRhcmt7ZGlzcGxheTpub25lfSNzdWJtaXRCdXR0b257YmFja2dyb3VuZC1jb2xvcjp2YXIoLS1icmFuZC1jb2xvcix2YXIoLS1jb2xvci1pbmZvKSk7Y29sb3I6dmFyKC0tYnV0dG9uLXRleHQtY29sb3IsdmFyKC0tY29sb3ItaW5mby10ZXh0KSk7d2lkdGg6MTAwJX1AbWVkaWEgKHByZWZlcnMtY29sb3Itc2NoZW1lOmRhcmspe2EuYnV0dG9uLGJ1dHRvbntiYWNrZ3JvdW5kLWNvbG9yOnZhcigtLXByb3ZpZGVyLWRhcmstYmcsdmFyKC0tY29sb3ItYmFja2dyb3VuZCkpO2NvbG9yOnZhcigtLXByb3ZpZGVyLWRhcmstY29sb3IsdmFyKC0tY29sb3ItcHJpbWFyeSkpfSNwcm92aWRlci1sb2dve2Rpc3BsYXk6bm9uZSFpbXBvcnRhbnR9I3Byb3ZpZGVyLWxvZ28tZGFya3tkaXNwbGF5OmJsb2NrIWltcG9ydGFudDt3aWR0aDoyNXB4fX1hLnNpdGV7Y29sb3I6dmFyKC0tY29sb3ItcHJpbWFyeSk7Zm9udC1zaXplOjFyZW07bGluZS1oZWlnaHQ6MnJlbTt0ZXh0LWRlY29yYXRpb246bm9uZX1hLnNpdGU6aG92ZXJ7dGV4dC1kZWNvcmF0aW9uOnVuZGVybGluZX0ucGFnZXtkaXNwbGF5OmdyaWQ7aGVpZ2h0OjEwMCU7bWFyZ2luOjA7cGFkZGluZzowO3BsYWNlLWl0ZW1zOmNlbnRlcjtwb3NpdGlvbjphYnNvbHV0ZTt3aWR0aDoxMDAlfS5wYWdlPmRpdnt0ZXh0LWFsaWduOmNlbnRlcn0uZXJyb3IgYS5idXR0b257ZGlzcGxheTppbmxpbmUtYmxvY2s7bWFyZ2luLXRvcDouNXJlbTtwYWRkaW5nLWxlZnQ6MnJlbTtwYWRkaW5nLXJpZ2h0OjJyZW19LmVycm9yIC5tZXNzYWdle21hcmdpbi1ib3R0b206MS41cmVtfS5zaWduaW4gaW5wdXRbdHlwZT10ZXh0XXtkaXNwbGF5OmJsb2NrO21hcmdpbi1sZWZ0OmF1dG87bWFyZ2luLXJpZ2h0OmF1dG99LnNpZ25pbiBocntib3JkZXI6MDtib3JkZXItdG9wOjFweCBzb2xpZCB2YXIoLS1jb2xvci1zZXBlcmF0b3IpO2Rpc3BsYXk6YmxvY2s7bWFyZ2luOjJyZW0gYXV0byAxcmVtO292ZXJmbG93OnZpc2libGV9LnNpZ25pbiBocjpiZWZvcmV7YmFja2dyb3VuZDp2YXIoLS1jb2xvci1iYWNrZ3JvdW5kLWNhcmQpO2NvbG9yOiM4ODg7Y29udGVudDpcXFwib3JcXFwiO3BhZGRpbmc6MCAuNHJlbTtwb3NpdGlvbjpyZWxhdGl2ZTt0b3A6LS43cmVtfS5zaWduaW4gLmVycm9ye2JhY2tncm91bmQ6I2Y1ZjVmNTtiYWNrZ3JvdW5kOnZhcigtLWNvbG9yLWVycm9yKTtib3JkZXItcmFkaXVzOi4zcmVtO2ZvbnQtd2VpZ2h0OjUwMH0uc2lnbmluIC5lcnJvciBwe2NvbG9yOnZhcigtLWNvbG9yLWluZm8tdGV4dCk7Zm9udC1zaXplOi45cmVtO2xpbmUtaGVpZ2h0OjEuMnJlbTtwYWRkaW5nOi41cmVtIDFyZW07dGV4dC1hbGlnbjpsZWZ0fS5zaWduaW4gZm9ybSwuc2lnbmluPmRpdntkaXNwbGF5OmJsb2NrfS5zaWduaW4gZm9ybSBpbnB1dFt0eXBlXSwuc2lnbmluPmRpdiBpbnB1dFt0eXBlXXttYXJnaW4tYm90dG9tOi41cmVtfS5zaWduaW4gZm9ybSBidXR0b24sLnNpZ25pbj5kaXYgYnV0dG9ue3dpZHRoOjEwMCV9LnNpZ25pbiBmb3JtLC5zaWduaW4+ZGl2e21heC13aWR0aDozMDBweH0ubG9nb3tkaXNwbGF5OmlubGluZS1ibG9jazttYXJnaW4tYm90dG9tOjI1cHg7bWFyZ2luLXRvcDoyMHB4O21heC1oZWlnaHQ6NzBweDttYXgtd2lkdGg6MTUwcHh9QG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDo0NTBweCl7LmNhcmR7d2lkdGg6MzUwcHh9fUBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6NDUwcHgpey5jYXJke3dpZHRoOjIwMHB4fX0uY2FyZHtiYWNrZ3JvdW5kLWNvbG9yOnZhcigtLWNvbG9yLWJhY2tncm91bmQtY2FyZCk7Ym9yZGVyLXJhZGl1czozMHB4O21hcmdpbjoyMHB4IDA7cGFkZGluZzoyMHB4IDUwcHh9LmNhcmQgLmhlYWRlcntjb2xvcjp2YXIoLS1jb2xvci1wcmltYXJ5KX0uc2VjdGlvbi1oZWFkZXJ7Y29sb3I6dmFyKC0tY29sb3ItdGV4dCl9XCIgfSJdLCJuYW1lcyI6WyJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/next-auth/css/index.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/next-auth/index.js":
/*!*****************************************!*\
  !*** ./node_modules/next-auth/index.js ***!
  \*****************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nvar _exportNames = {};\nObject.defineProperty(exports, \"default\", ({\n    enumerable: true,\n    get: function() {\n        return _next.default;\n    }\n}));\nvar _types = __webpack_require__(/*! ./core/types */ \"(sc_server)/./node_modules/next-auth/core/types.js\");\nObject.keys(_types).forEach(function(key) {\n    if (key === \"default\" || key === \"__esModule\") return;\n    if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;\n    if (key in exports && exports[key] === _types[key]) return;\n    Object.defineProperty(exports, key, {\n        enumerable: true,\n        get: function() {\n            return _types[key];\n        }\n    });\n});\nvar _next = _interopRequireWildcard(__webpack_require__(/*! ./next */ \"(sc_server)/./node_modules/next-auth/next/index.js\"));\nObject.keys(_next).forEach(function(key) {\n    if (key === \"default\" || key === \"__esModule\") return;\n    if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;\n    if (key in exports && exports[key] === _next[key]) return;\n    Object.defineProperty(exports, key, {\n        enumerable: true,\n        get: function() {\n            return _next[key];\n        }\n    });\n});\nfunction _getRequireWildcardCache(nodeInterop) {\n    if (typeof WeakMap !== \"function\") return null;\n    var cacheBabelInterop = new WeakMap();\n    var cacheNodeInterop = new WeakMap();\n    return (_getRequireWildcardCache = function(nodeInterop) {\n        return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n    })(nodeInterop);\n}\nfunction _interopRequireWildcard(obj, nodeInterop) {\n    if (!nodeInterop && obj && obj.__esModule) {\n        return obj;\n    }\n    if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n        return {\n            default: obj\n        };\n    }\n    var cache = _getRequireWildcardCache(nodeInterop);\n    if (cache && cache.has(obj)) {\n        return cache.get(obj);\n    }\n    var newObj = {};\n    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n    for(var key in obj){\n        if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n            if (desc && (desc.get || desc.set)) {\n                Object.defineProperty(newObj, key, desc);\n            } else {\n                newObj[key] = obj[key];\n            }\n        }\n    }\n    newObj.default = obj;\n    if (cache) {\n        cache.set(obj, newObj);\n    }\n    return newObj;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBRWJBLDhDQUE2QztJQUMzQ0csT0FBTztBQUNULENBQUMsRUFBQztBQUNGLElBQUlDLGVBQWUsQ0FBQztBQUNwQkosMkNBQTBDO0lBQ3hDSyxZQUFZO0lBQ1pDLEtBQUs7UUFDSCxPQUFPQyxNQUFNQztJQUNmO0FBQ0YsQ0FBQyxFQUFDO0FBRUYsSUFBSUMsU0FBU0MsbUJBQU9BLENBQUMsd0VBQWM7QUFFbkNWLE9BQU9XLEtBQUtGLFFBQVFHLFFBQVEsU0FBVUMsR0FBRztJQUN2QyxJQUFJQSxRQUFRLGFBQWFBLFFBQVEsY0FBYztJQUMvQyxJQUFJYixPQUFPYyxVQUFVQyxlQUFlQyxLQUFLWixjQUFjUyxNQUFNO0lBQzdELElBQUlBLE9BQU9YLFdBQVdBLE9BQU8sQ0FBQ1csSUFBSSxLQUFLSixNQUFNLENBQUNJLElBQUksRUFBRTtJQUNwRGIsT0FBT0MsZUFBZUMsU0FBU1csS0FBSztRQUNsQ1IsWUFBWTtRQUNaQyxLQUFLO1lBQ0gsT0FBT0csTUFBTSxDQUFDSSxJQUFJO1FBQ3BCO0lBQ0Y7QUFDRjtBQUVBLElBQUlOLFFBQVFVLHdCQUF3QlAsbUJBQU9BLENBQUMsa0VBQVE7QUFFcERWLE9BQU9XLEtBQUtKLE9BQU9LLFFBQVEsU0FBVUMsR0FBRztJQUN0QyxJQUFJQSxRQUFRLGFBQWFBLFFBQVEsY0FBYztJQUMvQyxJQUFJYixPQUFPYyxVQUFVQyxlQUFlQyxLQUFLWixjQUFjUyxNQUFNO0lBQzdELElBQUlBLE9BQU9YLFdBQVdBLE9BQU8sQ0FBQ1csSUFBSSxLQUFLTixLQUFLLENBQUNNLElBQUksRUFBRTtJQUNuRGIsT0FBT0MsZUFBZUMsU0FBU1csS0FBSztRQUNsQ1IsWUFBWTtRQUNaQyxLQUFLO1lBQ0gsT0FBT0MsS0FBSyxDQUFDTSxJQUFJO1FBQ25CO0lBQ0Y7QUFDRjtBQUVBLFNBQVNLLHlCQUF5QkMsV0FBVztJQUFJLElBQUksT0FBT0MsWUFBWSxZQUFZLE9BQU87SUFBTSxJQUFJQyxvQkFBb0IsSUFBSUQ7SUFBVyxJQUFJRSxtQkFBbUIsSUFBSUY7SUFBVyxPQUFPLENBQUNGLDJCQUEyQixTQUFVQyxXQUFXO1FBQUksT0FBT0EsY0FBY0csbUJBQW1CRDtJQUFtQixHQUFHRjtBQUFjO0FBRXRULFNBQVNGLHdCQUF3Qk0sR0FBRyxFQUFFSixXQUFXO0lBQUksSUFBSSxDQUFDQSxlQUFlSSxPQUFPQSxJQUFJQyxZQUFZO1FBQUUsT0FBT0Q7SUFBSztJQUFFLElBQUlBLFFBQVEsUUFBUSxPQUFPQSxRQUFRLFlBQVksT0FBT0EsUUFBUSxZQUFZO1FBQUUsT0FBTztZQUFFZixTQUFTZTtRQUFJO0lBQUc7SUFBRSxJQUFJRSxRQUFRUCx5QkFBeUJDO0lBQWMsSUFBSU0sU0FBU0EsTUFBTUMsSUFBSUgsTUFBTTtRQUFFLE9BQU9FLE1BQU1uQixJQUFJaUI7SUFBTTtJQUFFLElBQUlJLFNBQVMsQ0FBQztJQUFHLElBQUlDLHdCQUF3QjVCLE9BQU9DLGtCQUFrQkQsT0FBTzZCO0lBQTBCLElBQUssSUFBSWhCLE9BQU9VLElBQUs7UUFBRSxJQUFJVixRQUFRLGFBQWFiLE9BQU9jLFVBQVVDLGVBQWVDLEtBQUtPLEtBQUtWLE1BQU07WUFBRSxJQUFJaUIsT0FBT0Ysd0JBQXdCNUIsT0FBTzZCLHlCQUF5Qk4sS0FBS1YsT0FBTztZQUFNLElBQUlpQixRQUFTQSxDQUFBQSxLQUFLeEIsT0FBT3dCLEtBQUtDLEdBQUUsR0FBSTtnQkFBRS9CLE9BQU9DLGVBQWUwQixRQUFRZCxLQUFLaUI7WUFBTyxPQUFPO2dCQUFFSCxNQUFNLENBQUNkLElBQUksR0FBR1UsR0FBRyxDQUFDVixJQUFJO1lBQUU7UUFBRTtJQUFFO0lBQUVjLE9BQU9uQixVQUFVZTtJQUFLLElBQUlFLE9BQU87UUFBRUEsTUFBTU0sSUFBSVIsS0FBS0k7SUFBUztJQUFFLE9BQU9BO0FBQVEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mdWxsc3RhY2stcm9sZS1iYXNlZC1uZXh0anMtMi8uL25vZGVfbW9kdWxlcy9uZXh0LWF1dGgvaW5kZXguanM/OTYwOCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbnZhciBfZXhwb3J0TmFtZXMgPSB7fTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcImRlZmF1bHRcIiwge1xuICBlbnVtZXJhYmxlOiB0cnVlLFxuICBnZXQ6IGZ1bmN0aW9uICgpIHtcbiAgICByZXR1cm4gX25leHQuZGVmYXVsdDtcbiAgfVxufSk7XG5cbnZhciBfdHlwZXMgPSByZXF1aXJlKFwiLi9jb3JlL3R5cGVzXCIpO1xuXG5PYmplY3Qua2V5cyhfdHlwZXMpLmZvckVhY2goZnVuY3Rpb24gKGtleSkge1xuICBpZiAoa2V5ID09PSBcImRlZmF1bHRcIiB8fCBrZXkgPT09IFwiX19lc01vZHVsZVwiKSByZXR1cm47XG4gIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoX2V4cG9ydE5hbWVzLCBrZXkpKSByZXR1cm47XG4gIGlmIChrZXkgaW4gZXhwb3J0cyAmJiBleHBvcnRzW2tleV0gPT09IF90eXBlc1trZXldKSByZXR1cm47XG4gIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBrZXksIHtcbiAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgIGdldDogZnVuY3Rpb24gKCkge1xuICAgICAgcmV0dXJuIF90eXBlc1trZXldO1xuICAgIH1cbiAgfSk7XG59KTtcblxudmFyIF9uZXh0ID0gX2ludGVyb3BSZXF1aXJlV2lsZGNhcmQocmVxdWlyZShcIi4vbmV4dFwiKSk7XG5cbk9iamVjdC5rZXlzKF9uZXh0KS5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHtcbiAgaWYgKGtleSA9PT0gXCJkZWZhdWx0XCIgfHwga2V5ID09PSBcIl9fZXNNb2R1bGVcIikgcmV0dXJuO1xuICBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKF9leHBvcnROYW1lcywga2V5KSkgcmV0dXJuO1xuICBpZiAoa2V5IGluIGV4cG9ydHMgJiYgZXhwb3J0c1trZXldID09PSBfbmV4dFtrZXldKSByZXR1cm47XG4gIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBrZXksIHtcbiAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgIGdldDogZnVuY3Rpb24gKCkge1xuICAgICAgcmV0dXJuIF9uZXh0W2tleV07XG4gICAgfVxuICB9KTtcbn0pO1xuXG5mdW5jdGlvbiBfZ2V0UmVxdWlyZVdpbGRjYXJkQ2FjaGUobm9kZUludGVyb3ApIHsgaWYgKHR5cGVvZiBXZWFrTWFwICE9PSBcImZ1bmN0aW9uXCIpIHJldHVybiBudWxsOyB2YXIgY2FjaGVCYWJlbEludGVyb3AgPSBuZXcgV2Vha01hcCgpOyB2YXIgY2FjaGVOb2RlSW50ZXJvcCA9IG5ldyBXZWFrTWFwKCk7IHJldHVybiAoX2dldFJlcXVpcmVXaWxkY2FyZENhY2hlID0gZnVuY3Rpb24gKG5vZGVJbnRlcm9wKSB7IHJldHVybiBub2RlSW50ZXJvcCA/IGNhY2hlTm9kZUludGVyb3AgOiBjYWNoZUJhYmVsSW50ZXJvcDsgfSkobm9kZUludGVyb3ApOyB9XG5cbmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZVdpbGRjYXJkKG9iaiwgbm9kZUludGVyb3ApIHsgaWYgKCFub2RlSW50ZXJvcCAmJiBvYmogJiYgb2JqLl9fZXNNb2R1bGUpIHsgcmV0dXJuIG9iajsgfSBpZiAob2JqID09PSBudWxsIHx8IHR5cGVvZiBvYmogIT09IFwib2JqZWN0XCIgJiYgdHlwZW9mIG9iaiAhPT0gXCJmdW5jdGlvblwiKSB7IHJldHVybiB7IGRlZmF1bHQ6IG9iaiB9OyB9IHZhciBjYWNoZSA9IF9nZXRSZXF1aXJlV2lsZGNhcmRDYWNoZShub2RlSW50ZXJvcCk7IGlmIChjYWNoZSAmJiBjYWNoZS5oYXMob2JqKSkgeyByZXR1cm4gY2FjaGUuZ2V0KG9iaik7IH0gdmFyIG5ld09iaiA9IHt9OyB2YXIgaGFzUHJvcGVydHlEZXNjcmlwdG9yID0gT2JqZWN0LmRlZmluZVByb3BlcnR5ICYmIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3I7IGZvciAodmFyIGtleSBpbiBvYmopIHsgaWYgKGtleSAhPT0gXCJkZWZhdWx0XCIgJiYgT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iaiwga2V5KSkgeyB2YXIgZGVzYyA9IGhhc1Byb3BlcnR5RGVzY3JpcHRvciA/IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Iob2JqLCBrZXkpIDogbnVsbDsgaWYgKGRlc2MgJiYgKGRlc2MuZ2V0IHx8IGRlc2Muc2V0KSkgeyBPYmplY3QuZGVmaW5lUHJvcGVydHkobmV3T2JqLCBrZXksIGRlc2MpOyB9IGVsc2UgeyBuZXdPYmpba2V5XSA9IG9ialtrZXldOyB9IH0gfSBuZXdPYmouZGVmYXVsdCA9IG9iajsgaWYgKGNhY2hlKSB7IGNhY2hlLnNldChvYmosIG5ld09iaik7IH0gcmV0dXJuIG5ld09iajsgfSJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsIl9leHBvcnROYW1lcyIsImVudW1lcmFibGUiLCJnZXQiLCJfbmV4dCIsImRlZmF1bHQiLCJfdHlwZXMiLCJyZXF1aXJlIiwia2V5cyIsImZvckVhY2giLCJrZXkiLCJwcm90b3R5cGUiLCJoYXNPd25Qcm9wZXJ0eSIsImNhbGwiLCJfaW50ZXJvcFJlcXVpcmVXaWxkY2FyZCIsIl9nZXRSZXF1aXJlV2lsZGNhcmRDYWNoZSIsIm5vZGVJbnRlcm9wIiwiV2Vha01hcCIsImNhY2hlQmFiZWxJbnRlcm9wIiwiY2FjaGVOb2RlSW50ZXJvcCIsIm9iaiIsIl9fZXNNb2R1bGUiLCJjYWNoZSIsImhhcyIsIm5ld09iaiIsImhhc1Byb3BlcnR5RGVzY3JpcHRvciIsImdldE93blByb3BlcnR5RGVzY3JpcHRvciIsImRlc2MiLCJzZXQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/next-auth/index.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/next-auth/jwt/index.js":
/*!*********************************************!*\
  !*** ./node_modules/next-auth/jwt/index.js ***!
  \*********************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nvar _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ \"(sc_server)/./node_modules/@babel/runtime/helpers/interopRequireDefault.js\");\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nvar _exportNames = {\n    encode: true,\n    decode: true,\n    getToken: true\n};\nexports.decode = decode;\nexports.encode = encode;\nexports.getToken = getToken;\nvar _jose = __webpack_require__(/*! jose */ \"(sc_server)/./node_modules/jose/dist/node/cjs/index.js\");\nvar _hkdf = _interopRequireDefault(__webpack_require__(/*! @panva/hkdf */ \"(sc_server)/./node_modules/@panva/hkdf/dist/node/cjs/index.js\"));\nvar _uuid = __webpack_require__(/*! uuid */ \"(sc_server)/./node_modules/uuid/dist/esm-node/index.js\");\nvar _cookie = __webpack_require__(/*! ../core/lib/cookie */ \"(sc_server)/./node_modules/next-auth/core/lib/cookie.js\");\nvar _types = __webpack_require__(/*! ./types */ \"(sc_server)/./node_modules/next-auth/jwt/types.js\");\nObject.keys(_types).forEach(function(key) {\n    if (key === \"default\" || key === \"__esModule\") return;\n    if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;\n    if (key in exports && exports[key] === _types[key]) return;\n    Object.defineProperty(exports, key, {\n        enumerable: true,\n        get: function() {\n            return _types[key];\n        }\n    });\n});\nconst DEFAULT_MAX_AGE = 30 * 24 * 60 * 60;\nconst now = ()=>Date.now() / 1000 | 0;\nasync function encode(params) {\n    const { token ={} , secret , maxAge =DEFAULT_MAX_AGE  } = params;\n    const encryptionSecret = await getDerivedEncryptionKey(secret);\n    return await new _jose.EncryptJWT(token).setProtectedHeader({\n        alg: \"dir\",\n        enc: \"A256GCM\"\n    }).setIssuedAt().setExpirationTime(now() + maxAge).setJti((0, _uuid.v4)()).encrypt(encryptionSecret);\n}\nasync function decode(params) {\n    const { token , secret  } = params;\n    if (!token) return null;\n    const encryptionSecret = await getDerivedEncryptionKey(secret);\n    const { payload  } = await (0, _jose.jwtDecrypt)(token, encryptionSecret, {\n        clockTolerance: 15\n    });\n    return payload;\n}\nasync function getToken(params) {\n    var _process$env$NEXTAUTH, _process$env$NEXTAUTH2, _req$headers;\n    const { req , secureCookie =(_process$env$NEXTAUTH = (_process$env$NEXTAUTH2 = \"http://localhost:3000\") === null || _process$env$NEXTAUTH2 === void 0 ? void 0 : _process$env$NEXTAUTH2.startsWith(\"https://\")) !== null && _process$env$NEXTAUTH !== void 0 ? _process$env$NEXTAUTH : !!process.env.VERCEL , cookieName =secureCookie ? \"__Secure-next-auth.session-token\" : \"next-auth.session-token\" , raw , decode: _decode = decode , logger =console , secret =\"Coding with shakil\"  } = params;\n    if (!req) throw new Error(\"Must pass `req` to JWT getToken()\");\n    const sessionStore = new _cookie.SessionStore({\n        name: cookieName,\n        options: {\n            secure: secureCookie\n        }\n    }, {\n        cookies: req.cookies,\n        headers: req.headers\n    }, logger);\n    let token = sessionStore.value;\n    const authorizationHeader = req.headers instanceof Headers ? req.headers.get(\"authorization\") : (_req$headers = req.headers) === null || _req$headers === void 0 ? void 0 : _req$headers.authorization;\n    if (!token && (authorizationHeader === null || authorizationHeader === void 0 ? void 0 : authorizationHeader.split(\" \")[0]) === \"Bearer\") {\n        const urlEncodedToken = authorizationHeader.split(\" \")[1];\n        token = decodeURIComponent(urlEncodedToken);\n    }\n    if (!token) return null;\n    if (raw) return token;\n    try {\n        return await _decode({\n            token,\n            secret\n        });\n    } catch (_unused) {\n        return null;\n    }\n}\nasync function getDerivedEncryptionKey(secret) {\n    return await (0, _hkdf.default)(\"sha256\", secret, \"\", \"NextAuth.js Generated Encryption Key\", 32);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/next-auth/jwt/index.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/next-auth/jwt/types.js":
/*!*********************************************!*\
  !*** ./node_modules/next-auth/jwt/types.js ***!
  \*********************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL2p3dC90eXBlcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUViQSw4Q0FBNkM7SUFDM0NHLE9BQU87QUFDVCxDQUFDLEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mdWxsc3RhY2stcm9sZS1iYXNlZC1uZXh0anMtMi8uL25vZGVfbW9kdWxlcy9uZXh0LWF1dGgvand0L3R5cGVzLmpzP2Q0YzMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7Il0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/next-auth/jwt/types.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/next-auth/next/index.js":
/*!**********************************************!*\
  !*** ./node_modules/next-auth/next/index.js ***!
  \**********************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports[\"default\"] = void 0;\nexports.getServerSession = getServerSession;\nexports.unstable_getServerSession = unstable_getServerSession;\nvar _core = __webpack_require__(/*! ../core */ \"(sc_server)/./node_modules/next-auth/core/index.js\");\nvar _utils = __webpack_require__(/*! ./utils */ \"(sc_server)/./node_modules/next-auth/next/utils.js\");\nasync function NextAuthApiHandler(req, res, options) {\n    var _options$secret, _options$jwt$secret, _options$jwt, _ref, _handler$status, _handler$cookies, _handler$headers;\n    const { nextauth , ...query } = req.query;\n    (_options$secret = options.secret) !== null && _options$secret !== void 0 ? _options$secret : options.secret = (_options$jwt$secret = (_options$jwt = options.jwt) === null || _options$jwt === void 0 ? void 0 : _options$jwt.secret) !== null && _options$jwt$secret !== void 0 ? _options$jwt$secret : \"Coding with shakil\";\n    const handler = await (0, _core.AuthHandler)({\n        req: {\n            body: req.body,\n            query,\n            cookies: req.cookies,\n            headers: req.headers,\n            method: req.method,\n            action: nextauth === null || nextauth === void 0 ? void 0 : nextauth[0],\n            providerId: nextauth === null || nextauth === void 0 ? void 0 : nextauth[1],\n            error: (_ref = req.query.error) !== null && _ref !== void 0 ? _ref : nextauth === null || nextauth === void 0 ? void 0 : nextauth[1]\n        },\n        options\n    });\n    res.status((_handler$status = handler.status) !== null && _handler$status !== void 0 ? _handler$status : 200);\n    (_handler$cookies = handler.cookies) === null || _handler$cookies === void 0 ? void 0 : _handler$cookies.forEach((cookie)=>(0, _utils.setCookie)(res, cookie));\n    (_handler$headers = handler.headers) === null || _handler$headers === void 0 ? void 0 : _handler$headers.forEach((h)=>res.setHeader(h.key, h.value));\n    if (handler.redirect) {\n        var _req$body;\n        if (((_req$body = req.body) === null || _req$body === void 0 ? void 0 : _req$body.json) !== \"true\") {\n            res.status(302).setHeader(\"Location\", handler.redirect);\n            return res.end();\n        }\n        return res.json({\n            url: handler.redirect\n        });\n    }\n    return res.send(handler.body);\n}\nasync function NextAuthRouteHandler(req, context, options) {\n    var _options$secret2, _context$params, _query$error;\n    (_options$secret2 = options.secret) !== null && _options$secret2 !== void 0 ? _options$secret2 : options.secret = \"Coding with shakil\";\n    const { headers , cookies  } = __webpack_require__(/*! next/headers */ \"(sc_server)/./node_modules/next/headers.js\");\n    const nextauth = (_context$params = context.params) === null || _context$params === void 0 ? void 0 : _context$params.nextauth;\n    const query = Object.fromEntries(req.nextUrl.searchParams);\n    const body = await (0, _utils.getBody)(req);\n    const internalResponse = await (0, _core.AuthHandler)({\n        req: {\n            body,\n            query,\n            cookies: Object.fromEntries(cookies().getAll().map((c)=>[\n                    c.name,\n                    c.value\n                ])),\n            headers: Object.fromEntries(headers()),\n            method: req.method,\n            action: nextauth === null || nextauth === void 0 ? void 0 : nextauth[0],\n            providerId: nextauth === null || nextauth === void 0 ? void 0 : nextauth[1],\n            error: (_query$error = query.error) !== null && _query$error !== void 0 ? _query$error : nextauth === null || nextauth === void 0 ? void 0 : nextauth[1]\n        },\n        options\n    });\n    const response = (0, _utils.toResponse)(internalResponse);\n    const redirect = response.headers.get(\"Location\");\n    if ((body === null || body === void 0 ? void 0 : body.json) === \"true\" && redirect) {\n        response.headers.delete(\"Location\");\n        response.headers.set(\"Content-Type\", \"application/json\");\n        return new Response(JSON.stringify({\n            url: redirect\n        }), {\n            headers: response.headers\n        });\n    }\n    return response;\n}\nfunction NextAuth(...args) {\n    var _args$;\n    if (args.length === 1) {\n        return async (req, res)=>{\n            if (res !== null && res !== void 0 && res.params) {\n                return await NextAuthRouteHandler(req, res, args[0]);\n            }\n            return await NextAuthApiHandler(req, res, args[0]);\n        };\n    }\n    if ((_args$ = args[1]) !== null && _args$ !== void 0 && _args$.params) {\n        return NextAuthRouteHandler(...args);\n    }\n    return NextAuthApiHandler(...args);\n}\nvar _default = NextAuth;\nexports[\"default\"] = _default;\nlet experimentalRSCWarningShown = false;\nasync function getServerSession(...args) {\n    var _options, _options$secret3;\n    const isRSC = args.length === 0 || args.length === 1;\n    if (!experimentalRSCWarningShown && isRSC && \"development\" !== \"production\") {\n        console.warn(\"[next-auth][warn][EXPERIMENTAL_API]\", \"\\n`getServerSession` is used in a React Server Component.\", `\\nhttps://next-auth.js.org/configuration/nextjs#getServerSession}`, `\\nhttps://next-auth.js.org/warnings#EXPERIMENTAL_API`);\n        experimentalRSCWarningShown = true;\n    }\n    let req, res, options;\n    if (isRSC) {\n        options = Object.assign({}, args[0], {\n            providers: []\n        });\n        const { headers , cookies  } = __webpack_require__(/*! next/headers */ \"(sc_server)/./node_modules/next/headers.js\");\n        req = {\n            headers: Object.fromEntries(headers()),\n            cookies: Object.fromEntries(cookies().getAll().map((c)=>[\n                    c.name,\n                    c.value\n                ]))\n        };\n        res = {\n            getHeader () {},\n            setCookie () {},\n            setHeader () {}\n        };\n    } else {\n        req = args[0];\n        res = args[1];\n        options = Object.assign({}, args[2], {\n            providers: []\n        });\n    }\n    (_options$secret3 = (_options = options).secret) !== null && _options$secret3 !== void 0 ? _options$secret3 : _options.secret = \"Coding with shakil\";\n    const session = await (0, _core.AuthHandler)({\n        options,\n        req: {\n            action: \"session\",\n            method: \"GET\",\n            cookies: req.cookies,\n            headers: req.headers\n        }\n    });\n    const { body , cookies , status =200  } = session;\n    cookies === null || cookies === void 0 ? void 0 : cookies.forEach((cookie)=>(0, _utils.setCookie)(res, cookie));\n    if (body && typeof body !== \"string\" && Object.keys(body).length) {\n        if (status === 200) {\n            if (isRSC) delete body.expires;\n            return body;\n        }\n        throw new Error(body.message);\n    }\n    return null;\n}\nlet deprecatedWarningShown = false;\nasync function unstable_getServerSession(...args) {\n    if (!deprecatedWarningShown && \"development\" !== \"production\") {\n        console.warn(\"`unstable_getServerSession` has been renamed to `getServerSession`.\");\n        deprecatedWarningShown = true;\n    }\n    return await getServerSession(...args);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/next-auth/next/index.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/next-auth/next/utils.js":
/*!**********************************************!*\
  !*** ./node_modules/next-auth/next/utils.js ***!
  \**********************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.getBody = getBody;\nexports.setCookie = setCookie;\nexports.toResponse = toResponse;\nvar _cookie = __webpack_require__(/*! cookie */ \"(sc_server)/./node_modules/cookie/index.js\");\nfunction setCookie(res, cookie) {\n    var _res$getHeader;\n    let setCookieHeader = (_res$getHeader = res.getHeader(\"Set-Cookie\")) !== null && _res$getHeader !== void 0 ? _res$getHeader : [];\n    if (!Array.isArray(setCookieHeader)) {\n        setCookieHeader = [\n            setCookieHeader\n        ];\n    }\n    const { name , value , options  } = cookie;\n    const cookieHeader = (0, _cookie.serialize)(name, value, options);\n    setCookieHeader.push(cookieHeader);\n    res.setHeader(\"Set-Cookie\", setCookieHeader);\n}\nasync function getBody(req) {\n    if (!(\"body\" in req) || !req.body || req.method !== \"POST\") return;\n    const contentType = req.headers.get(\"content-type\");\n    if (contentType !== null && contentType !== void 0 && contentType.includes(\"application/json\")) {\n        return await req.json();\n    } else if (contentType !== null && contentType !== void 0 && contentType.includes(\"application/x-www-form-urlencoded\")) {\n        const params = new URLSearchParams(await req.text());\n        return Object.fromEntries(params);\n    }\n}\nfunction toResponse(res) {\n    var _res$headers, _res$cookies, _res$status;\n    const headers = new Headers((_res$headers = res.headers) === null || _res$headers === void 0 ? void 0 : _res$headers.reduce((acc, { key , value  })=>{\n        acc[key] = value;\n        return acc;\n    }, {}));\n    (_res$cookies = res.cookies) === null || _res$cookies === void 0 ? void 0 : _res$cookies.forEach((cookie)=>{\n        const { name , value , options  } = cookie;\n        const cookieHeader = (0, _cookie.serialize)(name, value, options);\n        if (headers.has(\"Set-Cookie\")) headers.append(\"Set-Cookie\", cookieHeader);\n        else headers.set(\"Set-Cookie\", cookieHeader);\n    });\n    let body = res.body;\n    if (headers.get(\"content-type\") === \"application/json\") body = JSON.stringify(res.body);\n    else if (headers.get(\"content-type\") === \"application/x-www-form-urlencoded\") body = new URLSearchParams(res.body).toString();\n    const status = res.redirect ? 302 : (_res$status = res.status) !== null && _res$status !== void 0 ? _res$status : 200;\n    const response = new Response(body, {\n        headers,\n        status\n    });\n    if (res.redirect) response.headers.set(\"Location\", res.redirect);\n    return response;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL25leHQvdXRpbHMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFFYkEsOENBQTZDO0lBQzNDRyxPQUFPO0FBQ1QsQ0FBQyxFQUFDO0FBQ0ZELGVBQWVFLEdBQUdBO0FBQ2xCRixpQkFBaUJHLEdBQUdBO0FBQ3BCSCxrQkFBa0JJLEdBQUdBO0FBRXJCLElBQUlDLFVBQVVDLG1CQUFPQSxDQUFDLDBEQUFRO0FBRTlCLFNBQVNILFVBQVVJLEdBQUcsRUFBRUMsTUFBTTtJQUM1QixJQUFJQztJQUVKLElBQUlDLGtCQUFrQixDQUFDRCxpQkFBaUJGLElBQUlJLFVBQVUsYUFBWSxNQUFPLFFBQVFGLG1CQUFtQixLQUFLLElBQUlBLGlCQUFpQixFQUFFO0lBRWhJLElBQUksQ0FBQ0csTUFBTUMsUUFBUUgsa0JBQWtCO1FBQ25DQSxrQkFBa0I7WUFBQ0E7U0FBZ0I7SUFDckM7SUFFQSxNQUFNLEVBQ0pJLEtBQUksRUFDSmIsTUFBSyxFQUNMYyxRQUFPLEVBQ1IsR0FBR1A7SUFDSixNQUFNUSxlQUFlLENBQUMsR0FBR1gsUUFBUVksU0FBUSxFQUFHSCxNQUFNYixPQUFPYztJQUN6REwsZ0JBQWdCUSxLQUFLRjtJQUNyQlQsSUFBSVksVUFBVSxjQUFjVDtBQUM5QjtBQUVBLGVBQWVSLFFBQVFrQixHQUFHO0lBQ3hCLElBQUksQ0FBRSxXQUFVQSxHQUFFLEtBQU0sQ0FBQ0EsSUFBSUMsUUFBUUQsSUFBSUUsV0FBVyxRQUFRO0lBQzVELE1BQU1DLGNBQWNILElBQUlJLFFBQVFDLElBQUk7SUFFcEMsSUFBSUYsZ0JBQWdCLFFBQVFBLGdCQUFnQixLQUFLLEtBQUtBLFlBQVlHLFNBQVMscUJBQXFCO1FBQzlGLE9BQU8sTUFBTU4sSUFBSU87SUFDbkIsT0FBTyxJQUFJSixnQkFBZ0IsUUFBUUEsZ0JBQWdCLEtBQUssS0FBS0EsWUFBWUcsU0FBUyxzQ0FBc0M7UUFDdEgsTUFBTUUsU0FBUyxJQUFJQyxnQkFBZ0IsTUFBTVQsSUFBSVU7UUFDN0MsT0FBT2hDLE9BQU9pQyxZQUFZSDtJQUM1QjtBQUNGO0FBRUEsU0FBU3hCLFdBQVdHLEdBQUc7SUFDckIsSUFBSXlCLGNBQWNDLGNBQWNDO0lBRWhDLE1BQU1WLFVBQVUsSUFBSVcsUUFBUSxDQUFDSCxlQUFlekIsSUFBSWlCLE9BQU0sTUFBTyxRQUFRUSxpQkFBaUIsS0FBSyxJQUFJLEtBQUssSUFBSUEsYUFBYUksT0FBTyxDQUFDQyxLQUFLLEVBQ2hJQyxJQUFHLEVBQ0hyQyxNQUFLLEVBQ047UUFDQ29DLEdBQUcsQ0FBQ0MsSUFBSSxHQUFHckM7UUFDWCxPQUFPb0M7SUFDVCxHQUFHLENBQUM7SUFDSEosQ0FBQUEsZUFBZTFCLElBQUlnQyxPQUFNLE1BQU8sUUFBUU4saUJBQWlCLEtBQUssSUFBSSxLQUFLLElBQUlBLGFBQWFPLFFBQVFoQyxDQUFBQTtRQUMvRixNQUFNLEVBQ0pNLEtBQUksRUFDSmIsTUFBSyxFQUNMYyxRQUFPLEVBQ1IsR0FBR1A7UUFDSixNQUFNUSxlQUFlLENBQUMsR0FBR1gsUUFBUVksU0FBUSxFQUFHSCxNQUFNYixPQUFPYztRQUN6RCxJQUFJUyxRQUFRaUIsSUFBSSxlQUFlakIsUUFBUWtCLE9BQU8sY0FBYzFCO2FBQW1CUSxRQUFRbUIsSUFBSSxjQUFjM0I7SUFDM0c7SUFDQSxJQUFJSyxPQUFPZCxJQUFJYztJQUNmLElBQUlHLFFBQVFDLElBQUksb0JBQW9CLG9CQUFvQkosT0FBT3VCLEtBQUtDLFVBQVV0QyxJQUFJYztTQUFXLElBQUlHLFFBQVFDLElBQUksb0JBQW9CLHFDQUFxQ0osT0FBTyxJQUFJUSxnQkFBZ0J0QixJQUFJYyxNQUFNeUI7SUFDM00sTUFBTUMsU0FBU3hDLElBQUl5QyxXQUFXLE1BQU0sQ0FBQ2QsY0FBYzNCLElBQUl3QyxNQUFLLE1BQU8sUUFBUWIsZ0JBQWdCLEtBQUssSUFBSUEsY0FBYztJQUNsSCxNQUFNZSxXQUFXLElBQUlDLFNBQVM3QixNQUFNO1FBQ2xDRztRQUNBdUI7SUFDRjtJQUNBLElBQUl4QyxJQUFJeUMsVUFBVUMsU0FBU3pCLFFBQVFtQixJQUFJLFlBQVlwQyxJQUFJeUM7SUFDdkQsT0FBT0M7QUFDVCIsInNvdXJjZXMiOlsid2VicGFjazovL2Z1bGxzdGFjay1yb2xlLWJhc2VkLW5leHRqcy0yLy4vbm9kZV9tb2R1bGVzL25leHQtYXV0aC9uZXh0L3V0aWxzLmpzP2JmMWUiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmdldEJvZHkgPSBnZXRCb2R5O1xuZXhwb3J0cy5zZXRDb29raWUgPSBzZXRDb29raWU7XG5leHBvcnRzLnRvUmVzcG9uc2UgPSB0b1Jlc3BvbnNlO1xuXG52YXIgX2Nvb2tpZSA9IHJlcXVpcmUoXCJjb29raWVcIik7XG5cbmZ1bmN0aW9uIHNldENvb2tpZShyZXMsIGNvb2tpZSkge1xuICB2YXIgX3JlcyRnZXRIZWFkZXI7XG5cbiAgbGV0IHNldENvb2tpZUhlYWRlciA9IChfcmVzJGdldEhlYWRlciA9IHJlcy5nZXRIZWFkZXIoXCJTZXQtQ29va2llXCIpKSAhPT0gbnVsbCAmJiBfcmVzJGdldEhlYWRlciAhPT0gdm9pZCAwID8gX3JlcyRnZXRIZWFkZXIgOiBbXTtcblxuICBpZiAoIUFycmF5LmlzQXJyYXkoc2V0Q29va2llSGVhZGVyKSkge1xuICAgIHNldENvb2tpZUhlYWRlciA9IFtzZXRDb29raWVIZWFkZXJdO1xuICB9XG5cbiAgY29uc3Qge1xuICAgIG5hbWUsXG4gICAgdmFsdWUsXG4gICAgb3B0aW9uc1xuICB9ID0gY29va2llO1xuICBjb25zdCBjb29raWVIZWFkZXIgPSAoMCwgX2Nvb2tpZS5zZXJpYWxpemUpKG5hbWUsIHZhbHVlLCBvcHRpb25zKTtcbiAgc2V0Q29va2llSGVhZGVyLnB1c2goY29va2llSGVhZGVyKTtcbiAgcmVzLnNldEhlYWRlcihcIlNldC1Db29raWVcIiwgc2V0Q29va2llSGVhZGVyKTtcbn1cblxuYXN5bmMgZnVuY3Rpb24gZ2V0Qm9keShyZXEpIHtcbiAgaWYgKCEoXCJib2R5XCIgaW4gcmVxKSB8fCAhcmVxLmJvZHkgfHwgcmVxLm1ldGhvZCAhPT0gXCJQT1NUXCIpIHJldHVybjtcbiAgY29uc3QgY29udGVudFR5cGUgPSByZXEuaGVhZGVycy5nZXQoXCJjb250ZW50LXR5cGVcIik7XG5cbiAgaWYgKGNvbnRlbnRUeXBlICE9PSBudWxsICYmIGNvbnRlbnRUeXBlICE9PSB2b2lkIDAgJiYgY29udGVudFR5cGUuaW5jbHVkZXMoXCJhcHBsaWNhdGlvbi9qc29uXCIpKSB7XG4gICAgcmV0dXJuIGF3YWl0IHJlcS5qc29uKCk7XG4gIH0gZWxzZSBpZiAoY29udGVudFR5cGUgIT09IG51bGwgJiYgY29udGVudFR5cGUgIT09IHZvaWQgMCAmJiBjb250ZW50VHlwZS5pbmNsdWRlcyhcImFwcGxpY2F0aW9uL3gtd3d3LWZvcm0tdXJsZW5jb2RlZFwiKSkge1xuICAgIGNvbnN0IHBhcmFtcyA9IG5ldyBVUkxTZWFyY2hQYXJhbXMoYXdhaXQgcmVxLnRleHQoKSk7XG4gICAgcmV0dXJuIE9iamVjdC5mcm9tRW50cmllcyhwYXJhbXMpO1xuICB9XG59XG5cbmZ1bmN0aW9uIHRvUmVzcG9uc2UocmVzKSB7XG4gIHZhciBfcmVzJGhlYWRlcnMsIF9yZXMkY29va2llcywgX3JlcyRzdGF0dXM7XG5cbiAgY29uc3QgaGVhZGVycyA9IG5ldyBIZWFkZXJzKChfcmVzJGhlYWRlcnMgPSByZXMuaGVhZGVycykgPT09IG51bGwgfHwgX3JlcyRoZWFkZXJzID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfcmVzJGhlYWRlcnMucmVkdWNlKChhY2MsIHtcbiAgICBrZXksXG4gICAgdmFsdWVcbiAgfSkgPT4ge1xuICAgIGFjY1trZXldID0gdmFsdWU7XG4gICAgcmV0dXJuIGFjYztcbiAgfSwge30pKTtcbiAgKF9yZXMkY29va2llcyA9IHJlcy5jb29raWVzKSA9PT0gbnVsbCB8fCBfcmVzJGNvb2tpZXMgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9yZXMkY29va2llcy5mb3JFYWNoKGNvb2tpZSA9PiB7XG4gICAgY29uc3Qge1xuICAgICAgbmFtZSxcbiAgICAgIHZhbHVlLFxuICAgICAgb3B0aW9uc1xuICAgIH0gPSBjb29raWU7XG4gICAgY29uc3QgY29va2llSGVhZGVyID0gKDAsIF9jb29raWUuc2VyaWFsaXplKShuYW1lLCB2YWx1ZSwgb3B0aW9ucyk7XG4gICAgaWYgKGhlYWRlcnMuaGFzKFwiU2V0LUNvb2tpZVwiKSkgaGVhZGVycy5hcHBlbmQoXCJTZXQtQ29va2llXCIsIGNvb2tpZUhlYWRlcik7ZWxzZSBoZWFkZXJzLnNldChcIlNldC1Db29raWVcIiwgY29va2llSGVhZGVyKTtcbiAgfSk7XG4gIGxldCBib2R5ID0gcmVzLmJvZHk7XG4gIGlmIChoZWFkZXJzLmdldChcImNvbnRlbnQtdHlwZVwiKSA9PT0gXCJhcHBsaWNhdGlvbi9qc29uXCIpIGJvZHkgPSBKU09OLnN0cmluZ2lmeShyZXMuYm9keSk7ZWxzZSBpZiAoaGVhZGVycy5nZXQoXCJjb250ZW50LXR5cGVcIikgPT09IFwiYXBwbGljYXRpb24veC13d3ctZm9ybS11cmxlbmNvZGVkXCIpIGJvZHkgPSBuZXcgVVJMU2VhcmNoUGFyYW1zKHJlcy5ib2R5KS50b1N0cmluZygpO1xuICBjb25zdCBzdGF0dXMgPSByZXMucmVkaXJlY3QgPyAzMDIgOiAoX3JlcyRzdGF0dXMgPSByZXMuc3RhdHVzKSAhPT0gbnVsbCAmJiBfcmVzJHN0YXR1cyAhPT0gdm9pZCAwID8gX3JlcyRzdGF0dXMgOiAyMDA7XG4gIGNvbnN0IHJlc3BvbnNlID0gbmV3IFJlc3BvbnNlKGJvZHksIHtcbiAgICBoZWFkZXJzLFxuICAgIHN0YXR1c1xuICB9KTtcbiAgaWYgKHJlcy5yZWRpcmVjdCkgcmVzcG9uc2UuaGVhZGVycy5zZXQoXCJMb2NhdGlvblwiLCByZXMucmVkaXJlY3QpO1xuICByZXR1cm4gcmVzcG9uc2U7XG59Il0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiZ2V0Qm9keSIsInNldENvb2tpZSIsInRvUmVzcG9uc2UiLCJfY29va2llIiwicmVxdWlyZSIsInJlcyIsImNvb2tpZSIsIl9yZXMkZ2V0SGVhZGVyIiwic2V0Q29va2llSGVhZGVyIiwiZ2V0SGVhZGVyIiwiQXJyYXkiLCJpc0FycmF5IiwibmFtZSIsIm9wdGlvbnMiLCJjb29raWVIZWFkZXIiLCJzZXJpYWxpemUiLCJwdXNoIiwic2V0SGVhZGVyIiwicmVxIiwiYm9keSIsIm1ldGhvZCIsImNvbnRlbnRUeXBlIiwiaGVhZGVycyIsImdldCIsImluY2x1ZGVzIiwianNvbiIsInBhcmFtcyIsIlVSTFNlYXJjaFBhcmFtcyIsInRleHQiLCJmcm9tRW50cmllcyIsIl9yZXMkaGVhZGVycyIsIl9yZXMkY29va2llcyIsIl9yZXMkc3RhdHVzIiwiSGVhZGVycyIsInJlZHVjZSIsImFjYyIsImtleSIsImNvb2tpZXMiLCJmb3JFYWNoIiwiaGFzIiwiYXBwZW5kIiwic2V0IiwiSlNPTiIsInN0cmluZ2lmeSIsInRvU3RyaW5nIiwic3RhdHVzIiwicmVkaXJlY3QiLCJyZXNwb25zZSIsIlJlc3BvbnNlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/next-auth/next/utils.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/next-auth/providers/credentials.js":
/*!*********************************************************!*\
  !*** ./node_modules/next-auth/providers/credentials.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports[\"default\"] = Credentials;\nfunction Credentials(options) {\n    return {\n        id: \"credentials\",\n        name: \"Credentials\",\n        type: \"credentials\",\n        credentials: {},\n        authorize: ()=>null,\n        options\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL3Byb3ZpZGVycy9jcmVkZW50aWFscy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUViQSw4Q0FBNkM7SUFDM0NHLE9BQU87QUFDVCxDQUFDLEVBQUM7QUFDRkQsa0JBQWVFLEdBQUdDO0FBRWxCLFNBQVNBLFlBQVlDLE9BQU87SUFDMUIsT0FBTztRQUNMQyxJQUFJO1FBQ0pDLE1BQU07UUFDTkMsTUFBTTtRQUNOQyxhQUFhLENBQUM7UUFDZEMsV0FBVyxJQUFNO1FBQ2pCTDtJQUNGO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mdWxsc3RhY2stcm9sZS1iYXNlZC1uZXh0anMtMi8uL25vZGVfbW9kdWxlcy9uZXh0LWF1dGgvcHJvdmlkZXJzL2NyZWRlbnRpYWxzLmpzPzc2MzkiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmRlZmF1bHQgPSBDcmVkZW50aWFscztcblxuZnVuY3Rpb24gQ3JlZGVudGlhbHMob3B0aW9ucykge1xuICByZXR1cm4ge1xuICAgIGlkOiBcImNyZWRlbnRpYWxzXCIsXG4gICAgbmFtZTogXCJDcmVkZW50aWFsc1wiLFxuICAgIHR5cGU6IFwiY3JlZGVudGlhbHNcIixcbiAgICBjcmVkZW50aWFsczoge30sXG4gICAgYXV0aG9yaXplOiAoKSA9PiBudWxsLFxuICAgIG9wdGlvbnNcbiAgfTtcbn0iXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJkZWZhdWx0IiwiQ3JlZGVudGlhbHMiLCJvcHRpb25zIiwiaWQiLCJuYW1lIiwidHlwZSIsImNyZWRlbnRpYWxzIiwiYXV0aG9yaXplIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/next-auth/providers/credentials.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/next-auth/providers/google.js":
/*!****************************************************!*\
  !*** ./node_modules/next-auth/providers/google.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports[\"default\"] = Google;\nfunction Google(options) {\n    return {\n        id: \"google\",\n        name: \"Google\",\n        type: \"oauth\",\n        wellKnown: \"https://accounts.google.com/.well-known/openid-configuration\",\n        authorization: {\n            params: {\n                scope: \"openid email profile\"\n            }\n        },\n        idToken: true,\n        checks: [\n            \"pkce\",\n            \"state\"\n        ],\n        profile (profile) {\n            return {\n                id: profile.sub,\n                name: profile.name,\n                email: profile.email,\n                image: profile.picture\n            };\n        },\n        style: {\n            logo: \"/google.svg\",\n            logoDark: \"/google.svg\",\n            bgDark: \"#fff\",\n            bg: \"#fff\",\n            text: \"#000\",\n            textDark: \"#000\"\n        },\n        options\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL3Byb3ZpZGVycy9nb29nbGUuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFFYkEsOENBQTZDO0lBQzNDRyxPQUFPO0FBQ1QsQ0FBQyxFQUFDO0FBQ0ZELGtCQUFlRSxHQUFHQztBQUVsQixTQUFTQSxPQUFPQyxPQUFPO0lBQ3JCLE9BQU87UUFDTEMsSUFBSTtRQUNKQyxNQUFNO1FBQ05DLE1BQU07UUFDTkMsV0FBVztRQUNYQyxlQUFlO1lBQ2JDLFFBQVE7Z0JBQ05DLE9BQU87WUFDVDtRQUNGO1FBQ0FDLFNBQVM7UUFDVEMsUUFBUTtZQUFDO1lBQVE7U0FBUTtRQUV6QkMsU0FBUUEsT0FBTztZQUNiLE9BQU87Z0JBQ0xULElBQUlTLFFBQVFDO2dCQUNaVCxNQUFNUSxRQUFRUjtnQkFDZFUsT0FBT0YsUUFBUUU7Z0JBQ2ZDLE9BQU9ILFFBQVFJO1lBQ2pCO1FBQ0Y7UUFFQUMsT0FBTztZQUNMQyxNQUFNO1lBQ05DLFVBQVU7WUFDVkMsUUFBUTtZQUNSQyxJQUFJO1lBQ0pDLE1BQU07WUFDTkMsVUFBVTtRQUNaO1FBQ0FyQjtJQUNGO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mdWxsc3RhY2stcm9sZS1iYXNlZC1uZXh0anMtMi8uL25vZGVfbW9kdWxlcy9uZXh0LWF1dGgvcHJvdmlkZXJzL2dvb2dsZS5qcz81MmVhIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5kZWZhdWx0ID0gR29vZ2xlO1xuXG5mdW5jdGlvbiBHb29nbGUob3B0aW9ucykge1xuICByZXR1cm4ge1xuICAgIGlkOiBcImdvb2dsZVwiLFxuICAgIG5hbWU6IFwiR29vZ2xlXCIsXG4gICAgdHlwZTogXCJvYXV0aFwiLFxuICAgIHdlbGxLbm93bjogXCJodHRwczovL2FjY291bnRzLmdvb2dsZS5jb20vLndlbGwta25vd24vb3BlbmlkLWNvbmZpZ3VyYXRpb25cIixcbiAgICBhdXRob3JpemF0aW9uOiB7XG4gICAgICBwYXJhbXM6IHtcbiAgICAgICAgc2NvcGU6IFwib3BlbmlkIGVtYWlsIHByb2ZpbGVcIlxuICAgICAgfVxuICAgIH0sXG4gICAgaWRUb2tlbjogdHJ1ZSxcbiAgICBjaGVja3M6IFtcInBrY2VcIiwgXCJzdGF0ZVwiXSxcblxuICAgIHByb2ZpbGUocHJvZmlsZSkge1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgaWQ6IHByb2ZpbGUuc3ViLFxuICAgICAgICBuYW1lOiBwcm9maWxlLm5hbWUsXG4gICAgICAgIGVtYWlsOiBwcm9maWxlLmVtYWlsLFxuICAgICAgICBpbWFnZTogcHJvZmlsZS5waWN0dXJlXG4gICAgICB9O1xuICAgIH0sXG5cbiAgICBzdHlsZToge1xuICAgICAgbG9nbzogXCIvZ29vZ2xlLnN2Z1wiLFxuICAgICAgbG9nb0Rhcms6IFwiL2dvb2dsZS5zdmdcIixcbiAgICAgIGJnRGFyazogXCIjZmZmXCIsXG4gICAgICBiZzogXCIjZmZmXCIsXG4gICAgICB0ZXh0OiBcIiMwMDBcIixcbiAgICAgIHRleHREYXJrOiBcIiMwMDBcIlxuICAgIH0sXG4gICAgb3B0aW9uc1xuICB9O1xufSJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsImRlZmF1bHQiLCJHb29nbGUiLCJvcHRpb25zIiwiaWQiLCJuYW1lIiwidHlwZSIsIndlbGxLbm93biIsImF1dGhvcml6YXRpb24iLCJwYXJhbXMiLCJzY29wZSIsImlkVG9rZW4iLCJjaGVja3MiLCJwcm9maWxlIiwic3ViIiwiZW1haWwiLCJpbWFnZSIsInBpY3R1cmUiLCJzdHlsZSIsImxvZ28iLCJsb2dvRGFyayIsImJnRGFyayIsImJnIiwidGV4dCIsInRleHREYXJrIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/next-auth/providers/google.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/next-auth/utils/detect-origin.js":
/*!*******************************************************!*\
  !*** ./node_modules/next-auth/utils/detect-origin.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.detectOrigin = detectOrigin;\nfunction detectOrigin(forwardedHost, protocol) {\n    var _process$env$VERCEL;\n    if ((_process$env$VERCEL = process.env.VERCEL) !== null && _process$env$VERCEL !== void 0 ? _process$env$VERCEL : process.env.AUTH_TRUST_HOST) return `${protocol === \"http\" ? \"http\" : \"https\"}://${forwardedHost}`;\n    return \"http://localhost:3000\";\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL3V0aWxzL2RldGVjdC1vcmlnaW4uanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFFYkEsOENBQTZDO0lBQzNDRyxPQUFPO0FBQ1QsQ0FBQyxFQUFDO0FBQ0ZELG9CQUFvQkUsR0FBR0E7QUFFdkIsU0FBU0EsYUFBYUMsYUFBYSxFQUFFQyxRQUFRO0lBQzNDLElBQUlDO0lBRUosSUFBSSxDQUFDQSxzQkFBc0JDLFFBQVFDLElBQUlDLE1BQUssTUFBTyxRQUFRSCx3QkFBd0IsS0FBSyxJQUFJQSxzQkFBc0JDLFFBQVFDLElBQUlFLGlCQUFpQixPQUFPLENBQUMsRUFBRUwsYUFBYSxTQUFTLFNBQVMsUUFBUSxHQUFHLEVBQUVELGNBQWMsQ0FBQztJQUNwTixPQUFPRyx1QkFBd0JJO0FBQ2pDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZnVsbHN0YWNrLXJvbGUtYmFzZWQtbmV4dGpzLTIvLi9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL3V0aWxzL2RldGVjdC1vcmlnaW4uanM/MDUyYSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuZGV0ZWN0T3JpZ2luID0gZGV0ZWN0T3JpZ2luO1xuXG5mdW5jdGlvbiBkZXRlY3RPcmlnaW4oZm9yd2FyZGVkSG9zdCwgcHJvdG9jb2wpIHtcbiAgdmFyIF9wcm9jZXNzJGVudiRWRVJDRUw7XG5cbiAgaWYgKChfcHJvY2VzcyRlbnYkVkVSQ0VMID0gcHJvY2Vzcy5lbnYuVkVSQ0VMKSAhPT0gbnVsbCAmJiBfcHJvY2VzcyRlbnYkVkVSQ0VMICE9PSB2b2lkIDAgPyBfcHJvY2VzcyRlbnYkVkVSQ0VMIDogcHJvY2Vzcy5lbnYuQVVUSF9UUlVTVF9IT1NUKSByZXR1cm4gYCR7cHJvdG9jb2wgPT09IFwiaHR0cFwiID8gXCJodHRwXCIgOiBcImh0dHBzXCJ9Oi8vJHtmb3J3YXJkZWRIb3N0fWA7XG4gIHJldHVybiBwcm9jZXNzLmVudi5ORVhUQVVUSF9VUkw7XG59Il0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiZGV0ZWN0T3JpZ2luIiwiZm9yd2FyZGVkSG9zdCIsInByb3RvY29sIiwiX3Byb2Nlc3MkZW52JFZFUkNFTCIsInByb2Nlc3MiLCJlbnYiLCJWRVJDRUwiLCJBVVRIX1RSVVNUX0hPU1QiLCJORVhUQVVUSF9VUkwiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/next-auth/utils/detect-origin.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/next-auth/utils/logger.js":
/*!************************************************!*\
  !*** ./node_modules/next-auth/utils/logger.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nvar _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ \"(sc_server)/./node_modules/@babel/runtime/helpers/interopRequireDefault.js\");\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports[\"default\"] = void 0;\nexports.proxyLogger = proxyLogger;\nexports.setLogger = setLogger;\nvar _defineProperty2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/defineProperty */ \"(sc_server)/./node_modules/@babel/runtime/helpers/defineProperty.js\"));\nvar _errors = __webpack_require__(/*! ../core/errors */ \"(sc_server)/./node_modules/next-auth/core/errors.js\");\nfunction ownKeys(object, enumerableOnly) {\n    var keys = Object.keys(object);\n    if (Object.getOwnPropertySymbols) {\n        var symbols = Object.getOwnPropertySymbols(object);\n        enumerableOnly && (symbols = symbols.filter(function(sym) {\n            return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n        })), keys.push.apply(keys, symbols);\n    }\n    return keys;\n}\nfunction _objectSpread(target) {\n    for(var i = 1; i < arguments.length; i++){\n        var source = null != arguments[i] ? arguments[i] : {};\n        i % 2 ? ownKeys(Object(source), !0).forEach(function(key) {\n            (0, _defineProperty2.default)(target, key, source[key]);\n        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function(key) {\n            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n        });\n    }\n    return target;\n}\nfunction formatError(o) {\n    if (o instanceof Error && !(o instanceof _errors.UnknownError)) {\n        return {\n            message: o.message,\n            stack: o.stack,\n            name: o.name\n        };\n    }\n    if (hasErrorProperty(o)) {\n        var _o$message;\n        o.error = formatError(o.error);\n        o.message = (_o$message = o.message) !== null && _o$message !== void 0 ? _o$message : o.error.message;\n    }\n    return o;\n}\nfunction hasErrorProperty(x) {\n    return !!(x !== null && x !== void 0 && x.error);\n}\nvar _logger = {\n    error: function error(code, metadata) {\n        metadata = formatError(metadata);\n        console.error(\"[next-auth][error][\".concat(code, \"]\"), \"\\nhttps://next-auth.js.org/errors#\".concat(code.toLowerCase()), metadata.message, metadata);\n    },\n    warn: function warn(code) {\n        console.warn(\"[next-auth][warn][\".concat(code, \"]\"), \"\\nhttps://next-auth.js.org/warnings#\".concat(code.toLowerCase()));\n    },\n    debug: function debug(code, metadata) {\n        console.log(\"[next-auth][debug][\".concat(code, \"]\"), metadata);\n    }\n};\nfunction setLogger() {\n    var newLogger = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var debug = arguments.length > 1 ? arguments[1] : undefined;\n    if (!debug) _logger.debug = function() {};\n    if (newLogger.error) _logger.error = newLogger.error;\n    if (newLogger.warn) _logger.warn = newLogger.warn;\n    if (newLogger.debug) _logger.debug = newLogger.debug;\n}\nvar _default = _logger;\nexports[\"default\"] = _default;\nfunction proxyLogger() {\n    var logger = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _logger;\n    var basePath = arguments.length > 1 ? arguments[1] : undefined;\n    try {\n        if (true) {\n            return logger;\n        }\n        var clientLogger = {};\n        var _loop = function _loop(level) {\n            clientLogger[level] = function(code, metadata) {\n                _logger[level](code, metadata);\n                if (level === \"error\") {\n                    metadata = formatError(metadata);\n                }\n                ;\n                metadata.client = true;\n                var url = \"\".concat(basePath, \"/_log\");\n                var body = new URLSearchParams(_objectSpread({\n                    level: level,\n                    code: code\n                }, metadata));\n                if (navigator.sendBeacon) {\n                    return navigator.sendBeacon(url, body);\n                }\n                return fetch(url, {\n                    method: \"POST\",\n                    body: body,\n                    keepalive: true\n                });\n            };\n        };\n        for(var level in logger){\n            _loop(level);\n        }\n        return clientLogger;\n    } catch (_unused) {\n        return _logger;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/next-auth/utils/logger.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/next-auth/utils/merge.js":
/*!***********************************************!*\
  !*** ./node_modules/next-auth/utils/merge.js ***!
  \***********************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.merge = merge;\nfunction isObject(item) {\n    return item && typeof item === \"object\" && !Array.isArray(item);\n}\nfunction merge(target, ...sources) {\n    if (!sources.length) return target;\n    const source = sources.shift();\n    if (isObject(target) && isObject(source)) {\n        for(const key in source){\n            if (isObject(source[key])) {\n                if (!target[key]) Object.assign(target, {\n                    [key]: {}\n                });\n                merge(target[key], source[key]);\n            } else {\n                Object.assign(target, {\n                    [key]: source[key]\n                });\n            }\n        }\n    }\n    return merge(target, ...sources);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL3V0aWxzL21lcmdlLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBRWJBLDhDQUE2QztJQUMzQ0csT0FBTztBQUNULENBQUMsRUFBQztBQUNGRCxhQUFhRSxHQUFHQTtBQUVoQixTQUFTQyxTQUFTQyxJQUFJO0lBQ3BCLE9BQU9BLFFBQVEsT0FBT0EsU0FBUyxZQUFZLENBQUNDLE1BQU1DLFFBQVFGO0FBQzVEO0FBRUEsU0FBU0YsTUFBTUssTUFBTSxFQUFFLEdBQUdDLE9BQU87SUFDL0IsSUFBSSxDQUFDQSxRQUFRQyxRQUFRLE9BQU9GO0lBQzVCLE1BQU1HLFNBQVNGLFFBQVFHO0lBRXZCLElBQUlSLFNBQVNJLFdBQVdKLFNBQVNPLFNBQVM7UUFDeEMsSUFBSyxNQUFNRSxPQUFPRixPQUFRO1lBQ3hCLElBQUlQLFNBQVNPLE1BQU0sQ0FBQ0UsSUFBSSxHQUFHO2dCQUN6QixJQUFJLENBQUNMLE1BQU0sQ0FBQ0ssSUFBSSxFQUFFZCxPQUFPZSxPQUFPTixRQUFRO29CQUN0QyxDQUFDSyxJQUFJLEVBQUUsQ0FBQztnQkFDVjtnQkFDQVYsTUFBTUssTUFBTSxDQUFDSyxJQUFJLEVBQUVGLE1BQU0sQ0FBQ0UsSUFBSTtZQUNoQyxPQUFPO2dCQUNMZCxPQUFPZSxPQUFPTixRQUFRO29CQUNwQixDQUFDSyxJQUFJLEVBQUVGLE1BQU0sQ0FBQ0UsSUFBSTtnQkFDcEI7WUFDRjtRQUNGO0lBQ0Y7SUFFQSxPQUFPVixNQUFNSyxXQUFXQztBQUMxQiIsInNvdXJjZXMiOlsid2VicGFjazovL2Z1bGxzdGFjay1yb2xlLWJhc2VkLW5leHRqcy0yLy4vbm9kZV9tb2R1bGVzL25leHQtYXV0aC91dGlscy9tZXJnZS5qcz9mM2U0Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5tZXJnZSA9IG1lcmdlO1xuXG5mdW5jdGlvbiBpc09iamVjdChpdGVtKSB7XG4gIHJldHVybiBpdGVtICYmIHR5cGVvZiBpdGVtID09PSBcIm9iamVjdFwiICYmICFBcnJheS5pc0FycmF5KGl0ZW0pO1xufVxuXG5mdW5jdGlvbiBtZXJnZSh0YXJnZXQsIC4uLnNvdXJjZXMpIHtcbiAgaWYgKCFzb3VyY2VzLmxlbmd0aCkgcmV0dXJuIHRhcmdldDtcbiAgY29uc3Qgc291cmNlID0gc291cmNlcy5zaGlmdCgpO1xuXG4gIGlmIChpc09iamVjdCh0YXJnZXQpICYmIGlzT2JqZWN0KHNvdXJjZSkpIHtcbiAgICBmb3IgKGNvbnN0IGtleSBpbiBzb3VyY2UpIHtcbiAgICAgIGlmIChpc09iamVjdChzb3VyY2Vba2V5XSkpIHtcbiAgICAgICAgaWYgKCF0YXJnZXRba2V5XSkgT2JqZWN0LmFzc2lnbih0YXJnZXQsIHtcbiAgICAgICAgICBba2V5XToge31cbiAgICAgICAgfSk7XG4gICAgICAgIG1lcmdlKHRhcmdldFtrZXldLCBzb3VyY2Vba2V5XSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBPYmplY3QuYXNzaWduKHRhcmdldCwge1xuICAgICAgICAgIFtrZXldOiBzb3VyY2Vba2V5XVxuICAgICAgICB9KTtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICByZXR1cm4gbWVyZ2UodGFyZ2V0LCAuLi5zb3VyY2VzKTtcbn0iXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJtZXJnZSIsImlzT2JqZWN0IiwiaXRlbSIsIkFycmF5IiwiaXNBcnJheSIsInRhcmdldCIsInNvdXJjZXMiLCJsZW5ndGgiLCJzb3VyY2UiLCJzaGlmdCIsImtleSIsImFzc2lnbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/next-auth/utils/merge.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/next-auth/utils/parse-url.js":
/*!***************************************************!*\
  !*** ./node_modules/next-auth/utils/parse-url.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports[\"default\"] = parseUrl;\nfunction parseUrl(url) {\n    var _url2;\n    const defaultUrl = new URL(\"http://localhost:3000/api/auth\");\n    if (url && !url.startsWith(\"http\")) {\n        url = `https://${url}`;\n    }\n    const _url = new URL((_url2 = url) !== null && _url2 !== void 0 ? _url2 : defaultUrl);\n    const path = (_url.pathname === \"/\" ? defaultUrl.pathname : _url.pathname).replace(/\\/$/, \"\");\n    const base = `${_url.origin}${path}`;\n    return {\n        origin: _url.origin,\n        host: _url.host,\n        path,\n        base,\n        toString: ()=>base\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL3V0aWxzL3BhcnNlLXVybC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUViQSw4Q0FBNkM7SUFDM0NHLE9BQU87QUFDVCxDQUFDLEVBQUM7QUFDRkQsa0JBQWVFLEdBQUdDO0FBRWxCLFNBQVNBLFNBQVNDLEdBQUc7SUFDbkIsSUFBSUM7SUFFSixNQUFNQyxhQUFhLElBQUlDLElBQUk7SUFFM0IsSUFBSUgsT0FBTyxDQUFDQSxJQUFJSSxXQUFXLFNBQVM7UUFDbENKLE1BQU0sQ0FBQyxRQUFRLEVBQUVBLElBQUksQ0FBQztJQUN4QjtJQUVBLE1BQU1LLE9BQU8sSUFBSUYsSUFBSSxDQUFDRixRQUFRRCxHQUFFLE1BQU8sUUFBUUMsVUFBVSxLQUFLLElBQUlBLFFBQVFDO0lBRTFFLE1BQU1JLE9BQU8sQ0FBQ0QsS0FBS0UsYUFBYSxNQUFNTCxXQUFXSyxXQUFXRixLQUFLRSxRQUFPLEVBQUdDLFFBQVEsT0FBTztJQUMxRixNQUFNQyxPQUFPLENBQUMsRUFBRUosS0FBS0ssT0FBTyxFQUFFSixLQUFLLENBQUM7SUFDcEMsT0FBTztRQUNMSSxRQUFRTCxLQUFLSztRQUNiQyxNQUFNTixLQUFLTTtRQUNYTDtRQUNBRztRQUNBRyxVQUFVLElBQU1IO0lBQ2xCO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mdWxsc3RhY2stcm9sZS1iYXNlZC1uZXh0anMtMi8uL25vZGVfbW9kdWxlcy9uZXh0LWF1dGgvdXRpbHMvcGFyc2UtdXJsLmpzP2MzMzkiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmRlZmF1bHQgPSBwYXJzZVVybDtcblxuZnVuY3Rpb24gcGFyc2VVcmwodXJsKSB7XG4gIHZhciBfdXJsMjtcblxuICBjb25zdCBkZWZhdWx0VXJsID0gbmV3IFVSTChcImh0dHA6Ly9sb2NhbGhvc3Q6MzAwMC9hcGkvYXV0aFwiKTtcblxuICBpZiAodXJsICYmICF1cmwuc3RhcnRzV2l0aChcImh0dHBcIikpIHtcbiAgICB1cmwgPSBgaHR0cHM6Ly8ke3VybH1gO1xuICB9XG5cbiAgY29uc3QgX3VybCA9IG5ldyBVUkwoKF91cmwyID0gdXJsKSAhPT0gbnVsbCAmJiBfdXJsMiAhPT0gdm9pZCAwID8gX3VybDIgOiBkZWZhdWx0VXJsKTtcblxuICBjb25zdCBwYXRoID0gKF91cmwucGF0aG5hbWUgPT09IFwiL1wiID8gZGVmYXVsdFVybC5wYXRobmFtZSA6IF91cmwucGF0aG5hbWUpLnJlcGxhY2UoL1xcLyQvLCBcIlwiKTtcbiAgY29uc3QgYmFzZSA9IGAke191cmwub3JpZ2lufSR7cGF0aH1gO1xuICByZXR1cm4ge1xuICAgIG9yaWdpbjogX3VybC5vcmlnaW4sXG4gICAgaG9zdDogX3VybC5ob3N0LFxuICAgIHBhdGgsXG4gICAgYmFzZSxcbiAgICB0b1N0cmluZzogKCkgPT4gYmFzZVxuICB9O1xufSJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsImRlZmF1bHQiLCJwYXJzZVVybCIsInVybCIsIl91cmwyIiwiZGVmYXVsdFVybCIsIlVSTCIsInN0YXJ0c1dpdGgiLCJfdXJsIiwicGF0aCIsInBhdGhuYW1lIiwicmVwbGFjZSIsImJhc2UiLCJvcmlnaW4iLCJob3N0IiwidG9TdHJpbmciXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/next-auth/utils/parse-url.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/next/dist/build/output/log.js":
/*!****************************************************!*\
  !*** ./node_modules/next/dist/build/output/log.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\n0 && (0);\nfunction _export(target, all) {\n    for(var name in all)Object.defineProperty(target, name, {\n        enumerable: true,\n        get: all[name]\n    });\n}\n_export(exports, {\n    prefixes: function() {\n        return prefixes;\n    },\n    wait: function() {\n        return wait;\n    },\n    error: function() {\n        return error;\n    },\n    warn: function() {\n        return warn;\n    },\n    ready: function() {\n        return ready;\n    },\n    info: function() {\n        return info;\n    },\n    event: function() {\n        return event;\n    },\n    trace: function() {\n        return trace;\n    },\n    warnOnce: function() {\n        return warnOnce;\n    }\n});\nconst _chalk = /*#__PURE__*/ _interop_require_default(__webpack_require__(/*! ../../lib/chalk */ \"(sc_server)/./node_modules/next/dist/lib/chalk.js\"));\nfunction _interop_require_default(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\nconst prefixes = {\n    wait: \"- \" + _chalk.default.cyan(\"wait\"),\n    error: \"- \" + _chalk.default.red(\"error\"),\n    warn: \"- \" + _chalk.default.yellow(\"warn\"),\n    ready: \"- \" + _chalk.default.green(\"ready\"),\n    info: \"- \" + _chalk.default.cyan(\"info\"),\n    event: \"- \" + _chalk.default.magenta(\"event\"),\n    trace: \"- \" + _chalk.default.magenta(\"trace\")\n};\nfunction wait(...message) {\n    console.log(prefixes.wait, ...message);\n}\nfunction error(...message) {\n    console.error(prefixes.error, ...message);\n}\nfunction warn(...message) {\n    console.warn(prefixes.warn, ...message);\n}\nfunction ready(...message) {\n    console.log(prefixes.ready, ...message);\n}\nfunction info(...message) {\n    console.log(prefixes.info, ...message);\n}\nfunction event(...message) {\n    console.log(prefixes.event, ...message);\n}\nfunction trace(...message) {\n    console.log(prefixes.trace, ...message);\n}\nconst warnOnceMessages = new Set();\nfunction warnOnce(...message) {\n    if (!warnOnceMessages.has(message[0])) {\n        warnOnceMessages.add(message.join(\" \"));\n        warn(...message);\n    }\n} //# sourceMappingURL=log.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL291dHB1dC9sb2cuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYkEsOENBQTZDO0lBQ3pDRyxPQUFPO0FBQ1gsQ0FBQyxFQUFDO0FBQ0YsS0FBTUMsQ0FBQUEsQ0FVTjtBQUNBLFNBQVNVLFFBQVFDLE1BQU0sRUFBRUMsR0FBRztJQUN4QixJQUFJLElBQUlDLFFBQVFELElBQUloQixPQUFPQyxlQUFlYyxRQUFRRSxNQUFNO1FBQ3BEQyxZQUFZO1FBQ1pDLEtBQUtILEdBQUcsQ0FBQ0MsS0FBSztJQUNsQjtBQUNKO0FBQ0FILFFBQVFaLFNBQVM7SUFDYkcsVUFBVTtRQUNOLE9BQU9BO0lBQ1g7SUFDQUMsTUFBTTtRQUNGLE9BQU9BO0lBQ1g7SUFDQUMsT0FBTztRQUNILE9BQU9BO0lBQ1g7SUFDQUMsTUFBTTtRQUNGLE9BQU9BO0lBQ1g7SUFDQUMsT0FBTztRQUNILE9BQU9BO0lBQ1g7SUFDQUMsTUFBTTtRQUNGLE9BQU9BO0lBQ1g7SUFDQUMsT0FBTztRQUNILE9BQU9BO0lBQ1g7SUFDQUMsT0FBTztRQUNILE9BQU9BO0lBQ1g7SUFDQUMsVUFBVTtRQUNOLE9BQU9BO0lBQ1g7QUFDSjtBQUNBLE1BQU1PLFNBQVMsV0FBVyxHQUFHQyx5QkFBeUJDLG1CQUFPQSxDQUFDLDBFQUFpQjtBQUMvRSxTQUFTRCx5QkFBeUJFLEdBQUc7SUFDakMsT0FBT0EsT0FBT0EsSUFBSUMsYUFBYUQsTUFBTTtRQUNqQ0UsU0FBU0Y7SUFDYjtBQUNKO0FBQ0EsTUFBTWxCLFdBQVc7SUFDYkMsTUFBTSxPQUFPYyxPQUFPSyxRQUFRQyxLQUFLO0lBQ2pDbkIsT0FBTyxPQUFPYSxPQUFPSyxRQUFRRSxJQUFJO0lBQ2pDbkIsTUFBTSxPQUFPWSxPQUFPSyxRQUFRRyxPQUFPO0lBQ25DbkIsT0FBTyxPQUFPVyxPQUFPSyxRQUFRSSxNQUFNO0lBQ25DbkIsTUFBTSxPQUFPVSxPQUFPSyxRQUFRQyxLQUFLO0lBQ2pDZixPQUFPLE9BQU9TLE9BQU9LLFFBQVFLLFFBQVE7SUFDckNsQixPQUFPLE9BQU9RLE9BQU9LLFFBQVFLLFFBQVE7QUFDekM7QUFDQSxTQUFTeEIsS0FBSyxHQUFHeUIsT0FBTztJQUNwQkMsUUFBUUMsSUFBSTVCLFNBQVNDLFNBQVN5QjtBQUNsQztBQUNBLFNBQVN4QixNQUFNLEdBQUd3QixPQUFPO0lBQ3JCQyxRQUFRekIsTUFBTUYsU0FBU0UsVUFBVXdCO0FBQ3JDO0FBQ0EsU0FBU3ZCLEtBQUssR0FBR3VCLE9BQU87SUFDcEJDLFFBQVF4QixLQUFLSCxTQUFTRyxTQUFTdUI7QUFDbkM7QUFDQSxTQUFTdEIsTUFBTSxHQUFHc0IsT0FBTztJQUNyQkMsUUFBUUMsSUFBSTVCLFNBQVNJLFVBQVVzQjtBQUNuQztBQUNBLFNBQVNyQixLQUFLLEdBQUdxQixPQUFPO0lBQ3BCQyxRQUFRQyxJQUFJNUIsU0FBU0ssU0FBU3FCO0FBQ2xDO0FBQ0EsU0FBU3BCLE1BQU0sR0FBR29CLE9BQU87SUFDckJDLFFBQVFDLElBQUk1QixTQUFTTSxVQUFVb0I7QUFDbkM7QUFDQSxTQUFTbkIsTUFBTSxHQUFHbUIsT0FBTztJQUNyQkMsUUFBUUMsSUFBSTVCLFNBQVNPLFVBQVVtQjtBQUNuQztBQUNBLE1BQU1HLG1CQUFtQixJQUFJQztBQUM3QixTQUFTdEIsU0FBUyxHQUFHa0IsT0FBTztJQUN4QixJQUFJLENBQUNHLGlCQUFpQkUsSUFBSUwsT0FBTyxDQUFDLEVBQUUsR0FBRztRQUNuQ0csaUJBQWlCRyxJQUFJTixRQUFRTyxLQUFLO1FBQ2xDOUIsUUFBUXVCO0lBQ1o7QUFDSixFQUVBLCtCQUErQiIsInNvdXJjZXMiOlsid2VicGFjazovL2Z1bGxzdGFjay1yb2xlLWJhc2VkLW5leHRqcy0yLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9idWlsZC9vdXRwdXQvbG9nLmpzP2U5NGUiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgICB2YWx1ZTogdHJ1ZVxufSk7XG4wICYmIChtb2R1bGUuZXhwb3J0cyA9IHtcbiAgICBwcmVmaXhlczogbnVsbCxcbiAgICB3YWl0OiBudWxsLFxuICAgIGVycm9yOiBudWxsLFxuICAgIHdhcm46IG51bGwsXG4gICAgcmVhZHk6IG51bGwsXG4gICAgaW5mbzogbnVsbCxcbiAgICBldmVudDogbnVsbCxcbiAgICB0cmFjZTogbnVsbCxcbiAgICB3YXJuT25jZTogbnVsbFxufSk7XG5mdW5jdGlvbiBfZXhwb3J0KHRhcmdldCwgYWxsKSB7XG4gICAgZm9yKHZhciBuYW1lIGluIGFsbClPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBuYW1lLCB7XG4gICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgIGdldDogYWxsW25hbWVdXG4gICAgfSk7XG59XG5fZXhwb3J0KGV4cG9ydHMsIHtcbiAgICBwcmVmaXhlczogZnVuY3Rpb24oKSB7XG4gICAgICAgIHJldHVybiBwcmVmaXhlcztcbiAgICB9LFxuICAgIHdhaXQ6IGZ1bmN0aW9uKCkge1xuICAgICAgICByZXR1cm4gd2FpdDtcbiAgICB9LFxuICAgIGVycm9yOiBmdW5jdGlvbigpIHtcbiAgICAgICAgcmV0dXJuIGVycm9yO1xuICAgIH0sXG4gICAgd2FybjogZnVuY3Rpb24oKSB7XG4gICAgICAgIHJldHVybiB3YXJuO1xuICAgIH0sXG4gICAgcmVhZHk6IGZ1bmN0aW9uKCkge1xuICAgICAgICByZXR1cm4gcmVhZHk7XG4gICAgfSxcbiAgICBpbmZvOiBmdW5jdGlvbigpIHtcbiAgICAgICAgcmV0dXJuIGluZm87XG4gICAgfSxcbiAgICBldmVudDogZnVuY3Rpb24oKSB7XG4gICAgICAgIHJldHVybiBldmVudDtcbiAgICB9LFxuICAgIHRyYWNlOiBmdW5jdGlvbigpIHtcbiAgICAgICAgcmV0dXJuIHRyYWNlO1xuICAgIH0sXG4gICAgd2Fybk9uY2U6IGZ1bmN0aW9uKCkge1xuICAgICAgICByZXR1cm4gd2Fybk9uY2U7XG4gICAgfVxufSk7XG5jb25zdCBfY2hhbGsgPSAvKiNfX1BVUkVfXyovIF9pbnRlcm9wX3JlcXVpcmVfZGVmYXVsdChyZXF1aXJlKFwiLi4vLi4vbGliL2NoYWxrXCIpKTtcbmZ1bmN0aW9uIF9pbnRlcm9wX3JlcXVpcmVfZGVmYXVsdChvYmopIHtcbiAgICByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDoge1xuICAgICAgICBkZWZhdWx0OiBvYmpcbiAgICB9O1xufVxuY29uc3QgcHJlZml4ZXMgPSB7XG4gICAgd2FpdDogXCItIFwiICsgX2NoYWxrLmRlZmF1bHQuY3lhbihcIndhaXRcIiksXG4gICAgZXJyb3I6IFwiLSBcIiArIF9jaGFsay5kZWZhdWx0LnJlZChcImVycm9yXCIpLFxuICAgIHdhcm46IFwiLSBcIiArIF9jaGFsay5kZWZhdWx0LnllbGxvdyhcIndhcm5cIiksXG4gICAgcmVhZHk6IFwiLSBcIiArIF9jaGFsay5kZWZhdWx0LmdyZWVuKFwicmVhZHlcIiksXG4gICAgaW5mbzogXCItIFwiICsgX2NoYWxrLmRlZmF1bHQuY3lhbihcImluZm9cIiksXG4gICAgZXZlbnQ6IFwiLSBcIiArIF9jaGFsay5kZWZhdWx0Lm1hZ2VudGEoXCJldmVudFwiKSxcbiAgICB0cmFjZTogXCItIFwiICsgX2NoYWxrLmRlZmF1bHQubWFnZW50YShcInRyYWNlXCIpXG59O1xuZnVuY3Rpb24gd2FpdCguLi5tZXNzYWdlKSB7XG4gICAgY29uc29sZS5sb2cocHJlZml4ZXMud2FpdCwgLi4ubWVzc2FnZSk7XG59XG5mdW5jdGlvbiBlcnJvciguLi5tZXNzYWdlKSB7XG4gICAgY29uc29sZS5lcnJvcihwcmVmaXhlcy5lcnJvciwgLi4ubWVzc2FnZSk7XG59XG5mdW5jdGlvbiB3YXJuKC4uLm1lc3NhZ2UpIHtcbiAgICBjb25zb2xlLndhcm4ocHJlZml4ZXMud2FybiwgLi4ubWVzc2FnZSk7XG59XG5mdW5jdGlvbiByZWFkeSguLi5tZXNzYWdlKSB7XG4gICAgY29uc29sZS5sb2cocHJlZml4ZXMucmVhZHksIC4uLm1lc3NhZ2UpO1xufVxuZnVuY3Rpb24gaW5mbyguLi5tZXNzYWdlKSB7XG4gICAgY29uc29sZS5sb2cocHJlZml4ZXMuaW5mbywgLi4ubWVzc2FnZSk7XG59XG5mdW5jdGlvbiBldmVudCguLi5tZXNzYWdlKSB7XG4gICAgY29uc29sZS5sb2cocHJlZml4ZXMuZXZlbnQsIC4uLm1lc3NhZ2UpO1xufVxuZnVuY3Rpb24gdHJhY2UoLi4ubWVzc2FnZSkge1xuICAgIGNvbnNvbGUubG9nKHByZWZpeGVzLnRyYWNlLCAuLi5tZXNzYWdlKTtcbn1cbmNvbnN0IHdhcm5PbmNlTWVzc2FnZXMgPSBuZXcgU2V0KCk7XG5mdW5jdGlvbiB3YXJuT25jZSguLi5tZXNzYWdlKSB7XG4gICAgaWYgKCF3YXJuT25jZU1lc3NhZ2VzLmhhcyhtZXNzYWdlWzBdKSkge1xuICAgICAgICB3YXJuT25jZU1lc3NhZ2VzLmFkZChtZXNzYWdlLmpvaW4oXCIgXCIpKTtcbiAgICAgICAgd2FybiguLi5tZXNzYWdlKTtcbiAgICB9XG59XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWxvZy5qcy5tYXAiXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJtb2R1bGUiLCJwcmVmaXhlcyIsIndhaXQiLCJlcnJvciIsIndhcm4iLCJyZWFkeSIsImluZm8iLCJldmVudCIsInRyYWNlIiwid2Fybk9uY2UiLCJfZXhwb3J0IiwidGFyZ2V0IiwiYWxsIiwibmFtZSIsImVudW1lcmFibGUiLCJnZXQiLCJfY2hhbGsiLCJfaW50ZXJvcF9yZXF1aXJlX2RlZmF1bHQiLCJyZXF1aXJlIiwib2JqIiwiX19lc01vZHVsZSIsImRlZmF1bHQiLCJjeWFuIiwicmVkIiwieWVsbG93IiwiZ3JlZW4iLCJtYWdlbnRhIiwibWVzc2FnZSIsImNvbnNvbGUiLCJsb2ciLCJ3YXJuT25jZU1lc3NhZ2VzIiwiU2V0IiwiaGFzIiwiYWRkIiwiam9pbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/next/dist/build/output/log.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/next/dist/client/components/app-router-headers.js":
/*!************************************************************************!*\
  !*** ./node_modules/next/dist/client/components/app-router-headers.js ***!
  \************************************************************************/
/***/ ((module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\n0 && (0);\nfunction _export(target, all) {\n    for(var name in all)Object.defineProperty(target, name, {\n        enumerable: true,\n        get: all[name]\n    });\n}\n_export(exports, {\n    RSC: function() {\n        return RSC;\n    },\n    ACTION: function() {\n        return ACTION;\n    },\n    NEXT_ROUTER_STATE_TREE: function() {\n        return NEXT_ROUTER_STATE_TREE;\n    },\n    NEXT_ROUTER_PREFETCH: function() {\n        return NEXT_ROUTER_PREFETCH;\n    },\n    NEXT_URL: function() {\n        return NEXT_URL;\n    },\n    FETCH_CACHE_HEADER: function() {\n        return FETCH_CACHE_HEADER;\n    },\n    RSC_CONTENT_TYPE_HEADER: function() {\n        return RSC_CONTENT_TYPE_HEADER;\n    },\n    RSC_VARY_HEADER: function() {\n        return RSC_VARY_HEADER;\n    },\n    FLIGHT_PARAMETERS: function() {\n        return FLIGHT_PARAMETERS;\n    }\n});\nconst RSC = \"RSC\";\nconst ACTION = \"Next-Action\";\nconst NEXT_ROUTER_STATE_TREE = \"Next-Router-State-Tree\";\nconst NEXT_ROUTER_PREFETCH = \"Next-Router-Prefetch\";\nconst NEXT_URL = \"Next-Url\";\nconst FETCH_CACHE_HEADER = \"x-vercel-sc-headers\";\nconst RSC_CONTENT_TYPE_HEADER = \"text/x-component\";\nconst RSC_VARY_HEADER = RSC + \", \" + NEXT_ROUTER_STATE_TREE + \", \" + NEXT_ROUTER_PREFETCH;\nconst FLIGHT_PARAMETERS = [\n    [\n        RSC\n    ],\n    [\n        NEXT_ROUTER_STATE_TREE\n    ],\n    [\n        NEXT_ROUTER_PREFETCH\n    ]\n];\nif ((typeof exports.default === \"function\" || typeof exports.default === \"object\" && exports.default !== null) && typeof exports.default.__esModule === \"undefined\") {\n    Object.defineProperty(exports.default, \"__esModule\", {\n        value: true\n    });\n    Object.assign(exports.default, exports);\n    module.exports = exports.default;\n} //# sourceMappingURL=app-router-headers.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NsaWVudC9jb21wb25lbnRzL2FwcC1yb3V0ZXItaGVhZGVycy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFDekNHLE9BQU87QUFDWCxDQUFDLEVBQUM7QUFDRixLQUFNQyxDQUFBQSxDQVVOO0FBQ0EsU0FBU1UsUUFBUUMsTUFBTSxFQUFFQyxHQUFHO0lBQ3hCLElBQUksSUFBSUMsUUFBUUQsSUFBSWhCLE9BQU9DLGVBQWVjLFFBQVFFLE1BQU07UUFDcERDLFlBQVk7UUFDWkMsS0FBS0gsR0FBRyxDQUFDQyxLQUFLO0lBQ2xCO0FBQ0o7QUFDQUgsUUFBUVosU0FBUztJQUNiRyxLQUFLO1FBQ0QsT0FBT0E7SUFDWDtJQUNBQyxRQUFRO1FBQ0osT0FBT0E7SUFDWDtJQUNBQyx3QkFBd0I7UUFDcEIsT0FBT0E7SUFDWDtJQUNBQyxzQkFBc0I7UUFDbEIsT0FBT0E7SUFDWDtJQUNBQyxVQUFVO1FBQ04sT0FBT0E7SUFDWDtJQUNBQyxvQkFBb0I7UUFDaEIsT0FBT0E7SUFDWDtJQUNBQyx5QkFBeUI7UUFDckIsT0FBT0E7SUFDWDtJQUNBQyxpQkFBaUI7UUFDYixPQUFPQTtJQUNYO0lBQ0FDLG1CQUFtQjtRQUNmLE9BQU9BO0lBQ1g7QUFDSjtBQUNBLE1BQU1SLE1BQU07QUFDWixNQUFNQyxTQUFTO0FBQ2YsTUFBTUMseUJBQXlCO0FBQy9CLE1BQU1DLHVCQUF1QjtBQUM3QixNQUFNQyxXQUFXO0FBQ2pCLE1BQU1DLHFCQUFxQjtBQUMzQixNQUFNQywwQkFBMEI7QUFDaEMsTUFBTUMsa0JBQWtCUCxNQUFNLE9BQU9FLHlCQUF5QixPQUFPQztBQUNyRSxNQUFNSyxvQkFBb0I7SUFDdEI7UUFDSVI7S0FDSDtJQUNEO1FBQ0lFO0tBQ0g7SUFDRDtRQUNJQztLQUNIO0NBQ0o7QUFFRCxJQUFJLENBQUMsT0FBT04sUUFBUWtCLFlBQVksY0FBZSxPQUFPbEIsUUFBUWtCLFlBQVksWUFBWWxCLFFBQVFrQixZQUFZLElBQUksS0FBTSxPQUFPbEIsUUFBUWtCLFFBQVFDLGVBQWUsYUFBYTtJQUNyS3JCLE9BQU9DLGVBQWVDLFFBQVFrQixTQUFTLGNBQWM7UUFBRWpCLE9BQU87SUFBSztJQUNuRUgsT0FBT3NCLE9BQU9wQixRQUFRa0IsU0FBU2xCO0lBQy9CRSxPQUFPRixVQUFVQSxRQUFRa0I7QUFDM0IsRUFFQSw4Q0FBOEMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mdWxsc3RhY2stcm9sZS1iYXNlZC1uZXh0anMtMi8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY2xpZW50L2NvbXBvbmVudHMvYXBwLXJvdXRlci1oZWFkZXJzLmpzPzM1NmYiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgICB2YWx1ZTogdHJ1ZVxufSk7XG4wICYmIChtb2R1bGUuZXhwb3J0cyA9IHtcbiAgICBSU0M6IG51bGwsXG4gICAgQUNUSU9OOiBudWxsLFxuICAgIE5FWFRfUk9VVEVSX1NUQVRFX1RSRUU6IG51bGwsXG4gICAgTkVYVF9ST1VURVJfUFJFRkVUQ0g6IG51bGwsXG4gICAgTkVYVF9VUkw6IG51bGwsXG4gICAgRkVUQ0hfQ0FDSEVfSEVBREVSOiBudWxsLFxuICAgIFJTQ19DT05URU5UX1RZUEVfSEVBREVSOiBudWxsLFxuICAgIFJTQ19WQVJZX0hFQURFUjogbnVsbCxcbiAgICBGTElHSFRfUEFSQU1FVEVSUzogbnVsbFxufSk7XG5mdW5jdGlvbiBfZXhwb3J0KHRhcmdldCwgYWxsKSB7XG4gICAgZm9yKHZhciBuYW1lIGluIGFsbClPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBuYW1lLCB7XG4gICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgIGdldDogYWxsW25hbWVdXG4gICAgfSk7XG59XG5fZXhwb3J0KGV4cG9ydHMsIHtcbiAgICBSU0M6IGZ1bmN0aW9uKCkge1xuICAgICAgICByZXR1cm4gUlNDO1xuICAgIH0sXG4gICAgQUNUSU9OOiBmdW5jdGlvbigpIHtcbiAgICAgICAgcmV0dXJuIEFDVElPTjtcbiAgICB9LFxuICAgIE5FWFRfUk9VVEVSX1NUQVRFX1RSRUU6IGZ1bmN0aW9uKCkge1xuICAgICAgICByZXR1cm4gTkVYVF9ST1VURVJfU1RBVEVfVFJFRTtcbiAgICB9LFxuICAgIE5FWFRfUk9VVEVSX1BSRUZFVENIOiBmdW5jdGlvbigpIHtcbiAgICAgICAgcmV0dXJuIE5FWFRfUk9VVEVSX1BSRUZFVENIO1xuICAgIH0sXG4gICAgTkVYVF9VUkw6IGZ1bmN0aW9uKCkge1xuICAgICAgICByZXR1cm4gTkVYVF9VUkw7XG4gICAgfSxcbiAgICBGRVRDSF9DQUNIRV9IRUFERVI6IGZ1bmN0aW9uKCkge1xuICAgICAgICByZXR1cm4gRkVUQ0hfQ0FDSEVfSEVBREVSO1xuICAgIH0sXG4gICAgUlNDX0NPTlRFTlRfVFlQRV9IRUFERVI6IGZ1bmN0aW9uKCkge1xuICAgICAgICByZXR1cm4gUlNDX0NPTlRFTlRfVFlQRV9IRUFERVI7XG4gICAgfSxcbiAgICBSU0NfVkFSWV9IRUFERVI6IGZ1bmN0aW9uKCkge1xuICAgICAgICByZXR1cm4gUlNDX1ZBUllfSEVBREVSO1xuICAgIH0sXG4gICAgRkxJR0hUX1BBUkFNRVRFUlM6IGZ1bmN0aW9uKCkge1xuICAgICAgICByZXR1cm4gRkxJR0hUX1BBUkFNRVRFUlM7XG4gICAgfVxufSk7XG5jb25zdCBSU0MgPSBcIlJTQ1wiO1xuY29uc3QgQUNUSU9OID0gXCJOZXh0LUFjdGlvblwiO1xuY29uc3QgTkVYVF9ST1VURVJfU1RBVEVfVFJFRSA9IFwiTmV4dC1Sb3V0ZXItU3RhdGUtVHJlZVwiO1xuY29uc3QgTkVYVF9ST1VURVJfUFJFRkVUQ0ggPSBcIk5leHQtUm91dGVyLVByZWZldGNoXCI7XG5jb25zdCBORVhUX1VSTCA9IFwiTmV4dC1VcmxcIjtcbmNvbnN0IEZFVENIX0NBQ0hFX0hFQURFUiA9IFwieC12ZXJjZWwtc2MtaGVhZGVyc1wiO1xuY29uc3QgUlNDX0NPTlRFTlRfVFlQRV9IRUFERVIgPSBcInRleHQveC1jb21wb25lbnRcIjtcbmNvbnN0IFJTQ19WQVJZX0hFQURFUiA9IFJTQyArIFwiLCBcIiArIE5FWFRfUk9VVEVSX1NUQVRFX1RSRUUgKyBcIiwgXCIgKyBORVhUX1JPVVRFUl9QUkVGRVRDSDtcbmNvbnN0IEZMSUdIVF9QQVJBTUVURVJTID0gW1xuICAgIFtcbiAgICAgICAgUlNDXG4gICAgXSxcbiAgICBbXG4gICAgICAgIE5FWFRfUk9VVEVSX1NUQVRFX1RSRUVcbiAgICBdLFxuICAgIFtcbiAgICAgICAgTkVYVF9ST1VURVJfUFJFRkVUQ0hcbiAgICBdXG5dO1xuXG5pZiAoKHR5cGVvZiBleHBvcnRzLmRlZmF1bHQgPT09ICdmdW5jdGlvbicgfHwgKHR5cGVvZiBleHBvcnRzLmRlZmF1bHQgPT09ICdvYmplY3QnICYmIGV4cG9ydHMuZGVmYXVsdCAhPT0gbnVsbCkpICYmIHR5cGVvZiBleHBvcnRzLmRlZmF1bHQuX19lc01vZHVsZSA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMuZGVmYXVsdCwgJ19fZXNNb2R1bGUnLCB7IHZhbHVlOiB0cnVlIH0pO1xuICBPYmplY3QuYXNzaWduKGV4cG9ydHMuZGVmYXVsdCwgZXhwb3J0cyk7XG4gIG1vZHVsZS5leHBvcnRzID0gZXhwb3J0cy5kZWZhdWx0O1xufVxuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1hcHAtcm91dGVyLWhlYWRlcnMuanMubWFwIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwibW9kdWxlIiwiUlNDIiwiQUNUSU9OIiwiTkVYVF9ST1VURVJfU1RBVEVfVFJFRSIsIk5FWFRfUk9VVEVSX1BSRUZFVENIIiwiTkVYVF9VUkwiLCJGRVRDSF9DQUNIRV9IRUFERVIiLCJSU0NfQ09OVEVOVF9UWVBFX0hFQURFUiIsIlJTQ19WQVJZX0hFQURFUiIsIkZMSUdIVF9QQVJBTUVURVJTIiwiX2V4cG9ydCIsInRhcmdldCIsImFsbCIsIm5hbWUiLCJlbnVtZXJhYmxlIiwiZ2V0IiwiZGVmYXVsdCIsIl9fZXNNb2R1bGUiLCJhc3NpZ24iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/next/dist/client/components/app-router-headers.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/next/dist/client/components/draft-mode.js":
/*!****************************************************************!*\
  !*** ./node_modules/next/dist/client/components/draft-mode.js ***!
  \****************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nObject.defineProperty(exports, \"DraftMode\", ({\n    enumerable: true,\n    get: function() {\n        return DraftMode;\n    }\n}));\nconst _staticgenerationbailout = __webpack_require__(/*! ./static-generation-bailout */ \"(sc_server)/./node_modules/next/dist/client/components/static-generation-bailout.js\");\nclass DraftMode {\n    get isEnabled() {\n        return this._provider.isEnabled;\n    }\n    enable() {\n        if ((0, _staticgenerationbailout.staticGenerationBailout)(\"draftMode().enable()\")) {\n            return;\n        }\n        return this._provider.enable();\n    }\n    disable() {\n        if ((0, _staticgenerationbailout.staticGenerationBailout)(\"draftMode().disable()\")) {\n            return;\n        }\n        return this._provider.disable();\n    }\n    constructor(provider){\n        this._provider = provider;\n    }\n}\nif ((typeof exports.default === \"function\" || typeof exports.default === \"object\" && exports.default !== null) && typeof exports.default.__esModule === \"undefined\") {\n    Object.defineProperty(exports.default, \"__esModule\", {\n        value: true\n    });\n    Object.assign(exports.default, exports);\n    module.exports = exports.default;\n} //# sourceMappingURL=draft-mode.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NsaWVudC9jb21wb25lbnRzL2RyYWZ0LW1vZGUuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYkEsOENBQTZDO0lBQ3pDRyxPQUFPO0FBQ1gsQ0FBQyxFQUFDO0FBQ0ZILDZDQUE0QztJQUN4Q0ksWUFBWTtJQUNaQyxLQUFLO1FBQ0QsT0FBT0M7SUFDWDtBQUNKLENBQUMsRUFBQztBQUNGLE1BQU1DLDJCQUEyQkMsbUJBQU9BLENBQUMsd0hBQTZCO0FBQ3RFLE1BQU1GO0lBQ0YsSUFBSUcsWUFBWTtRQUNaLE9BQU8sSUFBSSxDQUFDQyxVQUFVRDtJQUMxQjtJQUNBRSxTQUFTO1FBQ0wsSUFBSSxDQUFDLEdBQUdKLHlCQUF5QkssdUJBQXNCLEVBQUcseUJBQXlCO1lBQy9FO1FBQ0o7UUFDQSxPQUFPLElBQUksQ0FBQ0YsVUFBVUM7SUFDMUI7SUFDQUUsVUFBVTtRQUNOLElBQUksQ0FBQyxHQUFHTix5QkFBeUJLLHVCQUFzQixFQUFHLDBCQUEwQjtZQUNoRjtRQUNKO1FBQ0EsT0FBTyxJQUFJLENBQUNGLFVBQVVHO0lBQzFCO0lBQ0FDLFlBQVlDLFFBQVEsQ0FBQztRQUNqQixJQUFJLENBQUNMLFlBQVlLO0lBQ3JCO0FBQ0o7QUFFQSxJQUFJLENBQUMsT0FBT2IsUUFBUWMsWUFBWSxjQUFlLE9BQU9kLFFBQVFjLFlBQVksWUFBWWQsUUFBUWMsWUFBWSxJQUFJLEtBQU0sT0FBT2QsUUFBUWMsUUFBUUMsZUFBZSxhQUFhO0lBQ3JLakIsT0FBT0MsZUFBZUMsUUFBUWMsU0FBUyxjQUFjO1FBQUViLE9BQU87SUFBSztJQUNuRUgsT0FBT2tCLE9BQU9oQixRQUFRYyxTQUFTZDtJQUMvQmlCLE9BQU9qQixVQUFVQSxRQUFRYztBQUMzQixFQUVBLHNDQUFzQyIsInNvdXJjZXMiOlsid2VicGFjazovL2Z1bGxzdGFjay1yb2xlLWJhc2VkLW5leHRqcy0yLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9jbGllbnQvY29tcG9uZW50cy9kcmFmdC1tb2RlLmpzPzMxYWMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgICB2YWx1ZTogdHJ1ZVxufSk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJEcmFmdE1vZGVcIiwge1xuICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgZ2V0OiBmdW5jdGlvbigpIHtcbiAgICAgICAgcmV0dXJuIERyYWZ0TW9kZTtcbiAgICB9XG59KTtcbmNvbnN0IF9zdGF0aWNnZW5lcmF0aW9uYmFpbG91dCA9IHJlcXVpcmUoXCIuL3N0YXRpYy1nZW5lcmF0aW9uLWJhaWxvdXRcIik7XG5jbGFzcyBEcmFmdE1vZGUge1xuICAgIGdldCBpc0VuYWJsZWQoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9wcm92aWRlci5pc0VuYWJsZWQ7XG4gICAgfVxuICAgIGVuYWJsZSgpIHtcbiAgICAgICAgaWYgKCgwLCBfc3RhdGljZ2VuZXJhdGlvbmJhaWxvdXQuc3RhdGljR2VuZXJhdGlvbkJhaWxvdXQpKFwiZHJhZnRNb2RlKCkuZW5hYmxlKClcIikpIHtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdGhpcy5fcHJvdmlkZXIuZW5hYmxlKCk7XG4gICAgfVxuICAgIGRpc2FibGUoKSB7XG4gICAgICAgIGlmICgoMCwgX3N0YXRpY2dlbmVyYXRpb25iYWlsb3V0LnN0YXRpY0dlbmVyYXRpb25CYWlsb3V0KShcImRyYWZ0TW9kZSgpLmRpc2FibGUoKVwiKSkge1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB0aGlzLl9wcm92aWRlci5kaXNhYmxlKCk7XG4gICAgfVxuICAgIGNvbnN0cnVjdG9yKHByb3ZpZGVyKXtcbiAgICAgICAgdGhpcy5fcHJvdmlkZXIgPSBwcm92aWRlcjtcbiAgICB9XG59XG5cbmlmICgodHlwZW9mIGV4cG9ydHMuZGVmYXVsdCA9PT0gJ2Z1bmN0aW9uJyB8fCAodHlwZW9mIGV4cG9ydHMuZGVmYXVsdCA9PT0gJ29iamVjdCcgJiYgZXhwb3J0cy5kZWZhdWx0ICE9PSBudWxsKSkgJiYgdHlwZW9mIGV4cG9ydHMuZGVmYXVsdC5fX2VzTW9kdWxlID09PSAndW5kZWZpbmVkJykge1xuICBPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cy5kZWZhdWx0LCAnX19lc01vZHVsZScsIHsgdmFsdWU6IHRydWUgfSk7XG4gIE9iamVjdC5hc3NpZ24oZXhwb3J0cy5kZWZhdWx0LCBleHBvcnRzKTtcbiAgbW9kdWxlLmV4cG9ydHMgPSBleHBvcnRzLmRlZmF1bHQ7XG59XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRyYWZ0LW1vZGUuanMubWFwIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiZW51bWVyYWJsZSIsImdldCIsIkRyYWZ0TW9kZSIsIl9zdGF0aWNnZW5lcmF0aW9uYmFpbG91dCIsInJlcXVpcmUiLCJpc0VuYWJsZWQiLCJfcHJvdmlkZXIiLCJlbmFibGUiLCJzdGF0aWNHZW5lcmF0aW9uQmFpbG91dCIsImRpc2FibGUiLCJjb25zdHJ1Y3RvciIsInByb3ZpZGVyIiwiZGVmYXVsdCIsIl9fZXNNb2R1bGUiLCJhc3NpZ24iLCJtb2R1bGUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/next/dist/client/components/draft-mode.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/next/dist/client/components/headers.js":
/*!*************************************************************!*\
  !*** ./node_modules/next/dist/client/components/headers.js ***!
  \*************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\n0 && (0);\nfunction _export(target, all) {\n    for(var name in all)Object.defineProperty(target, name, {\n        enumerable: true,\n        get: all[name]\n    });\n}\n_export(exports, {\n    headers: function() {\n        return headers;\n    },\n    cookies: function() {\n        return cookies;\n    },\n    draftMode: function() {\n        return draftMode;\n    }\n});\nconst _requestcookies = __webpack_require__(/*! ../../server/web/spec-extension/adapters/request-cookies */ \"(sc_server)/./node_modules/next/dist/server/web/spec-extension/adapters/request-cookies.js\");\nconst _headers = __webpack_require__(/*! ../../server/web/spec-extension/adapters/headers */ \"(sc_server)/./node_modules/next/dist/server/web/spec-extension/adapters/headers.js\");\nconst _cookies = __webpack_require__(/*! ../../server/web/spec-extension/cookies */ \"(sc_server)/./node_modules/next/dist/server/web/spec-extension/cookies.js\");\nconst _requestasyncstorage = __webpack_require__(/*! ./request-async-storage */ \"(sc_shared)/./node_modules/next/dist/client/components/request-async-storage.js\");\nconst _actionasyncstorage = __webpack_require__(/*! ./action-async-storage */ \"(sc_shared)/./node_modules/next/dist/client/components/action-async-storage.js\");\nconst _staticgenerationbailout = __webpack_require__(/*! ./static-generation-bailout */ \"(sc_server)/./node_modules/next/dist/client/components/static-generation-bailout.js\");\nconst _draftmode = __webpack_require__(/*! ./draft-mode */ \"(sc_server)/./node_modules/next/dist/client/components/draft-mode.js\");\nfunction headers() {\n    if ((0, _staticgenerationbailout.staticGenerationBailout)(\"headers\")) {\n        return _headers.HeadersAdapter.seal(new Headers({}));\n    }\n    const requestStore = _requestasyncstorage.requestAsyncStorage.getStore();\n    if (!requestStore) {\n        throw new Error(\"Invariant: Method expects to have requestAsyncStorage, none available\");\n    }\n    return requestStore.headers;\n}\nfunction cookies() {\n    if ((0, _staticgenerationbailout.staticGenerationBailout)(\"cookies\")) {\n        return _requestcookies.RequestCookiesAdapter.seal(new _cookies.RequestCookies(new Headers({})));\n    }\n    const requestStore = _requestasyncstorage.requestAsyncStorage.getStore();\n    if (!requestStore) {\n        throw new Error(\"Invariant: Method expects to have requestAsyncStorage, none available\");\n    }\n    const asyncActionStore = _actionasyncstorage.actionAsyncStorage.getStore();\n    if (asyncActionStore && (asyncActionStore.isAction || asyncActionStore.isAppRoute)) {\n        // We can't conditionally return different types here based on the context.\n        // To avoid confusion, we always return the readonly type here.\n        return requestStore.mutableCookies;\n    }\n    return requestStore.cookies;\n}\nfunction draftMode() {\n    const requestStore = _requestasyncstorage.requestAsyncStorage.getStore();\n    if (!requestStore) {\n        throw new Error(\"Invariant: Method expects to have requestAsyncStorage, none available\");\n    }\n    return new _draftmode.DraftMode(requestStore.draftMode);\n}\nif ((typeof exports.default === \"function\" || typeof exports.default === \"object\" && exports.default !== null) && typeof exports.default.__esModule === \"undefined\") {\n    Object.defineProperty(exports.default, \"__esModule\", {\n        value: true\n    });\n    Object.assign(exports.default, exports);\n    module.exports = exports.default;\n} //# sourceMappingURL=headers.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NsaWVudC9jb21wb25lbnRzL2hlYWRlcnMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYkEsOENBQTZDO0lBQ3pDRyxPQUFPO0FBQ1gsQ0FBQyxFQUFDO0FBQ0YsS0FBTUMsQ0FBQUEsQ0FJTjtBQUNBLFNBQVNJLFFBQVFDLE1BQU0sRUFBRUMsR0FBRztJQUN4QixJQUFJLElBQUlDLFFBQVFELElBQUlWLE9BQU9DLGVBQWVRLFFBQVFFLE1BQU07UUFDcERDLFlBQVk7UUFDWkMsS0FBS0gsR0FBRyxDQUFDQyxLQUFLO0lBQ2xCO0FBQ0o7QUFDQUgsUUFBUU4sU0FBUztJQUNiRyxTQUFTO1FBQ0wsT0FBT0E7SUFDWDtJQUNBQyxTQUFTO1FBQ0wsT0FBT0E7SUFDWDtJQUNBQyxXQUFXO1FBQ1AsT0FBT0E7SUFDWDtBQUNKO0FBQ0EsTUFBTU8sa0JBQWtCQyxtQkFBT0EsQ0FBQyw0SkFBMEQ7QUFDMUYsTUFBTUMsV0FBV0QsbUJBQU9BLENBQUMsNElBQWtEO0FBQzNFLE1BQU1FLFdBQVdGLG1CQUFPQSxDQUFDLDBIQUF5QztBQUNsRSxNQUFNRyx1QkFBdUJILG1CQUFPQSxDQUFDLGdIQUF5QjtBQUM5RCxNQUFNSSxzQkFBc0JKLG1CQUFPQSxDQUFDLDhHQUF3QjtBQUM1RCxNQUFNSywyQkFBMkJMLG1CQUFPQSxDQUFDLHdIQUE2QjtBQUN0RSxNQUFNTSxhQUFhTixtQkFBT0EsQ0FBQywwRkFBYztBQUN6QyxTQUFTVjtJQUNMLElBQUksQ0FBQyxHQUFHZSx5QkFBeUJFLHVCQUFzQixFQUFHLFlBQVk7UUFDbEUsT0FBT04sU0FBU08sZUFBZUMsS0FBSyxJQUFJQyxRQUFRLENBQUM7SUFDckQ7SUFDQSxNQUFNQyxlQUFlUixxQkFBcUJTLG9CQUFvQkM7SUFDOUQsSUFBSSxDQUFDRixjQUFjO1FBQ2YsTUFBTSxJQUFJRyxNQUFNO0lBQ3BCO0lBQ0EsT0FBT0gsYUFBYXJCO0FBQ3hCO0FBQ0EsU0FBU0M7SUFDTCxJQUFJLENBQUMsR0FBR2MseUJBQXlCRSx1QkFBc0IsRUFBRyxZQUFZO1FBQ2xFLE9BQU9SLGdCQUFnQmdCLHNCQUFzQk4sS0FBSyxJQUFJUCxTQUFTYyxlQUFlLElBQUlOLFFBQVEsQ0FBQztJQUMvRjtJQUNBLE1BQU1DLGVBQWVSLHFCQUFxQlMsb0JBQW9CQztJQUM5RCxJQUFJLENBQUNGLGNBQWM7UUFDZixNQUFNLElBQUlHLE1BQU07SUFDcEI7SUFDQSxNQUFNRyxtQkFBbUJiLG9CQUFvQmMsbUJBQW1CTDtJQUNoRSxJQUFJSSxvQkFBcUJBLENBQUFBLGlCQUFpQkUsWUFBWUYsaUJBQWlCRyxVQUFTLEdBQUk7UUFDaEYsMkVBQTJFO1FBQzNFLCtEQUErRDtRQUMvRCxPQUFPVCxhQUFhVTtJQUN4QjtJQUNBLE9BQU9WLGFBQWFwQjtBQUN4QjtBQUNBLFNBQVNDO0lBQ0wsTUFBTW1CLGVBQWVSLHFCQUFxQlMsb0JBQW9CQztJQUM5RCxJQUFJLENBQUNGLGNBQWM7UUFDZixNQUFNLElBQUlHLE1BQU07SUFDcEI7SUFDQSxPQUFPLElBQUlSLFdBQVdnQixVQUFVWCxhQUFhbkI7QUFDakQ7QUFFQSxJQUFJLENBQUMsT0FBT0wsUUFBUW9DLFlBQVksY0FBZSxPQUFPcEMsUUFBUW9DLFlBQVksWUFBWXBDLFFBQVFvQyxZQUFZLElBQUksS0FBTSxPQUFPcEMsUUFBUW9DLFFBQVFDLGVBQWUsYUFBYTtJQUNyS3ZDLE9BQU9DLGVBQWVDLFFBQVFvQyxTQUFTLGNBQWM7UUFBRW5DLE9BQU87SUFBSztJQUNuRUgsT0FBT3dDLE9BQU90QyxRQUFRb0MsU0FBU3BDO0lBQy9CRSxPQUFPRixVQUFVQSxRQUFRb0M7QUFDM0IsRUFFQSxtQ0FBbUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mdWxsc3RhY2stcm9sZS1iYXNlZC1uZXh0anMtMi8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY2xpZW50L2NvbXBvbmVudHMvaGVhZGVycy5qcz8wYmFmIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gICAgdmFsdWU6IHRydWVcbn0pO1xuMCAmJiAobW9kdWxlLmV4cG9ydHMgPSB7XG4gICAgaGVhZGVyczogbnVsbCxcbiAgICBjb29raWVzOiBudWxsLFxuICAgIGRyYWZ0TW9kZTogbnVsbFxufSk7XG5mdW5jdGlvbiBfZXhwb3J0KHRhcmdldCwgYWxsKSB7XG4gICAgZm9yKHZhciBuYW1lIGluIGFsbClPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBuYW1lLCB7XG4gICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgIGdldDogYWxsW25hbWVdXG4gICAgfSk7XG59XG5fZXhwb3J0KGV4cG9ydHMsIHtcbiAgICBoZWFkZXJzOiBmdW5jdGlvbigpIHtcbiAgICAgICAgcmV0dXJuIGhlYWRlcnM7XG4gICAgfSxcbiAgICBjb29raWVzOiBmdW5jdGlvbigpIHtcbiAgICAgICAgcmV0dXJuIGNvb2tpZXM7XG4gICAgfSxcbiAgICBkcmFmdE1vZGU6IGZ1bmN0aW9uKCkge1xuICAgICAgICByZXR1cm4gZHJhZnRNb2RlO1xuICAgIH1cbn0pO1xuY29uc3QgX3JlcXVlc3Rjb29raWVzID0gcmVxdWlyZShcIi4uLy4uL3NlcnZlci93ZWIvc3BlYy1leHRlbnNpb24vYWRhcHRlcnMvcmVxdWVzdC1jb29raWVzXCIpO1xuY29uc3QgX2hlYWRlcnMgPSByZXF1aXJlKFwiLi4vLi4vc2VydmVyL3dlYi9zcGVjLWV4dGVuc2lvbi9hZGFwdGVycy9oZWFkZXJzXCIpO1xuY29uc3QgX2Nvb2tpZXMgPSByZXF1aXJlKFwiLi4vLi4vc2VydmVyL3dlYi9zcGVjLWV4dGVuc2lvbi9jb29raWVzXCIpO1xuY29uc3QgX3JlcXVlc3Rhc3luY3N0b3JhZ2UgPSByZXF1aXJlKFwiLi9yZXF1ZXN0LWFzeW5jLXN0b3JhZ2VcIik7XG5jb25zdCBfYWN0aW9uYXN5bmNzdG9yYWdlID0gcmVxdWlyZShcIi4vYWN0aW9uLWFzeW5jLXN0b3JhZ2VcIik7XG5jb25zdCBfc3RhdGljZ2VuZXJhdGlvbmJhaWxvdXQgPSByZXF1aXJlKFwiLi9zdGF0aWMtZ2VuZXJhdGlvbi1iYWlsb3V0XCIpO1xuY29uc3QgX2RyYWZ0bW9kZSA9IHJlcXVpcmUoXCIuL2RyYWZ0LW1vZGVcIik7XG5mdW5jdGlvbiBoZWFkZXJzKCkge1xuICAgIGlmICgoMCwgX3N0YXRpY2dlbmVyYXRpb25iYWlsb3V0LnN0YXRpY0dlbmVyYXRpb25CYWlsb3V0KShcImhlYWRlcnNcIikpIHtcbiAgICAgICAgcmV0dXJuIF9oZWFkZXJzLkhlYWRlcnNBZGFwdGVyLnNlYWwobmV3IEhlYWRlcnMoe30pKTtcbiAgICB9XG4gICAgY29uc3QgcmVxdWVzdFN0b3JlID0gX3JlcXVlc3Rhc3luY3N0b3JhZ2UucmVxdWVzdEFzeW5jU3RvcmFnZS5nZXRTdG9yZSgpO1xuICAgIGlmICghcmVxdWVzdFN0b3JlKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcIkludmFyaWFudDogTWV0aG9kIGV4cGVjdHMgdG8gaGF2ZSByZXF1ZXN0QXN5bmNTdG9yYWdlLCBub25lIGF2YWlsYWJsZVwiKTtcbiAgICB9XG4gICAgcmV0dXJuIHJlcXVlc3RTdG9yZS5oZWFkZXJzO1xufVxuZnVuY3Rpb24gY29va2llcygpIHtcbiAgICBpZiAoKDAsIF9zdGF0aWNnZW5lcmF0aW9uYmFpbG91dC5zdGF0aWNHZW5lcmF0aW9uQmFpbG91dCkoXCJjb29raWVzXCIpKSB7XG4gICAgICAgIHJldHVybiBfcmVxdWVzdGNvb2tpZXMuUmVxdWVzdENvb2tpZXNBZGFwdGVyLnNlYWwobmV3IF9jb29raWVzLlJlcXVlc3RDb29raWVzKG5ldyBIZWFkZXJzKHt9KSkpO1xuICAgIH1cbiAgICBjb25zdCByZXF1ZXN0U3RvcmUgPSBfcmVxdWVzdGFzeW5jc3RvcmFnZS5yZXF1ZXN0QXN5bmNTdG9yYWdlLmdldFN0b3JlKCk7XG4gICAgaWYgKCFyZXF1ZXN0U3RvcmUpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiSW52YXJpYW50OiBNZXRob2QgZXhwZWN0cyB0byBoYXZlIHJlcXVlc3RBc3luY1N0b3JhZ2UsIG5vbmUgYXZhaWxhYmxlXCIpO1xuICAgIH1cbiAgICBjb25zdCBhc3luY0FjdGlvblN0b3JlID0gX2FjdGlvbmFzeW5jc3RvcmFnZS5hY3Rpb25Bc3luY1N0b3JhZ2UuZ2V0U3RvcmUoKTtcbiAgICBpZiAoYXN5bmNBY3Rpb25TdG9yZSAmJiAoYXN5bmNBY3Rpb25TdG9yZS5pc0FjdGlvbiB8fCBhc3luY0FjdGlvblN0b3JlLmlzQXBwUm91dGUpKSB7XG4gICAgICAgIC8vIFdlIGNhbid0IGNvbmRpdGlvbmFsbHkgcmV0dXJuIGRpZmZlcmVudCB0eXBlcyBoZXJlIGJhc2VkIG9uIHRoZSBjb250ZXh0LlxuICAgICAgICAvLyBUbyBhdm9pZCBjb25mdXNpb24sIHdlIGFsd2F5cyByZXR1cm4gdGhlIHJlYWRvbmx5IHR5cGUgaGVyZS5cbiAgICAgICAgcmV0dXJuIHJlcXVlc3RTdG9yZS5tdXRhYmxlQ29va2llcztcbiAgICB9XG4gICAgcmV0dXJuIHJlcXVlc3RTdG9yZS5jb29raWVzO1xufVxuZnVuY3Rpb24gZHJhZnRNb2RlKCkge1xuICAgIGNvbnN0IHJlcXVlc3RTdG9yZSA9IF9yZXF1ZXN0YXN5bmNzdG9yYWdlLnJlcXVlc3RBc3luY1N0b3JhZ2UuZ2V0U3RvcmUoKTtcbiAgICBpZiAoIXJlcXVlc3RTdG9yZSkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJJbnZhcmlhbnQ6IE1ldGhvZCBleHBlY3RzIHRvIGhhdmUgcmVxdWVzdEFzeW5jU3RvcmFnZSwgbm9uZSBhdmFpbGFibGVcIik7XG4gICAgfVxuICAgIHJldHVybiBuZXcgX2RyYWZ0bW9kZS5EcmFmdE1vZGUocmVxdWVzdFN0b3JlLmRyYWZ0TW9kZSk7XG59XG5cbmlmICgodHlwZW9mIGV4cG9ydHMuZGVmYXVsdCA9PT0gJ2Z1bmN0aW9uJyB8fCAodHlwZW9mIGV4cG9ydHMuZGVmYXVsdCA9PT0gJ29iamVjdCcgJiYgZXhwb3J0cy5kZWZhdWx0ICE9PSBudWxsKSkgJiYgdHlwZW9mIGV4cG9ydHMuZGVmYXVsdC5fX2VzTW9kdWxlID09PSAndW5kZWZpbmVkJykge1xuICBPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cy5kZWZhdWx0LCAnX19lc01vZHVsZScsIHsgdmFsdWU6IHRydWUgfSk7XG4gIE9iamVjdC5hc3NpZ24oZXhwb3J0cy5kZWZhdWx0LCBleHBvcnRzKTtcbiAgbW9kdWxlLmV4cG9ydHMgPSBleHBvcnRzLmRlZmF1bHQ7XG59XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWhlYWRlcnMuanMubWFwIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwibW9kdWxlIiwiaGVhZGVycyIsImNvb2tpZXMiLCJkcmFmdE1vZGUiLCJfZXhwb3J0IiwidGFyZ2V0IiwiYWxsIiwibmFtZSIsImVudW1lcmFibGUiLCJnZXQiLCJfcmVxdWVzdGNvb2tpZXMiLCJyZXF1aXJlIiwiX2hlYWRlcnMiLCJfY29va2llcyIsIl9yZXF1ZXN0YXN5bmNzdG9yYWdlIiwiX2FjdGlvbmFzeW5jc3RvcmFnZSIsIl9zdGF0aWNnZW5lcmF0aW9uYmFpbG91dCIsIl9kcmFmdG1vZGUiLCJzdGF0aWNHZW5lcmF0aW9uQmFpbG91dCIsIkhlYWRlcnNBZGFwdGVyIiwic2VhbCIsIkhlYWRlcnMiLCJyZXF1ZXN0U3RvcmUiLCJyZXF1ZXN0QXN5bmNTdG9yYWdlIiwiZ2V0U3RvcmUiLCJFcnJvciIsIlJlcXVlc3RDb29raWVzQWRhcHRlciIsIlJlcXVlc3RDb29raWVzIiwiYXN5bmNBY3Rpb25TdG9yZSIsImFjdGlvbkFzeW5jU3RvcmFnZSIsImlzQWN0aW9uIiwiaXNBcHBSb3V0ZSIsIm11dGFibGVDb29raWVzIiwiRHJhZnRNb2RlIiwiZGVmYXVsdCIsIl9fZXNNb2R1bGUiLCJhc3NpZ24iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/next/dist/client/components/headers.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/next/dist/client/components/hooks-server-context.js":
/*!**************************************************************************!*\
  !*** ./node_modules/next/dist/client/components/hooks-server-context.js ***!
  \**************************************************************************/
/***/ ((module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\n0 && (0);\nfunction _export(target, all) {\n    for(var name in all)Object.defineProperty(target, name, {\n        enumerable: true,\n        get: all[name]\n    });\n}\n_export(exports, {\n    DYNAMIC_ERROR_CODE: function() {\n        return DYNAMIC_ERROR_CODE;\n    },\n    DynamicServerError: function() {\n        return DynamicServerError;\n    }\n});\nconst DYNAMIC_ERROR_CODE = \"DYNAMIC_SERVER_USAGE\";\nclass DynamicServerError extends Error {\n    constructor(type){\n        super(\"Dynamic server usage: \" + type);\n        this.digest = DYNAMIC_ERROR_CODE;\n    }\n}\nif ((typeof exports.default === \"function\" || typeof exports.default === \"object\" && exports.default !== null) && typeof exports.default.__esModule === \"undefined\") {\n    Object.defineProperty(exports.default, \"__esModule\", {\n        value: true\n    });\n    Object.assign(exports.default, exports);\n    module.exports = exports.default;\n} //# sourceMappingURL=hooks-server-context.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NsaWVudC9jb21wb25lbnRzL2hvb2tzLXNlcnZlci1jb250ZXh0LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2JBLDhDQUE2QztJQUN6Q0csT0FBTztBQUNYLENBQUMsRUFBQztBQUNGLEtBQU1DLENBQUFBLENBR047QUFDQSxTQUFTRyxRQUFRQyxNQUFNLEVBQUVDLEdBQUc7SUFDeEIsSUFBSSxJQUFJQyxRQUFRRCxJQUFJVCxPQUFPQyxlQUFlTyxRQUFRRSxNQUFNO1FBQ3BEQyxZQUFZO1FBQ1pDLEtBQUtILEdBQUcsQ0FBQ0MsS0FBSztJQUNsQjtBQUNKO0FBQ0FILFFBQVFMLFNBQVM7SUFDYkcsb0JBQW9CO1FBQ2hCLE9BQU9BO0lBQ1g7SUFDQUMsb0JBQW9CO1FBQ2hCLE9BQU9BO0lBQ1g7QUFDSjtBQUNBLE1BQU1ELHFCQUFxQjtBQUMzQixNQUFNQywyQkFBMkJPO0lBQzdCQyxZQUFZQyxJQUFJLENBQUM7UUFDYixLQUFLLENBQUMsMkJBQTJCQTtRQUNqQyxJQUFJLENBQUNDLFNBQVNYO0lBQ2xCO0FBQ0o7QUFFQSxJQUFJLENBQUMsT0FBT0gsUUFBUWUsWUFBWSxjQUFlLE9BQU9mLFFBQVFlLFlBQVksWUFBWWYsUUFBUWUsWUFBWSxJQUFJLEtBQU0sT0FBT2YsUUFBUWUsUUFBUUMsZUFBZSxhQUFhO0lBQ3JLbEIsT0FBT0MsZUFBZUMsUUFBUWUsU0FBUyxjQUFjO1FBQUVkLE9BQU87SUFBSztJQUNuRUgsT0FBT21CLE9BQU9qQixRQUFRZSxTQUFTZjtJQUMvQkUsT0FBT0YsVUFBVUEsUUFBUWU7QUFDM0IsRUFFQSxnREFBZ0QiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mdWxsc3RhY2stcm9sZS1iYXNlZC1uZXh0anMtMi8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY2xpZW50L2NvbXBvbmVudHMvaG9va3Mtc2VydmVyLWNvbnRleHQuanM/MDA5YSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICAgIHZhbHVlOiB0cnVlXG59KTtcbjAgJiYgKG1vZHVsZS5leHBvcnRzID0ge1xuICAgIERZTkFNSUNfRVJST1JfQ09ERTogbnVsbCxcbiAgICBEeW5hbWljU2VydmVyRXJyb3I6IG51bGxcbn0pO1xuZnVuY3Rpb24gX2V4cG9ydCh0YXJnZXQsIGFsbCkge1xuICAgIGZvcih2YXIgbmFtZSBpbiBhbGwpT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCwgbmFtZSwge1xuICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICBnZXQ6IGFsbFtuYW1lXVxuICAgIH0pO1xufVxuX2V4cG9ydChleHBvcnRzLCB7XG4gICAgRFlOQU1JQ19FUlJPUl9DT0RFOiBmdW5jdGlvbigpIHtcbiAgICAgICAgcmV0dXJuIERZTkFNSUNfRVJST1JfQ09ERTtcbiAgICB9LFxuICAgIER5bmFtaWNTZXJ2ZXJFcnJvcjogZnVuY3Rpb24oKSB7XG4gICAgICAgIHJldHVybiBEeW5hbWljU2VydmVyRXJyb3I7XG4gICAgfVxufSk7XG5jb25zdCBEWU5BTUlDX0VSUk9SX0NPREUgPSBcIkRZTkFNSUNfU0VSVkVSX1VTQUdFXCI7XG5jbGFzcyBEeW5hbWljU2VydmVyRXJyb3IgZXh0ZW5kcyBFcnJvciB7XG4gICAgY29uc3RydWN0b3IodHlwZSl7XG4gICAgICAgIHN1cGVyKFwiRHluYW1pYyBzZXJ2ZXIgdXNhZ2U6IFwiICsgdHlwZSk7XG4gICAgICAgIHRoaXMuZGlnZXN0ID0gRFlOQU1JQ19FUlJPUl9DT0RFO1xuICAgIH1cbn1cblxuaWYgKCh0eXBlb2YgZXhwb3J0cy5kZWZhdWx0ID09PSAnZnVuY3Rpb24nIHx8ICh0eXBlb2YgZXhwb3J0cy5kZWZhdWx0ID09PSAnb2JqZWN0JyAmJiBleHBvcnRzLmRlZmF1bHQgIT09IG51bGwpKSAmJiB0eXBlb2YgZXhwb3J0cy5kZWZhdWx0Ll9fZXNNb2R1bGUgPT09ICd1bmRlZmluZWQnKSB7XG4gIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLmRlZmF1bHQsICdfX2VzTW9kdWxlJywgeyB2YWx1ZTogdHJ1ZSB9KTtcbiAgT2JqZWN0LmFzc2lnbihleHBvcnRzLmRlZmF1bHQsIGV4cG9ydHMpO1xuICBtb2R1bGUuZXhwb3J0cyA9IGV4cG9ydHMuZGVmYXVsdDtcbn1cblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aG9va3Mtc2VydmVyLWNvbnRleHQuanMubWFwIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwibW9kdWxlIiwiRFlOQU1JQ19FUlJPUl9DT0RFIiwiRHluYW1pY1NlcnZlckVycm9yIiwiX2V4cG9ydCIsInRhcmdldCIsImFsbCIsIm5hbWUiLCJlbnVtZXJhYmxlIiwiZ2V0IiwiRXJyb3IiLCJjb25zdHJ1Y3RvciIsInR5cGUiLCJkaWdlc3QiLCJkZWZhdWx0IiwiX19lc01vZHVsZSIsImFzc2lnbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/next/dist/client/components/hooks-server-context.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/next/dist/client/components/not-found.js":
/*!***************************************************************!*\
  !*** ./node_modules/next/dist/client/components/not-found.js ***!
  \***************************************************************/
/***/ ((module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\n0 && (0);\nfunction _export(target, all) {\n    for(var name in all)Object.defineProperty(target, name, {\n        enumerable: true,\n        get: all[name]\n    });\n}\n_export(exports, {\n    notFound: function() {\n        return notFound;\n    },\n    isNotFoundError: function() {\n        return isNotFoundError;\n    }\n});\nconst NOT_FOUND_ERROR_CODE = \"NEXT_NOT_FOUND\";\nfunction notFound() {\n    // eslint-disable-next-line no-throw-literal\n    const error = new Error(NOT_FOUND_ERROR_CODE);\n    error.digest = NOT_FOUND_ERROR_CODE;\n    throw error;\n}\nfunction isNotFoundError(error) {\n    return (error == null ? void 0 : error.digest) === NOT_FOUND_ERROR_CODE;\n}\nif ((typeof exports.default === \"function\" || typeof exports.default === \"object\" && exports.default !== null) && typeof exports.default.__esModule === \"undefined\") {\n    Object.defineProperty(exports.default, \"__esModule\", {\n        value: true\n    });\n    Object.assign(exports.default, exports);\n    module.exports = exports.default;\n} //# sourceMappingURL=not-found.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NsaWVudC9jb21wb25lbnRzL25vdC1mb3VuZC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFDekNHLE9BQU87QUFDWCxDQUFDLEVBQUM7QUFDRixLQUFNQyxDQUFBQSxDQUdOO0FBQ0EsU0FBU0csUUFBUUMsTUFBTSxFQUFFQyxHQUFHO0lBQ3hCLElBQUksSUFBSUMsUUFBUUQsSUFBSVQsT0FBT0MsZUFBZU8sUUFBUUUsTUFBTTtRQUNwREMsWUFBWTtRQUNaQyxLQUFLSCxHQUFHLENBQUNDLEtBQUs7SUFDbEI7QUFDSjtBQUNBSCxRQUFRTCxTQUFTO0lBQ2JHLFVBQVU7UUFDTixPQUFPQTtJQUNYO0lBQ0FDLGlCQUFpQjtRQUNiLE9BQU9BO0lBQ1g7QUFDSjtBQUNBLE1BQU1PLHVCQUF1QjtBQUM3QixTQUFTUjtJQUNMLDRDQUE0QztJQUM1QyxNQUFNUyxRQUFRLElBQUlDLE1BQU1GO0lBQ3hCQyxNQUFNRSxTQUFTSDtJQUNmLE1BQU1DO0FBQ1Y7QUFDQSxTQUFTUixnQkFBZ0JRLEtBQUs7SUFDMUIsT0FBTyxDQUFDQSxTQUFTLE9BQU8sS0FBSyxJQUFJQSxNQUFNRSxNQUFLLE1BQU9IO0FBQ3ZEO0FBRUEsSUFBSSxDQUFDLE9BQU9YLFFBQVFlLFlBQVksY0FBZSxPQUFPZixRQUFRZSxZQUFZLFlBQVlmLFFBQVFlLFlBQVksSUFBSSxLQUFNLE9BQU9mLFFBQVFlLFFBQVFDLGVBQWUsYUFBYTtJQUNyS2xCLE9BQU9DLGVBQWVDLFFBQVFlLFNBQVMsY0FBYztRQUFFZCxPQUFPO0lBQUs7SUFDbkVILE9BQU9tQixPQUFPakIsUUFBUWUsU0FBU2Y7SUFDL0JFLE9BQU9GLFVBQVVBLFFBQVFlO0FBQzNCLEVBRUEscUNBQXFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZnVsbHN0YWNrLXJvbGUtYmFzZWQtbmV4dGpzLTIvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NsaWVudC9jb21wb25lbnRzL25vdC1mb3VuZC5qcz80MjAzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gICAgdmFsdWU6IHRydWVcbn0pO1xuMCAmJiAobW9kdWxlLmV4cG9ydHMgPSB7XG4gICAgbm90Rm91bmQ6IG51bGwsXG4gICAgaXNOb3RGb3VuZEVycm9yOiBudWxsXG59KTtcbmZ1bmN0aW9uIF9leHBvcnQodGFyZ2V0LCBhbGwpIHtcbiAgICBmb3IodmFyIG5hbWUgaW4gYWxsKU9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIG5hbWUsIHtcbiAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgICAgZ2V0OiBhbGxbbmFtZV1cbiAgICB9KTtcbn1cbl9leHBvcnQoZXhwb3J0cywge1xuICAgIG5vdEZvdW5kOiBmdW5jdGlvbigpIHtcbiAgICAgICAgcmV0dXJuIG5vdEZvdW5kO1xuICAgIH0sXG4gICAgaXNOb3RGb3VuZEVycm9yOiBmdW5jdGlvbigpIHtcbiAgICAgICAgcmV0dXJuIGlzTm90Rm91bmRFcnJvcjtcbiAgICB9XG59KTtcbmNvbnN0IE5PVF9GT1VORF9FUlJPUl9DT0RFID0gXCJORVhUX05PVF9GT1VORFwiO1xuZnVuY3Rpb24gbm90Rm91bmQoKSB7XG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXRocm93LWxpdGVyYWxcbiAgICBjb25zdCBlcnJvciA9IG5ldyBFcnJvcihOT1RfRk9VTkRfRVJST1JfQ09ERSk7XG4gICAgZXJyb3IuZGlnZXN0ID0gTk9UX0ZPVU5EX0VSUk9SX0NPREU7XG4gICAgdGhyb3cgZXJyb3I7XG59XG5mdW5jdGlvbiBpc05vdEZvdW5kRXJyb3IoZXJyb3IpIHtcbiAgICByZXR1cm4gKGVycm9yID09IG51bGwgPyB2b2lkIDAgOiBlcnJvci5kaWdlc3QpID09PSBOT1RfRk9VTkRfRVJST1JfQ09ERTtcbn1cblxuaWYgKCh0eXBlb2YgZXhwb3J0cy5kZWZhdWx0ID09PSAnZnVuY3Rpb24nIHx8ICh0eXBlb2YgZXhwb3J0cy5kZWZhdWx0ID09PSAnb2JqZWN0JyAmJiBleHBvcnRzLmRlZmF1bHQgIT09IG51bGwpKSAmJiB0eXBlb2YgZXhwb3J0cy5kZWZhdWx0Ll9fZXNNb2R1bGUgPT09ICd1bmRlZmluZWQnKSB7XG4gIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLmRlZmF1bHQsICdfX2VzTW9kdWxlJywgeyB2YWx1ZTogdHJ1ZSB9KTtcbiAgT2JqZWN0LmFzc2lnbihleHBvcnRzLmRlZmF1bHQsIGV4cG9ydHMpO1xuICBtb2R1bGUuZXhwb3J0cyA9IGV4cG9ydHMuZGVmYXVsdDtcbn1cblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9bm90LWZvdW5kLmpzLm1hcCJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsIm1vZHVsZSIsIm5vdEZvdW5kIiwiaXNOb3RGb3VuZEVycm9yIiwiX2V4cG9ydCIsInRhcmdldCIsImFsbCIsIm5hbWUiLCJlbnVtZXJhYmxlIiwiZ2V0IiwiTk9UX0ZPVU5EX0VSUk9SX0NPREUiLCJlcnJvciIsIkVycm9yIiwiZGlnZXN0IiwiZGVmYXVsdCIsIl9fZXNNb2R1bGUiLCJhc3NpZ24iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/next/dist/client/components/not-found.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/next/dist/client/components/redirect.js":
/*!**************************************************************!*\
  !*** ./node_modules/next/dist/client/components/redirect.js ***!
  \**************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\n0 && (0);\nfunction _export(target, all) {\n    for(var name in all)Object.defineProperty(target, name, {\n        enumerable: true,\n        get: all[name]\n    });\n}\n_export(exports, {\n    RedirectType: function() {\n        return RedirectType;\n    },\n    getRedirectError: function() {\n        return getRedirectError;\n    },\n    redirect: function() {\n        return redirect;\n    },\n    isRedirectError: function() {\n        return isRedirectError;\n    },\n    getURLFromRedirectError: function() {\n        return getURLFromRedirectError;\n    },\n    getRedirectTypeFromError: function() {\n        return getRedirectTypeFromError;\n    }\n});\nconst _requestasyncstorage = __webpack_require__(/*! ./request-async-storage */ \"(sc_shared)/./node_modules/next/dist/client/components/request-async-storage.js\");\nconst REDIRECT_ERROR_CODE = \"NEXT_REDIRECT\";\nvar RedirectType;\n(function(RedirectType) {\n    RedirectType[\"push\"] = \"push\";\n    RedirectType[\"replace\"] = \"replace\";\n})(RedirectType || (RedirectType = {}));\nfunction getRedirectError(url, type) {\n    const error = new Error(REDIRECT_ERROR_CODE);\n    error.digest = REDIRECT_ERROR_CODE + \";\" + type + \";\" + url;\n    const requestStore = _requestasyncstorage.requestAsyncStorage.getStore();\n    if (requestStore) {\n        error.mutableCookies = requestStore.mutableCookies;\n    }\n    return error;\n}\nfunction redirect(url, type) {\n    if (type === void 0) type = \"replace\";\n    throw getRedirectError(url, type);\n}\nfunction isRedirectError(error) {\n    if (typeof (error == null ? void 0 : error.digest) !== \"string\") return false;\n    const [errorCode, type, destination] = error.digest.split(\";\", 3);\n    return errorCode === REDIRECT_ERROR_CODE && (type === \"replace\" || type === \"push\") && typeof destination === \"string\";\n}\nfunction getURLFromRedirectError(error) {\n    if (!isRedirectError(error)) return null;\n    // Slices off the beginning of the digest that contains the code and the\n    // separating ';'.\n    return error.digest.split(\";\", 3)[2];\n}\nfunction getRedirectTypeFromError(error) {\n    if (!isRedirectError(error)) {\n        throw new Error(\"Not a redirect error\");\n    }\n    return error.digest.split(\";\", 3)[1];\n}\nif ((typeof exports.default === \"function\" || typeof exports.default === \"object\" && exports.default !== null) && typeof exports.default.__esModule === \"undefined\") {\n    Object.defineProperty(exports.default, \"__esModule\", {\n        value: true\n    });\n    Object.assign(exports.default, exports);\n    module.exports = exports.default;\n} //# sourceMappingURL=redirect.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NsaWVudC9jb21wb25lbnRzL3JlZGlyZWN0LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2JBLDhDQUE2QztJQUN6Q0csT0FBTztBQUNYLENBQUMsRUFBQztBQUNGLEtBQU1DLENBQUFBLENBT047QUFDQSxTQUFTTyxRQUFRQyxNQUFNLEVBQUVDLEdBQUc7SUFDeEIsSUFBSSxJQUFJQyxRQUFRRCxJQUFJYixPQUFPQyxlQUFlVyxRQUFRRSxNQUFNO1FBQ3BEQyxZQUFZO1FBQ1pDLEtBQUtILEdBQUcsQ0FBQ0MsS0FBSztJQUNsQjtBQUNKO0FBQ0FILFFBQVFULFNBQVM7SUFDYkcsY0FBYztRQUNWLE9BQU9BO0lBQ1g7SUFDQUMsa0JBQWtCO1FBQ2QsT0FBT0E7SUFDWDtJQUNBQyxVQUFVO1FBQ04sT0FBT0E7SUFDWDtJQUNBQyxpQkFBaUI7UUFDYixPQUFPQTtJQUNYO0lBQ0FDLHlCQUF5QjtRQUNyQixPQUFPQTtJQUNYO0lBQ0FDLDBCQUEwQjtRQUN0QixPQUFPQTtJQUNYO0FBQ0o7QUFDQSxNQUFNTyx1QkFBdUJDLG1CQUFPQSxDQUFDLGdIQUF5QjtBQUM5RCxNQUFNQyxzQkFBc0I7QUFDNUIsSUFBSWQ7QUFDSCxVQUFTQSxZQUFZO0lBQ2xCQSxZQUFZLENBQUMsT0FBTyxHQUFHO0lBQ3ZCQSxZQUFZLENBQUMsVUFBVSxHQUFHO0FBQzlCLEdBQUdBLGdCQUFpQkEsQ0FBQUEsZUFBZSxDQUFDO0FBQ3BDLFNBQVNDLGlCQUFpQmMsR0FBRyxFQUFFQyxJQUFJO0lBQy9CLE1BQU1DLFFBQVEsSUFBSUMsTUFBTUo7SUFDeEJHLE1BQU1FLFNBQVNMLHNCQUFzQixNQUFNRSxPQUFPLE1BQU1EO0lBQ3hELE1BQU1LLGVBQWVSLHFCQUFxQlMsb0JBQW9CQztJQUM5RCxJQUFJRixjQUFjO1FBQ2RILE1BQU1NLGlCQUFpQkgsYUFBYUc7SUFDeEM7SUFDQSxPQUFPTjtBQUNYO0FBQ0EsU0FBU2YsU0FBU2EsR0FBRyxFQUFFQyxJQUFJO0lBQ3ZCLElBQUlBLFNBQVMsS0FBSyxHQUFHQSxPQUFPO0lBQzVCLE1BQU1mLGlCQUFpQmMsS0FBS0M7QUFDaEM7QUFDQSxTQUFTYixnQkFBZ0JjLEtBQUs7SUFDMUIsSUFBSSxPQUFRQSxDQUFBQSxTQUFTLE9BQU8sS0FBSyxJQUFJQSxNQUFNRSxNQUFLLE1BQU8sVUFBVSxPQUFPO0lBQ3hFLE1BQU0sQ0FBQ0ssV0FBV1IsTUFBTVMsWUFBWSxHQUFHUixNQUFNRSxPQUFPTyxNQUFNLEtBQUs7SUFDL0QsT0FBT0YsY0FBY1YsdUJBQXdCRSxDQUFBQSxTQUFTLGFBQWFBLFNBQVMsTUFBSyxLQUFNLE9BQU9TLGdCQUFnQjtBQUNsSDtBQUNBLFNBQVNyQix3QkFBd0JhLEtBQUs7SUFDbEMsSUFBSSxDQUFDZCxnQkFBZ0JjLFFBQVEsT0FBTztJQUNwQyx3RUFBd0U7SUFDeEUsa0JBQWtCO0lBQ2xCLE9BQU9BLE1BQU1FLE9BQU9PLE1BQU0sS0FBSyxFQUFFLENBQUMsRUFBRTtBQUN4QztBQUNBLFNBQVNyQix5QkFBeUJZLEtBQUs7SUFDbkMsSUFBSSxDQUFDZCxnQkFBZ0JjLFFBQVE7UUFDekIsTUFBTSxJQUFJQyxNQUFNO0lBQ3BCO0lBQ0EsT0FBT0QsTUFBTUUsT0FBT08sTUFBTSxLQUFLLEVBQUUsQ0FBQyxFQUFFO0FBQ3hDO0FBRUEsSUFBSSxDQUFDLE9BQU83QixRQUFROEIsWUFBWSxjQUFlLE9BQU85QixRQUFROEIsWUFBWSxZQUFZOUIsUUFBUThCLFlBQVksSUFBSSxLQUFNLE9BQU85QixRQUFROEIsUUFBUUMsZUFBZSxhQUFhO0lBQ3JLakMsT0FBT0MsZUFBZUMsUUFBUThCLFNBQVMsY0FBYztRQUFFN0IsT0FBTztJQUFLO0lBQ25FSCxPQUFPa0MsT0FBT2hDLFFBQVE4QixTQUFTOUI7SUFDL0JFLE9BQU9GLFVBQVVBLFFBQVE4QjtBQUMzQixFQUVBLG9DQUFvQyIsInNvdXJjZXMiOlsid2VicGFjazovL2Z1bGxzdGFjay1yb2xlLWJhc2VkLW5leHRqcy0yLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9jbGllbnQvY29tcG9uZW50cy9yZWRpcmVjdC5qcz9iMjViIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gICAgdmFsdWU6IHRydWVcbn0pO1xuMCAmJiAobW9kdWxlLmV4cG9ydHMgPSB7XG4gICAgUmVkaXJlY3RUeXBlOiBudWxsLFxuICAgIGdldFJlZGlyZWN0RXJyb3I6IG51bGwsXG4gICAgcmVkaXJlY3Q6IG51bGwsXG4gICAgaXNSZWRpcmVjdEVycm9yOiBudWxsLFxuICAgIGdldFVSTEZyb21SZWRpcmVjdEVycm9yOiBudWxsLFxuICAgIGdldFJlZGlyZWN0VHlwZUZyb21FcnJvcjogbnVsbFxufSk7XG5mdW5jdGlvbiBfZXhwb3J0KHRhcmdldCwgYWxsKSB7XG4gICAgZm9yKHZhciBuYW1lIGluIGFsbClPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBuYW1lLCB7XG4gICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgIGdldDogYWxsW25hbWVdXG4gICAgfSk7XG59XG5fZXhwb3J0KGV4cG9ydHMsIHtcbiAgICBSZWRpcmVjdFR5cGU6IGZ1bmN0aW9uKCkge1xuICAgICAgICByZXR1cm4gUmVkaXJlY3RUeXBlO1xuICAgIH0sXG4gICAgZ2V0UmVkaXJlY3RFcnJvcjogZnVuY3Rpb24oKSB7XG4gICAgICAgIHJldHVybiBnZXRSZWRpcmVjdEVycm9yO1xuICAgIH0sXG4gICAgcmVkaXJlY3Q6IGZ1bmN0aW9uKCkge1xuICAgICAgICByZXR1cm4gcmVkaXJlY3Q7XG4gICAgfSxcbiAgICBpc1JlZGlyZWN0RXJyb3I6IGZ1bmN0aW9uKCkge1xuICAgICAgICByZXR1cm4gaXNSZWRpcmVjdEVycm9yO1xuICAgIH0sXG4gICAgZ2V0VVJMRnJvbVJlZGlyZWN0RXJyb3I6IGZ1bmN0aW9uKCkge1xuICAgICAgICByZXR1cm4gZ2V0VVJMRnJvbVJlZGlyZWN0RXJyb3I7XG4gICAgfSxcbiAgICBnZXRSZWRpcmVjdFR5cGVGcm9tRXJyb3I6IGZ1bmN0aW9uKCkge1xuICAgICAgICByZXR1cm4gZ2V0UmVkaXJlY3RUeXBlRnJvbUVycm9yO1xuICAgIH1cbn0pO1xuY29uc3QgX3JlcXVlc3Rhc3luY3N0b3JhZ2UgPSByZXF1aXJlKFwiLi9yZXF1ZXN0LWFzeW5jLXN0b3JhZ2VcIik7XG5jb25zdCBSRURJUkVDVF9FUlJPUl9DT0RFID0gXCJORVhUX1JFRElSRUNUXCI7XG52YXIgUmVkaXJlY3RUeXBlO1xuKGZ1bmN0aW9uKFJlZGlyZWN0VHlwZSkge1xuICAgIFJlZGlyZWN0VHlwZVtcInB1c2hcIl0gPSBcInB1c2hcIjtcbiAgICBSZWRpcmVjdFR5cGVbXCJyZXBsYWNlXCJdID0gXCJyZXBsYWNlXCI7XG59KShSZWRpcmVjdFR5cGUgfHwgKFJlZGlyZWN0VHlwZSA9IHt9KSk7XG5mdW5jdGlvbiBnZXRSZWRpcmVjdEVycm9yKHVybCwgdHlwZSkge1xuICAgIGNvbnN0IGVycm9yID0gbmV3IEVycm9yKFJFRElSRUNUX0VSUk9SX0NPREUpO1xuICAgIGVycm9yLmRpZ2VzdCA9IFJFRElSRUNUX0VSUk9SX0NPREUgKyBcIjtcIiArIHR5cGUgKyBcIjtcIiArIHVybDtcbiAgICBjb25zdCByZXF1ZXN0U3RvcmUgPSBfcmVxdWVzdGFzeW5jc3RvcmFnZS5yZXF1ZXN0QXN5bmNTdG9yYWdlLmdldFN0b3JlKCk7XG4gICAgaWYgKHJlcXVlc3RTdG9yZSkge1xuICAgICAgICBlcnJvci5tdXRhYmxlQ29va2llcyA9IHJlcXVlc3RTdG9yZS5tdXRhYmxlQ29va2llcztcbiAgICB9XG4gICAgcmV0dXJuIGVycm9yO1xufVxuZnVuY3Rpb24gcmVkaXJlY3QodXJsLCB0eXBlKSB7XG4gICAgaWYgKHR5cGUgPT09IHZvaWQgMCkgdHlwZSA9IFwicmVwbGFjZVwiO1xuICAgIHRocm93IGdldFJlZGlyZWN0RXJyb3IodXJsLCB0eXBlKTtcbn1cbmZ1bmN0aW9uIGlzUmVkaXJlY3RFcnJvcihlcnJvcikge1xuICAgIGlmICh0eXBlb2YgKGVycm9yID09IG51bGwgPyB2b2lkIDAgOiBlcnJvci5kaWdlc3QpICE9PSBcInN0cmluZ1wiKSByZXR1cm4gZmFsc2U7XG4gICAgY29uc3QgW2Vycm9yQ29kZSwgdHlwZSwgZGVzdGluYXRpb25dID0gZXJyb3IuZGlnZXN0LnNwbGl0KFwiO1wiLCAzKTtcbiAgICByZXR1cm4gZXJyb3JDb2RlID09PSBSRURJUkVDVF9FUlJPUl9DT0RFICYmICh0eXBlID09PSBcInJlcGxhY2VcIiB8fCB0eXBlID09PSBcInB1c2hcIikgJiYgdHlwZW9mIGRlc3RpbmF0aW9uID09PSBcInN0cmluZ1wiO1xufVxuZnVuY3Rpb24gZ2V0VVJMRnJvbVJlZGlyZWN0RXJyb3IoZXJyb3IpIHtcbiAgICBpZiAoIWlzUmVkaXJlY3RFcnJvcihlcnJvcikpIHJldHVybiBudWxsO1xuICAgIC8vIFNsaWNlcyBvZmYgdGhlIGJlZ2lubmluZyBvZiB0aGUgZGlnZXN0IHRoYXQgY29udGFpbnMgdGhlIGNvZGUgYW5kIHRoZVxuICAgIC8vIHNlcGFyYXRpbmcgJzsnLlxuICAgIHJldHVybiBlcnJvci5kaWdlc3Quc3BsaXQoXCI7XCIsIDMpWzJdO1xufVxuZnVuY3Rpb24gZ2V0UmVkaXJlY3RUeXBlRnJvbUVycm9yKGVycm9yKSB7XG4gICAgaWYgKCFpc1JlZGlyZWN0RXJyb3IoZXJyb3IpKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcIk5vdCBhIHJlZGlyZWN0IGVycm9yXCIpO1xuICAgIH1cbiAgICByZXR1cm4gZXJyb3IuZGlnZXN0LnNwbGl0KFwiO1wiLCAzKVsxXTtcbn1cblxuaWYgKCh0eXBlb2YgZXhwb3J0cy5kZWZhdWx0ID09PSAnZnVuY3Rpb24nIHx8ICh0eXBlb2YgZXhwb3J0cy5kZWZhdWx0ID09PSAnb2JqZWN0JyAmJiBleHBvcnRzLmRlZmF1bHQgIT09IG51bGwpKSAmJiB0eXBlb2YgZXhwb3J0cy5kZWZhdWx0Ll9fZXNNb2R1bGUgPT09ICd1bmRlZmluZWQnKSB7XG4gIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLmRlZmF1bHQsICdfX2VzTW9kdWxlJywgeyB2YWx1ZTogdHJ1ZSB9KTtcbiAgT2JqZWN0LmFzc2lnbihleHBvcnRzLmRlZmF1bHQsIGV4cG9ydHMpO1xuICBtb2R1bGUuZXhwb3J0cyA9IGV4cG9ydHMuZGVmYXVsdDtcbn1cblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cmVkaXJlY3QuanMubWFwIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwibW9kdWxlIiwiUmVkaXJlY3RUeXBlIiwiZ2V0UmVkaXJlY3RFcnJvciIsInJlZGlyZWN0IiwiaXNSZWRpcmVjdEVycm9yIiwiZ2V0VVJMRnJvbVJlZGlyZWN0RXJyb3IiLCJnZXRSZWRpcmVjdFR5cGVGcm9tRXJyb3IiLCJfZXhwb3J0IiwidGFyZ2V0IiwiYWxsIiwibmFtZSIsImVudW1lcmFibGUiLCJnZXQiLCJfcmVxdWVzdGFzeW5jc3RvcmFnZSIsInJlcXVpcmUiLCJSRURJUkVDVF9FUlJPUl9DT0RFIiwidXJsIiwidHlwZSIsImVycm9yIiwiRXJyb3IiLCJkaWdlc3QiLCJyZXF1ZXN0U3RvcmUiLCJyZXF1ZXN0QXN5bmNTdG9yYWdlIiwiZ2V0U3RvcmUiLCJtdXRhYmxlQ29va2llcyIsImVycm9yQ29kZSIsImRlc3RpbmF0aW9uIiwic3BsaXQiLCJkZWZhdWx0IiwiX19lc01vZHVsZSIsImFzc2lnbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/next/dist/client/components/redirect.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/next/dist/client/components/static-generation-bailout.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/next/dist/client/components/static-generation-bailout.js ***!
  \*******************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nObject.defineProperty(exports, \"staticGenerationBailout\", ({\n    enumerable: true,\n    get: function() {\n        return staticGenerationBailout;\n    }\n}));\nconst _hooksservercontext = __webpack_require__(/*! ./hooks-server-context */ \"(sc_server)/./node_modules/next/dist/client/components/hooks-server-context.js\");\nconst _staticgenerationasyncstorage = __webpack_require__(/*! ./static-generation-async-storage */ \"(sc_shared)/./node_modules/next/dist/client/components/static-generation-async-storage.js\");\nclass StaticGenBailoutError extends Error {\n    constructor(...args){\n        super(...args);\n        this.code = \"NEXT_STATIC_GEN_BAILOUT\";\n    }\n}\nconst staticGenerationBailout = (reason, opts)=>{\n    const staticGenerationStore = _staticgenerationasyncstorage.staticGenerationAsyncStorage.getStore();\n    if (staticGenerationStore == null ? void 0 : staticGenerationStore.forceStatic) {\n        return true;\n    }\n    if (staticGenerationStore == null ? void 0 : staticGenerationStore.dynamicShouldError) {\n        const { dynamic =\"error\" , link  } = opts || {};\n        const suffix = link ? \" See more info here: \" + link : \"\";\n        throw new StaticGenBailoutError('Page with `dynamic = \"' + dynamic + \"\\\"` couldn't be rendered statically because it used `\" + reason + \"`.\" + suffix);\n    }\n    if (staticGenerationStore) {\n        staticGenerationStore.revalidate = 0;\n    }\n    if (staticGenerationStore == null ? void 0 : staticGenerationStore.isStaticGeneration) {\n        const err = new _hooksservercontext.DynamicServerError(reason);\n        staticGenerationStore.dynamicUsageDescription = reason;\n        staticGenerationStore.dynamicUsageStack = err.stack;\n        throw err;\n    }\n    return false;\n};\nif ((typeof exports.default === \"function\" || typeof exports.default === \"object\" && exports.default !== null) && typeof exports.default.__esModule === \"undefined\") {\n    Object.defineProperty(exports.default, \"__esModule\", {\n        value: true\n    });\n    Object.assign(exports.default, exports);\n    module.exports = exports.default;\n} //# sourceMappingURL=static-generation-bailout.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NsaWVudC9jb21wb25lbnRzL3N0YXRpYy1nZW5lcmF0aW9uLWJhaWxvdXQuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYkEsOENBQTZDO0lBQ3pDRyxPQUFPO0FBQ1gsQ0FBQyxFQUFDO0FBQ0ZILDJEQUEwRDtJQUN0REksWUFBWTtJQUNaQyxLQUFLO1FBQ0QsT0FBT0M7SUFDWDtBQUNKLENBQUMsRUFBQztBQUNGLE1BQU1DLHNCQUFzQkMsbUJBQU9BLENBQUMsOEdBQXdCO0FBQzVELE1BQU1DLGdDQUFnQ0QsbUJBQU9BLENBQUMsb0lBQW1DO0FBQ2pGLE1BQU1FLDhCQUE4QkM7SUFDaENDLFlBQVksR0FBR0MsSUFBSSxDQUFDO1FBQ2hCLEtBQUssSUFBSUE7UUFDVCxJQUFJLENBQUNDLE9BQU87SUFDaEI7QUFDSjtBQUNBLE1BQU1SLDBCQUEwQixDQUFDUyxRQUFRQztJQUNyQyxNQUFNQyx3QkFBd0JSLDhCQUE4QlMsNkJBQTZCQztJQUN6RixJQUFJRix5QkFBeUIsT0FBTyxLQUFLLElBQUlBLHNCQUFzQkcsYUFBYTtRQUM1RSxPQUFPO0lBQ1g7SUFDQSxJQUFJSCx5QkFBeUIsT0FBTyxLQUFLLElBQUlBLHNCQUFzQkksb0JBQW9CO1FBQ25GLE1BQU0sRUFBRUMsU0FBUyxRQUFPLEVBQUdDLEtBQUksRUFBRyxHQUFHUCxRQUFRLENBQUM7UUFDOUMsTUFBTVEsU0FBU0QsT0FBTywwQkFBMEJBLE9BQU87UUFDdkQsTUFBTSxJQUFJYixzQkFBc0IsMkJBQTJCWSxVQUFVLDBEQUEwRFAsU0FBUyxPQUFPUztJQUNuSjtJQUNBLElBQUlQLHVCQUF1QjtRQUN2QkEsc0JBQXNCUSxhQUFhO0lBQ3ZDO0lBQ0EsSUFBSVIseUJBQXlCLE9BQU8sS0FBSyxJQUFJQSxzQkFBc0JTLG9CQUFvQjtRQUNuRixNQUFNQyxNQUFNLElBQUlwQixvQkFBb0JxQixtQkFBbUJiO1FBQ3ZERSxzQkFBc0JZLDBCQUEwQmQ7UUFDaERFLHNCQUFzQmEsb0JBQW9CSCxJQUFJSTtRQUM5QyxNQUFNSjtJQUNWO0lBQ0EsT0FBTztBQUNYO0FBRUEsSUFBSSxDQUFDLE9BQU96QixRQUFROEIsWUFBWSxjQUFlLE9BQU85QixRQUFROEIsWUFBWSxZQUFZOUIsUUFBUThCLFlBQVksSUFBSSxLQUFNLE9BQU85QixRQUFROEIsUUFBUUMsZUFBZSxhQUFhO0lBQ3JLakMsT0FBT0MsZUFBZUMsUUFBUThCLFNBQVMsY0FBYztRQUFFN0IsT0FBTztJQUFLO0lBQ25FSCxPQUFPa0MsT0FBT2hDLFFBQVE4QixTQUFTOUI7SUFDL0JpQyxPQUFPakMsVUFBVUEsUUFBUThCO0FBQzNCLEVBRUEscURBQXFEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZnVsbHN0YWNrLXJvbGUtYmFzZWQtbmV4dGpzLTIvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NsaWVudC9jb21wb25lbnRzL3N0YXRpYy1nZW5lcmF0aW9uLWJhaWxvdXQuanM/MDQ2YyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICAgIHZhbHVlOiB0cnVlXG59KTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcInN0YXRpY0dlbmVyYXRpb25CYWlsb3V0XCIsIHtcbiAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgIGdldDogZnVuY3Rpb24oKSB7XG4gICAgICAgIHJldHVybiBzdGF0aWNHZW5lcmF0aW9uQmFpbG91dDtcbiAgICB9XG59KTtcbmNvbnN0IF9ob29rc3NlcnZlcmNvbnRleHQgPSByZXF1aXJlKFwiLi9ob29rcy1zZXJ2ZXItY29udGV4dFwiKTtcbmNvbnN0IF9zdGF0aWNnZW5lcmF0aW9uYXN5bmNzdG9yYWdlID0gcmVxdWlyZShcIi4vc3RhdGljLWdlbmVyYXRpb24tYXN5bmMtc3RvcmFnZVwiKTtcbmNsYXNzIFN0YXRpY0dlbkJhaWxvdXRFcnJvciBleHRlbmRzIEVycm9yIHtcbiAgICBjb25zdHJ1Y3RvciguLi5hcmdzKXtcbiAgICAgICAgc3VwZXIoLi4uYXJncyk7XG4gICAgICAgIHRoaXMuY29kZSA9IFwiTkVYVF9TVEFUSUNfR0VOX0JBSUxPVVRcIjtcbiAgICB9XG59XG5jb25zdCBzdGF0aWNHZW5lcmF0aW9uQmFpbG91dCA9IChyZWFzb24sIG9wdHMpPT57XG4gICAgY29uc3Qgc3RhdGljR2VuZXJhdGlvblN0b3JlID0gX3N0YXRpY2dlbmVyYXRpb25hc3luY3N0b3JhZ2Uuc3RhdGljR2VuZXJhdGlvbkFzeW5jU3RvcmFnZS5nZXRTdG9yZSgpO1xuICAgIGlmIChzdGF0aWNHZW5lcmF0aW9uU3RvcmUgPT0gbnVsbCA/IHZvaWQgMCA6IHN0YXRpY0dlbmVyYXRpb25TdG9yZS5mb3JjZVN0YXRpYykge1xuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG4gICAgaWYgKHN0YXRpY0dlbmVyYXRpb25TdG9yZSA9PSBudWxsID8gdm9pZCAwIDogc3RhdGljR2VuZXJhdGlvblN0b3JlLmR5bmFtaWNTaG91bGRFcnJvcikge1xuICAgICAgICBjb25zdCB7IGR5bmFtaWMgPVwiZXJyb3JcIiAsIGxpbmsgIH0gPSBvcHRzIHx8IHt9O1xuICAgICAgICBjb25zdCBzdWZmaXggPSBsaW5rID8gXCIgU2VlIG1vcmUgaW5mbyBoZXJlOiBcIiArIGxpbmsgOiBcIlwiO1xuICAgICAgICB0aHJvdyBuZXcgU3RhdGljR2VuQmFpbG91dEVycm9yKCdQYWdlIHdpdGggYGR5bmFtaWMgPSBcIicgKyBkeW5hbWljICsgXCJcXFwiYCBjb3VsZG4ndCBiZSByZW5kZXJlZCBzdGF0aWNhbGx5IGJlY2F1c2UgaXQgdXNlZCBgXCIgKyByZWFzb24gKyBcImAuXCIgKyBzdWZmaXgpO1xuICAgIH1cbiAgICBpZiAoc3RhdGljR2VuZXJhdGlvblN0b3JlKSB7XG4gICAgICAgIHN0YXRpY0dlbmVyYXRpb25TdG9yZS5yZXZhbGlkYXRlID0gMDtcbiAgICB9XG4gICAgaWYgKHN0YXRpY0dlbmVyYXRpb25TdG9yZSA9PSBudWxsID8gdm9pZCAwIDogc3RhdGljR2VuZXJhdGlvblN0b3JlLmlzU3RhdGljR2VuZXJhdGlvbikge1xuICAgICAgICBjb25zdCBlcnIgPSBuZXcgX2hvb2tzc2VydmVyY29udGV4dC5EeW5hbWljU2VydmVyRXJyb3IocmVhc29uKTtcbiAgICAgICAgc3RhdGljR2VuZXJhdGlvblN0b3JlLmR5bmFtaWNVc2FnZURlc2NyaXB0aW9uID0gcmVhc29uO1xuICAgICAgICBzdGF0aWNHZW5lcmF0aW9uU3RvcmUuZHluYW1pY1VzYWdlU3RhY2sgPSBlcnIuc3RhY2s7XG4gICAgICAgIHRocm93IGVycjtcbiAgICB9XG4gICAgcmV0dXJuIGZhbHNlO1xufTtcblxuaWYgKCh0eXBlb2YgZXhwb3J0cy5kZWZhdWx0ID09PSAnZnVuY3Rpb24nIHx8ICh0eXBlb2YgZXhwb3J0cy5kZWZhdWx0ID09PSAnb2JqZWN0JyAmJiBleHBvcnRzLmRlZmF1bHQgIT09IG51bGwpKSAmJiB0eXBlb2YgZXhwb3J0cy5kZWZhdWx0Ll9fZXNNb2R1bGUgPT09ICd1bmRlZmluZWQnKSB7XG4gIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLmRlZmF1bHQsICdfX2VzTW9kdWxlJywgeyB2YWx1ZTogdHJ1ZSB9KTtcbiAgT2JqZWN0LmFzc2lnbihleHBvcnRzLmRlZmF1bHQsIGV4cG9ydHMpO1xuICBtb2R1bGUuZXhwb3J0cyA9IGV4cG9ydHMuZGVmYXVsdDtcbn1cblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9c3RhdGljLWdlbmVyYXRpb24tYmFpbG91dC5qcy5tYXAiXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJlbnVtZXJhYmxlIiwiZ2V0Iiwic3RhdGljR2VuZXJhdGlvbkJhaWxvdXQiLCJfaG9va3NzZXJ2ZXJjb250ZXh0IiwicmVxdWlyZSIsIl9zdGF0aWNnZW5lcmF0aW9uYXN5bmNzdG9yYWdlIiwiU3RhdGljR2VuQmFpbG91dEVycm9yIiwiRXJyb3IiLCJjb25zdHJ1Y3RvciIsImFyZ3MiLCJjb2RlIiwicmVhc29uIiwib3B0cyIsInN0YXRpY0dlbmVyYXRpb25TdG9yZSIsInN0YXRpY0dlbmVyYXRpb25Bc3luY1N0b3JhZ2UiLCJnZXRTdG9yZSIsImZvcmNlU3RhdGljIiwiZHluYW1pY1Nob3VsZEVycm9yIiwiZHluYW1pYyIsImxpbmsiLCJzdWZmaXgiLCJyZXZhbGlkYXRlIiwiaXNTdGF0aWNHZW5lcmF0aW9uIiwiZXJyIiwiRHluYW1pY1NlcnZlckVycm9yIiwiZHluYW1pY1VzYWdlRGVzY3JpcHRpb24iLCJkeW5hbWljVXNhZ2VTdGFjayIsInN0YWNrIiwiZGVmYXVsdCIsIl9fZXNNb2R1bGUiLCJhc3NpZ24iLCJtb2R1bGUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/next/dist/client/components/static-generation-bailout.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/next/dist/compiled/@opentelemetry/api/index.js":
/*!*********************************************************************!*\
  !*** ./node_modules/next/dist/compiled/@opentelemetry/api/index.js ***!
  \*********************************************************************/
/***/ ((module) => {

"use strict";
eval("\n(()=>{\n    \"use strict\";\n    var e = {\n        339: (e, t, r)=>{\n            Object.defineProperty(t, \"__esModule\", {\n                value: true\n            });\n            t.ContextAPI = void 0;\n            const n = r(44);\n            const a = r(38);\n            const o = r(741);\n            const i = \"context\";\n            const c = new n.NoopContextManager;\n            class ContextAPI {\n                constructor(){}\n                static getInstance() {\n                    if (!this._instance) {\n                        this._instance = new ContextAPI;\n                    }\n                    return this._instance;\n                }\n                setGlobalContextManager(e) {\n                    return (0, a.registerGlobal)(i, e, o.DiagAPI.instance());\n                }\n                active() {\n                    return this._getContextManager().active();\n                }\n                with(e, t, r, ...n) {\n                    return this._getContextManager().with(e, t, r, ...n);\n                }\n                bind(e, t) {\n                    return this._getContextManager().bind(e, t);\n                }\n                _getContextManager() {\n                    return (0, a.getGlobal)(i) || c;\n                }\n                disable() {\n                    this._getContextManager().disable();\n                    (0, a.unregisterGlobal)(i, o.DiagAPI.instance());\n                }\n            }\n            t.ContextAPI = ContextAPI;\n        },\n        741: (e, t, r)=>{\n            Object.defineProperty(t, \"__esModule\", {\n                value: true\n            });\n            t.DiagAPI = void 0;\n            const n = r(144);\n            const a = r(871);\n            const o = r(133);\n            const i = r(38);\n            const c = \"diag\";\n            class DiagAPI {\n                constructor(){\n                    function _logProxy(e) {\n                        return function(...t) {\n                            const r = (0, i.getGlobal)(\"diag\");\n                            if (!r) return;\n                            return r[e](...t);\n                        };\n                    }\n                    const e = this;\n                    const setLogger = (t, r = {\n                        logLevel: o.DiagLogLevel.INFO\n                    })=>{\n                        var n, c, s;\n                        if (t === e) {\n                            const t = new Error(\"Cannot use diag as the logger for itself. Please use a DiagLogger implementation like ConsoleDiagLogger or a custom implementation\");\n                            e.error((n = t.stack) !== null && n !== void 0 ? n : t.message);\n                            return false;\n                        }\n                        if (typeof r === \"number\") {\n                            r = {\n                                logLevel: r\n                            };\n                        }\n                        const u = (0, i.getGlobal)(\"diag\");\n                        const l = (0, a.createLogLevelDiagLogger)((c = r.logLevel) !== null && c !== void 0 ? c : o.DiagLogLevel.INFO, t);\n                        if (u && !r.suppressOverrideMessage) {\n                            const e = (s = (new Error).stack) !== null && s !== void 0 ? s : \"<failed to generate stacktrace>\";\n                            u.warn(`Current logger will be overwritten from ${e}`);\n                            l.warn(`Current logger will overwrite one already registered from ${e}`);\n                        }\n                        return (0, i.registerGlobal)(\"diag\", l, e, true);\n                    };\n                    e.setLogger = setLogger;\n                    e.disable = ()=>{\n                        (0, i.unregisterGlobal)(c, e);\n                    };\n                    e.createComponentLogger = (e)=>new n.DiagComponentLogger(e);\n                    e.verbose = _logProxy(\"verbose\");\n                    e.debug = _logProxy(\"debug\");\n                    e.info = _logProxy(\"info\");\n                    e.warn = _logProxy(\"warn\");\n                    e.error = _logProxy(\"error\");\n                }\n                static instance() {\n                    if (!this._instance) {\n                        this._instance = new DiagAPI;\n                    }\n                    return this._instance;\n                }\n            }\n            t.DiagAPI = DiagAPI;\n        },\n        128: (e, t, r)=>{\n            Object.defineProperty(t, \"__esModule\", {\n                value: true\n            });\n            t.MetricsAPI = void 0;\n            const n = r(333);\n            const a = r(38);\n            const o = r(741);\n            const i = \"metrics\";\n            class MetricsAPI {\n                constructor(){}\n                static getInstance() {\n                    if (!this._instance) {\n                        this._instance = new MetricsAPI;\n                    }\n                    return this._instance;\n                }\n                setGlobalMeterProvider(e) {\n                    return (0, a.registerGlobal)(i, e, o.DiagAPI.instance());\n                }\n                getMeterProvider() {\n                    return (0, a.getGlobal)(i) || n.NOOP_METER_PROVIDER;\n                }\n                getMeter(e, t, r) {\n                    return this.getMeterProvider().getMeter(e, t, r);\n                }\n                disable() {\n                    (0, a.unregisterGlobal)(i, o.DiagAPI.instance());\n                }\n            }\n            t.MetricsAPI = MetricsAPI;\n        },\n        930: (e, t, r)=>{\n            Object.defineProperty(t, \"__esModule\", {\n                value: true\n            });\n            t.PropagationAPI = void 0;\n            const n = r(38);\n            const a = r(600);\n            const o = r(625);\n            const i = r(377);\n            const c = r(701);\n            const s = r(741);\n            const u = \"propagation\";\n            const l = new a.NoopTextMapPropagator;\n            class PropagationAPI {\n                constructor(){\n                    this.createBaggage = c.createBaggage;\n                    this.getBaggage = i.getBaggage;\n                    this.getActiveBaggage = i.getActiveBaggage;\n                    this.setBaggage = i.setBaggage;\n                    this.deleteBaggage = i.deleteBaggage;\n                }\n                static getInstance() {\n                    if (!this._instance) {\n                        this._instance = new PropagationAPI;\n                    }\n                    return this._instance;\n                }\n                setGlobalPropagator(e) {\n                    return (0, n.registerGlobal)(u, e, s.DiagAPI.instance());\n                }\n                inject(e, t, r = o.defaultTextMapSetter) {\n                    return this._getGlobalPropagator().inject(e, t, r);\n                }\n                extract(e, t, r = o.defaultTextMapGetter) {\n                    return this._getGlobalPropagator().extract(e, t, r);\n                }\n                fields() {\n                    return this._getGlobalPropagator().fields();\n                }\n                disable() {\n                    (0, n.unregisterGlobal)(u, s.DiagAPI.instance());\n                }\n                _getGlobalPropagator() {\n                    return (0, n.getGlobal)(u) || l;\n                }\n            }\n            t.PropagationAPI = PropagationAPI;\n        },\n        967: (e, t, r)=>{\n            Object.defineProperty(t, \"__esModule\", {\n                value: true\n            });\n            t.TraceAPI = void 0;\n            const n = r(38);\n            const a = r(414);\n            const o = r(994);\n            const i = r(542);\n            const c = r(741);\n            const s = \"trace\";\n            class TraceAPI {\n                constructor(){\n                    this._proxyTracerProvider = new a.ProxyTracerProvider;\n                    this.wrapSpanContext = o.wrapSpanContext;\n                    this.isSpanContextValid = o.isSpanContextValid;\n                    this.deleteSpan = i.deleteSpan;\n                    this.getSpan = i.getSpan;\n                    this.getActiveSpan = i.getActiveSpan;\n                    this.getSpanContext = i.getSpanContext;\n                    this.setSpan = i.setSpan;\n                    this.setSpanContext = i.setSpanContext;\n                }\n                static getInstance() {\n                    if (!this._instance) {\n                        this._instance = new TraceAPI;\n                    }\n                    return this._instance;\n                }\n                setGlobalTracerProvider(e) {\n                    const t = (0, n.registerGlobal)(s, this._proxyTracerProvider, c.DiagAPI.instance());\n                    if (t) {\n                        this._proxyTracerProvider.setDelegate(e);\n                    }\n                    return t;\n                }\n                getTracerProvider() {\n                    return (0, n.getGlobal)(s) || this._proxyTracerProvider;\n                }\n                getTracer(e, t) {\n                    return this.getTracerProvider().getTracer(e, t);\n                }\n                disable() {\n                    (0, n.unregisterGlobal)(s, c.DiagAPI.instance());\n                    this._proxyTracerProvider = new a.ProxyTracerProvider;\n                }\n            }\n            t.TraceAPI = TraceAPI;\n        },\n        377: (e, t, r)=>{\n            Object.defineProperty(t, \"__esModule\", {\n                value: true\n            });\n            t.deleteBaggage = t.setBaggage = t.getActiveBaggage = t.getBaggage = void 0;\n            const n = r(339);\n            const a = r(421);\n            const o = (0, a.createContextKey)(\"OpenTelemetry Baggage Key\");\n            function getBaggage(e) {\n                return e.getValue(o) || undefined;\n            }\n            t.getBaggage = getBaggage;\n            function getActiveBaggage() {\n                return getBaggage(n.ContextAPI.getInstance().active());\n            }\n            t.getActiveBaggage = getActiveBaggage;\n            function setBaggage(e, t) {\n                return e.setValue(o, t);\n            }\n            t.setBaggage = setBaggage;\n            function deleteBaggage(e) {\n                return e.deleteValue(o);\n            }\n            t.deleteBaggage = deleteBaggage;\n        },\n        496: (e, t)=>{\n            Object.defineProperty(t, \"__esModule\", {\n                value: true\n            });\n            t.BaggageImpl = void 0;\n            class BaggageImpl {\n                constructor(e){\n                    this._entries = e ? new Map(e) : new Map;\n                }\n                getEntry(e) {\n                    const t = this._entries.get(e);\n                    if (!t) {\n                        return undefined;\n                    }\n                    return Object.assign({}, t);\n                }\n                getAllEntries() {\n                    return Array.from(this._entries.entries()).map(([e, t])=>[\n                            e,\n                            t\n                        ]);\n                }\n                setEntry(e, t) {\n                    const r = new BaggageImpl(this._entries);\n                    r._entries.set(e, t);\n                    return r;\n                }\n                removeEntry(e) {\n                    const t = new BaggageImpl(this._entries);\n                    t._entries.delete(e);\n                    return t;\n                }\n                removeEntries(...e) {\n                    const t = new BaggageImpl(this._entries);\n                    for (const r of e){\n                        t._entries.delete(r);\n                    }\n                    return t;\n                }\n                clear() {\n                    return new BaggageImpl;\n                }\n            }\n            t.BaggageImpl = BaggageImpl;\n        },\n        817: (e, t)=>{\n            Object.defineProperty(t, \"__esModule\", {\n                value: true\n            });\n            t.baggageEntryMetadataSymbol = void 0;\n            t.baggageEntryMetadataSymbol = Symbol(\"BaggageEntryMetadata\");\n        },\n        701: (e, t, r)=>{\n            Object.defineProperty(t, \"__esModule\", {\n                value: true\n            });\n            t.baggageEntryMetadataFromString = t.createBaggage = void 0;\n            const n = r(741);\n            const a = r(496);\n            const o = r(817);\n            const i = n.DiagAPI.instance();\n            function createBaggage(e = {}) {\n                return new a.BaggageImpl(new Map(Object.entries(e)));\n            }\n            t.createBaggage = createBaggage;\n            function baggageEntryMetadataFromString(e) {\n                if (typeof e !== \"string\") {\n                    i.error(`Cannot create baggage metadata from unknown type: ${typeof e}`);\n                    e = \"\";\n                }\n                return {\n                    __TYPE__: o.baggageEntryMetadataSymbol,\n                    toString () {\n                        return e;\n                    }\n                };\n            }\n            t.baggageEntryMetadataFromString = baggageEntryMetadataFromString;\n        },\n        388: (e, t, r)=>{\n            Object.defineProperty(t, \"__esModule\", {\n                value: true\n            });\n            t.context = void 0;\n            const n = r(339);\n            t.context = n.ContextAPI.getInstance();\n        },\n        44: (e, t, r)=>{\n            Object.defineProperty(t, \"__esModule\", {\n                value: true\n            });\n            t.NoopContextManager = void 0;\n            const n = r(421);\n            class NoopContextManager {\n                active() {\n                    return n.ROOT_CONTEXT;\n                }\n                with(e, t, r, ...n) {\n                    return t.call(r, ...n);\n                }\n                bind(e, t) {\n                    return t;\n                }\n                enable() {\n                    return this;\n                }\n                disable() {\n                    return this;\n                }\n            }\n            t.NoopContextManager = NoopContextManager;\n        },\n        421: (e, t)=>{\n            Object.defineProperty(t, \"__esModule\", {\n                value: true\n            });\n            t.ROOT_CONTEXT = t.createContextKey = void 0;\n            function createContextKey(e) {\n                return Symbol.for(e);\n            }\n            t.createContextKey = createContextKey;\n            class BaseContext {\n                constructor(e){\n                    const t = this;\n                    t._currentContext = e ? new Map(e) : new Map;\n                    t.getValue = (e)=>t._currentContext.get(e);\n                    t.setValue = (e, r)=>{\n                        const n = new BaseContext(t._currentContext);\n                        n._currentContext.set(e, r);\n                        return n;\n                    };\n                    t.deleteValue = (e)=>{\n                        const r = new BaseContext(t._currentContext);\n                        r._currentContext.delete(e);\n                        return r;\n                    };\n                }\n            }\n            t.ROOT_CONTEXT = new BaseContext;\n        },\n        920: (e, t, r)=>{\n            Object.defineProperty(t, \"__esModule\", {\n                value: true\n            });\n            t.diag = void 0;\n            const n = r(741);\n            t.diag = n.DiagAPI.instance();\n        },\n        144: (e, t, r)=>{\n            Object.defineProperty(t, \"__esModule\", {\n                value: true\n            });\n            t.DiagComponentLogger = void 0;\n            const n = r(38);\n            class DiagComponentLogger {\n                constructor(e){\n                    this._namespace = e.namespace || \"DiagComponentLogger\";\n                }\n                debug(...e) {\n                    return logProxy(\"debug\", this._namespace, e);\n                }\n                error(...e) {\n                    return logProxy(\"error\", this._namespace, e);\n                }\n                info(...e) {\n                    return logProxy(\"info\", this._namespace, e);\n                }\n                warn(...e) {\n                    return logProxy(\"warn\", this._namespace, e);\n                }\n                verbose(...e) {\n                    return logProxy(\"verbose\", this._namespace, e);\n                }\n            }\n            t.DiagComponentLogger = DiagComponentLogger;\n            function logProxy(e, t, r) {\n                const a = (0, n.getGlobal)(\"diag\");\n                if (!a) {\n                    return;\n                }\n                r.unshift(t);\n                return a[e](...r);\n            }\n        },\n        689: (e, t)=>{\n            Object.defineProperty(t, \"__esModule\", {\n                value: true\n            });\n            t.DiagConsoleLogger = void 0;\n            const r = [\n                {\n                    n: \"error\",\n                    c: \"error\"\n                },\n                {\n                    n: \"warn\",\n                    c: \"warn\"\n                },\n                {\n                    n: \"info\",\n                    c: \"info\"\n                },\n                {\n                    n: \"debug\",\n                    c: \"debug\"\n                },\n                {\n                    n: \"verbose\",\n                    c: \"trace\"\n                }\n            ];\n            class DiagConsoleLogger {\n                constructor(){\n                    function _consoleFunc(e) {\n                        return function(...t) {\n                            if (console) {\n                                let r = console[e];\n                                if (typeof r !== \"function\") {\n                                    r = console.log;\n                                }\n                                if (typeof r === \"function\") {\n                                    return r.apply(console, t);\n                                }\n                            }\n                        };\n                    }\n                    for(let e = 0; e < r.length; e++){\n                        this[r[e].n] = _consoleFunc(r[e].c);\n                    }\n                }\n            }\n            t.DiagConsoleLogger = DiagConsoleLogger;\n        },\n        871: (e, t, r)=>{\n            Object.defineProperty(t, \"__esModule\", {\n                value: true\n            });\n            t.createLogLevelDiagLogger = void 0;\n            const n = r(133);\n            function createLogLevelDiagLogger(e, t) {\n                if (e < n.DiagLogLevel.NONE) {\n                    e = n.DiagLogLevel.NONE;\n                } else if (e > n.DiagLogLevel.ALL) {\n                    e = n.DiagLogLevel.ALL;\n                }\n                t = t || {};\n                function _filterFunc(r, n) {\n                    const a = t[r];\n                    if (typeof a === \"function\" && e >= n) {\n                        return a.bind(t);\n                    }\n                    return function() {};\n                }\n                return {\n                    error: _filterFunc(\"error\", n.DiagLogLevel.ERROR),\n                    warn: _filterFunc(\"warn\", n.DiagLogLevel.WARN),\n                    info: _filterFunc(\"info\", n.DiagLogLevel.INFO),\n                    debug: _filterFunc(\"debug\", n.DiagLogLevel.DEBUG),\n                    verbose: _filterFunc(\"verbose\", n.DiagLogLevel.VERBOSE)\n                };\n            }\n            t.createLogLevelDiagLogger = createLogLevelDiagLogger;\n        },\n        133: (e, t)=>{\n            Object.defineProperty(t, \"__esModule\", {\n                value: true\n            });\n            t.DiagLogLevel = void 0;\n            var r;\n            (function(e) {\n                e[e[\"NONE\"] = 0] = \"NONE\";\n                e[e[\"ERROR\"] = 30] = \"ERROR\";\n                e[e[\"WARN\"] = 50] = \"WARN\";\n                e[e[\"INFO\"] = 60] = \"INFO\";\n                e[e[\"DEBUG\"] = 70] = \"DEBUG\";\n                e[e[\"VERBOSE\"] = 80] = \"VERBOSE\";\n                e[e[\"ALL\"] = 9999] = \"ALL\";\n            })(r = t.DiagLogLevel || (t.DiagLogLevel = {}));\n        },\n        38: (e, t, r)=>{\n            Object.defineProperty(t, \"__esModule\", {\n                value: true\n            });\n            t.unregisterGlobal = t.getGlobal = t.registerGlobal = void 0;\n            const n = r(966);\n            const a = r(520);\n            const o = r(565);\n            const i = a.VERSION.split(\".\")[0];\n            const c = Symbol.for(`opentelemetry.js.api.${i}`);\n            const s = n._globalThis;\n            function registerGlobal(e, t, r, n = false) {\n                var o;\n                const i = s[c] = (o = s[c]) !== null && o !== void 0 ? o : {\n                    version: a.VERSION\n                };\n                if (!n && i[e]) {\n                    const t = new Error(`@opentelemetry/api: Attempted duplicate registration of API: ${e}`);\n                    r.error(t.stack || t.message);\n                    return false;\n                }\n                if (i.version !== a.VERSION) {\n                    const t = new Error(`@opentelemetry/api: Registration of version v${i.version} for ${e} does not match previously registered API v${a.VERSION}`);\n                    r.error(t.stack || t.message);\n                    return false;\n                }\n                i[e] = t;\n                r.debug(`@opentelemetry/api: Registered a global for ${e} v${a.VERSION}.`);\n                return true;\n            }\n            t.registerGlobal = registerGlobal;\n            function getGlobal(e) {\n                var t, r;\n                const n = (t = s[c]) === null || t === void 0 ? void 0 : t.version;\n                if (!n || !(0, o.isCompatible)(n)) {\n                    return;\n                }\n                return (r = s[c]) === null || r === void 0 ? void 0 : r[e];\n            }\n            t.getGlobal = getGlobal;\n            function unregisterGlobal(e, t) {\n                t.debug(`@opentelemetry/api: Unregistering a global for ${e} v${a.VERSION}.`);\n                const r = s[c];\n                if (r) {\n                    delete r[e];\n                }\n            }\n            t.unregisterGlobal = unregisterGlobal;\n        },\n        565: (e, t, r)=>{\n            Object.defineProperty(t, \"__esModule\", {\n                value: true\n            });\n            t.isCompatible = t._makeCompatibilityCheck = void 0;\n            const n = r(520);\n            const a = /^(\\d+)\\.(\\d+)\\.(\\d+)(-(.+))?$/;\n            function _makeCompatibilityCheck(e) {\n                const t = new Set([\n                    e\n                ]);\n                const r = new Set;\n                const n = e.match(a);\n                if (!n) {\n                    return ()=>false;\n                }\n                const o = {\n                    major: +n[1],\n                    minor: +n[2],\n                    patch: +n[3],\n                    prerelease: n[4]\n                };\n                if (o.prerelease != null) {\n                    return function isExactmatch(t) {\n                        return t === e;\n                    };\n                }\n                function _reject(e) {\n                    r.add(e);\n                    return false;\n                }\n                function _accept(e) {\n                    t.add(e);\n                    return true;\n                }\n                return function isCompatible(e) {\n                    if (t.has(e)) {\n                        return true;\n                    }\n                    if (r.has(e)) {\n                        return false;\n                    }\n                    const n = e.match(a);\n                    if (!n) {\n                        return _reject(e);\n                    }\n                    const i = {\n                        major: +n[1],\n                        minor: +n[2],\n                        patch: +n[3],\n                        prerelease: n[4]\n                    };\n                    if (i.prerelease != null) {\n                        return _reject(e);\n                    }\n                    if (o.major !== i.major) {\n                        return _reject(e);\n                    }\n                    if (o.major === 0) {\n                        if (o.minor === i.minor && o.patch <= i.patch) {\n                            return _accept(e);\n                        }\n                        return _reject(e);\n                    }\n                    if (o.minor <= i.minor) {\n                        return _accept(e);\n                    }\n                    return _reject(e);\n                };\n            }\n            t._makeCompatibilityCheck = _makeCompatibilityCheck;\n            t.isCompatible = _makeCompatibilityCheck(n.VERSION);\n        },\n        934: (e, t, r)=>{\n            Object.defineProperty(t, \"__esModule\", {\n                value: true\n            });\n            t.metrics = void 0;\n            const n = r(128);\n            t.metrics = n.MetricsAPI.getInstance();\n        },\n        28: (e, t)=>{\n            Object.defineProperty(t, \"__esModule\", {\n                value: true\n            });\n            t.ValueType = void 0;\n            var r;\n            (function(e) {\n                e[e[\"INT\"] = 0] = \"INT\";\n                e[e[\"DOUBLE\"] = 1] = \"DOUBLE\";\n            })(r = t.ValueType || (t.ValueType = {}));\n        },\n        962: (e, t)=>{\n            Object.defineProperty(t, \"__esModule\", {\n                value: true\n            });\n            t.createNoopMeter = t.NOOP_OBSERVABLE_UP_DOWN_COUNTER_METRIC = t.NOOP_OBSERVABLE_GAUGE_METRIC = t.NOOP_OBSERVABLE_COUNTER_METRIC = t.NOOP_UP_DOWN_COUNTER_METRIC = t.NOOP_HISTOGRAM_METRIC = t.NOOP_COUNTER_METRIC = t.NOOP_METER = t.NoopObservableUpDownCounterMetric = t.NoopObservableGaugeMetric = t.NoopObservableCounterMetric = t.NoopObservableMetric = t.NoopHistogramMetric = t.NoopUpDownCounterMetric = t.NoopCounterMetric = t.NoopMetric = t.NoopMeter = void 0;\n            class NoopMeter {\n                constructor(){}\n                createHistogram(e, r) {\n                    return t.NOOP_HISTOGRAM_METRIC;\n                }\n                createCounter(e, r) {\n                    return t.NOOP_COUNTER_METRIC;\n                }\n                createUpDownCounter(e, r) {\n                    return t.NOOP_UP_DOWN_COUNTER_METRIC;\n                }\n                createObservableGauge(e, r) {\n                    return t.NOOP_OBSERVABLE_GAUGE_METRIC;\n                }\n                createObservableCounter(e, r) {\n                    return t.NOOP_OBSERVABLE_COUNTER_METRIC;\n                }\n                createObservableUpDownCounter(e, r) {\n                    return t.NOOP_OBSERVABLE_UP_DOWN_COUNTER_METRIC;\n                }\n                addBatchObservableCallback(e, t) {}\n                removeBatchObservableCallback(e) {}\n            }\n            t.NoopMeter = NoopMeter;\n            class NoopMetric {\n            }\n            t.NoopMetric = NoopMetric;\n            class NoopCounterMetric extends NoopMetric {\n                add(e, t) {}\n            }\n            t.NoopCounterMetric = NoopCounterMetric;\n            class NoopUpDownCounterMetric extends NoopMetric {\n                add(e, t) {}\n            }\n            t.NoopUpDownCounterMetric = NoopUpDownCounterMetric;\n            class NoopHistogramMetric extends NoopMetric {\n                record(e, t) {}\n            }\n            t.NoopHistogramMetric = NoopHistogramMetric;\n            class NoopObservableMetric {\n                addCallback(e) {}\n                removeCallback(e) {}\n            }\n            t.NoopObservableMetric = NoopObservableMetric;\n            class NoopObservableCounterMetric extends NoopObservableMetric {\n            }\n            t.NoopObservableCounterMetric = NoopObservableCounterMetric;\n            class NoopObservableGaugeMetric extends NoopObservableMetric {\n            }\n            t.NoopObservableGaugeMetric = NoopObservableGaugeMetric;\n            class NoopObservableUpDownCounterMetric extends NoopObservableMetric {\n            }\n            t.NoopObservableUpDownCounterMetric = NoopObservableUpDownCounterMetric;\n            t.NOOP_METER = new NoopMeter;\n            t.NOOP_COUNTER_METRIC = new NoopCounterMetric;\n            t.NOOP_HISTOGRAM_METRIC = new NoopHistogramMetric;\n            t.NOOP_UP_DOWN_COUNTER_METRIC = new NoopUpDownCounterMetric;\n            t.NOOP_OBSERVABLE_COUNTER_METRIC = new NoopObservableCounterMetric;\n            t.NOOP_OBSERVABLE_GAUGE_METRIC = new NoopObservableGaugeMetric;\n            t.NOOP_OBSERVABLE_UP_DOWN_COUNTER_METRIC = new NoopObservableUpDownCounterMetric;\n            function createNoopMeter() {\n                return t.NOOP_METER;\n            }\n            t.createNoopMeter = createNoopMeter;\n        },\n        333: (e, t, r)=>{\n            Object.defineProperty(t, \"__esModule\", {\n                value: true\n            });\n            t.NOOP_METER_PROVIDER = t.NoopMeterProvider = void 0;\n            const n = r(962);\n            class NoopMeterProvider {\n                getMeter(e, t, r) {\n                    return n.NOOP_METER;\n                }\n            }\n            t.NoopMeterProvider = NoopMeterProvider;\n            t.NOOP_METER_PROVIDER = new NoopMeterProvider;\n        },\n        966: function(e, t, r) {\n            var n = this && this.__createBinding || (Object.create ? function(e, t, r, n) {\n                if (n === undefined) n = r;\n                Object.defineProperty(e, n, {\n                    enumerable: true,\n                    get: function() {\n                        return t[r];\n                    }\n                });\n            } : function(e, t, r, n) {\n                if (n === undefined) n = r;\n                e[n] = t[r];\n            });\n            var a = this && this.__exportStar || function(e, t) {\n                for(var r in e)if (r !== \"default\" && !Object.prototype.hasOwnProperty.call(t, r)) n(t, e, r);\n            };\n            Object.defineProperty(t, \"__esModule\", {\n                value: true\n            });\n            a(r(652), t);\n        },\n        385: (e, t)=>{\n            Object.defineProperty(t, \"__esModule\", {\n                value: true\n            });\n            t._globalThis = void 0;\n            t._globalThis = typeof globalThis === \"object\" ? globalThis : global;\n        },\n        652: function(e, t, r) {\n            var n = this && this.__createBinding || (Object.create ? function(e, t, r, n) {\n                if (n === undefined) n = r;\n                Object.defineProperty(e, n, {\n                    enumerable: true,\n                    get: function() {\n                        return t[r];\n                    }\n                });\n            } : function(e, t, r, n) {\n                if (n === undefined) n = r;\n                e[n] = t[r];\n            });\n            var a = this && this.__exportStar || function(e, t) {\n                for(var r in e)if (r !== \"default\" && !Object.prototype.hasOwnProperty.call(t, r)) n(t, e, r);\n            };\n            Object.defineProperty(t, \"__esModule\", {\n                value: true\n            });\n            a(r(385), t);\n        },\n        251: (e, t, r)=>{\n            Object.defineProperty(t, \"__esModule\", {\n                value: true\n            });\n            t.propagation = void 0;\n            const n = r(930);\n            t.propagation = n.PropagationAPI.getInstance();\n        },\n        600: (e, t)=>{\n            Object.defineProperty(t, \"__esModule\", {\n                value: true\n            });\n            t.NoopTextMapPropagator = void 0;\n            class NoopTextMapPropagator {\n                inject(e, t) {}\n                extract(e, t) {\n                    return e;\n                }\n                fields() {\n                    return [];\n                }\n            }\n            t.NoopTextMapPropagator = NoopTextMapPropagator;\n        },\n        625: (e, t)=>{\n            Object.defineProperty(t, \"__esModule\", {\n                value: true\n            });\n            t.defaultTextMapSetter = t.defaultTextMapGetter = void 0;\n            t.defaultTextMapGetter = {\n                get (e, t) {\n                    if (e == null) {\n                        return undefined;\n                    }\n                    return e[t];\n                },\n                keys (e) {\n                    if (e == null) {\n                        return [];\n                    }\n                    return Object.keys(e);\n                }\n            };\n            t.defaultTextMapSetter = {\n                set (e, t, r) {\n                    if (e == null) {\n                        return;\n                    }\n                    e[t] = r;\n                }\n            };\n        },\n        978: (e, t, r)=>{\n            Object.defineProperty(t, \"__esModule\", {\n                value: true\n            });\n            t.trace = void 0;\n            const n = r(967);\n            t.trace = n.TraceAPI.getInstance();\n        },\n        76: (e, t, r)=>{\n            Object.defineProperty(t, \"__esModule\", {\n                value: true\n            });\n            t.NonRecordingSpan = void 0;\n            const n = r(304);\n            class NonRecordingSpan {\n                constructor(e = n.INVALID_SPAN_CONTEXT){\n                    this._spanContext = e;\n                }\n                spanContext() {\n                    return this._spanContext;\n                }\n                setAttribute(e, t) {\n                    return this;\n                }\n                setAttributes(e) {\n                    return this;\n                }\n                addEvent(e, t) {\n                    return this;\n                }\n                setStatus(e) {\n                    return this;\n                }\n                updateName(e) {\n                    return this;\n                }\n                end(e) {}\n                isRecording() {\n                    return false;\n                }\n                recordException(e, t) {}\n            }\n            t.NonRecordingSpan = NonRecordingSpan;\n        },\n        527: (e, t, r)=>{\n            Object.defineProperty(t, \"__esModule\", {\n                value: true\n            });\n            t.NoopTracer = void 0;\n            const n = r(339);\n            const a = r(542);\n            const o = r(76);\n            const i = r(994);\n            const c = n.ContextAPI.getInstance();\n            class NoopTracer {\n                startSpan(e, t, r = c.active()) {\n                    const n = Boolean(t === null || t === void 0 ? void 0 : t.root);\n                    if (n) {\n                        return new o.NonRecordingSpan;\n                    }\n                    const s = r && (0, a.getSpanContext)(r);\n                    if (isSpanContext(s) && (0, i.isSpanContextValid)(s)) {\n                        return new o.NonRecordingSpan(s);\n                    } else {\n                        return new o.NonRecordingSpan;\n                    }\n                }\n                startActiveSpan(e, t, r, n) {\n                    let o;\n                    let i;\n                    let s;\n                    if (arguments.length < 2) {\n                        return;\n                    } else if (arguments.length === 2) {\n                        s = t;\n                    } else if (arguments.length === 3) {\n                        o = t;\n                        s = r;\n                    } else {\n                        o = t;\n                        i = r;\n                        s = n;\n                    }\n                    const u = i !== null && i !== void 0 ? i : c.active();\n                    const l = this.startSpan(e, o, u);\n                    const g = (0, a.setSpan)(u, l);\n                    return c.with(g, s, undefined, l);\n                }\n            }\n            t.NoopTracer = NoopTracer;\n            function isSpanContext(e) {\n                return typeof e === \"object\" && typeof e[\"spanId\"] === \"string\" && typeof e[\"traceId\"] === \"string\" && typeof e[\"traceFlags\"] === \"number\";\n            }\n        },\n        228: (e, t, r)=>{\n            Object.defineProperty(t, \"__esModule\", {\n                value: true\n            });\n            t.NoopTracerProvider = void 0;\n            const n = r(527);\n            class NoopTracerProvider {\n                getTracer(e, t, r) {\n                    return new n.NoopTracer;\n                }\n            }\n            t.NoopTracerProvider = NoopTracerProvider;\n        },\n        387: (e, t, r)=>{\n            Object.defineProperty(t, \"__esModule\", {\n                value: true\n            });\n            t.ProxyTracer = void 0;\n            const n = r(527);\n            const a = new n.NoopTracer;\n            class ProxyTracer {\n                constructor(e, t, r, n){\n                    this._provider = e;\n                    this.name = t;\n                    this.version = r;\n                    this.options = n;\n                }\n                startSpan(e, t, r) {\n                    return this._getTracer().startSpan(e, t, r);\n                }\n                startActiveSpan(e, t, r, n) {\n                    const a = this._getTracer();\n                    return Reflect.apply(a.startActiveSpan, a, arguments);\n                }\n                _getTracer() {\n                    if (this._delegate) {\n                        return this._delegate;\n                    }\n                    const e = this._provider.getDelegateTracer(this.name, this.version, this.options);\n                    if (!e) {\n                        return a;\n                    }\n                    this._delegate = e;\n                    return this._delegate;\n                }\n            }\n            t.ProxyTracer = ProxyTracer;\n        },\n        414: (e, t, r)=>{\n            Object.defineProperty(t, \"__esModule\", {\n                value: true\n            });\n            t.ProxyTracerProvider = void 0;\n            const n = r(387);\n            const a = r(228);\n            const o = new a.NoopTracerProvider;\n            class ProxyTracerProvider {\n                getTracer(e, t, r) {\n                    var a;\n                    return (a = this.getDelegateTracer(e, t, r)) !== null && a !== void 0 ? a : new n.ProxyTracer(this, e, t, r);\n                }\n                getDelegate() {\n                    var e;\n                    return (e = this._delegate) !== null && e !== void 0 ? e : o;\n                }\n                setDelegate(e) {\n                    this._delegate = e;\n                }\n                getDelegateTracer(e, t, r) {\n                    var n;\n                    return (n = this._delegate) === null || n === void 0 ? void 0 : n.getTracer(e, t, r);\n                }\n            }\n            t.ProxyTracerProvider = ProxyTracerProvider;\n        },\n        505: (e, t)=>{\n            Object.defineProperty(t, \"__esModule\", {\n                value: true\n            });\n            t.SamplingDecision = void 0;\n            var r;\n            (function(e) {\n                e[e[\"NOT_RECORD\"] = 0] = \"NOT_RECORD\";\n                e[e[\"RECORD\"] = 1] = \"RECORD\";\n                e[e[\"RECORD_AND_SAMPLED\"] = 2] = \"RECORD_AND_SAMPLED\";\n            })(r = t.SamplingDecision || (t.SamplingDecision = {}));\n        },\n        542: (e, t, r)=>{\n            Object.defineProperty(t, \"__esModule\", {\n                value: true\n            });\n            t.getSpanContext = t.setSpanContext = t.deleteSpan = t.setSpan = t.getActiveSpan = t.getSpan = void 0;\n            const n = r(421);\n            const a = r(76);\n            const o = r(339);\n            const i = (0, n.createContextKey)(\"OpenTelemetry Context Key SPAN\");\n            function getSpan(e) {\n                return e.getValue(i) || undefined;\n            }\n            t.getSpan = getSpan;\n            function getActiveSpan() {\n                return getSpan(o.ContextAPI.getInstance().active());\n            }\n            t.getActiveSpan = getActiveSpan;\n            function setSpan(e, t) {\n                return e.setValue(i, t);\n            }\n            t.setSpan = setSpan;\n            function deleteSpan(e) {\n                return e.deleteValue(i);\n            }\n            t.deleteSpan = deleteSpan;\n            function setSpanContext(e, t) {\n                return setSpan(e, new a.NonRecordingSpan(t));\n            }\n            t.setSpanContext = setSpanContext;\n            function getSpanContext(e) {\n                var t;\n                return (t = getSpan(e)) === null || t === void 0 ? void 0 : t.spanContext();\n            }\n            t.getSpanContext = getSpanContext;\n        },\n        430: (e, t, r)=>{\n            Object.defineProperty(t, \"__esModule\", {\n                value: true\n            });\n            t.TraceStateImpl = void 0;\n            const n = r(450);\n            const a = 32;\n            const o = 512;\n            const i = \",\";\n            const c = \"=\";\n            class TraceStateImpl {\n                constructor(e){\n                    this._internalState = new Map;\n                    if (e) this._parse(e);\n                }\n                set(e, t) {\n                    const r = this._clone();\n                    if (r._internalState.has(e)) {\n                        r._internalState.delete(e);\n                    }\n                    r._internalState.set(e, t);\n                    return r;\n                }\n                unset(e) {\n                    const t = this._clone();\n                    t._internalState.delete(e);\n                    return t;\n                }\n                get(e) {\n                    return this._internalState.get(e);\n                }\n                serialize() {\n                    return this._keys().reduce((e, t)=>{\n                        e.push(t + c + this.get(t));\n                        return e;\n                    }, []).join(i);\n                }\n                _parse(e) {\n                    if (e.length > o) return;\n                    this._internalState = e.split(i).reverse().reduce((e, t)=>{\n                        const r = t.trim();\n                        const a = r.indexOf(c);\n                        if (a !== -1) {\n                            const o = r.slice(0, a);\n                            const i = r.slice(a + 1, t.length);\n                            if ((0, n.validateKey)(o) && (0, n.validateValue)(i)) {\n                                e.set(o, i);\n                            } else {}\n                        }\n                        return e;\n                    }, new Map);\n                    if (this._internalState.size > a) {\n                        this._internalState = new Map(Array.from(this._internalState.entries()).reverse().slice(0, a));\n                    }\n                }\n                _keys() {\n                    return Array.from(this._internalState.keys()).reverse();\n                }\n                _clone() {\n                    const e = new TraceStateImpl;\n                    e._internalState = new Map(this._internalState);\n                    return e;\n                }\n            }\n            t.TraceStateImpl = TraceStateImpl;\n        },\n        450: (e, t)=>{\n            Object.defineProperty(t, \"__esModule\", {\n                value: true\n            });\n            t.validateValue = t.validateKey = void 0;\n            const r = \"[_0-9a-z-*/]\";\n            const n = `[a-z]${r}{0,255}`;\n            const a = `[a-z0-9]${r}{0,240}@[a-z]${r}{0,13}`;\n            const o = new RegExp(`^(?:${n}|${a})$`);\n            const i = /^[ -~]{0,255}[!-~]$/;\n            const c = /,|=/;\n            function validateKey(e) {\n                return o.test(e);\n            }\n            t.validateKey = validateKey;\n            function validateValue(e) {\n                return i.test(e) && !c.test(e);\n            }\n            t.validateValue = validateValue;\n        },\n        757: (e, t, r)=>{\n            Object.defineProperty(t, \"__esModule\", {\n                value: true\n            });\n            t.createTraceState = void 0;\n            const n = r(430);\n            function createTraceState(e) {\n                return new n.TraceStateImpl(e);\n            }\n            t.createTraceState = createTraceState;\n        },\n        304: (e, t, r)=>{\n            Object.defineProperty(t, \"__esModule\", {\n                value: true\n            });\n            t.INVALID_SPAN_CONTEXT = t.INVALID_TRACEID = t.INVALID_SPANID = void 0;\n            const n = r(762);\n            t.INVALID_SPANID = \"0000000000000000\";\n            t.INVALID_TRACEID = \"00000000000000000000000000000000\";\n            t.INVALID_SPAN_CONTEXT = {\n                traceId: t.INVALID_TRACEID,\n                spanId: t.INVALID_SPANID,\n                traceFlags: n.TraceFlags.NONE\n            };\n        },\n        902: (e, t)=>{\n            Object.defineProperty(t, \"__esModule\", {\n                value: true\n            });\n            t.SpanKind = void 0;\n            var r;\n            (function(e) {\n                e[e[\"INTERNAL\"] = 0] = \"INTERNAL\";\n                e[e[\"SERVER\"] = 1] = \"SERVER\";\n                e[e[\"CLIENT\"] = 2] = \"CLIENT\";\n                e[e[\"PRODUCER\"] = 3] = \"PRODUCER\";\n                e[e[\"CONSUMER\"] = 4] = \"CONSUMER\";\n            })(r = t.SpanKind || (t.SpanKind = {}));\n        },\n        994: (e, t, r)=>{\n            Object.defineProperty(t, \"__esModule\", {\n                value: true\n            });\n            t.wrapSpanContext = t.isSpanContextValid = t.isValidSpanId = t.isValidTraceId = void 0;\n            const n = r(304);\n            const a = r(76);\n            const o = /^([0-9a-f]{32})$/i;\n            const i = /^[0-9a-f]{16}$/i;\n            function isValidTraceId(e) {\n                return o.test(e) && e !== n.INVALID_TRACEID;\n            }\n            t.isValidTraceId = isValidTraceId;\n            function isValidSpanId(e) {\n                return i.test(e) && e !== n.INVALID_SPANID;\n            }\n            t.isValidSpanId = isValidSpanId;\n            function isSpanContextValid(e) {\n                return isValidTraceId(e.traceId) && isValidSpanId(e.spanId);\n            }\n            t.isSpanContextValid = isSpanContextValid;\n            function wrapSpanContext(e) {\n                return new a.NonRecordingSpan(e);\n            }\n            t.wrapSpanContext = wrapSpanContext;\n        },\n        832: (e, t)=>{\n            Object.defineProperty(t, \"__esModule\", {\n                value: true\n            });\n            t.SpanStatusCode = void 0;\n            var r;\n            (function(e) {\n                e[e[\"UNSET\"] = 0] = \"UNSET\";\n                e[e[\"OK\"] = 1] = \"OK\";\n                e[e[\"ERROR\"] = 2] = \"ERROR\";\n            })(r = t.SpanStatusCode || (t.SpanStatusCode = {}));\n        },\n        762: (e, t)=>{\n            Object.defineProperty(t, \"__esModule\", {\n                value: true\n            });\n            t.TraceFlags = void 0;\n            var r;\n            (function(e) {\n                e[e[\"NONE\"] = 0] = \"NONE\";\n                e[e[\"SAMPLED\"] = 1] = \"SAMPLED\";\n            })(r = t.TraceFlags || (t.TraceFlags = {}));\n        },\n        520: (e, t)=>{\n            Object.defineProperty(t, \"__esModule\", {\n                value: true\n            });\n            t.VERSION = void 0;\n            t.VERSION = \"1.4.1\";\n        }\n    };\n    var t = {};\n    function __nccwpck_require__(r) {\n        var n = t[r];\n        if (n !== undefined) {\n            return n.exports;\n        }\n        var a = t[r] = {\n            exports: {}\n        };\n        var o = true;\n        try {\n            e[r].call(a.exports, a, a.exports, __nccwpck_require__);\n            o = false;\n        } finally{\n            if (o) delete t[r];\n        }\n        return a.exports;\n    }\n    if (typeof __nccwpck_require__ !== \"undefined\") __nccwpck_require__.ab = __dirname + \"/\";\n    var r = {};\n    (()=>{\n        var e = r;\n        Object.defineProperty(e, \"__esModule\", {\n            value: true\n        });\n        e.trace = e.propagation = e.metrics = e.diag = e.context = e.INVALID_SPAN_CONTEXT = e.INVALID_TRACEID = e.INVALID_SPANID = e.isValidSpanId = e.isValidTraceId = e.isSpanContextValid = e.createTraceState = e.TraceFlags = e.SpanStatusCode = e.SpanKind = e.SamplingDecision = e.ProxyTracerProvider = e.ProxyTracer = e.defaultTextMapSetter = e.defaultTextMapGetter = e.ValueType = e.createNoopMeter = e.DiagLogLevel = e.DiagConsoleLogger = e.ROOT_CONTEXT = e.createContextKey = e.baggageEntryMetadataFromString = void 0;\n        var t = __nccwpck_require__(701);\n        Object.defineProperty(e, \"baggageEntryMetadataFromString\", {\n            enumerable: true,\n            get: function() {\n                return t.baggageEntryMetadataFromString;\n            }\n        });\n        var n = __nccwpck_require__(421);\n        Object.defineProperty(e, \"createContextKey\", {\n            enumerable: true,\n            get: function() {\n                return n.createContextKey;\n            }\n        });\n        Object.defineProperty(e, \"ROOT_CONTEXT\", {\n            enumerable: true,\n            get: function() {\n                return n.ROOT_CONTEXT;\n            }\n        });\n        var a = __nccwpck_require__(689);\n        Object.defineProperty(e, \"DiagConsoleLogger\", {\n            enumerable: true,\n            get: function() {\n                return a.DiagConsoleLogger;\n            }\n        });\n        var o = __nccwpck_require__(133);\n        Object.defineProperty(e, \"DiagLogLevel\", {\n            enumerable: true,\n            get: function() {\n                return o.DiagLogLevel;\n            }\n        });\n        var i = __nccwpck_require__(962);\n        Object.defineProperty(e, \"createNoopMeter\", {\n            enumerable: true,\n            get: function() {\n                return i.createNoopMeter;\n            }\n        });\n        var c = __nccwpck_require__(28);\n        Object.defineProperty(e, \"ValueType\", {\n            enumerable: true,\n            get: function() {\n                return c.ValueType;\n            }\n        });\n        var s = __nccwpck_require__(625);\n        Object.defineProperty(e, \"defaultTextMapGetter\", {\n            enumerable: true,\n            get: function() {\n                return s.defaultTextMapGetter;\n            }\n        });\n        Object.defineProperty(e, \"defaultTextMapSetter\", {\n            enumerable: true,\n            get: function() {\n                return s.defaultTextMapSetter;\n            }\n        });\n        var u = __nccwpck_require__(387);\n        Object.defineProperty(e, \"ProxyTracer\", {\n            enumerable: true,\n            get: function() {\n                return u.ProxyTracer;\n            }\n        });\n        var l = __nccwpck_require__(414);\n        Object.defineProperty(e, \"ProxyTracerProvider\", {\n            enumerable: true,\n            get: function() {\n                return l.ProxyTracerProvider;\n            }\n        });\n        var g = __nccwpck_require__(505);\n        Object.defineProperty(e, \"SamplingDecision\", {\n            enumerable: true,\n            get: function() {\n                return g.SamplingDecision;\n            }\n        });\n        var p = __nccwpck_require__(902);\n        Object.defineProperty(e, \"SpanKind\", {\n            enumerable: true,\n            get: function() {\n                return p.SpanKind;\n            }\n        });\n        var d = __nccwpck_require__(832);\n        Object.defineProperty(e, \"SpanStatusCode\", {\n            enumerable: true,\n            get: function() {\n                return d.SpanStatusCode;\n            }\n        });\n        var _ = __nccwpck_require__(762);\n        Object.defineProperty(e, \"TraceFlags\", {\n            enumerable: true,\n            get: function() {\n                return _.TraceFlags;\n            }\n        });\n        var f = __nccwpck_require__(757);\n        Object.defineProperty(e, \"createTraceState\", {\n            enumerable: true,\n            get: function() {\n                return f.createTraceState;\n            }\n        });\n        var b = __nccwpck_require__(994);\n        Object.defineProperty(e, \"isSpanContextValid\", {\n            enumerable: true,\n            get: function() {\n                return b.isSpanContextValid;\n            }\n        });\n        Object.defineProperty(e, \"isValidTraceId\", {\n            enumerable: true,\n            get: function() {\n                return b.isValidTraceId;\n            }\n        });\n        Object.defineProperty(e, \"isValidSpanId\", {\n            enumerable: true,\n            get: function() {\n                return b.isValidSpanId;\n            }\n        });\n        var v = __nccwpck_require__(304);\n        Object.defineProperty(e, \"INVALID_SPANID\", {\n            enumerable: true,\n            get: function() {\n                return v.INVALID_SPANID;\n            }\n        });\n        Object.defineProperty(e, \"INVALID_TRACEID\", {\n            enumerable: true,\n            get: function() {\n                return v.INVALID_TRACEID;\n            }\n        });\n        Object.defineProperty(e, \"INVALID_SPAN_CONTEXT\", {\n            enumerable: true,\n            get: function() {\n                return v.INVALID_SPAN_CONTEXT;\n            }\n        });\n        const O = __nccwpck_require__(388);\n        Object.defineProperty(e, \"context\", {\n            enumerable: true,\n            get: function() {\n                return O.context;\n            }\n        });\n        const P = __nccwpck_require__(920);\n        Object.defineProperty(e, \"diag\", {\n            enumerable: true,\n            get: function() {\n                return P.diag;\n            }\n        });\n        const N = __nccwpck_require__(934);\n        Object.defineProperty(e, \"metrics\", {\n            enumerable: true,\n            get: function() {\n                return N.metrics;\n            }\n        });\n        const S = __nccwpck_require__(251);\n        Object.defineProperty(e, \"propagation\", {\n            enumerable: true,\n            get: function() {\n                return S.propagation;\n            }\n        });\n        const C = __nccwpck_require__(978);\n        Object.defineProperty(e, \"trace\", {\n            enumerable: true,\n            get: function() {\n                return C.trace;\n            }\n        });\n        e[\"default\"] = {\n            context: O.context,\n            diag: P.diag,\n            metrics: N.metrics,\n            propagation: S.propagation,\n            trace: C.trace\n        };\n    })();\n    module.exports = r;\n})();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/next/dist/compiled/@opentelemetry/api/index.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/next/dist/lib/chalk.js":
/*!*********************************************!*\
  !*** ./node_modules/next/dist/lib/chalk.js ***!
  \*********************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nObject.defineProperty(exports, \"default\", ({\n    enumerable: true,\n    get: function() {\n        return _default;\n    }\n}));\nlet chalk;\nif (false) {} else {\n    chalk = __webpack_require__(/*! next/dist/compiled/chalk */ \"next/dist/compiled/chalk\");\n}\nconst _default = chalk; //# sourceMappingURL=chalk.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2xpYi9jaGFsay5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFDekNHLE9BQU87QUFDWCxDQUFDLEVBQUM7QUFDRkgsMkNBQTBDO0lBQ3RDSSxZQUFZO0lBQ1pDLEtBQUs7UUFDRCxPQUFPQztJQUNYO0FBQ0osQ0FBQyxFQUFDO0FBQ0YsSUFBSUM7QUFDSixJQUFJQyxLQUFtQyxFQUFFLEVBRXhDLE1BQU07SUFDSEQsUUFBUUksbUJBQU9BLENBQUMsMERBQTBCO0FBQzlDO0FBQ0EsTUFBTUwsV0FBV0MsT0FFakIsaUNBQWlDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZnVsbHN0YWNrLXJvbGUtYmFzZWQtbmV4dGpzLTIvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2xpYi9jaGFsay5qcz81NDkwIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gICAgdmFsdWU6IHRydWVcbn0pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiZGVmYXVsdFwiLCB7XG4gICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICBnZXQ6IGZ1bmN0aW9uKCkge1xuICAgICAgICByZXR1cm4gX2RlZmF1bHQ7XG4gICAgfVxufSk7XG5sZXQgY2hhbGs7XG5pZiAocHJvY2Vzcy5lbnYuTkVYVF9SVU5USU1FID09PSBcImVkZ2VcIikge1xuICAgIGNoYWxrID0gcmVxdWlyZShcIi4vd2ViL2NoYWxrXCIpLmRlZmF1bHQ7XG59IGVsc2Uge1xuICAgIGNoYWxrID0gcmVxdWlyZShcIm5leHQvZGlzdC9jb21waWxlZC9jaGFsa1wiKTtcbn1cbmNvbnN0IF9kZWZhdWx0ID0gY2hhbGs7XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWNoYWxrLmpzLm1hcCJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsImVudW1lcmFibGUiLCJnZXQiLCJfZGVmYXVsdCIsImNoYWxrIiwicHJvY2VzcyIsImVudiIsIk5FWFRfUlVOVElNRSIsInJlcXVpcmUiLCJkZWZhdWx0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/next/dist/lib/chalk.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/next/dist/lib/constants.js":
/*!*************************************************!*\
  !*** ./node_modules/next/dist/lib/constants.js ***!
  \*************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\n0 && (0);\nfunction _export(target, all) {\n    for(var name in all)Object.defineProperty(target, name, {\n        enumerable: true,\n        get: all[name]\n    });\n}\n_export(exports, {\n    NEXT_QUERY_PARAM_PREFIX: function() {\n        return NEXT_QUERY_PARAM_PREFIX;\n    },\n    PRERENDER_REVALIDATE_HEADER: function() {\n        return PRERENDER_REVALIDATE_HEADER;\n    },\n    PRERENDER_REVALIDATE_ONLY_GENERATED_HEADER: function() {\n        return PRERENDER_REVALIDATE_ONLY_GENERATED_HEADER;\n    },\n    CACHE_ONE_YEAR: function() {\n        return CACHE_ONE_YEAR;\n    },\n    MIDDLEWARE_FILENAME: function() {\n        return MIDDLEWARE_FILENAME;\n    },\n    MIDDLEWARE_LOCATION_REGEXP: function() {\n        return MIDDLEWARE_LOCATION_REGEXP;\n    },\n    INSTRUMENTATION_HOOK_FILENAME: function() {\n        return INSTRUMENTATION_HOOK_FILENAME;\n    },\n    INSTRUMENTATION_HOOKS_LOCATION_REGEXP: function() {\n        return INSTRUMENTATION_HOOKS_LOCATION_REGEXP;\n    },\n    PAGES_DIR_ALIAS: function() {\n        return PAGES_DIR_ALIAS;\n    },\n    DOT_NEXT_ALIAS: function() {\n        return DOT_NEXT_ALIAS;\n    },\n    ROOT_DIR_ALIAS: function() {\n        return ROOT_DIR_ALIAS;\n    },\n    APP_DIR_ALIAS: function() {\n        return APP_DIR_ALIAS;\n    },\n    RSC_MOD_REF_PROXY_ALIAS: function() {\n        return RSC_MOD_REF_PROXY_ALIAS;\n    },\n    RSC_ACTION_VALIDATE_ALIAS: function() {\n        return RSC_ACTION_VALIDATE_ALIAS;\n    },\n    RSC_ACTION_PROXY_ALIAS: function() {\n        return RSC_ACTION_PROXY_ALIAS;\n    },\n    RSC_ACTION_CLIENT_WRAPPER_ALIAS: function() {\n        return RSC_ACTION_CLIENT_WRAPPER_ALIAS;\n    },\n    PUBLIC_DIR_MIDDLEWARE_CONFLICT: function() {\n        return PUBLIC_DIR_MIDDLEWARE_CONFLICT;\n    },\n    SSG_GET_INITIAL_PROPS_CONFLICT: function() {\n        return SSG_GET_INITIAL_PROPS_CONFLICT;\n    },\n    SERVER_PROPS_GET_INIT_PROPS_CONFLICT: function() {\n        return SERVER_PROPS_GET_INIT_PROPS_CONFLICT;\n    },\n    SERVER_PROPS_SSG_CONFLICT: function() {\n        return SERVER_PROPS_SSG_CONFLICT;\n    },\n    STATIC_STATUS_PAGE_GET_INITIAL_PROPS_ERROR: function() {\n        return STATIC_STATUS_PAGE_GET_INITIAL_PROPS_ERROR;\n    },\n    SERVER_PROPS_EXPORT_ERROR: function() {\n        return SERVER_PROPS_EXPORT_ERROR;\n    },\n    GSP_NO_RETURNED_VALUE: function() {\n        return GSP_NO_RETURNED_VALUE;\n    },\n    GSSP_NO_RETURNED_VALUE: function() {\n        return GSSP_NO_RETURNED_VALUE;\n    },\n    UNSTABLE_REVALIDATE_RENAME_ERROR: function() {\n        return UNSTABLE_REVALIDATE_RENAME_ERROR;\n    },\n    GSSP_COMPONENT_MEMBER_ERROR: function() {\n        return GSSP_COMPONENT_MEMBER_ERROR;\n    },\n    NON_STANDARD_NODE_ENV: function() {\n        return NON_STANDARD_NODE_ENV;\n    },\n    SSG_FALLBACK_EXPORT_ERROR: function() {\n        return SSG_FALLBACK_EXPORT_ERROR;\n    },\n    ESLINT_DEFAULT_DIRS: function() {\n        return ESLINT_DEFAULT_DIRS;\n    },\n    ESLINT_DEFAULT_DIRS_WITH_APP: function() {\n        return ESLINT_DEFAULT_DIRS_WITH_APP;\n    },\n    ESLINT_PROMPT_VALUES: function() {\n        return ESLINT_PROMPT_VALUES;\n    },\n    SERVER_RUNTIME: function() {\n        return SERVER_RUNTIME;\n    },\n    WEBPACK_LAYERS: function() {\n        return WEBPACK_LAYERS;\n    },\n    WEBPACK_RESOURCE_QUERIES: function() {\n        return WEBPACK_RESOURCE_QUERIES;\n    }\n});\nconst NEXT_QUERY_PARAM_PREFIX = \"nxtP\";\nconst PRERENDER_REVALIDATE_HEADER = \"x-prerender-revalidate\";\nconst PRERENDER_REVALIDATE_ONLY_GENERATED_HEADER = \"x-prerender-revalidate-if-generated\";\nconst CACHE_ONE_YEAR = 31536000;\nconst MIDDLEWARE_FILENAME = \"middleware\";\nconst MIDDLEWARE_LOCATION_REGEXP = `(?:src/)?${MIDDLEWARE_FILENAME}`;\nconst INSTRUMENTATION_HOOK_FILENAME = \"instrumentation\";\nconst INSTRUMENTATION_HOOKS_LOCATION_REGEXP = `(?:src/)?${INSTRUMENTATION_HOOK_FILENAME}`;\nconst PAGES_DIR_ALIAS = \"private-next-pages\";\nconst DOT_NEXT_ALIAS = \"private-dot-next\";\nconst ROOT_DIR_ALIAS = \"private-next-root-dir\";\nconst APP_DIR_ALIAS = \"private-next-app-dir\";\nconst RSC_MOD_REF_PROXY_ALIAS = \"next/dist/build/webpack/loaders/next-flight-loader/module-proxy\";\nconst RSC_ACTION_VALIDATE_ALIAS = \"private-next-rsc-action-validate\";\nconst RSC_ACTION_PROXY_ALIAS = \"private-next-rsc-action-proxy\";\nconst RSC_ACTION_CLIENT_WRAPPER_ALIAS = \"private-next-rsc-action-client-wrapper\";\nconst PUBLIC_DIR_MIDDLEWARE_CONFLICT = `You can not have a '_next' folder inside of your public folder. This conflicts with the internal '/_next' route. https://nextjs.org/docs/messages/public-next-folder-conflict`;\nconst SSG_GET_INITIAL_PROPS_CONFLICT = `You can not use getInitialProps with getStaticProps. To use SSG, please remove your getInitialProps`;\nconst SERVER_PROPS_GET_INIT_PROPS_CONFLICT = `You can not use getInitialProps with getServerSideProps. Please remove getInitialProps.`;\nconst SERVER_PROPS_SSG_CONFLICT = `You can not use getStaticProps or getStaticPaths with getServerSideProps. To use SSG, please remove getServerSideProps`;\nconst STATIC_STATUS_PAGE_GET_INITIAL_PROPS_ERROR = `can not have getInitialProps/getServerSideProps, https://nextjs.org/docs/messages/404-get-initial-props`;\nconst SERVER_PROPS_EXPORT_ERROR = `pages with \\`getServerSideProps\\` can not be exported. See more info here: https://nextjs.org/docs/messages/gssp-export`;\nconst GSP_NO_RETURNED_VALUE = \"Your `getStaticProps` function did not return an object. Did you forget to add a `return`?\";\nconst GSSP_NO_RETURNED_VALUE = \"Your `getServerSideProps` function did not return an object. Did you forget to add a `return`?\";\nconst UNSTABLE_REVALIDATE_RENAME_ERROR = \"The `unstable_revalidate` property is available for general use.\\n\" + \"Please use `revalidate` instead.\";\nconst GSSP_COMPONENT_MEMBER_ERROR = `can not be attached to a page's component and must be exported from the page. See more info here: https://nextjs.org/docs/messages/gssp-component-member`;\nconst NON_STANDARD_NODE_ENV = `You are using a non-standard \"NODE_ENV\" value in your environment. This creates inconsistencies in the project and is strongly advised against. Read more: https://nextjs.org/docs/messages/non-standard-node-env`;\nconst SSG_FALLBACK_EXPORT_ERROR = `Pages with \\`fallback\\` enabled in \\`getStaticPaths\\` can not be exported. See more info here: https://nextjs.org/docs/messages/ssg-fallback-true-export`;\nconst ESLINT_DEFAULT_DIRS = [\n    \"pages\",\n    \"components\",\n    \"lib\",\n    \"src\"\n];\nconst ESLINT_DEFAULT_DIRS_WITH_APP = [\n    \"app\",\n    ...ESLINT_DEFAULT_DIRS\n];\nconst ESLINT_PROMPT_VALUES = [\n    {\n        title: \"Strict\",\n        recommended: true,\n        config: {\n            extends: \"next/core-web-vitals\"\n        }\n    },\n    {\n        title: \"Base\",\n        config: {\n            extends: \"next\"\n        }\n    },\n    {\n        title: \"Cancel\",\n        config: null\n    }\n];\nconst SERVER_RUNTIME = {\n    edge: \"edge\",\n    experimentalEdge: \"experimental-edge\",\n    nodejs: \"nodejs\"\n};\nconst WEBPACK_LAYERS = {\n    shared: \"sc_shared\",\n    server: \"sc_server\",\n    client: \"sc_client\",\n    action: \"sc_action\",\n    api: \"api\",\n    middleware: \"middleware\",\n    edgeAsset: \"edge-asset\",\n    appClient: \"app-client\"\n};\nconst WEBPACK_RESOURCE_QUERIES = {\n    edgeSSREntry: \"__next_edge_ssr_entry__\",\n    metadata: \"__next_metadata__\"\n}; //# sourceMappingURL=constants.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/next/dist/lib/constants.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/next/dist/server/api-utils/index.js":
/*!**********************************************************!*\
  !*** ./node_modules/next/dist/server/api-utils/index.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\n0 && (0);\nfunction _export(target, all) {\n    for(var name in all)Object.defineProperty(target, name, {\n        enumerable: true,\n        get: all[name]\n    });\n}\n_export(exports, {\n    getCookieParser: function() {\n        return getCookieParser;\n    },\n    sendStatusCode: function() {\n        return sendStatusCode;\n    },\n    redirect: function() {\n        return redirect;\n    },\n    checkIsOnDemandRevalidate: function() {\n        return checkIsOnDemandRevalidate;\n    },\n    COOKIE_NAME_PRERENDER_BYPASS: function() {\n        return COOKIE_NAME_PRERENDER_BYPASS;\n    },\n    COOKIE_NAME_PRERENDER_DATA: function() {\n        return COOKIE_NAME_PRERENDER_DATA;\n    },\n    RESPONSE_LIMIT_DEFAULT: function() {\n        return RESPONSE_LIMIT_DEFAULT;\n    },\n    SYMBOL_PREVIEW_DATA: function() {\n        return SYMBOL_PREVIEW_DATA;\n    },\n    SYMBOL_CLEARED_COOKIES: function() {\n        return SYMBOL_CLEARED_COOKIES;\n    },\n    clearPreviewData: function() {\n        return clearPreviewData;\n    },\n    ApiError: function() {\n        return ApiError;\n    },\n    sendError: function() {\n        return sendError;\n    },\n    setLazyProp: function() {\n        return setLazyProp;\n    }\n});\nconst _headers = __webpack_require__(/*! ../web/spec-extension/adapters/headers */ \"(sc_server)/./node_modules/next/dist/server/web/spec-extension/adapters/headers.js\");\nconst _constants = __webpack_require__(/*! ../../lib/constants */ \"(sc_server)/./node_modules/next/dist/lib/constants.js\");\nfunction getCookieParser(headers) {\n    return function parseCookie() {\n        const { cookie  } = headers;\n        if (!cookie) {\n            return {};\n        }\n        const { parse: parseCookieFn  } = __webpack_require__(/*! next/dist/compiled/cookie */ \"next/dist/compiled/cookie\");\n        return parseCookieFn(Array.isArray(cookie) ? cookie.join(\"; \") : cookie);\n    };\n}\nfunction sendStatusCode(res, statusCode) {\n    res.statusCode = statusCode;\n    return res;\n}\nfunction redirect(res, statusOrUrl, url) {\n    if (typeof statusOrUrl === \"string\") {\n        url = statusOrUrl;\n        statusOrUrl = 307;\n    }\n    if (typeof statusOrUrl !== \"number\" || typeof url !== \"string\") {\n        throw new Error(`Invalid redirect arguments. Please use a single argument URL, e.g. res.redirect('/destination') or use a status code and URL, e.g. res.redirect(307, '/destination').`);\n    }\n    res.writeHead(statusOrUrl, {\n        Location: url\n    });\n    res.write(url);\n    res.end();\n    return res;\n}\nfunction checkIsOnDemandRevalidate(req, previewProps) {\n    const headers = _headers.HeadersAdapter.from(req.headers);\n    const previewModeId = headers.get(_constants.PRERENDER_REVALIDATE_HEADER);\n    const isOnDemandRevalidate = previewModeId === previewProps.previewModeId;\n    const revalidateOnlyGenerated = headers.has(_constants.PRERENDER_REVALIDATE_ONLY_GENERATED_HEADER);\n    return {\n        isOnDemandRevalidate,\n        revalidateOnlyGenerated\n    };\n}\nconst COOKIE_NAME_PRERENDER_BYPASS = `__prerender_bypass`;\nconst COOKIE_NAME_PRERENDER_DATA = `__next_preview_data`;\nconst RESPONSE_LIMIT_DEFAULT = 4 * 1024 * 1024;\nconst SYMBOL_PREVIEW_DATA = Symbol(COOKIE_NAME_PRERENDER_DATA);\nconst SYMBOL_CLEARED_COOKIES = Symbol(COOKIE_NAME_PRERENDER_BYPASS);\nfunction clearPreviewData(res, options = {}) {\n    if (SYMBOL_CLEARED_COOKIES in res) {\n        return res;\n    }\n    const { serialize  } = __webpack_require__(/*! next/dist/compiled/cookie */ \"next/dist/compiled/cookie\");\n    const previous = res.getHeader(\"Set-Cookie\");\n    res.setHeader(`Set-Cookie`, [\n        ...typeof previous === \"string\" ? [\n            previous\n        ] : Array.isArray(previous) ? previous : [],\n        serialize(COOKIE_NAME_PRERENDER_BYPASS, \"\", {\n            // To delete a cookie, set `expires` to a date in the past:\n            // https://tools.ietf.org/html/rfc6265#section-4.1.1\n            // `Max-Age: 0` is not valid, thus ignored, and the cookie is persisted.\n            expires: new Date(0),\n            httpOnly: true,\n            sameSite:  false ? 0 : \"lax\",\n            secure: \"development\" !== \"development\",\n            path: \"/\",\n            ...options.path !== undefined ? {\n                path: options.path\n            } : undefined\n        }),\n        serialize(COOKIE_NAME_PRERENDER_DATA, \"\", {\n            // To delete a cookie, set `expires` to a date in the past:\n            // https://tools.ietf.org/html/rfc6265#section-4.1.1\n            // `Max-Age: 0` is not valid, thus ignored, and the cookie is persisted.\n            expires: new Date(0),\n            httpOnly: true,\n            sameSite:  false ? 0 : \"lax\",\n            secure: \"development\" !== \"development\",\n            path: \"/\",\n            ...options.path !== undefined ? {\n                path: options.path\n            } : undefined\n        })\n    ]);\n    Object.defineProperty(res, SYMBOL_CLEARED_COOKIES, {\n        value: true,\n        enumerable: false\n    });\n    return res;\n}\nclass ApiError extends Error {\n    constructor(statusCode, message){\n        super(message);\n        this.statusCode = statusCode;\n    }\n}\nfunction sendError(res, statusCode, message) {\n    res.statusCode = statusCode;\n    res.statusMessage = message;\n    res.end(message);\n}\nfunction setLazyProp({ req  }, prop, getter) {\n    const opts = {\n        configurable: true,\n        enumerable: true\n    };\n    const optsReset = {\n        ...opts,\n        writable: true\n    };\n    Object.defineProperty(req, prop, {\n        ...opts,\n        get: ()=>{\n            const value = getter();\n            // we set the property on the object to avoid recalculating it\n            Object.defineProperty(req, prop, {\n                ...optsReset,\n                value\n            });\n            return value;\n        },\n        set: (value)=>{\n            Object.defineProperty(req, prop, {\n                ...optsReset,\n                value\n            });\n        }\n    });\n} //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/next/dist/server/api-utils/index.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/next/dist/server/async-storage/draft-mode-provider.js":
/*!****************************************************************************!*\
  !*** ./node_modules/next/dist/server/async-storage/draft-mode-provider.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nObject.defineProperty(exports, \"DraftModeProvider\", ({\n    enumerable: true,\n    get: function() {\n        return DraftModeProvider;\n    }\n}));\nconst _apiutils = __webpack_require__(/*! ../api-utils */ \"(sc_server)/./node_modules/next/dist/server/api-utils/index.js\");\nclass DraftModeProvider {\n    constructor(previewProps, req, cookies, mutableCookies){\n        var _cookies_get;\n        // The logic for draftMode() is very similar to tryGetPreviewData()\n        // but Draft Mode does not have any data associated with it.\n        const isOnDemandRevalidate = previewProps && (0, _apiutils.checkIsOnDemandRevalidate)(req, previewProps).isOnDemandRevalidate;\n        const cookieValue = (_cookies_get = cookies.get(_apiutils.COOKIE_NAME_PRERENDER_BYPASS)) == null ? void 0 : _cookies_get.value;\n        this.isEnabled = Boolean(!isOnDemandRevalidate && cookieValue && previewProps && cookieValue === previewProps.previewModeId);\n        this._previewModeId = previewProps == null ? void 0 : previewProps.previewModeId;\n        this._mutableCookies = mutableCookies;\n    }\n    enable() {\n        if (!this._previewModeId) {\n            throw new Error(\"Invariant: previewProps missing previewModeId this should never happen\");\n        }\n        this._mutableCookies.set({\n            name: _apiutils.COOKIE_NAME_PRERENDER_BYPASS,\n            value: this._previewModeId,\n            httpOnly: true,\n            sameSite:  false ? 0 : \"lax\",\n            secure: \"development\" !== \"development\",\n            path: \"/\"\n        });\n    }\n    disable() {\n        // To delete a cookie, set `expires` to a date in the past:\n        // https://tools.ietf.org/html/rfc6265#section-4.1.1\n        // `Max-Age: 0` is not valid, thus ignored, and the cookie is persisted.\n        this._mutableCookies.set({\n            name: _apiutils.COOKIE_NAME_PRERENDER_BYPASS,\n            value: \"\",\n            httpOnly: true,\n            sameSite:  false ? 0 : \"lax\",\n            secure: \"development\" !== \"development\",\n            path: \"/\",\n            expires: new Date(0)\n        });\n    }\n} //# sourceMappingURL=draft-mode-provider.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L3NlcnZlci9hc3luYy1zdG9yYWdlL2RyYWZ0LW1vZGUtcHJvdmlkZXIuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYkEsOENBQTZDO0lBQ3pDRyxPQUFPO0FBQ1gsQ0FBQyxFQUFDO0FBQ0ZILHFEQUFvRDtJQUNoREksWUFBWTtJQUNaQyxLQUFLO1FBQ0QsT0FBT0M7SUFDWDtBQUNKLENBQUMsRUFBQztBQUNGLE1BQU1DLFlBQVlDLG1CQUFPQSxDQUFDLG9GQUFjO0FBQ3hDLE1BQU1GO0lBQ0ZHLFlBQVlDLFlBQVksRUFBRUMsR0FBRyxFQUFFQyxPQUFPLEVBQUVDLGNBQWMsQ0FBQztRQUNuRCxJQUFJQztRQUNKLG1FQUFtRTtRQUNuRSw0REFBNEQ7UUFDNUQsTUFBTUMsdUJBQXVCTCxnQkFBZ0IsQ0FBQyxHQUFHSCxVQUFVUyx5QkFBd0IsRUFBR0wsS0FBS0QsY0FBY0s7UUFDekcsTUFBTUUsY0FBYyxDQUFDSCxlQUFlRixRQUFRUCxJQUFJRSxVQUFVVyw2QkFBNEIsS0FBTSxPQUFPLEtBQUssSUFBSUosYUFBYVg7UUFDekgsSUFBSSxDQUFDZ0IsWUFBWUMsUUFBUSxDQUFDTCx3QkFBd0JFLGVBQWVQLGdCQUFnQk8sZ0JBQWdCUCxhQUFhVztRQUM5RyxJQUFJLENBQUNDLGlCQUFpQlosZ0JBQWdCLE9BQU8sS0FBSyxJQUFJQSxhQUFhVztRQUNuRSxJQUFJLENBQUNFLGtCQUFrQlY7SUFDM0I7SUFDQVcsU0FBUztRQUNMLElBQUksQ0FBQyxJQUFJLENBQUNGLGdCQUFnQjtZQUN0QixNQUFNLElBQUlHLE1BQU07UUFDcEI7UUFDQSxJQUFJLENBQUNGLGdCQUFnQkcsSUFBSTtZQUNyQkMsTUFBTXBCLFVBQVVXO1lBQ2hCZixPQUFPLElBQUksQ0FBQ21CO1lBQ1pNLFVBQVU7WUFDVkMsVUFBVUMsTUFBc0MsR0FBRyxDQUFNLEdBQUc7WUFDNURDLFFBQVFELGtCQUF5QjtZQUNqQ0UsTUFBTTtRQUNWO0lBQ0o7SUFDQUMsVUFBVTtRQUNOLDJEQUEyRDtRQUMzRCxvREFBb0Q7UUFDcEQsd0VBQXdFO1FBQ3hFLElBQUksQ0FBQ1YsZ0JBQWdCRyxJQUFJO1lBQ3JCQyxNQUFNcEIsVUFBVVc7WUFDaEJmLE9BQU87WUFDUHlCLFVBQVU7WUFDVkMsVUFBVUMsTUFBc0MsR0FBRyxDQUFNLEdBQUc7WUFDNURDLFFBQVFELGtCQUF5QjtZQUNqQ0UsTUFBTTtZQUNORSxTQUFTLElBQUlDLEtBQUs7UUFDdEI7SUFDSjtBQUNKLEVBRUEsK0NBQStDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZnVsbHN0YWNrLXJvbGUtYmFzZWQtbmV4dGpzLTIvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L3NlcnZlci9hc3luYy1zdG9yYWdlL2RyYWZ0LW1vZGUtcHJvdmlkZXIuanM/ODdkYyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICAgIHZhbHVlOiB0cnVlXG59KTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIkRyYWZ0TW9kZVByb3ZpZGVyXCIsIHtcbiAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgIGdldDogZnVuY3Rpb24oKSB7XG4gICAgICAgIHJldHVybiBEcmFmdE1vZGVQcm92aWRlcjtcbiAgICB9XG59KTtcbmNvbnN0IF9hcGl1dGlscyA9IHJlcXVpcmUoXCIuLi9hcGktdXRpbHNcIik7XG5jbGFzcyBEcmFmdE1vZGVQcm92aWRlciB7XG4gICAgY29uc3RydWN0b3IocHJldmlld1Byb3BzLCByZXEsIGNvb2tpZXMsIG11dGFibGVDb29raWVzKXtcbiAgICAgICAgdmFyIF9jb29raWVzX2dldDtcbiAgICAgICAgLy8gVGhlIGxvZ2ljIGZvciBkcmFmdE1vZGUoKSBpcyB2ZXJ5IHNpbWlsYXIgdG8gdHJ5R2V0UHJldmlld0RhdGEoKVxuICAgICAgICAvLyBidXQgRHJhZnQgTW9kZSBkb2VzIG5vdCBoYXZlIGFueSBkYXRhIGFzc29jaWF0ZWQgd2l0aCBpdC5cbiAgICAgICAgY29uc3QgaXNPbkRlbWFuZFJldmFsaWRhdGUgPSBwcmV2aWV3UHJvcHMgJiYgKDAsIF9hcGl1dGlscy5jaGVja0lzT25EZW1hbmRSZXZhbGlkYXRlKShyZXEsIHByZXZpZXdQcm9wcykuaXNPbkRlbWFuZFJldmFsaWRhdGU7XG4gICAgICAgIGNvbnN0IGNvb2tpZVZhbHVlID0gKF9jb29raWVzX2dldCA9IGNvb2tpZXMuZ2V0KF9hcGl1dGlscy5DT09LSUVfTkFNRV9QUkVSRU5ERVJfQllQQVNTKSkgPT0gbnVsbCA/IHZvaWQgMCA6IF9jb29raWVzX2dldC52YWx1ZTtcbiAgICAgICAgdGhpcy5pc0VuYWJsZWQgPSBCb29sZWFuKCFpc09uRGVtYW5kUmV2YWxpZGF0ZSAmJiBjb29raWVWYWx1ZSAmJiBwcmV2aWV3UHJvcHMgJiYgY29va2llVmFsdWUgPT09IHByZXZpZXdQcm9wcy5wcmV2aWV3TW9kZUlkKTtcbiAgICAgICAgdGhpcy5fcHJldmlld01vZGVJZCA9IHByZXZpZXdQcm9wcyA9PSBudWxsID8gdm9pZCAwIDogcHJldmlld1Byb3BzLnByZXZpZXdNb2RlSWQ7XG4gICAgICAgIHRoaXMuX211dGFibGVDb29raWVzID0gbXV0YWJsZUNvb2tpZXM7XG4gICAgfVxuICAgIGVuYWJsZSgpIHtcbiAgICAgICAgaWYgKCF0aGlzLl9wcmV2aWV3TW9kZUlkKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJJbnZhcmlhbnQ6IHByZXZpZXdQcm9wcyBtaXNzaW5nIHByZXZpZXdNb2RlSWQgdGhpcyBzaG91bGQgbmV2ZXIgaGFwcGVuXCIpO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMuX211dGFibGVDb29raWVzLnNldCh7XG4gICAgICAgICAgICBuYW1lOiBfYXBpdXRpbHMuQ09PS0lFX05BTUVfUFJFUkVOREVSX0JZUEFTUyxcbiAgICAgICAgICAgIHZhbHVlOiB0aGlzLl9wcmV2aWV3TW9kZUlkLFxuICAgICAgICAgICAgaHR0cE9ubHk6IHRydWUsXG4gICAgICAgICAgICBzYW1lU2l0ZTogcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwiZGV2ZWxvcG1lbnRcIiA/IFwibm9uZVwiIDogXCJsYXhcIixcbiAgICAgICAgICAgIHNlY3VyZTogcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwiZGV2ZWxvcG1lbnRcIixcbiAgICAgICAgICAgIHBhdGg6IFwiL1wiXG4gICAgICAgIH0pO1xuICAgIH1cbiAgICBkaXNhYmxlKCkge1xuICAgICAgICAvLyBUbyBkZWxldGUgYSBjb29raWUsIHNldCBgZXhwaXJlc2AgdG8gYSBkYXRlIGluIHRoZSBwYXN0OlxuICAgICAgICAvLyBodHRwczovL3Rvb2xzLmlldGYub3JnL2h0bWwvcmZjNjI2NSNzZWN0aW9uLTQuMS4xXG4gICAgICAgIC8vIGBNYXgtQWdlOiAwYCBpcyBub3QgdmFsaWQsIHRodXMgaWdub3JlZCwgYW5kIHRoZSBjb29raWUgaXMgcGVyc2lzdGVkLlxuICAgICAgICB0aGlzLl9tdXRhYmxlQ29va2llcy5zZXQoe1xuICAgICAgICAgICAgbmFtZTogX2FwaXV0aWxzLkNPT0tJRV9OQU1FX1BSRVJFTkRFUl9CWVBBU1MsXG4gICAgICAgICAgICB2YWx1ZTogXCJcIixcbiAgICAgICAgICAgIGh0dHBPbmx5OiB0cnVlLFxuICAgICAgICAgICAgc2FtZVNpdGU6IHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcImRldmVsb3BtZW50XCIgPyBcIm5vbmVcIiA6IFwibGF4XCIsXG4gICAgICAgICAgICBzZWN1cmU6IHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcImRldmVsb3BtZW50XCIsXG4gICAgICAgICAgICBwYXRoOiBcIi9cIixcbiAgICAgICAgICAgIGV4cGlyZXM6IG5ldyBEYXRlKDApXG4gICAgICAgIH0pO1xuICAgIH1cbn1cblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZHJhZnQtbW9kZS1wcm92aWRlci5qcy5tYXAiXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJlbnVtZXJhYmxlIiwiZ2V0IiwiRHJhZnRNb2RlUHJvdmlkZXIiLCJfYXBpdXRpbHMiLCJyZXF1aXJlIiwiY29uc3RydWN0b3IiLCJwcmV2aWV3UHJvcHMiLCJyZXEiLCJjb29raWVzIiwibXV0YWJsZUNvb2tpZXMiLCJfY29va2llc19nZXQiLCJpc09uRGVtYW5kUmV2YWxpZGF0ZSIsImNoZWNrSXNPbkRlbWFuZFJldmFsaWRhdGUiLCJjb29raWVWYWx1ZSIsIkNPT0tJRV9OQU1FX1BSRVJFTkRFUl9CWVBBU1MiLCJpc0VuYWJsZWQiLCJCb29sZWFuIiwicHJldmlld01vZGVJZCIsIl9wcmV2aWV3TW9kZUlkIiwiX211dGFibGVDb29raWVzIiwiZW5hYmxlIiwiRXJyb3IiLCJzZXQiLCJuYW1lIiwiaHR0cE9ubHkiLCJzYW1lU2l0ZSIsInByb2Nlc3MiLCJzZWN1cmUiLCJwYXRoIiwiZGlzYWJsZSIsImV4cGlyZXMiLCJEYXRlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/next/dist/server/async-storage/draft-mode-provider.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/next/dist/server/async-storage/request-async-storage-wrapper.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/next/dist/server/async-storage/request-async-storage-wrapper.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nObject.defineProperty(exports, \"RequestAsyncStorageWrapper\", ({\n    enumerable: true,\n    get: function() {\n        return RequestAsyncStorageWrapper;\n    }\n}));\nconst _approuterheaders = __webpack_require__(/*! ../../client/components/app-router-headers */ \"(sc_server)/./node_modules/next/dist/client/components/app-router-headers.js\");\nconst _headers = __webpack_require__(/*! ../web/spec-extension/adapters/headers */ \"(sc_server)/./node_modules/next/dist/server/web/spec-extension/adapters/headers.js\");\nconst _requestcookies = __webpack_require__(/*! ../web/spec-extension/adapters/request-cookies */ \"(sc_server)/./node_modules/next/dist/server/web/spec-extension/adapters/request-cookies.js\");\nconst _cookies = __webpack_require__(/*! ../web/spec-extension/cookies */ \"(sc_server)/./node_modules/next/dist/server/web/spec-extension/cookies.js\");\nconst _draftmodeprovider = __webpack_require__(/*! ./draft-mode-provider */ \"(sc_server)/./node_modules/next/dist/server/async-storage/draft-mode-provider.js\");\nfunction getHeaders(headers) {\n    const cleaned = _headers.HeadersAdapter.from(headers);\n    for (const param of _approuterheaders.FLIGHT_PARAMETERS){\n        cleaned.delete(param.toString().toLowerCase());\n    }\n    return _headers.HeadersAdapter.seal(cleaned);\n}\nfunction getCookies(headers) {\n    const cookies = new _cookies.RequestCookies(_headers.HeadersAdapter.from(headers));\n    return _requestcookies.RequestCookiesAdapter.seal(cookies);\n}\nfunction getMutableCookies(headers, res) {\n    const cookies = new _cookies.RequestCookies(_headers.HeadersAdapter.from(headers));\n    return _requestcookies.MutableRequestCookiesAdapter.wrap(cookies, res);\n}\nconst RequestAsyncStorageWrapper = {\n    /**\n   * Wrap the callback with the given store so it can access the underlying\n   * store using hooks.\n   *\n   * @param storage underlying storage object returned by the module\n   * @param context context to seed the store\n   * @param callback function to call within the scope of the context\n   * @returns the result returned by the callback\n   */ wrap (storage, { req , res , renderOpts  }, callback) {\n        let previewProps = undefined;\n        if (renderOpts && \"previewProps\" in renderOpts) {\n            // TODO: investigate why previewProps isn't on RenderOpts\n            previewProps = renderOpts.previewProps;\n        }\n        const cache = {};\n        const store = {\n            get headers () {\n                if (!cache.headers) {\n                    // Seal the headers object that'll freeze out any methods that could\n                    // mutate the underlying data.\n                    cache.headers = getHeaders(req.headers);\n                }\n                return cache.headers;\n            },\n            get cookies () {\n                if (!cache.cookies) {\n                    // Seal the cookies object that'll freeze out any methods that could\n                    // mutate the underlying data.\n                    cache.cookies = getCookies(req.headers);\n                }\n                return cache.cookies;\n            },\n            get mutableCookies () {\n                if (!cache.mutableCookies) {\n                    cache.mutableCookies = getMutableCookies(req.headers, res);\n                }\n                return cache.mutableCookies;\n            },\n            get draftMode () {\n                if (!cache.draftMode) {\n                    cache.draftMode = new _draftmodeprovider.DraftModeProvider(previewProps, req, this.cookies, this.mutableCookies);\n                }\n                return cache.draftMode;\n            }\n        };\n        return storage.run(store, callback, store);\n    }\n}; //# sourceMappingURL=request-async-storage-wrapper.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L3NlcnZlci9hc3luYy1zdG9yYWdlL3JlcXVlc3QtYXN5bmMtc3RvcmFnZS13cmFwcGVyLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2JBLDhDQUE2QztJQUN6Q0csT0FBTztBQUNYLENBQUMsRUFBQztBQUNGSCw4REFBNkQ7SUFDekRJLFlBQVk7SUFDWkMsS0FBSztRQUNELE9BQU9DO0lBQ1g7QUFDSixDQUFDLEVBQUM7QUFDRixNQUFNQyxvQkFBb0JDLG1CQUFPQSxDQUFDLGdJQUE0QztBQUM5RSxNQUFNQyxXQUFXRCxtQkFBT0EsQ0FBQyxrSUFBd0M7QUFDakUsTUFBTUUsa0JBQWtCRixtQkFBT0EsQ0FBQyxrSkFBZ0Q7QUFDaEYsTUFBTUcsV0FBV0gsbUJBQU9BLENBQUMsZ0hBQStCO0FBQ3hELE1BQU1JLHFCQUFxQkosbUJBQU9BLENBQUMsK0dBQXVCO0FBQzFELFNBQVNLLFdBQVdDLE9BQU87SUFDdkIsTUFBTUMsVUFBVU4sU0FBU08sZUFBZUMsS0FBS0g7SUFDN0MsS0FBSyxNQUFNSSxTQUFTWCxrQkFBa0JZLGtCQUFrQjtRQUNwREosUUFBUUssT0FBT0YsTUFBTUcsV0FBV0M7SUFDcEM7SUFDQSxPQUFPYixTQUFTTyxlQUFlTyxLQUFLUjtBQUN4QztBQUNBLFNBQVNTLFdBQVdWLE9BQU87SUFDdkIsTUFBTVcsVUFBVSxJQUFJZCxTQUFTZSxlQUFlakIsU0FBU08sZUFBZUMsS0FBS0g7SUFDekUsT0FBT0osZ0JBQWdCaUIsc0JBQXNCSixLQUFLRTtBQUN0RDtBQUNBLFNBQVNHLGtCQUFrQmQsT0FBTyxFQUFFZSxHQUFHO0lBQ25DLE1BQU1KLFVBQVUsSUFBSWQsU0FBU2UsZUFBZWpCLFNBQVNPLGVBQWVDLEtBQUtIO0lBQ3pFLE9BQU9KLGdCQUFnQm9CLDZCQUE2QkMsS0FBS04sU0FBU0k7QUFDdEU7QUFDQSxNQUFNdkIsNkJBQTZCO0lBQy9COzs7Ozs7OztHQVFELEdBQUd5QixNQUFNQyxPQUFPLEVBQUUsRUFBRUMsSUFBRyxFQUFHSixJQUFHLEVBQUdLLFdBQVUsRUFBRyxFQUFFQyxRQUFRO1FBQ2xELElBQUlDLGVBQWVDO1FBQ25CLElBQUlILGNBQWMsa0JBQWtCQSxZQUFZO1lBQzVDLHlEQUF5RDtZQUN6REUsZUFBZUYsV0FBV0U7UUFDOUI7UUFDQSxNQUFNRSxRQUFRLENBQUM7UUFDZixNQUFNQyxRQUFRO1lBQ1YsSUFBSXpCLFdBQVc7Z0JBQ1gsSUFBSSxDQUFDd0IsTUFBTXhCLFNBQVM7b0JBQ2hCLG9FQUFvRTtvQkFDcEUsOEJBQThCO29CQUM5QndCLE1BQU14QixVQUFVRCxXQUFXb0IsSUFBSW5CO2dCQUNuQztnQkFDQSxPQUFPd0IsTUFBTXhCO1lBQ2pCO1lBQ0EsSUFBSVcsV0FBVztnQkFDWCxJQUFJLENBQUNhLE1BQU1iLFNBQVM7b0JBQ2hCLG9FQUFvRTtvQkFDcEUsOEJBQThCO29CQUM5QmEsTUFBTWIsVUFBVUQsV0FBV1MsSUFBSW5CO2dCQUNuQztnQkFDQSxPQUFPd0IsTUFBTWI7WUFDakI7WUFDQSxJQUFJZSxrQkFBa0I7Z0JBQ2xCLElBQUksQ0FBQ0YsTUFBTUUsZ0JBQWdCO29CQUN2QkYsTUFBTUUsaUJBQWlCWixrQkFBa0JLLElBQUluQixTQUFTZTtnQkFDMUQ7Z0JBQ0EsT0FBT1MsTUFBTUU7WUFDakI7WUFDQSxJQUFJQyxhQUFhO2dCQUNiLElBQUksQ0FBQ0gsTUFBTUcsV0FBVztvQkFDbEJILE1BQU1HLFlBQVksSUFBSTdCLG1CQUFtQjhCLGtCQUFrQk4sY0FBY0gsS0FBSyxJQUFJLENBQUNSLFNBQVMsSUFBSSxDQUFDZTtnQkFDckc7Z0JBQ0EsT0FBT0YsTUFBTUc7WUFDakI7UUFDSjtRQUNBLE9BQU9ULFFBQVFXLElBQUlKLE9BQU9KLFVBQVVJO0lBQ3hDO0FBQ0osR0FFQSx5REFBeUQiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mdWxsc3RhY2stcm9sZS1iYXNlZC1uZXh0anMtMi8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3Qvc2VydmVyL2FzeW5jLXN0b3JhZ2UvcmVxdWVzdC1hc3luYy1zdG9yYWdlLXdyYXBwZXIuanM/NzA4NyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICAgIHZhbHVlOiB0cnVlXG59KTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIlJlcXVlc3RBc3luY1N0b3JhZ2VXcmFwcGVyXCIsIHtcbiAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgIGdldDogZnVuY3Rpb24oKSB7XG4gICAgICAgIHJldHVybiBSZXF1ZXN0QXN5bmNTdG9yYWdlV3JhcHBlcjtcbiAgICB9XG59KTtcbmNvbnN0IF9hcHByb3V0ZXJoZWFkZXJzID0gcmVxdWlyZShcIi4uLy4uL2NsaWVudC9jb21wb25lbnRzL2FwcC1yb3V0ZXItaGVhZGVyc1wiKTtcbmNvbnN0IF9oZWFkZXJzID0gcmVxdWlyZShcIi4uL3dlYi9zcGVjLWV4dGVuc2lvbi9hZGFwdGVycy9oZWFkZXJzXCIpO1xuY29uc3QgX3JlcXVlc3Rjb29raWVzID0gcmVxdWlyZShcIi4uL3dlYi9zcGVjLWV4dGVuc2lvbi9hZGFwdGVycy9yZXF1ZXN0LWNvb2tpZXNcIik7XG5jb25zdCBfY29va2llcyA9IHJlcXVpcmUoXCIuLi93ZWIvc3BlYy1leHRlbnNpb24vY29va2llc1wiKTtcbmNvbnN0IF9kcmFmdG1vZGVwcm92aWRlciA9IHJlcXVpcmUoXCIuL2RyYWZ0LW1vZGUtcHJvdmlkZXJcIik7XG5mdW5jdGlvbiBnZXRIZWFkZXJzKGhlYWRlcnMpIHtcbiAgICBjb25zdCBjbGVhbmVkID0gX2hlYWRlcnMuSGVhZGVyc0FkYXB0ZXIuZnJvbShoZWFkZXJzKTtcbiAgICBmb3IgKGNvbnN0IHBhcmFtIG9mIF9hcHByb3V0ZXJoZWFkZXJzLkZMSUdIVF9QQVJBTUVURVJTKXtcbiAgICAgICAgY2xlYW5lZC5kZWxldGUocGFyYW0udG9TdHJpbmcoKS50b0xvd2VyQ2FzZSgpKTtcbiAgICB9XG4gICAgcmV0dXJuIF9oZWFkZXJzLkhlYWRlcnNBZGFwdGVyLnNlYWwoY2xlYW5lZCk7XG59XG5mdW5jdGlvbiBnZXRDb29raWVzKGhlYWRlcnMpIHtcbiAgICBjb25zdCBjb29raWVzID0gbmV3IF9jb29raWVzLlJlcXVlc3RDb29raWVzKF9oZWFkZXJzLkhlYWRlcnNBZGFwdGVyLmZyb20oaGVhZGVycykpO1xuICAgIHJldHVybiBfcmVxdWVzdGNvb2tpZXMuUmVxdWVzdENvb2tpZXNBZGFwdGVyLnNlYWwoY29va2llcyk7XG59XG5mdW5jdGlvbiBnZXRNdXRhYmxlQ29va2llcyhoZWFkZXJzLCByZXMpIHtcbiAgICBjb25zdCBjb29raWVzID0gbmV3IF9jb29raWVzLlJlcXVlc3RDb29raWVzKF9oZWFkZXJzLkhlYWRlcnNBZGFwdGVyLmZyb20oaGVhZGVycykpO1xuICAgIHJldHVybiBfcmVxdWVzdGNvb2tpZXMuTXV0YWJsZVJlcXVlc3RDb29raWVzQWRhcHRlci53cmFwKGNvb2tpZXMsIHJlcyk7XG59XG5jb25zdCBSZXF1ZXN0QXN5bmNTdG9yYWdlV3JhcHBlciA9IHtcbiAgICAvKipcbiAgICogV3JhcCB0aGUgY2FsbGJhY2sgd2l0aCB0aGUgZ2l2ZW4gc3RvcmUgc28gaXQgY2FuIGFjY2VzcyB0aGUgdW5kZXJseWluZ1xuICAgKiBzdG9yZSB1c2luZyBob29rcy5cbiAgICpcbiAgICogQHBhcmFtIHN0b3JhZ2UgdW5kZXJseWluZyBzdG9yYWdlIG9iamVjdCByZXR1cm5lZCBieSB0aGUgbW9kdWxlXG4gICAqIEBwYXJhbSBjb250ZXh0IGNvbnRleHQgdG8gc2VlZCB0aGUgc3RvcmVcbiAgICogQHBhcmFtIGNhbGxiYWNrIGZ1bmN0aW9uIHRvIGNhbGwgd2l0aGluIHRoZSBzY29wZSBvZiB0aGUgY29udGV4dFxuICAgKiBAcmV0dXJucyB0aGUgcmVzdWx0IHJldHVybmVkIGJ5IHRoZSBjYWxsYmFja1xuICAgKi8gd3JhcCAoc3RvcmFnZSwgeyByZXEgLCByZXMgLCByZW5kZXJPcHRzICB9LCBjYWxsYmFjaykge1xuICAgICAgICBsZXQgcHJldmlld1Byb3BzID0gdW5kZWZpbmVkO1xuICAgICAgICBpZiAocmVuZGVyT3B0cyAmJiBcInByZXZpZXdQcm9wc1wiIGluIHJlbmRlck9wdHMpIHtcbiAgICAgICAgICAgIC8vIFRPRE86IGludmVzdGlnYXRlIHdoeSBwcmV2aWV3UHJvcHMgaXNuJ3Qgb24gUmVuZGVyT3B0c1xuICAgICAgICAgICAgcHJldmlld1Byb3BzID0gcmVuZGVyT3B0cy5wcmV2aWV3UHJvcHM7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgY2FjaGUgPSB7fTtcbiAgICAgICAgY29uc3Qgc3RvcmUgPSB7XG4gICAgICAgICAgICBnZXQgaGVhZGVycyAoKSB7XG4gICAgICAgICAgICAgICAgaWYgKCFjYWNoZS5oZWFkZXJzKSB7XG4gICAgICAgICAgICAgICAgICAgIC8vIFNlYWwgdGhlIGhlYWRlcnMgb2JqZWN0IHRoYXQnbGwgZnJlZXplIG91dCBhbnkgbWV0aG9kcyB0aGF0IGNvdWxkXG4gICAgICAgICAgICAgICAgICAgIC8vIG11dGF0ZSB0aGUgdW5kZXJseWluZyBkYXRhLlxuICAgICAgICAgICAgICAgICAgICBjYWNoZS5oZWFkZXJzID0gZ2V0SGVhZGVycyhyZXEuaGVhZGVycyk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHJldHVybiBjYWNoZS5oZWFkZXJzO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGdldCBjb29raWVzICgpIHtcbiAgICAgICAgICAgICAgICBpZiAoIWNhY2hlLmNvb2tpZXMpIHtcbiAgICAgICAgICAgICAgICAgICAgLy8gU2VhbCB0aGUgY29va2llcyBvYmplY3QgdGhhdCdsbCBmcmVlemUgb3V0IGFueSBtZXRob2RzIHRoYXQgY291bGRcbiAgICAgICAgICAgICAgICAgICAgLy8gbXV0YXRlIHRoZSB1bmRlcmx5aW5nIGRhdGEuXG4gICAgICAgICAgICAgICAgICAgIGNhY2hlLmNvb2tpZXMgPSBnZXRDb29raWVzKHJlcS5oZWFkZXJzKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgcmV0dXJuIGNhY2hlLmNvb2tpZXM7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgZ2V0IG11dGFibGVDb29raWVzICgpIHtcbiAgICAgICAgICAgICAgICBpZiAoIWNhY2hlLm11dGFibGVDb29raWVzKSB7XG4gICAgICAgICAgICAgICAgICAgIGNhY2hlLm11dGFibGVDb29raWVzID0gZ2V0TXV0YWJsZUNvb2tpZXMocmVxLmhlYWRlcnMsIHJlcyk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHJldHVybiBjYWNoZS5tdXRhYmxlQ29va2llcztcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBnZXQgZHJhZnRNb2RlICgpIHtcbiAgICAgICAgICAgICAgICBpZiAoIWNhY2hlLmRyYWZ0TW9kZSkge1xuICAgICAgICAgICAgICAgICAgICBjYWNoZS5kcmFmdE1vZGUgPSBuZXcgX2RyYWZ0bW9kZXByb3ZpZGVyLkRyYWZ0TW9kZVByb3ZpZGVyKHByZXZpZXdQcm9wcywgcmVxLCB0aGlzLmNvb2tpZXMsIHRoaXMubXV0YWJsZUNvb2tpZXMpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICByZXR1cm4gY2FjaGUuZHJhZnRNb2RlO1xuICAgICAgICAgICAgfVxuICAgICAgICB9O1xuICAgICAgICByZXR1cm4gc3RvcmFnZS5ydW4oc3RvcmUsIGNhbGxiYWNrLCBzdG9yZSk7XG4gICAgfVxufTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cmVxdWVzdC1hc3luYy1zdG9yYWdlLXdyYXBwZXIuanMubWFwIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiZW51bWVyYWJsZSIsImdldCIsIlJlcXVlc3RBc3luY1N0b3JhZ2VXcmFwcGVyIiwiX2FwcHJvdXRlcmhlYWRlcnMiLCJyZXF1aXJlIiwiX2hlYWRlcnMiLCJfcmVxdWVzdGNvb2tpZXMiLCJfY29va2llcyIsIl9kcmFmdG1vZGVwcm92aWRlciIsImdldEhlYWRlcnMiLCJoZWFkZXJzIiwiY2xlYW5lZCIsIkhlYWRlcnNBZGFwdGVyIiwiZnJvbSIsInBhcmFtIiwiRkxJR0hUX1BBUkFNRVRFUlMiLCJkZWxldGUiLCJ0b1N0cmluZyIsInRvTG93ZXJDYXNlIiwic2VhbCIsImdldENvb2tpZXMiLCJjb29raWVzIiwiUmVxdWVzdENvb2tpZXMiLCJSZXF1ZXN0Q29va2llc0FkYXB0ZXIiLCJnZXRNdXRhYmxlQ29va2llcyIsInJlcyIsIk11dGFibGVSZXF1ZXN0Q29va2llc0FkYXB0ZXIiLCJ3cmFwIiwic3RvcmFnZSIsInJlcSIsInJlbmRlck9wdHMiLCJjYWxsYmFjayIsInByZXZpZXdQcm9wcyIsInVuZGVmaW5lZCIsImNhY2hlIiwic3RvcmUiLCJtdXRhYmxlQ29va2llcyIsImRyYWZ0TW9kZSIsIkRyYWZ0TW9kZVByb3ZpZGVyIiwicnVuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/next/dist/server/async-storage/request-async-storage-wrapper.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/next/dist/server/async-storage/static-generation-async-storage-wrapper.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/next/dist/server/async-storage/static-generation-async-storage-wrapper.js ***!
  \************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nObject.defineProperty(exports, \"StaticGenerationAsyncStorageWrapper\", ({\n    enumerable: true,\n    get: function() {\n        return StaticGenerationAsyncStorageWrapper;\n    }\n}));\nconst StaticGenerationAsyncStorageWrapper = {\n    wrap (storage, { pathname , renderOpts  }, callback) {\n        /**\n     * Rules of Static & Dynamic HTML:\n     *\n     *    1.) We must generate static HTML unless the caller explicitly opts\n     *        in to dynamic HTML support.\n     *\n     *    2.) If dynamic HTML support is requested, we must honor that request\n     *        or throw an error. It is the sole responsibility of the caller to\n     *        ensure they aren't e.g. requesting dynamic HTML for an AMP page.\n     *\n     *    3.) If the request is in draft mode, we must generate dynamic HTML.\n     *\n     * These rules help ensure that other existing features like request caching,\n     * coalescing, and ISR continue working as intended.\n     */ const isStaticGeneration = !renderOpts.supportsDynamicHTML && !renderOpts.isBot && !renderOpts.isDraftMode;\n        const store = {\n            isStaticGeneration,\n            pathname,\n            originalPathname: renderOpts.originalPathname,\n            incrementalCache: // so that it can access the fs cache without mocks\n            renderOpts.incrementalCache || globalThis.__incrementalCache,\n            isRevalidate: renderOpts.isRevalidate,\n            isPrerendering: renderOpts.nextExport,\n            fetchCache: renderOpts.fetchCache,\n            isOnDemandRevalidate: renderOpts.isOnDemandRevalidate\n        };\n        // TODO: remove this when we resolve accessing the store outside the execution context\n        renderOpts.store = store;\n        return storage.run(store, callback, store);\n    }\n}; //# sourceMappingURL=static-generation-async-storage-wrapper.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L3NlcnZlci9hc3luYy1zdG9yYWdlL3N0YXRpYy1nZW5lcmF0aW9uLWFzeW5jLXN0b3JhZ2Utd3JhcHBlci5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFDekNHLE9BQU87QUFDWCxDQUFDLEVBQUM7QUFDRkgsdUVBQXNFO0lBQ2xFSSxZQUFZO0lBQ1pDLEtBQUs7UUFDRCxPQUFPQztJQUNYO0FBQ0osQ0FBQyxFQUFDO0FBQ0YsTUFBTUEsc0NBQXNDO0lBQ3hDQyxNQUFNQyxPQUFPLEVBQUUsRUFBRUMsU0FBUSxFQUFHQyxXQUFVLEVBQUcsRUFBRUMsUUFBUTtRQUMvQzs7Ozs7Ozs7Ozs7Ozs7S0FjSCxHQUFHLE1BQU1DLHFCQUFxQixDQUFDRixXQUFXRyx1QkFBdUIsQ0FBQ0gsV0FBV0ksU0FBUyxDQUFDSixXQUFXSztRQUMvRixNQUFNQyxRQUFRO1lBQ1ZKO1lBQ0FIO1lBQ0FRLGtCQUFrQlAsV0FBV087WUFDN0JDLGtCQUNBLG1EQUFtRDtZQUNuRFIsV0FBV1Esb0JBQW9CQyxXQUFXQztZQUMxQ0MsY0FBY1gsV0FBV1c7WUFDekJDLGdCQUFnQlosV0FBV2E7WUFDM0JDLFlBQVlkLFdBQVdjO1lBQ3ZCQyxzQkFBc0JmLFdBQVdlO1FBQ3JDO1FBQ0Esc0ZBQXNGO1FBQ3RGZixXQUFXTSxRQUFRQTtRQUNuQixPQUFPUixRQUFRa0IsSUFBSVYsT0FBT0wsVUFBVUs7SUFDeEM7QUFDSixHQUVBLG1FQUFtRSIsInNvdXJjZXMiOlsid2VicGFjazovL2Z1bGxzdGFjay1yb2xlLWJhc2VkLW5leHRqcy0yLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9zZXJ2ZXIvYXN5bmMtc3RvcmFnZS9zdGF0aWMtZ2VuZXJhdGlvbi1hc3luYy1zdG9yYWdlLXdyYXBwZXIuanM/YTg4MSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICAgIHZhbHVlOiB0cnVlXG59KTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIlN0YXRpY0dlbmVyYXRpb25Bc3luY1N0b3JhZ2VXcmFwcGVyXCIsIHtcbiAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgIGdldDogZnVuY3Rpb24oKSB7XG4gICAgICAgIHJldHVybiBTdGF0aWNHZW5lcmF0aW9uQXN5bmNTdG9yYWdlV3JhcHBlcjtcbiAgICB9XG59KTtcbmNvbnN0IFN0YXRpY0dlbmVyYXRpb25Bc3luY1N0b3JhZ2VXcmFwcGVyID0ge1xuICAgIHdyYXAgKHN0b3JhZ2UsIHsgcGF0aG5hbWUgLCByZW5kZXJPcHRzICB9LCBjYWxsYmFjaykge1xuICAgICAgICAvKipcbiAgICAgKiBSdWxlcyBvZiBTdGF0aWMgJiBEeW5hbWljIEhUTUw6XG4gICAgICpcbiAgICAgKiAgICAxLikgV2UgbXVzdCBnZW5lcmF0ZSBzdGF0aWMgSFRNTCB1bmxlc3MgdGhlIGNhbGxlciBleHBsaWNpdGx5IG9wdHNcbiAgICAgKiAgICAgICAgaW4gdG8gZHluYW1pYyBIVE1MIHN1cHBvcnQuXG4gICAgICpcbiAgICAgKiAgICAyLikgSWYgZHluYW1pYyBIVE1MIHN1cHBvcnQgaXMgcmVxdWVzdGVkLCB3ZSBtdXN0IGhvbm9yIHRoYXQgcmVxdWVzdFxuICAgICAqICAgICAgICBvciB0aHJvdyBhbiBlcnJvci4gSXQgaXMgdGhlIHNvbGUgcmVzcG9uc2liaWxpdHkgb2YgdGhlIGNhbGxlciB0b1xuICAgICAqICAgICAgICBlbnN1cmUgdGhleSBhcmVuJ3QgZS5nLiByZXF1ZXN0aW5nIGR5bmFtaWMgSFRNTCBmb3IgYW4gQU1QIHBhZ2UuXG4gICAgICpcbiAgICAgKiAgICAzLikgSWYgdGhlIHJlcXVlc3QgaXMgaW4gZHJhZnQgbW9kZSwgd2UgbXVzdCBnZW5lcmF0ZSBkeW5hbWljIEhUTUwuXG4gICAgICpcbiAgICAgKiBUaGVzZSBydWxlcyBoZWxwIGVuc3VyZSB0aGF0IG90aGVyIGV4aXN0aW5nIGZlYXR1cmVzIGxpa2UgcmVxdWVzdCBjYWNoaW5nLFxuICAgICAqIGNvYWxlc2NpbmcsIGFuZCBJU1IgY29udGludWUgd29ya2luZyBhcyBpbnRlbmRlZC5cbiAgICAgKi8gY29uc3QgaXNTdGF0aWNHZW5lcmF0aW9uID0gIXJlbmRlck9wdHMuc3VwcG9ydHNEeW5hbWljSFRNTCAmJiAhcmVuZGVyT3B0cy5pc0JvdCAmJiAhcmVuZGVyT3B0cy5pc0RyYWZ0TW9kZTtcbiAgICAgICAgY29uc3Qgc3RvcmUgPSB7XG4gICAgICAgICAgICBpc1N0YXRpY0dlbmVyYXRpb24sXG4gICAgICAgICAgICBwYXRobmFtZSxcbiAgICAgICAgICAgIG9yaWdpbmFsUGF0aG5hbWU6IHJlbmRlck9wdHMub3JpZ2luYWxQYXRobmFtZSxcbiAgICAgICAgICAgIGluY3JlbWVudGFsQ2FjaGU6IC8vIHdlIGZhbGxiYWNrIHRvIGEgZ2xvYmFsIGluY3JlbWVudGFsIGNhY2hlIGZvciBlZGdlLXJ1bnRpbWUgbG9jYWxseVxuICAgICAgICAgICAgLy8gc28gdGhhdCBpdCBjYW4gYWNjZXNzIHRoZSBmcyBjYWNoZSB3aXRob3V0IG1vY2tzXG4gICAgICAgICAgICByZW5kZXJPcHRzLmluY3JlbWVudGFsQ2FjaGUgfHwgZ2xvYmFsVGhpcy5fX2luY3JlbWVudGFsQ2FjaGUsXG4gICAgICAgICAgICBpc1JldmFsaWRhdGU6IHJlbmRlck9wdHMuaXNSZXZhbGlkYXRlLFxuICAgICAgICAgICAgaXNQcmVyZW5kZXJpbmc6IHJlbmRlck9wdHMubmV4dEV4cG9ydCxcbiAgICAgICAgICAgIGZldGNoQ2FjaGU6IHJlbmRlck9wdHMuZmV0Y2hDYWNoZSxcbiAgICAgICAgICAgIGlzT25EZW1hbmRSZXZhbGlkYXRlOiByZW5kZXJPcHRzLmlzT25EZW1hbmRSZXZhbGlkYXRlXG4gICAgICAgIH07XG4gICAgICAgIC8vIFRPRE86IHJlbW92ZSB0aGlzIHdoZW4gd2UgcmVzb2x2ZSBhY2Nlc3NpbmcgdGhlIHN0b3JlIG91dHNpZGUgdGhlIGV4ZWN1dGlvbiBjb250ZXh0XG4gICAgICAgIHJlbmRlck9wdHMuc3RvcmUgPSBzdG9yZTtcbiAgICAgICAgcmV0dXJuIHN0b3JhZ2UucnVuKHN0b3JlLCBjYWxsYmFjaywgc3RvcmUpO1xuICAgIH1cbn07XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXN0YXRpYy1nZW5lcmF0aW9uLWFzeW5jLXN0b3JhZ2Utd3JhcHBlci5qcy5tYXAiXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJlbnVtZXJhYmxlIiwiZ2V0IiwiU3RhdGljR2VuZXJhdGlvbkFzeW5jU3RvcmFnZVdyYXBwZXIiLCJ3cmFwIiwic3RvcmFnZSIsInBhdGhuYW1lIiwicmVuZGVyT3B0cyIsImNhbGxiYWNrIiwiaXNTdGF0aWNHZW5lcmF0aW9uIiwic3VwcG9ydHNEeW5hbWljSFRNTCIsImlzQm90IiwiaXNEcmFmdE1vZGUiLCJzdG9yZSIsIm9yaWdpbmFsUGF0aG5hbWUiLCJpbmNyZW1lbnRhbENhY2hlIiwiZ2xvYmFsVGhpcyIsIl9faW5jcmVtZW50YWxDYWNoZSIsImlzUmV2YWxpZGF0ZSIsImlzUHJlcmVuZGVyaW5nIiwibmV4dEV4cG9ydCIsImZldGNoQ2FjaGUiLCJpc09uRGVtYW5kUmV2YWxpZGF0ZSIsInJ1biJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/next/dist/server/async-storage/static-generation-async-storage-wrapper.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/next/dist/server/future/route-modules/app-route/helpers/auto-implement-methods.js":
/*!********************************************************************************************************!*\
  !*** ./node_modules/next/dist/server/future/route-modules/app-route/helpers/auto-implement-methods.js ***!
  \********************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nObject.defineProperty(exports, \"autoImplementMethods\", ({\n    enumerable: true,\n    get: function() {\n        return autoImplementMethods;\n    }\n}));\nconst _http = __webpack_require__(/*! ../../../../web/http */ \"(sc_server)/./node_modules/next/dist/server/web/http.js\");\nconst _responsehandlers = __webpack_require__(/*! ../../helpers/response-handlers */ \"(sc_server)/./node_modules/next/dist/server/future/route-modules/helpers/response-handlers.js\");\nconst AUTOMATIC_ROUTE_METHODS = [\n    \"HEAD\",\n    \"OPTIONS\"\n];\nfunction autoImplementMethods(handlers) {\n    // Loop through all the HTTP methods to create the initial methods object.\n    // Each of the methods will be set to the the 405 response handler.\n    const methods = _http.HTTP_METHODS.reduce((acc, method)=>({\n            ...acc,\n            // If the userland module implements the method, then use it. Otherwise,\n            // use the 405 response handler.\n            [method]: handlers[method] ?? _responsehandlers.handleMethodNotAllowedResponse\n        }), {});\n    // Get all the methods that could be automatically implemented that were not\n    // implemented by the userland module.\n    const implemented = new Set(_http.HTTP_METHODS.filter((method)=>handlers[method]));\n    const missing = AUTOMATIC_ROUTE_METHODS.filter((method)=>!implemented.has(method));\n    // Loop over the missing methods to automatically implement them if we can.\n    for (const method of missing){\n        // If the userland module doesn't implement the HEAD method, then\n        // we'll automatically implement it by calling the GET method (if it\n        // exists).\n        if (method === \"HEAD\") {\n            // If the userland module doesn't implement the GET method, then\n            // we're done.\n            if (!handlers.GET) break;\n            // Implement the HEAD method by calling the GET method.\n            methods.HEAD = handlers.GET;\n            // Mark it as implemented.\n            implemented.add(\"HEAD\");\n            continue;\n        }\n        // If OPTIONS is not provided then implement it.\n        if (method === \"OPTIONS\") {\n            // TODO: check if HEAD is implemented, if so, use it to add more headers\n            // Get all the methods that were implemented by the userland module.\n            const allow = [\n                \"OPTIONS\",\n                ...implemented\n            ];\n            // If the list of methods doesn't include HEAD, but it includes GET, then\n            // add HEAD as it's automatically implemented.\n            if (!implemented.has(\"HEAD\") && implemented.has(\"GET\")) {\n                allow.push(\"HEAD\");\n            }\n            // Sort and join the list with commas to create the `Allow` header. See:\n            // https://httpwg.org/specs/rfc9110.html#field.allow\n            const headers = {\n                Allow: allow.sort().join(\", \")\n            };\n            // Implement the OPTIONS method by returning a 204 response with the\n            // `Allow` header.\n            methods.OPTIONS = ()=>new Response(null, {\n                    status: 204,\n                    headers\n                });\n            // Mark this method as implemented.\n            implemented.add(\"OPTIONS\");\n            continue;\n        }\n        throw new Error(`Invariant: should handle all automatic implementable methods, got method: ${method}`);\n    }\n    return methods;\n} //# sourceMappingURL=auto-implement-methods.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L3NlcnZlci9mdXR1cmUvcm91dGUtbW9kdWxlcy9hcHAtcm91dGUvaGVscGVycy9hdXRvLWltcGxlbWVudC1tZXRob2RzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2JBLDhDQUE2QztJQUN6Q0csT0FBTztBQUNYLENBQUMsRUFBQztBQUNGSCx3REFBdUQ7SUFDbkRJLFlBQVk7SUFDWkMsS0FBSztRQUNELE9BQU9DO0lBQ1g7QUFDSixDQUFDLEVBQUM7QUFDRixNQUFNQyxRQUFRQyxtQkFBT0EsQ0FBQyxxRkFBc0I7QUFDNUMsTUFBTUMsb0JBQW9CRCxtQkFBT0EsQ0FBQyxzSUFBaUM7QUFDbkUsTUFBTUUsMEJBQTBCO0lBQzVCO0lBQ0E7Q0FDSDtBQUNELFNBQVNKLHFCQUFxQkssUUFBUTtJQUNsQywwRUFBMEU7SUFDMUUsbUVBQW1FO0lBQ25FLE1BQU1DLFVBQVVMLE1BQU1NLGFBQWFDLE9BQU8sQ0FBQ0MsS0FBS0MsU0FBVTtZQUNsRCxHQUFHRCxHQUFHO1lBQ04sd0VBQXdFO1lBQ3hFLGdDQUFnQztZQUNoQyxDQUFDQyxPQUFPLEVBQUVMLFFBQVEsQ0FBQ0ssT0FBTyxJQUFJUCxrQkFBa0JRO1FBQ3BELElBQUksQ0FBQztJQUNULDRFQUE0RTtJQUM1RSxzQ0FBc0M7SUFDdEMsTUFBTUMsY0FBYyxJQUFJQyxJQUFJWixNQUFNTSxhQUFhTyxPQUFPLENBQUNKLFNBQVNMLFFBQVEsQ0FBQ0ssT0FBTztJQUNoRixNQUFNSyxVQUFVWCx3QkFBd0JVLE9BQU8sQ0FBQ0osU0FBUyxDQUFDRSxZQUFZSSxJQUFJTjtJQUMxRSwyRUFBMkU7SUFDM0UsS0FBSyxNQUFNQSxVQUFVSyxRQUFRO1FBQ3pCLGlFQUFpRTtRQUNqRSxvRUFBb0U7UUFDcEUsV0FBVztRQUNYLElBQUlMLFdBQVcsUUFBUTtZQUNuQixnRUFBZ0U7WUFDaEUsY0FBYztZQUNkLElBQUksQ0FBQ0wsU0FBU1ksS0FBSztZQUNuQix1REFBdUQ7WUFDdkRYLFFBQVFZLE9BQU9iLFNBQVNZO1lBQ3hCLDBCQUEwQjtZQUMxQkwsWUFBWU8sSUFBSTtZQUNoQjtRQUNKO1FBQ0EsZ0RBQWdEO1FBQ2hELElBQUlULFdBQVcsV0FBVztZQUN0Qix3RUFBd0U7WUFDeEUsb0VBQW9FO1lBQ3BFLE1BQU1VLFFBQVE7Z0JBQ1Y7bUJBQ0dSO2FBQ047WUFDRCx5RUFBeUU7WUFDekUsOENBQThDO1lBQzlDLElBQUksQ0FBQ0EsWUFBWUksSUFBSSxXQUFXSixZQUFZSSxJQUFJLFFBQVE7Z0JBQ3BESSxNQUFNQyxLQUFLO1lBQ2Y7WUFDQSx3RUFBd0U7WUFDeEUsb0RBQW9EO1lBQ3BELE1BQU1DLFVBQVU7Z0JBQ1pDLE9BQU9ILE1BQU1JLE9BQU9DLEtBQUs7WUFDN0I7WUFDQSxvRUFBb0U7WUFDcEUsa0JBQWtCO1lBQ2xCbkIsUUFBUW9CLFVBQVUsSUFBSSxJQUFJQyxTQUFTLE1BQU07b0JBQ2pDQyxRQUFRO29CQUNSTjtnQkFDSjtZQUNKLG1DQUFtQztZQUNuQ1YsWUFBWU8sSUFBSTtZQUNoQjtRQUNKO1FBQ0EsTUFBTSxJQUFJVSxNQUFNLENBQUMsMEVBQTBFLEVBQUVuQixPQUFPLENBQUM7SUFDekc7SUFDQSxPQUFPSjtBQUNYLEVBRUEsa0RBQWtEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZnVsbHN0YWNrLXJvbGUtYmFzZWQtbmV4dGpzLTIvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L3NlcnZlci9mdXR1cmUvcm91dGUtbW9kdWxlcy9hcHAtcm91dGUvaGVscGVycy9hdXRvLWltcGxlbWVudC1tZXRob2RzLmpzP2IxYTAiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgICB2YWx1ZTogdHJ1ZVxufSk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJhdXRvSW1wbGVtZW50TWV0aG9kc1wiLCB7XG4gICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICBnZXQ6IGZ1bmN0aW9uKCkge1xuICAgICAgICByZXR1cm4gYXV0b0ltcGxlbWVudE1ldGhvZHM7XG4gICAgfVxufSk7XG5jb25zdCBfaHR0cCA9IHJlcXVpcmUoXCIuLi8uLi8uLi8uLi93ZWIvaHR0cFwiKTtcbmNvbnN0IF9yZXNwb25zZWhhbmRsZXJzID0gcmVxdWlyZShcIi4uLy4uL2hlbHBlcnMvcmVzcG9uc2UtaGFuZGxlcnNcIik7XG5jb25zdCBBVVRPTUFUSUNfUk9VVEVfTUVUSE9EUyA9IFtcbiAgICBcIkhFQURcIixcbiAgICBcIk9QVElPTlNcIlxuXTtcbmZ1bmN0aW9uIGF1dG9JbXBsZW1lbnRNZXRob2RzKGhhbmRsZXJzKSB7XG4gICAgLy8gTG9vcCB0aHJvdWdoIGFsbCB0aGUgSFRUUCBtZXRob2RzIHRvIGNyZWF0ZSB0aGUgaW5pdGlhbCBtZXRob2RzIG9iamVjdC5cbiAgICAvLyBFYWNoIG9mIHRoZSBtZXRob2RzIHdpbGwgYmUgc2V0IHRvIHRoZSB0aGUgNDA1IHJlc3BvbnNlIGhhbmRsZXIuXG4gICAgY29uc3QgbWV0aG9kcyA9IF9odHRwLkhUVFBfTUVUSE9EUy5yZWR1Y2UoKGFjYywgbWV0aG9kKT0+KHtcbiAgICAgICAgICAgIC4uLmFjYyxcbiAgICAgICAgICAgIC8vIElmIHRoZSB1c2VybGFuZCBtb2R1bGUgaW1wbGVtZW50cyB0aGUgbWV0aG9kLCB0aGVuIHVzZSBpdC4gT3RoZXJ3aXNlLFxuICAgICAgICAgICAgLy8gdXNlIHRoZSA0MDUgcmVzcG9uc2UgaGFuZGxlci5cbiAgICAgICAgICAgIFttZXRob2RdOiBoYW5kbGVyc1ttZXRob2RdID8/IF9yZXNwb25zZWhhbmRsZXJzLmhhbmRsZU1ldGhvZE5vdEFsbG93ZWRSZXNwb25zZVxuICAgICAgICB9KSwge30pO1xuICAgIC8vIEdldCBhbGwgdGhlIG1ldGhvZHMgdGhhdCBjb3VsZCBiZSBhdXRvbWF0aWNhbGx5IGltcGxlbWVudGVkIHRoYXQgd2VyZSBub3RcbiAgICAvLyBpbXBsZW1lbnRlZCBieSB0aGUgdXNlcmxhbmQgbW9kdWxlLlxuICAgIGNvbnN0IGltcGxlbWVudGVkID0gbmV3IFNldChfaHR0cC5IVFRQX01FVEhPRFMuZmlsdGVyKChtZXRob2QpPT5oYW5kbGVyc1ttZXRob2RdKSk7XG4gICAgY29uc3QgbWlzc2luZyA9IEFVVE9NQVRJQ19ST1VURV9NRVRIT0RTLmZpbHRlcigobWV0aG9kKT0+IWltcGxlbWVudGVkLmhhcyhtZXRob2QpKTtcbiAgICAvLyBMb29wIG92ZXIgdGhlIG1pc3NpbmcgbWV0aG9kcyB0byBhdXRvbWF0aWNhbGx5IGltcGxlbWVudCB0aGVtIGlmIHdlIGNhbi5cbiAgICBmb3IgKGNvbnN0IG1ldGhvZCBvZiBtaXNzaW5nKXtcbiAgICAgICAgLy8gSWYgdGhlIHVzZXJsYW5kIG1vZHVsZSBkb2Vzbid0IGltcGxlbWVudCB0aGUgSEVBRCBtZXRob2QsIHRoZW5cbiAgICAgICAgLy8gd2UnbGwgYXV0b21hdGljYWxseSBpbXBsZW1lbnQgaXQgYnkgY2FsbGluZyB0aGUgR0VUIG1ldGhvZCAoaWYgaXRcbiAgICAgICAgLy8gZXhpc3RzKS5cbiAgICAgICAgaWYgKG1ldGhvZCA9PT0gXCJIRUFEXCIpIHtcbiAgICAgICAgICAgIC8vIElmIHRoZSB1c2VybGFuZCBtb2R1bGUgZG9lc24ndCBpbXBsZW1lbnQgdGhlIEdFVCBtZXRob2QsIHRoZW5cbiAgICAgICAgICAgIC8vIHdlJ3JlIGRvbmUuXG4gICAgICAgICAgICBpZiAoIWhhbmRsZXJzLkdFVCkgYnJlYWs7XG4gICAgICAgICAgICAvLyBJbXBsZW1lbnQgdGhlIEhFQUQgbWV0aG9kIGJ5IGNhbGxpbmcgdGhlIEdFVCBtZXRob2QuXG4gICAgICAgICAgICBtZXRob2RzLkhFQUQgPSBoYW5kbGVycy5HRVQ7XG4gICAgICAgICAgICAvLyBNYXJrIGl0IGFzIGltcGxlbWVudGVkLlxuICAgICAgICAgICAgaW1wbGVtZW50ZWQuYWRkKFwiSEVBRFwiKTtcbiAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICB9XG4gICAgICAgIC8vIElmIE9QVElPTlMgaXMgbm90IHByb3ZpZGVkIHRoZW4gaW1wbGVtZW50IGl0LlxuICAgICAgICBpZiAobWV0aG9kID09PSBcIk9QVElPTlNcIikge1xuICAgICAgICAgICAgLy8gVE9ETzogY2hlY2sgaWYgSEVBRCBpcyBpbXBsZW1lbnRlZCwgaWYgc28sIHVzZSBpdCB0byBhZGQgbW9yZSBoZWFkZXJzXG4gICAgICAgICAgICAvLyBHZXQgYWxsIHRoZSBtZXRob2RzIHRoYXQgd2VyZSBpbXBsZW1lbnRlZCBieSB0aGUgdXNlcmxhbmQgbW9kdWxlLlxuICAgICAgICAgICAgY29uc3QgYWxsb3cgPSBbXG4gICAgICAgICAgICAgICAgXCJPUFRJT05TXCIsXG4gICAgICAgICAgICAgICAgLi4uaW1wbGVtZW50ZWRcbiAgICAgICAgICAgIF07XG4gICAgICAgICAgICAvLyBJZiB0aGUgbGlzdCBvZiBtZXRob2RzIGRvZXNuJ3QgaW5jbHVkZSBIRUFELCBidXQgaXQgaW5jbHVkZXMgR0VULCB0aGVuXG4gICAgICAgICAgICAvLyBhZGQgSEVBRCBhcyBpdCdzIGF1dG9tYXRpY2FsbHkgaW1wbGVtZW50ZWQuXG4gICAgICAgICAgICBpZiAoIWltcGxlbWVudGVkLmhhcyhcIkhFQURcIikgJiYgaW1wbGVtZW50ZWQuaGFzKFwiR0VUXCIpKSB7XG4gICAgICAgICAgICAgICAgYWxsb3cucHVzaChcIkhFQURcIik7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAvLyBTb3J0IGFuZCBqb2luIHRoZSBsaXN0IHdpdGggY29tbWFzIHRvIGNyZWF0ZSB0aGUgYEFsbG93YCBoZWFkZXIuIFNlZTpcbiAgICAgICAgICAgIC8vIGh0dHBzOi8vaHR0cHdnLm9yZy9zcGVjcy9yZmM5MTEwLmh0bWwjZmllbGQuYWxsb3dcbiAgICAgICAgICAgIGNvbnN0IGhlYWRlcnMgPSB7XG4gICAgICAgICAgICAgICAgQWxsb3c6IGFsbG93LnNvcnQoKS5qb2luKFwiLCBcIilcbiAgICAgICAgICAgIH07XG4gICAgICAgICAgICAvLyBJbXBsZW1lbnQgdGhlIE9QVElPTlMgbWV0aG9kIGJ5IHJldHVybmluZyBhIDIwNCByZXNwb25zZSB3aXRoIHRoZVxuICAgICAgICAgICAgLy8gYEFsbG93YCBoZWFkZXIuXG4gICAgICAgICAgICBtZXRob2RzLk9QVElPTlMgPSAoKT0+bmV3IFJlc3BvbnNlKG51bGwsIHtcbiAgICAgICAgICAgICAgICAgICAgc3RhdHVzOiAyMDQsXG4gICAgICAgICAgICAgICAgICAgIGhlYWRlcnNcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIC8vIE1hcmsgdGhpcyBtZXRob2QgYXMgaW1wbGVtZW50ZWQuXG4gICAgICAgICAgICBpbXBsZW1lbnRlZC5hZGQoXCJPUFRJT05TXCIpO1xuICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgIH1cbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBJbnZhcmlhbnQ6IHNob3VsZCBoYW5kbGUgYWxsIGF1dG9tYXRpYyBpbXBsZW1lbnRhYmxlIG1ldGhvZHMsIGdvdCBtZXRob2Q6ICR7bWV0aG9kfWApO1xuICAgIH1cbiAgICByZXR1cm4gbWV0aG9kcztcbn1cblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YXV0by1pbXBsZW1lbnQtbWV0aG9kcy5qcy5tYXAiXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJlbnVtZXJhYmxlIiwiZ2V0IiwiYXV0b0ltcGxlbWVudE1ldGhvZHMiLCJfaHR0cCIsInJlcXVpcmUiLCJfcmVzcG9uc2VoYW5kbGVycyIsIkFVVE9NQVRJQ19ST1VURV9NRVRIT0RTIiwiaGFuZGxlcnMiLCJtZXRob2RzIiwiSFRUUF9NRVRIT0RTIiwicmVkdWNlIiwiYWNjIiwibWV0aG9kIiwiaGFuZGxlTWV0aG9kTm90QWxsb3dlZFJlc3BvbnNlIiwiaW1wbGVtZW50ZWQiLCJTZXQiLCJmaWx0ZXIiLCJtaXNzaW5nIiwiaGFzIiwiR0VUIiwiSEVBRCIsImFkZCIsImFsbG93IiwicHVzaCIsImhlYWRlcnMiLCJBbGxvdyIsInNvcnQiLCJqb2luIiwiT1BUSU9OUyIsIlJlc3BvbnNlIiwic3RhdHVzIiwiRXJyb3IiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/next/dist/server/future/route-modules/app-route/helpers/auto-implement-methods.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/next/dist/server/future/route-modules/app-route/helpers/clean-url.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/next/dist/server/future/route-modules/app-route/helpers/clean-url.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("/**\n * Cleans a URL by stripping the protocol, host, and search params.\n *\n * @param urlString the url to clean\n * @returns the cleaned url\n */ \nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nObject.defineProperty(exports, \"cleanURL\", ({\n    enumerable: true,\n    get: function() {\n        return cleanURL;\n    }\n}));\nfunction cleanURL(urlString) {\n    const url = new URL(urlString);\n    url.host = \"localhost:3000\";\n    url.search = \"\";\n    url.protocol = \"http\";\n    return url.toString();\n} //# sourceMappingURL=clean-url.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L3NlcnZlci9mdXR1cmUvcm91dGUtbW9kdWxlcy9hcHAtcm91dGUvaGVscGVycy9jbGVhbi11cmwuanMiLCJtYXBwaW5ncyI6IkFBQUE7Ozs7O0NBS0MsR0FBZ0I7QUFDakJBLDhDQUE2QztJQUN6Q0csT0FBTztBQUNYLENBQUMsRUFBQztBQUNGSCw0Q0FBMkM7SUFDdkNJLFlBQVk7SUFDWkMsS0FBSztRQUNELE9BQU9DO0lBQ1g7QUFDSixDQUFDLEVBQUM7QUFDRixTQUFTQSxTQUFTQyxTQUFTO0lBQ3ZCLE1BQU1DLE1BQU0sSUFBSUMsSUFBSUY7SUFDcEJDLElBQUlFLE9BQU87SUFDWEYsSUFBSUcsU0FBUztJQUNiSCxJQUFJSSxXQUFXO0lBQ2YsT0FBT0osSUFBSUs7QUFDZixFQUVBLHFDQUFxQyIsInNvdXJjZXMiOlsid2VicGFjazovL2Z1bGxzdGFjay1yb2xlLWJhc2VkLW5leHRqcy0yLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9zZXJ2ZXIvZnV0dXJlL3JvdXRlLW1vZHVsZXMvYXBwLXJvdXRlL2hlbHBlcnMvY2xlYW4tdXJsLmpzPzk0MTEiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDbGVhbnMgYSBVUkwgYnkgc3RyaXBwaW5nIHRoZSBwcm90b2NvbCwgaG9zdCwgYW5kIHNlYXJjaCBwYXJhbXMuXG4gKlxuICogQHBhcmFtIHVybFN0cmluZyB0aGUgdXJsIHRvIGNsZWFuXG4gKiBAcmV0dXJucyB0aGUgY2xlYW5lZCB1cmxcbiAqLyBcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICAgIHZhbHVlOiB0cnVlXG59KTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcImNsZWFuVVJMXCIsIHtcbiAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgIGdldDogZnVuY3Rpb24oKSB7XG4gICAgICAgIHJldHVybiBjbGVhblVSTDtcbiAgICB9XG59KTtcbmZ1bmN0aW9uIGNsZWFuVVJMKHVybFN0cmluZykge1xuICAgIGNvbnN0IHVybCA9IG5ldyBVUkwodXJsU3RyaW5nKTtcbiAgICB1cmwuaG9zdCA9IFwibG9jYWxob3N0OjMwMDBcIjtcbiAgICB1cmwuc2VhcmNoID0gXCJcIjtcbiAgICB1cmwucHJvdG9jb2wgPSBcImh0dHBcIjtcbiAgICByZXR1cm4gdXJsLnRvU3RyaW5nKCk7XG59XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWNsZWFuLXVybC5qcy5tYXAiXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJlbnVtZXJhYmxlIiwiZ2V0IiwiY2xlYW5VUkwiLCJ1cmxTdHJpbmciLCJ1cmwiLCJVUkwiLCJob3N0Iiwic2VhcmNoIiwicHJvdG9jb2wiLCJ0b1N0cmluZyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/next/dist/server/future/route-modules/app-route/helpers/clean-url.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/next/dist/server/future/route-modules/app-route/helpers/get-non-static-methods.js":
/*!********************************************************************************************************!*\
  !*** ./node_modules/next/dist/server/future/route-modules/app-route/helpers/get-non-static-methods.js ***!
  \********************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nObject.defineProperty(exports, \"getNonStaticMethods\", ({\n    enumerable: true,\n    get: function() {\n        return getNonStaticMethods;\n    }\n}));\nconst NON_STATIC_METHODS = [\n    \"OPTIONS\",\n    \"POST\",\n    \"PUT\",\n    \"DELETE\",\n    \"PATCH\"\n];\nfunction getNonStaticMethods(handlers) {\n    // We can currently only statically optimize if only GET/HEAD are used as\n    // prerender can't be used conditionally based on the method currently.\n    const methods = NON_STATIC_METHODS.filter((method)=>handlers[method]);\n    if (methods.length === 0) return false;\n    return methods;\n} //# sourceMappingURL=get-non-static-methods.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L3NlcnZlci9mdXR1cmUvcm91dGUtbW9kdWxlcy9hcHAtcm91dGUvaGVscGVycy9nZXQtbm9uLXN0YXRpYy1tZXRob2RzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2JBLDhDQUE2QztJQUN6Q0csT0FBTztBQUNYLENBQUMsRUFBQztBQUNGSCx1REFBc0Q7SUFDbERJLFlBQVk7SUFDWkMsS0FBSztRQUNELE9BQU9DO0lBQ1g7QUFDSixDQUFDLEVBQUM7QUFDRixNQUFNQyxxQkFBcUI7SUFDdkI7SUFDQTtJQUNBO0lBQ0E7SUFDQTtDQUNIO0FBQ0QsU0FBU0Qsb0JBQW9CRSxRQUFRO0lBQ2pDLHlFQUF5RTtJQUN6RSx1RUFBdUU7SUFDdkUsTUFBTUMsVUFBVUYsbUJBQW1CRyxPQUFPLENBQUNDLFNBQVNILFFBQVEsQ0FBQ0csT0FBTztJQUNwRSxJQUFJRixRQUFRRyxXQUFXLEdBQUcsT0FBTztJQUNqQyxPQUFPSDtBQUNYLEVBRUEsa0RBQWtEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZnVsbHN0YWNrLXJvbGUtYmFzZWQtbmV4dGpzLTIvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L3NlcnZlci9mdXR1cmUvcm91dGUtbW9kdWxlcy9hcHAtcm91dGUvaGVscGVycy9nZXQtbm9uLXN0YXRpYy1tZXRob2RzLmpzP2U4MDYiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgICB2YWx1ZTogdHJ1ZVxufSk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJnZXROb25TdGF0aWNNZXRob2RzXCIsIHtcbiAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgIGdldDogZnVuY3Rpb24oKSB7XG4gICAgICAgIHJldHVybiBnZXROb25TdGF0aWNNZXRob2RzO1xuICAgIH1cbn0pO1xuY29uc3QgTk9OX1NUQVRJQ19NRVRIT0RTID0gW1xuICAgIFwiT1BUSU9OU1wiLFxuICAgIFwiUE9TVFwiLFxuICAgIFwiUFVUXCIsXG4gICAgXCJERUxFVEVcIixcbiAgICBcIlBBVENIXCJcbl07XG5mdW5jdGlvbiBnZXROb25TdGF0aWNNZXRob2RzKGhhbmRsZXJzKSB7XG4gICAgLy8gV2UgY2FuIGN1cnJlbnRseSBvbmx5IHN0YXRpY2FsbHkgb3B0aW1pemUgaWYgb25seSBHRVQvSEVBRCBhcmUgdXNlZCBhc1xuICAgIC8vIHByZXJlbmRlciBjYW4ndCBiZSB1c2VkIGNvbmRpdGlvbmFsbHkgYmFzZWQgb24gdGhlIG1ldGhvZCBjdXJyZW50bHkuXG4gICAgY29uc3QgbWV0aG9kcyA9IE5PTl9TVEFUSUNfTUVUSE9EUy5maWx0ZXIoKG1ldGhvZCk9PmhhbmRsZXJzW21ldGhvZF0pO1xuICAgIGlmIChtZXRob2RzLmxlbmd0aCA9PT0gMCkgcmV0dXJuIGZhbHNlO1xuICAgIHJldHVybiBtZXRob2RzO1xufVxuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1nZXQtbm9uLXN0YXRpYy1tZXRob2RzLmpzLm1hcCJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsImVudW1lcmFibGUiLCJnZXQiLCJnZXROb25TdGF0aWNNZXRob2RzIiwiTk9OX1NUQVRJQ19NRVRIT0RTIiwiaGFuZGxlcnMiLCJtZXRob2RzIiwiZmlsdGVyIiwibWV0aG9kIiwibGVuZ3RoIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/next/dist/server/future/route-modules/app-route/helpers/get-non-static-methods.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/next/dist/server/future/route-modules/app-route/helpers/get-pathname-from-absolute-path.js":
/*!*****************************************************************************************************************!*\
  !*** ./node_modules/next/dist/server/future/route-modules/app-route/helpers/get-pathname-from-absolute-path.js ***!
  \*****************************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("/**\n * Get pathname from absolute path.\n *\n * @param absolutePath the absolute path\n * @returns the pathname\n */ \nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nObject.defineProperty(exports, \"getPathnameFromAbsolutePath\", ({\n    enumerable: true,\n    get: function() {\n        return getPathnameFromAbsolutePath;\n    }\n}));\nfunction getPathnameFromAbsolutePath(absolutePath) {\n    // Remove prefix including app dir\n    let appDir = \"/app/\";\n    if (!absolutePath.includes(appDir)) {\n        appDir = \"\\\\app\\\\\";\n    }\n    const [, ...parts] = absolutePath.split(appDir);\n    const relativePath = appDir[0] + parts.join(appDir);\n    // remove extension\n    const pathname = relativePath.split(\".\").slice(0, -1).join(\".\");\n    return pathname;\n} //# sourceMappingURL=get-pathname-from-absolute-path.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L3NlcnZlci9mdXR1cmUvcm91dGUtbW9kdWxlcy9hcHAtcm91dGUvaGVscGVycy9nZXQtcGF0aG5hbWUtZnJvbS1hYnNvbHV0ZS1wYXRoLmpzIiwibWFwcGluZ3MiOiJBQUFBOzs7OztDQUtDLEdBQWdCO0FBQ2pCQSw4Q0FBNkM7SUFDekNHLE9BQU87QUFDWCxDQUFDLEVBQUM7QUFDRkgsK0RBQThEO0lBQzFESSxZQUFZO0lBQ1pDLEtBQUs7UUFDRCxPQUFPQztJQUNYO0FBQ0osQ0FBQyxFQUFDO0FBQ0YsU0FBU0EsNEJBQTRCQyxZQUFZO0lBQzdDLGtDQUFrQztJQUNsQyxJQUFJQyxTQUFTO0lBQ2IsSUFBSSxDQUFDRCxhQUFhRSxTQUFTRCxTQUFTO1FBQ2hDQSxTQUFTO0lBQ2I7SUFDQSxNQUFNLEdBQUcsR0FBR0UsTUFBTSxHQUFHSCxhQUFhSSxNQUFNSDtJQUN4QyxNQUFNSSxlQUFlSixNQUFNLENBQUMsRUFBRSxHQUFHRSxNQUFNRyxLQUFLTDtJQUM1QyxtQkFBbUI7SUFDbkIsTUFBTU0sV0FBV0YsYUFBYUQsTUFBTSxLQUFLSSxNQUFNLEdBQUcsQ0FBQyxHQUFHRixLQUFLO0lBQzNELE9BQU9DO0FBQ1gsRUFFQSwyREFBMkQiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mdWxsc3RhY2stcm9sZS1iYXNlZC1uZXh0anMtMi8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3Qvc2VydmVyL2Z1dHVyZS9yb3V0ZS1tb2R1bGVzL2FwcC1yb3V0ZS9oZWxwZXJzL2dldC1wYXRobmFtZS1mcm9tLWFic29sdXRlLXBhdGguanM/MWJhMiJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEdldCBwYXRobmFtZSBmcm9tIGFic29sdXRlIHBhdGguXG4gKlxuICogQHBhcmFtIGFic29sdXRlUGF0aCB0aGUgYWJzb2x1dGUgcGF0aFxuICogQHJldHVybnMgdGhlIHBhdGhuYW1lXG4gKi8gXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgICB2YWx1ZTogdHJ1ZVxufSk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJnZXRQYXRobmFtZUZyb21BYnNvbHV0ZVBhdGhcIiwge1xuICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgZ2V0OiBmdW5jdGlvbigpIHtcbiAgICAgICAgcmV0dXJuIGdldFBhdGhuYW1lRnJvbUFic29sdXRlUGF0aDtcbiAgICB9XG59KTtcbmZ1bmN0aW9uIGdldFBhdGhuYW1lRnJvbUFic29sdXRlUGF0aChhYnNvbHV0ZVBhdGgpIHtcbiAgICAvLyBSZW1vdmUgcHJlZml4IGluY2x1ZGluZyBhcHAgZGlyXG4gICAgbGV0IGFwcERpciA9IFwiL2FwcC9cIjtcbiAgICBpZiAoIWFic29sdXRlUGF0aC5pbmNsdWRlcyhhcHBEaXIpKSB7XG4gICAgICAgIGFwcERpciA9IFwiXFxcXGFwcFxcXFxcIjtcbiAgICB9XG4gICAgY29uc3QgWywgLi4ucGFydHNdID0gYWJzb2x1dGVQYXRoLnNwbGl0KGFwcERpcik7XG4gICAgY29uc3QgcmVsYXRpdmVQYXRoID0gYXBwRGlyWzBdICsgcGFydHMuam9pbihhcHBEaXIpO1xuICAgIC8vIHJlbW92ZSBleHRlbnNpb25cbiAgICBjb25zdCBwYXRobmFtZSA9IHJlbGF0aXZlUGF0aC5zcGxpdChcIi5cIikuc2xpY2UoMCwgLTEpLmpvaW4oXCIuXCIpO1xuICAgIHJldHVybiBwYXRobmFtZTtcbn1cblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Z2V0LXBhdGhuYW1lLWZyb20tYWJzb2x1dGUtcGF0aC5qcy5tYXAiXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJlbnVtZXJhYmxlIiwiZ2V0IiwiZ2V0UGF0aG5hbWVGcm9tQWJzb2x1dGVQYXRoIiwiYWJzb2x1dGVQYXRoIiwiYXBwRGlyIiwiaW5jbHVkZXMiLCJwYXJ0cyIsInNwbGl0IiwicmVsYXRpdmVQYXRoIiwiam9pbiIsInBhdGhuYW1lIiwic2xpY2UiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/next/dist/server/future/route-modules/app-route/helpers/get-pathname-from-absolute-path.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/next/dist/server/future/route-modules/app-route/helpers/proxy-request.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/next/dist/server/future/route-modules/app-route/helpers/proxy-request.js ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nObject.defineProperty(exports, \"proxyRequest\", ({\n    enumerable: true,\n    get: function() {\n        return proxyRequest;\n    }\n}));\nconst _cookies = __webpack_require__(/*! next/dist/compiled/@edge-runtime/cookies */ \"next/dist/compiled/@edge-runtime/cookies\");\nconst _nexturl = __webpack_require__(/*! ../../../../web/next-url */ \"(sc_server)/./node_modules/next/dist/server/web/next-url.js\");\nconst _cleanurl = __webpack_require__(/*! ./clean-url */ \"(sc_server)/./node_modules/next/dist/server/future/route-modules/app-route/helpers/clean-url.js\");\nfunction proxyRequest(request, { dynamic  }, hooks) {\n    function handleNextUrlBailout(prop) {\n        switch(prop){\n            case \"search\":\n            case \"searchParams\":\n            case \"toString\":\n            case \"href\":\n            case \"origin\":\n                hooks.staticGenerationBailout(`nextUrl.${prop}`);\n                return;\n            default:\n                return;\n        }\n    }\n    const cache = {};\n    const handleForceStatic = (url, prop)=>{\n        switch(prop){\n            case \"search\":\n                return \"\";\n            case \"searchParams\":\n                if (!cache.searchParams) cache.searchParams = new URLSearchParams();\n                return cache.searchParams;\n            case \"url\":\n            case \"href\":\n                if (!cache.url) cache.url = (0, _cleanurl.cleanURL)(url);\n                return cache.url;\n            case \"toJSON\":\n            case \"toString\":\n                if (!cache.url) cache.url = (0, _cleanurl.cleanURL)(url);\n                if (!cache.toString) cache.toString = ()=>cache.url;\n                return cache.toString;\n            case \"headers\":\n                if (!cache.headers) cache.headers = new Headers();\n                return cache.headers;\n            case \"cookies\":\n                if (!cache.headers) cache.headers = new Headers();\n                if (!cache.cookies) cache.cookies = new _cookies.RequestCookies(cache.headers);\n                return cache.cookies;\n            case \"clone\":\n                if (!cache.url) cache.url = (0, _cleanurl.cleanURL)(url);\n                return ()=>new _nexturl.NextURL(cache.url);\n            default:\n                break;\n        }\n    };\n    const wrappedNextUrl = new Proxy(request.nextUrl, {\n        get (target, prop) {\n            handleNextUrlBailout(prop);\n            if (dynamic === \"force-static\" && typeof prop === \"string\") {\n                const result = handleForceStatic(target.href, prop);\n                if (result !== undefined) return result;\n            }\n            const value = target[prop];\n            if (typeof value === \"function\") {\n                return value.bind(target);\n            }\n            return value;\n        },\n        set (target, prop, value) {\n            handleNextUrlBailout(prop);\n            target[prop] = value;\n            return true;\n        }\n    });\n    const handleReqBailout = (prop)=>{\n        switch(prop){\n            case \"headers\":\n                hooks.headerHooks.headers();\n                return;\n            // if request.url is accessed directly instead of\n            // request.nextUrl we bail since it includes query\n            // values that can be relied on dynamically\n            case \"url\":\n            case \"body\":\n            case \"blob\":\n            case \"json\":\n            case \"text\":\n            case \"arrayBuffer\":\n            case \"formData\":\n                hooks.staticGenerationBailout(`request.${prop}`);\n                return;\n            default:\n                return;\n        }\n    };\n    return new Proxy(request, {\n        get (target, prop) {\n            handleReqBailout(prop);\n            if (prop === \"nextUrl\") {\n                return wrappedNextUrl;\n            }\n            if (dynamic === \"force-static\" && typeof prop === \"string\") {\n                const result = handleForceStatic(target.url, prop);\n                if (result !== undefined) return result;\n            }\n            const value = target[prop];\n            if (typeof value === \"function\") {\n                return value.bind(target);\n            }\n            return value;\n        },\n        set (target, prop, value) {\n            handleReqBailout(prop);\n            target[prop] = value;\n            return true;\n        }\n    });\n} //# sourceMappingURL=proxy-request.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/next/dist/server/future/route-modules/app-route/helpers/proxy-request.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/next/dist/server/future/route-modules/app-route/helpers/resolve-handler-error.js":
/*!*******************************************************************************************************!*\
  !*** ./node_modules/next/dist/server/future/route-modules/app-route/helpers/resolve-handler-error.js ***!
  \*******************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nObject.defineProperty(exports, \"resolveHandlerError\", ({\n    enumerable: true,\n    get: function() {\n        return resolveHandlerError;\n    }\n}));\nconst _notfound = __webpack_require__(/*! ../../../../../client/components/not-found */ \"(sc_server)/./node_modules/next/dist/client/components/not-found.js\");\nconst _redirect = __webpack_require__(/*! ../../../../../client/components/redirect */ \"(sc_server)/./node_modules/next/dist/client/components/redirect.js\");\nconst _responsehandlers = __webpack_require__(/*! ../../helpers/response-handlers */ \"(sc_server)/./node_modules/next/dist/server/future/route-modules/helpers/response-handlers.js\");\nfunction resolveHandlerError(err) {\n    if ((0, _redirect.isRedirectError)(err)) {\n        const redirect = (0, _redirect.getURLFromRedirectError)(err);\n        if (!redirect) {\n            throw new Error(\"Invariant: Unexpected redirect url format\");\n        }\n        // This is a redirect error! Send the redirect response.\n        return (0, _responsehandlers.handleTemporaryRedirectResponse)(redirect, err.mutableCookies);\n    }\n    if ((0, _notfound.isNotFoundError)(err)) {\n        // This is a not found error! Send the not found response.\n        return (0, _responsehandlers.handleNotFoundResponse)();\n    }\n    // Return false to indicate that this is not a handled error.\n    return false;\n} //# sourceMappingURL=resolve-handler-error.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L3NlcnZlci9mdXR1cmUvcm91dGUtbW9kdWxlcy9hcHAtcm91dGUvaGVscGVycy9yZXNvbHZlLWhhbmRsZXItZXJyb3IuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYkEsOENBQTZDO0lBQ3pDRyxPQUFPO0FBQ1gsQ0FBQyxFQUFDO0FBQ0ZILHVEQUFzRDtJQUNsREksWUFBWTtJQUNaQyxLQUFLO1FBQ0QsT0FBT0M7SUFDWDtBQUNKLENBQUMsRUFBQztBQUNGLE1BQU1DLFlBQVlDLG1CQUFPQSxDQUFDLHVIQUE0QztBQUN0RSxNQUFNQyxZQUFZRCxtQkFBT0EsQ0FBQyxxSEFBMkM7QUFDckUsTUFBTUUsb0JBQW9CRixtQkFBT0EsQ0FBQyxzSUFBaUM7QUFDbkUsU0FBU0Ysb0JBQW9CSyxHQUFHO0lBQzVCLElBQUksQ0FBQyxHQUFHRixVQUFVRyxlQUFjLEVBQUdELE1BQU07UUFDckMsTUFBTUUsV0FBVyxDQUFDLEdBQUdKLFVBQVVLLHVCQUFzQixFQUFHSDtRQUN4RCxJQUFJLENBQUNFLFVBQVU7WUFDWCxNQUFNLElBQUlFLE1BQU07UUFDcEI7UUFDQSx3REFBd0Q7UUFDeEQsT0FBTyxDQUFDLEdBQUdMLGtCQUFrQk0sK0JBQThCLEVBQUdILFVBQVVGLElBQUlNO0lBQ2hGO0lBQ0EsSUFBSSxDQUFDLEdBQUdWLFVBQVVXLGVBQWMsRUFBR1AsTUFBTTtRQUNyQywwREFBMEQ7UUFDMUQsT0FBTyxDQUFDLEdBQUdELGtCQUFrQlMsc0JBQXFCO0lBQ3REO0lBQ0EsNkRBQTZEO0lBQzdELE9BQU87QUFDWCxFQUVBLGlEQUFpRCIsInNvdXJjZXMiOlsid2VicGFjazovL2Z1bGxzdGFjay1yb2xlLWJhc2VkLW5leHRqcy0yLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9zZXJ2ZXIvZnV0dXJlL3JvdXRlLW1vZHVsZXMvYXBwLXJvdXRlL2hlbHBlcnMvcmVzb2x2ZS1oYW5kbGVyLWVycm9yLmpzP2Y2MTEiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgICB2YWx1ZTogdHJ1ZVxufSk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJyZXNvbHZlSGFuZGxlckVycm9yXCIsIHtcbiAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgIGdldDogZnVuY3Rpb24oKSB7XG4gICAgICAgIHJldHVybiByZXNvbHZlSGFuZGxlckVycm9yO1xuICAgIH1cbn0pO1xuY29uc3QgX25vdGZvdW5kID0gcmVxdWlyZShcIi4uLy4uLy4uLy4uLy4uL2NsaWVudC9jb21wb25lbnRzL25vdC1mb3VuZFwiKTtcbmNvbnN0IF9yZWRpcmVjdCA9IHJlcXVpcmUoXCIuLi8uLi8uLi8uLi8uLi9jbGllbnQvY29tcG9uZW50cy9yZWRpcmVjdFwiKTtcbmNvbnN0IF9yZXNwb25zZWhhbmRsZXJzID0gcmVxdWlyZShcIi4uLy4uL2hlbHBlcnMvcmVzcG9uc2UtaGFuZGxlcnNcIik7XG5mdW5jdGlvbiByZXNvbHZlSGFuZGxlckVycm9yKGVycikge1xuICAgIGlmICgoMCwgX3JlZGlyZWN0LmlzUmVkaXJlY3RFcnJvcikoZXJyKSkge1xuICAgICAgICBjb25zdCByZWRpcmVjdCA9ICgwLCBfcmVkaXJlY3QuZ2V0VVJMRnJvbVJlZGlyZWN0RXJyb3IpKGVycik7XG4gICAgICAgIGlmICghcmVkaXJlY3QpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcIkludmFyaWFudDogVW5leHBlY3RlZCByZWRpcmVjdCB1cmwgZm9ybWF0XCIpO1xuICAgICAgICB9XG4gICAgICAgIC8vIFRoaXMgaXMgYSByZWRpcmVjdCBlcnJvciEgU2VuZCB0aGUgcmVkaXJlY3QgcmVzcG9uc2UuXG4gICAgICAgIHJldHVybiAoMCwgX3Jlc3BvbnNlaGFuZGxlcnMuaGFuZGxlVGVtcG9yYXJ5UmVkaXJlY3RSZXNwb25zZSkocmVkaXJlY3QsIGVyci5tdXRhYmxlQ29va2llcyk7XG4gICAgfVxuICAgIGlmICgoMCwgX25vdGZvdW5kLmlzTm90Rm91bmRFcnJvcikoZXJyKSkge1xuICAgICAgICAvLyBUaGlzIGlzIGEgbm90IGZvdW5kIGVycm9yISBTZW5kIHRoZSBub3QgZm91bmQgcmVzcG9uc2UuXG4gICAgICAgIHJldHVybiAoMCwgX3Jlc3BvbnNlaGFuZGxlcnMuaGFuZGxlTm90Rm91bmRSZXNwb25zZSkoKTtcbiAgICB9XG4gICAgLy8gUmV0dXJuIGZhbHNlIHRvIGluZGljYXRlIHRoYXQgdGhpcyBpcyBub3QgYSBoYW5kbGVkIGVycm9yLlxuICAgIHJldHVybiBmYWxzZTtcbn1cblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cmVzb2x2ZS1oYW5kbGVyLWVycm9yLmpzLm1hcCJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsImVudW1lcmFibGUiLCJnZXQiLCJyZXNvbHZlSGFuZGxlckVycm9yIiwiX25vdGZvdW5kIiwicmVxdWlyZSIsIl9yZWRpcmVjdCIsIl9yZXNwb25zZWhhbmRsZXJzIiwiZXJyIiwiaXNSZWRpcmVjdEVycm9yIiwicmVkaXJlY3QiLCJnZXRVUkxGcm9tUmVkaXJlY3RFcnJvciIsIkVycm9yIiwiaGFuZGxlVGVtcG9yYXJ5UmVkaXJlY3RSZXNwb25zZSIsIm11dGFibGVDb29raWVzIiwiaXNOb3RGb3VuZEVycm9yIiwiaGFuZGxlTm90Rm91bmRSZXNwb25zZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/next/dist/server/future/route-modules/app-route/helpers/resolve-handler-error.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/next/dist/server/future/route-modules/app-route/module.js":
/*!********************************************************************************!*\
  !*** ./node_modules/next/dist/server/future/route-modules/app-route/module.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\n0 && (0);\nfunction _export(target, all) {\n    for(var name in all)Object.defineProperty(target, name, {\n        enumerable: true,\n        get: all[name]\n    });\n}\n_export(exports, {\n    AppRouteRouteModule: function() {\n        return AppRouteRouteModule;\n    },\n    default: function() {\n        return _default;\n    }\n});\nconst _routemodule = __webpack_require__(/*! ../route-module */ \"(sc_server)/./node_modules/next/dist/server/future/route-modules/route-module.js\");\nconst _requestasyncstoragewrapper = __webpack_require__(/*! ../../../async-storage/request-async-storage-wrapper */ \"(sc_server)/./node_modules/next/dist/server/async-storage/request-async-storage-wrapper.js\");\nconst _staticgenerationasyncstoragewrapper = __webpack_require__(/*! ../../../async-storage/static-generation-async-storage-wrapper */ \"(sc_server)/./node_modules/next/dist/server/async-storage/static-generation-async-storage-wrapper.js\");\nconst _responsehandlers = __webpack_require__(/*! ../helpers/response-handlers */ \"(sc_server)/./node_modules/next/dist/server/future/route-modules/helpers/response-handlers.js\");\nconst _http = __webpack_require__(/*! ../../../web/http */ \"(sc_server)/./node_modules/next/dist/server/web/http.js\");\nconst _patchfetch = __webpack_require__(/*! ../../../lib/patch-fetch */ \"(sc_server)/./node_modules/next/dist/server/lib/patch-fetch.js\");\nconst _tracer = __webpack_require__(/*! ../../../lib/trace/tracer */ \"(sc_server)/./node_modules/next/dist/server/lib/trace/tracer.js\");\nconst _constants = __webpack_require__(/*! ../../../lib/trace/constants */ \"(sc_server)/./node_modules/next/dist/server/lib/trace/constants.js\");\nconst _getpathnamefromabsolutepath = __webpack_require__(/*! ./helpers/get-pathname-from-absolute-path */ \"(sc_server)/./node_modules/next/dist/server/future/route-modules/app-route/helpers/get-pathname-from-absolute-path.js\");\nconst _proxyrequest = __webpack_require__(/*! ./helpers/proxy-request */ \"(sc_server)/./node_modules/next/dist/server/future/route-modules/app-route/helpers/proxy-request.js\");\nconst _resolvehandlererror = __webpack_require__(/*! ./helpers/resolve-handler-error */ \"(sc_server)/./node_modules/next/dist/server/future/route-modules/app-route/helpers/resolve-handler-error.js\");\nconst _log = /*#__PURE__*/ _interop_require_wildcard(__webpack_require__(/*! ../../../../build/output/log */ \"(sc_server)/./node_modules/next/dist/build/output/log.js\"));\nconst _autoimplementmethods = __webpack_require__(/*! ./helpers/auto-implement-methods */ \"(sc_server)/./node_modules/next/dist/server/future/route-modules/app-route/helpers/auto-implement-methods.js\");\nconst _getnonstaticmethods = __webpack_require__(/*! ./helpers/get-non-static-methods */ \"(sc_server)/./node_modules/next/dist/server/future/route-modules/app-route/helpers/get-non-static-methods.js\");\nconst _requestcookies = __webpack_require__(/*! ../../../web/spec-extension/adapters/request-cookies */ \"(sc_server)/./node_modules/next/dist/server/web/spec-extension/adapters/request-cookies.js\");\nfunction _getRequireWildcardCache(nodeInterop) {\n    if (typeof WeakMap !== \"function\") return null;\n    var cacheBabelInterop = new WeakMap();\n    var cacheNodeInterop = new WeakMap();\n    return (_getRequireWildcardCache = function(nodeInterop) {\n        return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n    })(nodeInterop);\n}\nfunction _interop_require_wildcard(obj, nodeInterop) {\n    if (!nodeInterop && obj && obj.__esModule) {\n        return obj;\n    }\n    if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n        return {\n            default: obj\n        };\n    }\n    var cache = _getRequireWildcardCache(nodeInterop);\n    if (cache && cache.has(obj)) {\n        return cache.get(obj);\n    }\n    var newObj = {};\n    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n    for(var key in obj){\n        if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n            if (desc && (desc.get || desc.set)) {\n                Object.defineProperty(newObj, key, desc);\n            } else {\n                newObj[key] = obj[key];\n            }\n        }\n    }\n    newObj.default = obj;\n    if (cache) {\n        cache.set(obj, newObj);\n    }\n    return newObj;\n}\n// These are imported weirdly like this because of the way that the bundling\n// works. We need to import the built files from the dist directory, but we\n// can't do that directly because we need types from the source files. So we\n// import the types from the source files and then import the built files.\nconst { requestAsyncStorage  } = __webpack_require__(/*! next/dist/client/components/request-async-storage */ \"(sc_shared)/./node_modules/next/dist/client/components/request-async-storage.js\");\nconst { staticGenerationAsyncStorage  } = __webpack_require__(/*! next/dist/client/components/static-generation-async-storage */ \"(sc_shared)/./node_modules/next/dist/client/components/static-generation-async-storage.js\");\nconst serverHooks = __webpack_require__(/*! next/dist/client/components/hooks-server-context */ \"(sc_server)/./node_modules/next/dist/client/components/hooks-server-context.js\");\nconst headerHooks = __webpack_require__(/*! next/dist/client/components/headers */ \"(sc_server)/./node_modules/next/dist/client/components/headers.js\");\nconst { staticGenerationBailout  } = __webpack_require__(/*! next/dist/client/components/static-generation-bailout */ \"(sc_server)/./node_modules/next/dist/client/components/static-generation-bailout.js\");\nconst { actionAsyncStorage  } = __webpack_require__(/*! next/dist/client/components/action-async-storage */ \"(sc_shared)/./node_modules/next/dist/client/components/action-async-storage.js\");\nclass AppRouteRouteModule extends _routemodule.RouteModule {\n    constructor({ userland , definition , resolvedPagePath , nextConfigOutput  }){\n        super({\n            userland,\n            definition\n        });\n        /**\n   * A reference to the request async storage.\n   */ this.requestAsyncStorage = requestAsyncStorage;\n        /**\n   * A reference to the static generation async storage.\n   */ this.staticGenerationAsyncStorage = staticGenerationAsyncStorage;\n        /**\n   * An interface to call server hooks which interact with the underlying\n   * storage.\n   */ this.serverHooks = serverHooks;\n        /**\n   * An interface to call header hooks which interact with the underlying\n   * request storage.\n   */ this.headerHooks = headerHooks;\n        /**\n   * An interface to call static generation bailout hooks which interact with\n   * the underlying static generation storage.\n   */ this.staticGenerationBailout = staticGenerationBailout;\n        /**\n   * A reference to the mutation related async storage, such as mutations of\n   * cookies.\n   */ this.actionAsyncStorage = actionAsyncStorage;\n        /**\n   * When true, indicates that the global interfaces have been patched via the\n   * `patch()` method.\n   */ this.hasSetup = false;\n        this.resolvedPagePath = resolvedPagePath;\n        this.nextConfigOutput = nextConfigOutput;\n        // Automatically implement some methods if they aren't implemented by the\n        // userland module.\n        this.methods = (0, _autoimplementmethods.autoImplementMethods)(userland);\n        // Get the non-static methods for this route.\n        this.nonStaticMethods = (0, _getnonstaticmethods.getNonStaticMethods)(userland);\n        // Get the dynamic property from the userland module.\n        this.dynamic = this.userland.dynamic;\n        if (this.nextConfigOutput === \"export\") {\n            if (!this.dynamic || this.dynamic === \"auto\") {\n                this.dynamic = \"error\";\n            } else if (this.dynamic === \"force-dynamic\") {\n                throw new Error(`export const dynamic = \"force-dynamic\" on page \"${definition.pathname}\" cannot be used with \"output: export\". See more info here: https://nextjs.org/docs/advanced-features/static-html-export`);\n            }\n        }\n    }\n    /**\n   * Validates the userland module to ensure the exported methods and properties\n   * are valid.\n   */ async setup() {\n        // If we've already setup, then return.\n        if (this.hasSetup) return;\n        // Mark the module as setup. The following warnings about the userland\n        // module will run if we're in development. If the module files are modified\n        // when in development, then the require cache will be busted for it and\n        // this method will be called again (resetting the `hasSetup` flag).\n        this.hasSetup = true;\n        // We only warn in development after here, so return if we're not in\n        // development.\n        if (true) {\n            // Print error in development if the exported handlers are in lowercase, only\n            // uppercase handlers are supported.\n            const lowercased = _http.HTTP_METHODS.map((method)=>method.toLowerCase());\n            for (const method of lowercased){\n                if (method in this.userland) {\n                    _log.error(`Detected lowercase method '${method}' in '${this.resolvedPagePath}'. Export the uppercase '${method.toUpperCase()}' method name to fix this error.`);\n                }\n            }\n            // Print error if the module exports a default handler, they must use named\n            // exports for each HTTP method.\n            if (\"default\" in this.userland) {\n                _log.error(`Detected default export in '${this.resolvedPagePath}'. Export a named export for each HTTP method instead.`);\n            }\n            // If there is no methods exported by this module, then return a not found\n            // response.\n            if (!_http.HTTP_METHODS.some((method)=>method in this.userland)) {\n                _log.error(`No HTTP methods exported in '${this.resolvedPagePath}'. Export a named export for each HTTP method.`);\n            }\n        }\n    }\n    /**\n   * Resolves the handler function for the given method.\n   *\n   * @param method the requested method\n   * @returns the handler function for the given method\n   */ resolve(method) {\n        // Ensure that the requested method is a valid method (to prevent RCE's).\n        if (!(0, _http.isHTTPMethod)(method)) return _responsehandlers.handleBadRequestResponse;\n        // Return the handler.\n        return this.methods[method];\n    }\n    /**\n   * Executes the route handler.\n   */ async execute(request, context) {\n        // Get the handler function for the given method.\n        const handler = this.resolve(request.method);\n        // Get the context for the request.\n        const requestContext = {\n            req: request\n        };\n        requestContext.renderOpts = {\n            previewProps: context.prerenderManifest.preview\n        };\n        // Get the context for the static generation.\n        const staticGenerationContext = {\n            pathname: this.definition.pathname,\n            renderOpts: // the default values.\n            context.staticGenerationContext ?? {\n                supportsDynamicHTML: false\n            }\n        };\n        // Add the fetchCache option to the renderOpts.\n        staticGenerationContext.renderOpts.fetchCache = this.userland.fetchCache;\n        // Run the handler with the request AsyncLocalStorage to inject the helper\n        // support. We set this to `unknown` because the type is not known until\n        // runtime when we do a instanceof check below.\n        const response = await this.actionAsyncStorage.run({\n            isAppRoute: true\n        }, ()=>{\n            return _requestasyncstoragewrapper.RequestAsyncStorageWrapper.wrap(this.requestAsyncStorage, requestContext, ()=>{\n                return _staticgenerationasyncstoragewrapper.StaticGenerationAsyncStorageWrapper.wrap(this.staticGenerationAsyncStorage, staticGenerationContext, (staticGenerationStore)=>{\n                    var _getTracer_getRootSpanAttributes;\n                    // Check to see if we should bail out of static generation based on\n                    // having non-static methods.\n                    if (this.nonStaticMethods) {\n                        this.staticGenerationBailout(`non-static methods used ${this.nonStaticMethods.join(\", \")}`);\n                    }\n                    // Update the static generation store based on the dynamic property.\n                    switch(this.dynamic){\n                        case \"force-dynamic\":\n                            // The dynamic property is set to force-dynamic, so we should\n                            // force the page to be dynamic.\n                            staticGenerationStore.forceDynamic = true;\n                            this.staticGenerationBailout(`force-dynamic`, {\n                                dynamic: this.dynamic\n                            });\n                            break;\n                        case \"force-static\":\n                            // The dynamic property is set to force-static, so we should\n                            // force the page to be static.\n                            staticGenerationStore.forceStatic = true;\n                            break;\n                        case \"error\":\n                            // The dynamic property is set to error, so we should throw an\n                            // error if the page is being statically generated.\n                            staticGenerationStore.dynamicShouldError = true;\n                            break;\n                        default:\n                            break;\n                    }\n                    // If the static generation store does not have a revalidate value\n                    // set, then we should set it the revalidate value from the userland\n                    // module or default to false.\n                    staticGenerationStore.revalidate ??= this.userland.revalidate ?? false;\n                    // Wrap the request so we can add additional functionality to cases\n                    // that might change it's output or affect the rendering.\n                    const wrappedRequest = (0, _proxyrequest.proxyRequest)(request, {\n                        dynamic: this.dynamic\n                    }, {\n                        headerHooks: this.headerHooks,\n                        serverHooks: this.serverHooks,\n                        staticGenerationBailout: this.staticGenerationBailout\n                    });\n                    // TODO: propagate this pathname from route matcher\n                    const route = (0, _getpathnamefromabsolutepath.getPathnameFromAbsolutePath)(this.resolvedPagePath);\n                    (_getTracer_getRootSpanAttributes = (0, _tracer.getTracer)().getRootSpanAttributes()) == null ? void 0 : _getTracer_getRootSpanAttributes.set(\"next.route\", route);\n                    return (0, _tracer.getTracer)().trace(_constants.AppRouteRouteHandlersSpan.runHandler, {\n                        spanName: `executing api route (app) ${route}`,\n                        attributes: {\n                            \"next.route\": route\n                        }\n                    }, async ()=>{\n                        var _staticGenerationStore_tags;\n                        // Patch the global fetch.\n                        (0, _patchfetch.patchFetch)({\n                            serverHooks: this.serverHooks,\n                            staticGenerationAsyncStorage: this.staticGenerationAsyncStorage\n                        });\n                        const res = await handler(wrappedRequest, {\n                            params: context.params\n                        });\n                        context.staticGenerationContext.fetchMetrics = staticGenerationStore.fetchMetrics;\n                        await Promise.all(staticGenerationStore.pendingRevalidates || []);\n                        (0, _patchfetch.addImplicitTags)(staticGenerationStore);\n                        context.staticGenerationContext.fetchTags = (_staticGenerationStore_tags = staticGenerationStore.tags) == null ? void 0 : _staticGenerationStore_tags.join(\",\");\n                        // It's possible cookies were set in the handler, so we need\n                        // to merge the modified cookies and the returned response\n                        // here.\n                        const requestStore = this.requestAsyncStorage.getStore();\n                        if (requestStore && requestStore.mutableCookies) {\n                            const headers = new Headers(res.headers);\n                            if ((0, _requestcookies.appendMutableCookies)(headers, requestStore.mutableCookies)) {\n                                return new Response(res.body, {\n                                    status: res.status,\n                                    statusText: res.statusText,\n                                    headers\n                                });\n                            }\n                        }\n                        return res;\n                    });\n                });\n            });\n        });\n        // If the handler did't return a valid response, then return the internal\n        // error response.\n        if (!(response instanceof Response)) {\n            // TODO: validate the correct handling behavior, maybe log something?\n            return (0, _responsehandlers.handleInternalServerErrorResponse)();\n        }\n        if (response.headers.has(\"x-middleware-rewrite\")) {\n            // TODO: move this error into the `NextResponse.rewrite()` function.\n            // TODO-APP: re-enable support below when we can proxy these type of requests\n            throw new Error(\"NextResponse.rewrite() was used in a app route handler, this is not currently supported. Please remove the invocation to continue.\");\n        // // This is a rewrite created via `NextResponse.rewrite()`. We need to send\n        // // the response up so it can be handled by the backing server.\n        // // If the server is running in minimal mode, we just want to forward the\n        // // response (including the rewrite headers) upstream so it can perform the\n        // // redirect for us, otherwise return with the special condition so this\n        // // server can perform a rewrite.\n        // if (!minimalMode) {\n        //   return { response, condition: 'rewrite' }\n        // }\n        // // Relativize the url so it's relative to the base url. This is so the\n        // // outgoing headers upstream can be relative.\n        // const rewritePath = response.headers.get('x-middleware-rewrite')!\n        // const initUrl = getRequestMeta(req, '__NEXT_INIT_URL')!\n        // const { pathname } = parseUrl(relativizeURL(rewritePath, initUrl))\n        // response.headers.set('x-middleware-rewrite', pathname)\n        }\n        if (response.headers.get(\"x-middleware-next\") === \"1\") {\n            // TODO: move this error into the `NextResponse.next()` function.\n            throw new Error(\"NextResponse.next() was used in a app route handler, this is not supported. See here for more info: https://nextjs.org/docs/messages/next-response-next-in-app-route-handler\");\n        }\n        return response;\n    }\n    async handle(request, context) {\n        try {\n            // Execute the route to get the response.\n            const response = await this.execute(request, context);\n            // The response was handled, return it.\n            return response;\n        } catch (err) {\n            // Try to resolve the error to a response, else throw it again.\n            const response = (0, _resolvehandlererror.resolveHandlerError)(err);\n            if (!response) throw err;\n            // The response was resolved, return it.\n            return response;\n        }\n    }\n}\nconst _default = AppRouteRouteModule; //# sourceMappingURL=module.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/next/dist/server/future/route-modules/app-route/module.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/next/dist/server/future/route-modules/helpers/response-handlers.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/next/dist/server/future/route-modules/helpers/response-handlers.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\n0 && (0);\nfunction _export(target, all) {\n    for(var name in all)Object.defineProperty(target, name, {\n        enumerable: true,\n        get: all[name]\n    });\n}\n_export(exports, {\n    handleTemporaryRedirectResponse: function() {\n        return handleTemporaryRedirectResponse;\n    },\n    handleBadRequestResponse: function() {\n        return handleBadRequestResponse;\n    },\n    handleNotFoundResponse: function() {\n        return handleNotFoundResponse;\n    },\n    handleMethodNotAllowedResponse: function() {\n        return handleMethodNotAllowedResponse;\n    },\n    handleInternalServerErrorResponse: function() {\n        return handleInternalServerErrorResponse;\n    }\n});\nconst _requestcookies = __webpack_require__(/*! ../../../web/spec-extension/adapters/request-cookies */ \"(sc_server)/./node_modules/next/dist/server/web/spec-extension/adapters/request-cookies.js\");\nfunction handleTemporaryRedirectResponse(url, mutableCookies) {\n    const headers = new Headers({\n        location: url\n    });\n    (0, _requestcookies.appendMutableCookies)(headers, mutableCookies);\n    return new Response(null, {\n        status: 307,\n        headers\n    });\n}\nfunction handleBadRequestResponse() {\n    return new Response(null, {\n        status: 400\n    });\n}\nfunction handleNotFoundResponse() {\n    return new Response(null, {\n        status: 404\n    });\n}\nfunction handleMethodNotAllowedResponse() {\n    return new Response(null, {\n        status: 405\n    });\n}\nfunction handleInternalServerErrorResponse() {\n    return new Response(null, {\n        status: 500\n    });\n} //# sourceMappingURL=response-handlers.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L3NlcnZlci9mdXR1cmUvcm91dGUtbW9kdWxlcy9oZWxwZXJzL3Jlc3BvbnNlLWhhbmRsZXJzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2JBLDhDQUE2QztJQUN6Q0csT0FBTztBQUNYLENBQUMsRUFBQztBQUNGLEtBQU1DLENBQUFBLENBTU47QUFDQSxTQUFTTSxRQUFRQyxNQUFNLEVBQUVDLEdBQUc7SUFDeEIsSUFBSSxJQUFJQyxRQUFRRCxJQUFJWixPQUFPQyxlQUFlVSxRQUFRRSxNQUFNO1FBQ3BEQyxZQUFZO1FBQ1pDLEtBQUtILEdBQUcsQ0FBQ0MsS0FBSztJQUNsQjtBQUNKO0FBQ0FILFFBQVFSLFNBQVM7SUFDYkcsaUNBQWlDO1FBQzdCLE9BQU9BO0lBQ1g7SUFDQUMsMEJBQTBCO1FBQ3RCLE9BQU9BO0lBQ1g7SUFDQUMsd0JBQXdCO1FBQ3BCLE9BQU9BO0lBQ1g7SUFDQUMsZ0NBQWdDO1FBQzVCLE9BQU9BO0lBQ1g7SUFDQUMsbUNBQW1DO1FBQy9CLE9BQU9BO0lBQ1g7QUFDSjtBQUNBLE1BQU1PLGtCQUFrQkMsbUJBQU9BLENBQUMsd0pBQXNEO0FBQ3RGLFNBQVNaLGdDQUFnQ2EsR0FBRyxFQUFFQyxjQUFjO0lBQ3hELE1BQU1DLFVBQVUsSUFBSUMsUUFBUTtRQUN4QkMsVUFBVUo7SUFDZDtJQUNDLElBQUdGLGdCQUFnQk8sb0JBQW1CLEVBQUdILFNBQVNEO0lBQ25ELE9BQU8sSUFBSUssU0FBUyxNQUFNO1FBQ3RCQyxRQUFRO1FBQ1JMO0lBQ0o7QUFDSjtBQUNBLFNBQVNkO0lBQ0wsT0FBTyxJQUFJa0IsU0FBUyxNQUFNO1FBQ3RCQyxRQUFRO0lBQ1o7QUFDSjtBQUNBLFNBQVNsQjtJQUNMLE9BQU8sSUFBSWlCLFNBQVMsTUFBTTtRQUN0QkMsUUFBUTtJQUNaO0FBQ0o7QUFDQSxTQUFTakI7SUFDTCxPQUFPLElBQUlnQixTQUFTLE1BQU07UUFDdEJDLFFBQVE7SUFDWjtBQUNKO0FBQ0EsU0FBU2hCO0lBQ0wsT0FBTyxJQUFJZSxTQUFTLE1BQU07UUFDdEJDLFFBQVE7SUFDWjtBQUNKLEVBRUEsNkNBQTZDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZnVsbHN0YWNrLXJvbGUtYmFzZWQtbmV4dGpzLTIvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L3NlcnZlci9mdXR1cmUvcm91dGUtbW9kdWxlcy9oZWxwZXJzL3Jlc3BvbnNlLWhhbmRsZXJzLmpzPzhkZGMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgICB2YWx1ZTogdHJ1ZVxufSk7XG4wICYmIChtb2R1bGUuZXhwb3J0cyA9IHtcbiAgICBoYW5kbGVUZW1wb3JhcnlSZWRpcmVjdFJlc3BvbnNlOiBudWxsLFxuICAgIGhhbmRsZUJhZFJlcXVlc3RSZXNwb25zZTogbnVsbCxcbiAgICBoYW5kbGVOb3RGb3VuZFJlc3BvbnNlOiBudWxsLFxuICAgIGhhbmRsZU1ldGhvZE5vdEFsbG93ZWRSZXNwb25zZTogbnVsbCxcbiAgICBoYW5kbGVJbnRlcm5hbFNlcnZlckVycm9yUmVzcG9uc2U6IG51bGxcbn0pO1xuZnVuY3Rpb24gX2V4cG9ydCh0YXJnZXQsIGFsbCkge1xuICAgIGZvcih2YXIgbmFtZSBpbiBhbGwpT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCwgbmFtZSwge1xuICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICBnZXQ6IGFsbFtuYW1lXVxuICAgIH0pO1xufVxuX2V4cG9ydChleHBvcnRzLCB7XG4gICAgaGFuZGxlVGVtcG9yYXJ5UmVkaXJlY3RSZXNwb25zZTogZnVuY3Rpb24oKSB7XG4gICAgICAgIHJldHVybiBoYW5kbGVUZW1wb3JhcnlSZWRpcmVjdFJlc3BvbnNlO1xuICAgIH0sXG4gICAgaGFuZGxlQmFkUmVxdWVzdFJlc3BvbnNlOiBmdW5jdGlvbigpIHtcbiAgICAgICAgcmV0dXJuIGhhbmRsZUJhZFJlcXVlc3RSZXNwb25zZTtcbiAgICB9LFxuICAgIGhhbmRsZU5vdEZvdW5kUmVzcG9uc2U6IGZ1bmN0aW9uKCkge1xuICAgICAgICByZXR1cm4gaGFuZGxlTm90Rm91bmRSZXNwb25zZTtcbiAgICB9LFxuICAgIGhhbmRsZU1ldGhvZE5vdEFsbG93ZWRSZXNwb25zZTogZnVuY3Rpb24oKSB7XG4gICAgICAgIHJldHVybiBoYW5kbGVNZXRob2ROb3RBbGxvd2VkUmVzcG9uc2U7XG4gICAgfSxcbiAgICBoYW5kbGVJbnRlcm5hbFNlcnZlckVycm9yUmVzcG9uc2U6IGZ1bmN0aW9uKCkge1xuICAgICAgICByZXR1cm4gaGFuZGxlSW50ZXJuYWxTZXJ2ZXJFcnJvclJlc3BvbnNlO1xuICAgIH1cbn0pO1xuY29uc3QgX3JlcXVlc3Rjb29raWVzID0gcmVxdWlyZShcIi4uLy4uLy4uL3dlYi9zcGVjLWV4dGVuc2lvbi9hZGFwdGVycy9yZXF1ZXN0LWNvb2tpZXNcIik7XG5mdW5jdGlvbiBoYW5kbGVUZW1wb3JhcnlSZWRpcmVjdFJlc3BvbnNlKHVybCwgbXV0YWJsZUNvb2tpZXMpIHtcbiAgICBjb25zdCBoZWFkZXJzID0gbmV3IEhlYWRlcnMoe1xuICAgICAgICBsb2NhdGlvbjogdXJsXG4gICAgfSk7XG4gICAgKDAsIF9yZXF1ZXN0Y29va2llcy5hcHBlbmRNdXRhYmxlQ29va2llcykoaGVhZGVycywgbXV0YWJsZUNvb2tpZXMpO1xuICAgIHJldHVybiBuZXcgUmVzcG9uc2UobnVsbCwge1xuICAgICAgICBzdGF0dXM6IDMwNyxcbiAgICAgICAgaGVhZGVyc1xuICAgIH0pO1xufVxuZnVuY3Rpb24gaGFuZGxlQmFkUmVxdWVzdFJlc3BvbnNlKCkge1xuICAgIHJldHVybiBuZXcgUmVzcG9uc2UobnVsbCwge1xuICAgICAgICBzdGF0dXM6IDQwMFxuICAgIH0pO1xufVxuZnVuY3Rpb24gaGFuZGxlTm90Rm91bmRSZXNwb25zZSgpIHtcbiAgICByZXR1cm4gbmV3IFJlc3BvbnNlKG51bGwsIHtcbiAgICAgICAgc3RhdHVzOiA0MDRcbiAgICB9KTtcbn1cbmZ1bmN0aW9uIGhhbmRsZU1ldGhvZE5vdEFsbG93ZWRSZXNwb25zZSgpIHtcbiAgICByZXR1cm4gbmV3IFJlc3BvbnNlKG51bGwsIHtcbiAgICAgICAgc3RhdHVzOiA0MDVcbiAgICB9KTtcbn1cbmZ1bmN0aW9uIGhhbmRsZUludGVybmFsU2VydmVyRXJyb3JSZXNwb25zZSgpIHtcbiAgICByZXR1cm4gbmV3IFJlc3BvbnNlKG51bGwsIHtcbiAgICAgICAgc3RhdHVzOiA1MDBcbiAgICB9KTtcbn1cblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cmVzcG9uc2UtaGFuZGxlcnMuanMubWFwIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwibW9kdWxlIiwiaGFuZGxlVGVtcG9yYXJ5UmVkaXJlY3RSZXNwb25zZSIsImhhbmRsZUJhZFJlcXVlc3RSZXNwb25zZSIsImhhbmRsZU5vdEZvdW5kUmVzcG9uc2UiLCJoYW5kbGVNZXRob2ROb3RBbGxvd2VkUmVzcG9uc2UiLCJoYW5kbGVJbnRlcm5hbFNlcnZlckVycm9yUmVzcG9uc2UiLCJfZXhwb3J0IiwidGFyZ2V0IiwiYWxsIiwibmFtZSIsImVudW1lcmFibGUiLCJnZXQiLCJfcmVxdWVzdGNvb2tpZXMiLCJyZXF1aXJlIiwidXJsIiwibXV0YWJsZUNvb2tpZXMiLCJoZWFkZXJzIiwiSGVhZGVycyIsImxvY2F0aW9uIiwiYXBwZW5kTXV0YWJsZUNvb2tpZXMiLCJSZXNwb25zZSIsInN0YXR1cyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/next/dist/server/future/route-modules/helpers/response-handlers.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/next/dist/server/future/route-modules/route-module.js":
/*!****************************************************************************!*\
  !*** ./node_modules/next/dist/server/future/route-modules/route-module.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nObject.defineProperty(exports, \"RouteModule\", ({\n    enumerable: true,\n    get: function() {\n        return RouteModule;\n    }\n}));\nclass RouteModule {\n    constructor({ userland , definition  }){\n        this.userland = userland;\n        this.definition = definition;\n    }\n} //# sourceMappingURL=route-module.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L3NlcnZlci9mdXR1cmUvcm91dGUtbW9kdWxlcy9yb3V0ZS1tb2R1bGUuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYkEsOENBQTZDO0lBQ3pDRyxPQUFPO0FBQ1gsQ0FBQyxFQUFDO0FBQ0ZILCtDQUE4QztJQUMxQ0ksWUFBWTtJQUNaQyxLQUFLO1FBQ0QsT0FBT0M7SUFDWDtBQUNKLENBQUMsRUFBQztBQUNGLE1BQU1BO0lBQ0ZDLFlBQVksRUFBRUMsU0FBUSxFQUFHQyxXQUFVLEVBQUcsQ0FBQztRQUNuQyxJQUFJLENBQUNELFdBQVdBO1FBQ2hCLElBQUksQ0FBQ0MsYUFBYUE7SUFDdEI7QUFDSixFQUVBLHdDQUF3QyIsInNvdXJjZXMiOlsid2VicGFjazovL2Z1bGxzdGFjay1yb2xlLWJhc2VkLW5leHRqcy0yLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9zZXJ2ZXIvZnV0dXJlL3JvdXRlLW1vZHVsZXMvcm91dGUtbW9kdWxlLmpzPzlhYTEiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgICB2YWx1ZTogdHJ1ZVxufSk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJSb3V0ZU1vZHVsZVwiLCB7XG4gICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICBnZXQ6IGZ1bmN0aW9uKCkge1xuICAgICAgICByZXR1cm4gUm91dGVNb2R1bGU7XG4gICAgfVxufSk7XG5jbGFzcyBSb3V0ZU1vZHVsZSB7XG4gICAgY29uc3RydWN0b3IoeyB1c2VybGFuZCAsIGRlZmluaXRpb24gIH0pe1xuICAgICAgICB0aGlzLnVzZXJsYW5kID0gdXNlcmxhbmQ7XG4gICAgICAgIHRoaXMuZGVmaW5pdGlvbiA9IGRlZmluaXRpb247XG4gICAgfVxufVxuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1yb3V0ZS1tb2R1bGUuanMubWFwIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiZW51bWVyYWJsZSIsImdldCIsIlJvdXRlTW9kdWxlIiwiY29uc3RydWN0b3IiLCJ1c2VybGFuZCIsImRlZmluaXRpb24iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/next/dist/server/future/route-modules/route-module.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/next/dist/server/lib/patch-fetch.js":
/*!**********************************************************!*\
  !*** ./node_modules/next/dist/server/lib/patch-fetch.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\n0 && (0);\nfunction _export(target, all) {\n    for(var name in all)Object.defineProperty(target, name, {\n        enumerable: true,\n        get: all[name]\n    });\n}\n_export(exports, {\n    addImplicitTags: function() {\n        return addImplicitTags;\n    },\n    patchFetch: function() {\n        return patchFetch;\n    }\n});\nconst _constants = __webpack_require__(/*! ./trace/constants */ \"(sc_server)/./node_modules/next/dist/server/lib/trace/constants.js\");\nconst _tracer = __webpack_require__(/*! ./trace/tracer */ \"(sc_server)/./node_modules/next/dist/server/lib/trace/tracer.js\");\nconst _constants1 = __webpack_require__(/*! ../../lib/constants */ \"(sc_server)/./node_modules/next/dist/lib/constants.js\");\nconst isEdgeRuntime = \"nodejs\" === \"edge\";\nfunction addImplicitTags(staticGenerationStore) {\n    const newTags = [];\n    const pathname = staticGenerationStore == null ? void 0 : staticGenerationStore.originalPathname;\n    if (!pathname) {\n        return newTags;\n    }\n    if (!Array.isArray(staticGenerationStore.tags)) {\n        staticGenerationStore.tags = [];\n    }\n    if (!staticGenerationStore.tags.includes(pathname)) {\n        staticGenerationStore.tags.push(pathname);\n    }\n    newTags.push(pathname);\n    return newTags;\n}\nfunction trackFetchMetric(staticGenerationStore, ctx) {\n    if (!staticGenerationStore) return;\n    if (!staticGenerationStore.fetchMetrics) {\n        staticGenerationStore.fetchMetrics = [];\n    }\n    const dedupeFields = [\n        \"url\",\n        \"status\",\n        \"method\"\n    ];\n    // don't add metric if one already exists for the fetch\n    if (staticGenerationStore.fetchMetrics.some((metric)=>{\n        return dedupeFields.every((field)=>metric[field] === ctx[field]);\n    })) {\n        return;\n    }\n    staticGenerationStore.fetchMetrics.push({\n        url: ctx.url,\n        cacheStatus: ctx.cacheStatus,\n        status: ctx.status,\n        method: ctx.method,\n        start: ctx.start,\n        end: Date.now(),\n        idx: staticGenerationStore.nextFetchId || 0\n    });\n}\nfunction patchFetch({ serverHooks , staticGenerationAsyncStorage  }) {\n    if (!globalThis._nextOriginalFetch) {\n        globalThis._nextOriginalFetch = globalThis.fetch;\n    }\n    if (globalThis.fetch.__nextPatched) return;\n    const { DynamicServerError  } = serverHooks;\n    const originFetch = globalThis._nextOriginalFetch;\n    globalThis.fetch = async (input, init)=>{\n        var _init_method;\n        let url;\n        try {\n            url = new URL(input instanceof Request ? input.url : input);\n            url.username = \"\";\n            url.password = \"\";\n        } catch  {\n            // Error caused by malformed URL should be handled by native fetch\n            url = undefined;\n        }\n        const fetchUrl = (url == null ? void 0 : url.href) ?? \"\";\n        const fetchStart = Date.now();\n        const method = (init == null ? void 0 : (_init_method = init.method) == null ? void 0 : _init_method.toUpperCase()) || \"GET\";\n        return await (0, _tracer.getTracer)().trace(_constants.AppRenderSpan.fetch, {\n            kind: _tracer.SpanKind.CLIENT,\n            spanName: [\n                \"fetch\",\n                method,\n                fetchUrl\n            ].filter(Boolean).join(\" \"),\n            attributes: {\n                \"http.url\": fetchUrl,\n                \"http.method\": method,\n                \"net.peer.name\": url == null ? void 0 : url.hostname,\n                \"net.peer.port\": (url == null ? void 0 : url.port) || undefined\n            }\n        }, async ()=>{\n            var _ref, _getRequestMeta;\n            const staticGenerationStore = staticGenerationAsyncStorage.getStore();\n            const isRequestInput = input && typeof input === \"object\" && typeof input.method === \"string\";\n            const getRequestMeta = (field)=>{\n                let value = isRequestInput ? input[field] : null;\n                return value || (init == null ? void 0 : init[field]);\n            };\n            // If the staticGenerationStore is not available, we can't do any\n            // special treatment of fetch, therefore fallback to the original\n            // fetch implementation.\n            if (!staticGenerationStore || ((_ref = init == null ? void 0 : init.next) == null ? void 0 : _ref.internal)) {\n                return originFetch(input, init);\n            }\n            let revalidate = undefined;\n            const getNextField = (field)=>{\n                var _init_next, _init_next1, _input_next;\n                return typeof (init == null ? void 0 : (_init_next = init.next) == null ? void 0 : _init_next[field]) !== \"undefined\" ? init == null ? void 0 : (_init_next1 = init.next) == null ? void 0 : _init_next1[field] : isRequestInput ? (_input_next = input.next) == null ? void 0 : _input_next[field] : undefined;\n            };\n            // RequestInit doesn't keep extra fields e.g. next so it's\n            // only available if init is used separate\n            let curRevalidate = getNextField(\"revalidate\");\n            const tags = getNextField(\"tags\") || [];\n            if (Array.isArray(tags)) {\n                if (!staticGenerationStore.tags) {\n                    staticGenerationStore.tags = [];\n                }\n                for (const tag of tags){\n                    if (!staticGenerationStore.tags.includes(tag)) {\n                        staticGenerationStore.tags.push(tag);\n                    }\n                }\n            }\n            const implicitTags = addImplicitTags(staticGenerationStore);\n            for (const tag of implicitTags || []){\n                if (!tags.includes(tag)) {\n                    tags.push(tag);\n                }\n            }\n            const isOnlyCache = staticGenerationStore.fetchCache === \"only-cache\";\n            const isForceCache = staticGenerationStore.fetchCache === \"force-cache\";\n            const isDefaultCache = staticGenerationStore.fetchCache === \"default-cache\";\n            const isDefaultNoStore = staticGenerationStore.fetchCache === \"default-no-store\";\n            const isOnlyNoStore = staticGenerationStore.fetchCache === \"only-no-store\";\n            const isForceNoStore = staticGenerationStore.fetchCache === \"force-no-store\";\n            let _cache = getRequestMeta(\"cache\");\n            if (typeof _cache === \"string\" && typeof curRevalidate !== \"undefined\") {\n                console.warn(`Warning: fetch for ${fetchUrl} on ${staticGenerationStore.pathname} specified \"cache: ${_cache}\" and \"revalidate: ${curRevalidate}\", only one should be specified.`);\n                _cache = undefined;\n            }\n            if (_cache === \"force-cache\") {\n                curRevalidate = false;\n            }\n            if ([\n                \"no-cache\",\n                \"no-store\"\n            ].includes(_cache || \"\")) {\n                curRevalidate = 0;\n            }\n            if (typeof curRevalidate === \"number\" || curRevalidate === false) {\n                revalidate = curRevalidate;\n            }\n            let cacheReason = \"\";\n            const _headers = getRequestMeta(\"headers\");\n            const initHeaders = typeof (_headers == null ? void 0 : _headers.get) === \"function\" ? _headers : new Headers(_headers || {});\n            const hasUnCacheableHeader = initHeaders.get(\"authorization\") || initHeaders.get(\"cookie\");\n            const isUnCacheableMethod = ![\n                \"get\",\n                \"head\"\n            ].includes(((_getRequestMeta = getRequestMeta(\"method\")) == null ? void 0 : _getRequestMeta.toLowerCase()) || \"get\");\n            // if there are authorized headers or a POST method and\n            // dynamic data usage was present above the tree we bail\n            // e.g. if cookies() is used before an authed/POST fetch\n            const autoNoCache = (hasUnCacheableHeader || isUnCacheableMethod) && staticGenerationStore.revalidate === 0;\n            if (isForceNoStore) {\n                revalidate = 0;\n                cacheReason = \"fetchCache = force-no-store\";\n            }\n            if (isOnlyNoStore) {\n                if (_cache === \"force-cache\" || revalidate === 0) {\n                    throw new Error(`cache: 'force-cache' used on fetch for ${fetchUrl} with 'export const fetchCache = 'only-no-store'`);\n                }\n                revalidate = 0;\n                cacheReason = \"fetchCache = only-no-store\";\n            }\n            if (isOnlyCache && _cache === \"no-store\") {\n                throw new Error(`cache: 'no-store' used on fetch for ${fetchUrl} with 'export const fetchCache = 'only-cache'`);\n            }\n            if (isForceCache && (typeof curRevalidate === \"undefined\" || curRevalidate === 0)) {\n                cacheReason = \"fetchCache = force-cache\";\n                revalidate = false;\n            }\n            if (typeof revalidate === \"undefined\") {\n                if (isDefaultCache) {\n                    revalidate = false;\n                    cacheReason = \"fetchCache = default-cache\";\n                } else if (autoNoCache) {\n                    revalidate = 0;\n                    cacheReason = \"auto no cache\";\n                } else if (isDefaultNoStore) {\n                    revalidate = 0;\n                    cacheReason = \"fetchCache = default-no-store\";\n                } else {\n                    cacheReason = \"auto cache\";\n                    revalidate = typeof staticGenerationStore.revalidate === \"boolean\" || typeof staticGenerationStore.revalidate === \"undefined\" ? false : staticGenerationStore.revalidate;\n                }\n            } else if (!cacheReason) {\n                cacheReason = `revalidate: ${revalidate}`;\n            }\n            if (// revalidate although if it occurs during build we do\n            !autoNoCache && (typeof staticGenerationStore.revalidate === \"undefined\" || typeof revalidate === \"number\" && (staticGenerationStore.revalidate === false || typeof staticGenerationStore.revalidate === \"number\" && revalidate < staticGenerationStore.revalidate))) {\n                staticGenerationStore.revalidate = revalidate;\n            }\n            const isCacheableRevalidate = typeof revalidate === \"number\" && revalidate > 0 || revalidate === false;\n            let cacheKey;\n            if (staticGenerationStore.incrementalCache && isCacheableRevalidate) {\n                try {\n                    cacheKey = await staticGenerationStore.incrementalCache.fetchCacheKey(fetchUrl, isRequestInput ? input : init);\n                } catch (err) {\n                    console.error(`Failed to generate cache key for`, input);\n                }\n            }\n            const requestInputFields = [\n                \"cache\",\n                \"credentials\",\n                \"headers\",\n                \"integrity\",\n                \"keepalive\",\n                \"method\",\n                \"mode\",\n                \"redirect\",\n                \"referrer\",\n                \"referrerPolicy\",\n                \"signal\",\n                \"window\",\n                \"duplex\"\n            ];\n            if (isRequestInput) {\n                const reqInput = input;\n                const reqOptions = {\n                    body: reqInput._ogBody || reqInput.body\n                };\n                for (const field of requestInputFields){\n                    // @ts-expect-error custom fields\n                    reqOptions[field] = reqInput[field];\n                }\n                input = new Request(reqInput.url, reqOptions);\n            } else if (init) {\n                const initialInit = init;\n                init = {\n                    body: init._ogBody || init.body\n                };\n                for (const field of requestInputFields){\n                    // @ts-expect-error custom fields\n                    init[field] = initialInit[field];\n                }\n            }\n            const fetchIdx = staticGenerationStore.nextFetchId ?? 1;\n            staticGenerationStore.nextFetchId = fetchIdx + 1;\n            const normalizedRevalidate = typeof revalidate !== \"number\" ? _constants1.CACHE_ONE_YEAR : revalidate;\n            const doOriginalFetch = async (isStale)=>{\n                // add metadata to init without editing the original\n                const clonedInit = {\n                    ...init,\n                    next: {\n                        ...init == null ? void 0 : init.next,\n                        fetchType: \"origin\",\n                        fetchIdx\n                    }\n                };\n                return originFetch(input, clonedInit).then(async (res)=>{\n                    if (!isStale) {\n                        trackFetchMetric(staticGenerationStore, {\n                            start: fetchStart,\n                            url: fetchUrl,\n                            cacheReason,\n                            cacheStatus: \"miss\",\n                            status: res.status,\n                            method: clonedInit.method || \"GET\"\n                        });\n                    }\n                    if (res.status === 200 && staticGenerationStore.incrementalCache && cacheKey && isCacheableRevalidate) {\n                        const bodyBuffer = Buffer.from(await res.arrayBuffer());\n                        try {\n                            await staticGenerationStore.incrementalCache.set(cacheKey, {\n                                kind: \"FETCH\",\n                                data: {\n                                    headers: Object.fromEntries(res.headers.entries()),\n                                    body: bodyBuffer.toString(\"base64\"),\n                                    status: res.status,\n                                    tags\n                                },\n                                revalidate: normalizedRevalidate\n                            }, revalidate, true, fetchUrl, fetchIdx);\n                        } catch (err) {\n                            console.warn(`Failed to set fetch cache`, input, err);\n                        }\n                        return new Response(bodyBuffer, {\n                            headers: new Headers(res.headers),\n                            status: res.status\n                        });\n                    }\n                    return res;\n                });\n            };\n            if (cacheKey && (staticGenerationStore == null ? void 0 : staticGenerationStore.incrementalCache)) {\n                const entry = staticGenerationStore.isOnDemandRevalidate ? null : await staticGenerationStore.incrementalCache.get(cacheKey, true, revalidate, fetchUrl, fetchIdx);\n                if ((entry == null ? void 0 : entry.value) && entry.value.kind === \"FETCH\") {\n                    const currentTags = entry.value.data.tags;\n                    // when stale and is revalidating we wait for fresh data\n                    // so the revalidated entry has the updated data\n                    if (!(staticGenerationStore.isRevalidate && entry.isStale)) {\n                        if (entry.isStale) {\n                            if (!staticGenerationStore.pendingRevalidates) {\n                                staticGenerationStore.pendingRevalidates = [];\n                            }\n                            staticGenerationStore.pendingRevalidates.push(doOriginalFetch(true).catch(console.error));\n                        } else if (tags && !tags.every((tag)=>{\n                            return currentTags == null ? void 0 : currentTags.includes(tag);\n                        })) {\n                            var _staticGenerationStore_incrementalCache;\n                            // if new tags are being added we need to set even if\n                            // the data isn't stale\n                            if (!entry.value.data.tags) {\n                                entry.value.data.tags = [];\n                            }\n                            for (const tag of tags){\n                                if (!entry.value.data.tags.includes(tag)) {\n                                    entry.value.data.tags.push(tag);\n                                }\n                            }\n                            (_staticGenerationStore_incrementalCache = staticGenerationStore.incrementalCache) == null ? void 0 : _staticGenerationStore_incrementalCache.set(cacheKey, entry.value, revalidate, true, fetchUrl, fetchIdx);\n                        }\n                        const resData = entry.value.data;\n                        let decodedBody;\n                        if (false) {} else {\n                            decodedBody = Buffer.from(resData.body, \"base64\").subarray();\n                        }\n                        trackFetchMetric(staticGenerationStore, {\n                            start: fetchStart,\n                            url: fetchUrl,\n                            cacheReason,\n                            cacheStatus: \"hit\",\n                            status: resData.status || 200,\n                            method: (init == null ? void 0 : init.method) || \"GET\"\n                        });\n                        return new Response(decodedBody, {\n                            headers: resData.headers,\n                            status: resData.status\n                        });\n                    }\n                }\n            }\n            if (staticGenerationStore.isStaticGeneration) {\n                if (init && typeof init === \"object\") {\n                    const cache = init.cache;\n                    // Delete `cache` property as Cloudflare Workers will throw an error\n                    if (isEdgeRuntime) {\n                        delete init.cache;\n                    }\n                    if (cache === \"no-store\") {\n                        staticGenerationStore.revalidate = 0;\n                        const dynamicUsageReason = `no-store fetch ${input}${staticGenerationStore.pathname ? ` ${staticGenerationStore.pathname}` : \"\"}`;\n                        const err = new DynamicServerError(dynamicUsageReason);\n                        staticGenerationStore.dynamicUsageErr = err;\n                        staticGenerationStore.dynamicUsageStack = err.stack;\n                        staticGenerationStore.dynamicUsageDescription = dynamicUsageReason;\n                    }\n                    const hasNextConfig = \"next\" in init;\n                    const next = init.next || {};\n                    if (typeof next.revalidate === \"number\" && (typeof staticGenerationStore.revalidate === \"undefined\" || typeof staticGenerationStore.revalidate === \"number\" && next.revalidate < staticGenerationStore.revalidate)) {\n                        const forceDynamic = staticGenerationStore.forceDynamic;\n                        if (!forceDynamic || next.revalidate !== 0) {\n                            staticGenerationStore.revalidate = next.revalidate;\n                        }\n                        if (!forceDynamic && next.revalidate === 0) {\n                            const dynamicUsageReason = `revalidate: ${next.revalidate} fetch ${input}${staticGenerationStore.pathname ? ` ${staticGenerationStore.pathname}` : \"\"}`;\n                            const err = new DynamicServerError(dynamicUsageReason);\n                            staticGenerationStore.dynamicUsageErr = err;\n                            staticGenerationStore.dynamicUsageStack = err.stack;\n                            staticGenerationStore.dynamicUsageDescription = dynamicUsageReason;\n                        }\n                    }\n                    if (hasNextConfig) delete init.next;\n                }\n            }\n            return doOriginalFetch();\n        });\n    };\n    globalThis.fetch.__nextGetStaticStore = ()=>{\n        return staticGenerationAsyncStorage;\n    };\n    globalThis.fetch.__nextPatched = true;\n} //# sourceMappingURL=patch-fetch.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/next/dist/server/lib/patch-fetch.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/next/dist/server/lib/trace/constants.js":
/*!**************************************************************!*\
  !*** ./node_modules/next/dist/server/lib/trace/constants.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("/**\n * Contains predefined constants for the trace span name in next/server.\n *\n * Currently, next/server/tracer is internal implementation only for tracking\n * next.js's implementation only with known span names defined here.\n **/ // eslint typescript has a bug with TS enums\n/* eslint-disable no-shadow */ \nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\n0 && (0);\nfunction _export(target, all) {\n    for(var name in all)Object.defineProperty(target, name, {\n        enumerable: true,\n        get: all[name]\n    });\n}\n_export(exports, {\n    NextVanillaSpanAllowlist: function() {\n        return NextVanillaSpanAllowlist;\n    },\n    BaseServerSpan: function() {\n        return BaseServerSpan;\n    },\n    LoadComponentsSpan: function() {\n        return LoadComponentsSpan;\n    },\n    NextServerSpan: function() {\n        return NextServerSpan;\n    },\n    NextNodeServerSpan: function() {\n        return NextNodeServerSpan;\n    },\n    StartServerSpan: function() {\n        return StartServerSpan;\n    },\n    RenderSpan: function() {\n        return RenderSpan;\n    },\n    RouterSpan: function() {\n        return RouterSpan;\n    },\n    AppRenderSpan: function() {\n        return AppRenderSpan;\n    },\n    NodeSpan: function() {\n        return NodeSpan;\n    },\n    AppRouteRouteHandlersSpan: function() {\n        return AppRouteRouteHandlersSpan;\n    },\n    ResolveMetadataSpan: function() {\n        return ResolveMetadataSpan;\n    }\n});\nvar BaseServerSpan;\n(function(BaseServerSpan) {\n    BaseServerSpan[\"handleRequest\"] = \"BaseServer.handleRequest\";\n    BaseServerSpan[\"run\"] = \"BaseServer.run\";\n    BaseServerSpan[\"pipe\"] = \"BaseServer.pipe\";\n    BaseServerSpan[\"getStaticHTML\"] = \"BaseServer.getStaticHTML\";\n    BaseServerSpan[\"render\"] = \"BaseServer.render\";\n    BaseServerSpan[\"renderToResponseWithComponents\"] = \"BaseServer.renderToResponseWithComponents\";\n    BaseServerSpan[\"renderToResponse\"] = \"BaseServer.renderToResponse\";\n    BaseServerSpan[\"renderToHTML\"] = \"BaseServer.renderToHTML\";\n    BaseServerSpan[\"renderError\"] = \"BaseServer.renderError\";\n    BaseServerSpan[\"renderErrorToResponse\"] = \"BaseServer.renderErrorToResponse\";\n    BaseServerSpan[\"renderErrorToHTML\"] = \"BaseServer.renderErrorToHTML\";\n    BaseServerSpan[\"render404\"] = \"BaseServer.render404\";\n})(BaseServerSpan || (BaseServerSpan = {}));\nvar LoadComponentsSpan;\n(function(LoadComponentsSpan) {\n    LoadComponentsSpan[\"loadDefaultErrorComponents\"] = \"LoadComponents.loadDefaultErrorComponents\";\n    LoadComponentsSpan[\"loadComponents\"] = \"LoadComponents.loadComponents\";\n})(LoadComponentsSpan || (LoadComponentsSpan = {}));\nvar NextServerSpan;\n(function(NextServerSpan) {\n    NextServerSpan[\"getRequestHandler\"] = \"NextServer.getRequestHandler\";\n    NextServerSpan[\"getServer\"] = \"NextServer.getServer\";\n    NextServerSpan[\"getServerRequestHandler\"] = \"NextServer.getServerRequestHandler\";\n    NextServerSpan[\"createServer\"] = \"createServer.createServer\";\n})(NextServerSpan || (NextServerSpan = {}));\nvar NextNodeServerSpan;\n(function(NextNodeServerSpan) {\n    NextNodeServerSpan[\"compression\"] = \"NextNodeServer.compression\";\n    NextNodeServerSpan[\"getBuildId\"] = \"NextNodeServer.getBuildId\";\n    NextNodeServerSpan[\"generateStaticRoutes\"] = \"NextNodeServer.generateStaticRoutes\";\n    NextNodeServerSpan[\"generateFsStaticRoutes\"] = \"NextNodeServer.generateFsStaticRoutes\";\n    NextNodeServerSpan[\"generatePublicRoutes\"] = \"NextNodeServer.generatePublicRoutes\";\n    NextNodeServerSpan[\"generateImageRoutes\"] = \"NextNodeServer.generateImageRoutes.route\";\n    NextNodeServerSpan[\"sendRenderResult\"] = \"NextNodeServer.sendRenderResult\";\n    NextNodeServerSpan[\"sendStatic\"] = \"NextNodeServer.sendStatic\";\n    NextNodeServerSpan[\"proxyRequest\"] = \"NextNodeServer.proxyRequest\";\n    NextNodeServerSpan[\"runApi\"] = \"NextNodeServer.runApi\";\n    NextNodeServerSpan[\"render\"] = \"NextNodeServer.render\";\n    NextNodeServerSpan[\"renderHTML\"] = \"NextNodeServer.renderHTML\";\n    NextNodeServerSpan[\"imageOptimizer\"] = \"NextNodeServer.imageOptimizer\";\n    NextNodeServerSpan[\"getPagePath\"] = \"NextNodeServer.getPagePath\";\n    NextNodeServerSpan[\"getRoutesManifest\"] = \"NextNodeServer.getRoutesManifest\";\n    NextNodeServerSpan[\"findPageComponents\"] = \"NextNodeServer.findPageComponents\";\n    NextNodeServerSpan[\"getFontManifest\"] = \"NextNodeServer.getFontManifest\";\n    NextNodeServerSpan[\"getServerComponentManifest\"] = \"NextNodeServer.getServerComponentManifest\";\n    NextNodeServerSpan[\"getRequestHandler\"] = \"NextNodeServer.getRequestHandler\";\n    NextNodeServerSpan[\"renderToHTML\"] = \"NextNodeServer.renderToHTML\";\n    NextNodeServerSpan[\"renderError\"] = \"NextNodeServer.renderError\";\n    NextNodeServerSpan[\"renderErrorToHTML\"] = \"NextNodeServer.renderErrorToHTML\";\n    NextNodeServerSpan[\"render404\"] = \"NextNodeServer.render404\";\n    NextNodeServerSpan[\"route\"] = \"route\";\n    NextNodeServerSpan[\"onProxyReq\"] = \"onProxyReq\";\n    NextNodeServerSpan[\"apiResolver\"] = \"apiResolver\";\n})(NextNodeServerSpan || (NextNodeServerSpan = {}));\nvar StartServerSpan;\n(function(StartServerSpan) {\n    StartServerSpan[\"startServer\"] = \"startServer.startServer\";\n})(StartServerSpan || (StartServerSpan = {}));\nvar RenderSpan;\n(function(RenderSpan) {\n    RenderSpan[\"getServerSideProps\"] = \"Render.getServerSideProps\";\n    RenderSpan[\"getStaticProps\"] = \"Render.getStaticProps\";\n    RenderSpan[\"renderToString\"] = \"Render.renderToString\";\n    RenderSpan[\"renderDocument\"] = \"Render.renderDocument\";\n    RenderSpan[\"createBodyResult\"] = \"Render.createBodyResult\";\n})(RenderSpan || (RenderSpan = {}));\nvar AppRenderSpan;\n(function(AppRenderSpan) {\n    AppRenderSpan[\"renderToString\"] = \"AppRender.renderToString\";\n    AppRenderSpan[\"renderToReadableStream\"] = \"AppRender.renderToReadableStream\";\n    AppRenderSpan[\"getBodyResult\"] = \"AppRender.getBodyResult\";\n    AppRenderSpan[\"fetch\"] = \"AppRender.fetch\";\n})(AppRenderSpan || (AppRenderSpan = {}));\nvar RouterSpan;\n(function(RouterSpan) {\n    RouterSpan[\"executeRoute\"] = \"Router.executeRoute\";\n})(RouterSpan || (RouterSpan = {}));\nvar NodeSpan;\n(function(NodeSpan) {\n    NodeSpan[\"runHandler\"] = \"Node.runHandler\";\n})(NodeSpan || (NodeSpan = {}));\nvar AppRouteRouteHandlersSpan;\n(function(AppRouteRouteHandlersSpan) {\n    AppRouteRouteHandlersSpan[\"runHandler\"] = \"AppRouteRouteHandlers.runHandler\";\n})(AppRouteRouteHandlersSpan || (AppRouteRouteHandlersSpan = {}));\nvar ResolveMetadataSpan;\n(function(ResolveMetadataSpan) {\n    ResolveMetadataSpan[\"generateMetadata\"] = \"ResolveMetadata.generateMetadata\";\n})(ResolveMetadataSpan || (ResolveMetadataSpan = {}));\nconst NextVanillaSpanAllowlist = [\n    \"BaseServer.handleRequest\",\n    \"Render.getServerSideProps\",\n    \"Render.getStaticProps\",\n    \"AppRender.fetch\",\n    \"AppRender.getBodyResult\",\n    \"Render.renderDocument\",\n    \"Node.runHandler\",\n    \"AppRouteRouteHandlers.runHandler\",\n    \"ResolveMetadata.generateMetadata\"\n]; //# sourceMappingURL=constants.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L3NlcnZlci9saWIvdHJhY2UvY29uc3RhbnRzLmpzIiwibWFwcGluZ3MiOiJBQUFBOzs7OztFQUtFLEdBQUcsNENBQTRDO0FBQ2pELDRCQUE0QixHQUFnQjtBQUM1Q0EsOENBQTZDO0lBQ3pDRyxPQUFPO0FBQ1gsQ0FBQyxFQUFDO0FBQ0YsS0FBTUMsQ0FBQUEsQ0FhTjtBQUNBLFNBQVNhLFFBQVFDLE1BQU0sRUFBRUMsR0FBRztJQUN4QixJQUFJLElBQUlDLFFBQVFELElBQUluQixPQUFPQyxlQUFlaUIsUUFBUUUsTUFBTTtRQUNwREMsWUFBWTtRQUNaQyxLQUFLSCxHQUFHLENBQUNDLEtBQUs7SUFDbEI7QUFDSjtBQUNBSCxRQUFRZixTQUFTO0lBQ2JHLDBCQUEwQjtRQUN0QixPQUFPQTtJQUNYO0lBQ0FDLGdCQUFnQjtRQUNaLE9BQU9BO0lBQ1g7SUFDQUMsb0JBQW9CO1FBQ2hCLE9BQU9BO0lBQ1g7SUFDQUMsZ0JBQWdCO1FBQ1osT0FBT0E7SUFDWDtJQUNBQyxvQkFBb0I7UUFDaEIsT0FBT0E7SUFDWDtJQUNBQyxpQkFBaUI7UUFDYixPQUFPQTtJQUNYO0lBQ0FDLFlBQVk7UUFDUixPQUFPQTtJQUNYO0lBQ0FDLFlBQVk7UUFDUixPQUFPQTtJQUNYO0lBQ0FDLGVBQWU7UUFDWCxPQUFPQTtJQUNYO0lBQ0FDLFVBQVU7UUFDTixPQUFPQTtJQUNYO0lBQ0FDLDJCQUEyQjtRQUN2QixPQUFPQTtJQUNYO0lBQ0FDLHFCQUFxQjtRQUNqQixPQUFPQTtJQUNYO0FBQ0o7QUFDQSxJQUFJVjtBQUNILFVBQVNBLGNBQWM7SUFDcEJBLGNBQWMsQ0FBQyxnQkFBZ0IsR0FBRztJQUNsQ0EsY0FBYyxDQUFDLE1BQU0sR0FBRztJQUN4QkEsY0FBYyxDQUFDLE9BQU8sR0FBRztJQUN6QkEsY0FBYyxDQUFDLGdCQUFnQixHQUFHO0lBQ2xDQSxjQUFjLENBQUMsU0FBUyxHQUFHO0lBQzNCQSxjQUFjLENBQUMsaUNBQWlDLEdBQUc7SUFDbkRBLGNBQWMsQ0FBQyxtQkFBbUIsR0FBRztJQUNyQ0EsY0FBYyxDQUFDLGVBQWUsR0FBRztJQUNqQ0EsY0FBYyxDQUFDLGNBQWMsR0FBRztJQUNoQ0EsY0FBYyxDQUFDLHdCQUF3QixHQUFHO0lBQzFDQSxjQUFjLENBQUMsb0JBQW9CLEdBQUc7SUFDdENBLGNBQWMsQ0FBQyxZQUFZLEdBQUc7QUFDbEMsR0FBR0Esa0JBQW1CQSxDQUFBQSxpQkFBaUIsQ0FBQztBQUN4QyxJQUFJQztBQUNILFVBQVNBLGtCQUFrQjtJQUN4QkEsa0JBQWtCLENBQUMsNkJBQTZCLEdBQUc7SUFDbkRBLGtCQUFrQixDQUFDLGlCQUFpQixHQUFHO0FBQzNDLEdBQUdBLHNCQUF1QkEsQ0FBQUEscUJBQXFCLENBQUM7QUFDaEQsSUFBSUM7QUFDSCxVQUFTQSxjQUFjO0lBQ3BCQSxjQUFjLENBQUMsb0JBQW9CLEdBQUc7SUFDdENBLGNBQWMsQ0FBQyxZQUFZLEdBQUc7SUFDOUJBLGNBQWMsQ0FBQywwQkFBMEIsR0FBRztJQUM1Q0EsY0FBYyxDQUFDLGVBQWUsR0FBRztBQUNyQyxHQUFHQSxrQkFBbUJBLENBQUFBLGlCQUFpQixDQUFDO0FBQ3hDLElBQUlDO0FBQ0gsVUFBU0Esa0JBQWtCO0lBQ3hCQSxrQkFBa0IsQ0FBQyxjQUFjLEdBQUc7SUFDcENBLGtCQUFrQixDQUFDLGFBQWEsR0FBRztJQUNuQ0Esa0JBQWtCLENBQUMsdUJBQXVCLEdBQUc7SUFDN0NBLGtCQUFrQixDQUFDLHlCQUF5QixHQUFHO0lBQy9DQSxrQkFBa0IsQ0FBQyx1QkFBdUIsR0FBRztJQUM3Q0Esa0JBQWtCLENBQUMsc0JBQXNCLEdBQUc7SUFDNUNBLGtCQUFrQixDQUFDLG1CQUFtQixHQUFHO0lBQ3pDQSxrQkFBa0IsQ0FBQyxhQUFhLEdBQUc7SUFDbkNBLGtCQUFrQixDQUFDLGVBQWUsR0FBRztJQUNyQ0Esa0JBQWtCLENBQUMsU0FBUyxHQUFHO0lBQy9CQSxrQkFBa0IsQ0FBQyxTQUFTLEdBQUc7SUFDL0JBLGtCQUFrQixDQUFDLGFBQWEsR0FBRztJQUNuQ0Esa0JBQWtCLENBQUMsaUJBQWlCLEdBQUc7SUFDdkNBLGtCQUFrQixDQUFDLGNBQWMsR0FBRztJQUNwQ0Esa0JBQWtCLENBQUMsb0JBQW9CLEdBQUc7SUFDMUNBLGtCQUFrQixDQUFDLHFCQUFxQixHQUFHO0lBQzNDQSxrQkFBa0IsQ0FBQyxrQkFBa0IsR0FBRztJQUN4Q0Esa0JBQWtCLENBQUMsNkJBQTZCLEdBQUc7SUFDbkRBLGtCQUFrQixDQUFDLG9CQUFvQixHQUFHO0lBQzFDQSxrQkFBa0IsQ0FBQyxlQUFlLEdBQUc7SUFDckNBLGtCQUFrQixDQUFDLGNBQWMsR0FBRztJQUNwQ0Esa0JBQWtCLENBQUMsb0JBQW9CLEdBQUc7SUFDMUNBLGtCQUFrQixDQUFDLFlBQVksR0FBRztJQUNsQ0Esa0JBQWtCLENBQ2xCLFFBQVEsR0FBRztJQUNYQSxrQkFBa0IsQ0FBQyxhQUFhLEdBQUc7SUFDbkNBLGtCQUFrQixDQUFDLGNBQWMsR0FBRztBQUN4QyxHQUFHQSxzQkFBdUJBLENBQUFBLHFCQUFxQixDQUFDO0FBQ2hELElBQUlDO0FBQ0gsVUFBU0EsZUFBZTtJQUNyQkEsZUFBZSxDQUFDLGNBQWMsR0FBRztBQUNyQyxHQUFHQSxtQkFBb0JBLENBQUFBLGtCQUFrQixDQUFDO0FBQzFDLElBQUlDO0FBQ0gsVUFBU0EsVUFBVTtJQUNoQkEsVUFBVSxDQUFDLHFCQUFxQixHQUFHO0lBQ25DQSxVQUFVLENBQUMsaUJBQWlCLEdBQUc7SUFDL0JBLFVBQVUsQ0FBQyxpQkFBaUIsR0FBRztJQUMvQkEsVUFBVSxDQUFDLGlCQUFpQixHQUFHO0lBQy9CQSxVQUFVLENBQUMsbUJBQW1CLEdBQUc7QUFDckMsR0FBR0EsY0FBZUEsQ0FBQUEsYUFBYSxDQUFDO0FBQ2hDLElBQUlFO0FBQ0gsVUFBU0EsYUFBYTtJQUNuQkEsYUFBYSxDQUFDLGlCQUFpQixHQUFHO0lBQ2xDQSxhQUFhLENBQUMseUJBQXlCLEdBQUc7SUFDMUNBLGFBQWEsQ0FBQyxnQkFBZ0IsR0FBRztJQUNqQ0EsYUFBYSxDQUFDLFFBQVEsR0FBRztBQUM3QixHQUFHQSxpQkFBa0JBLENBQUFBLGdCQUFnQixDQUFDO0FBQ3RDLElBQUlEO0FBQ0gsVUFBU0EsVUFBVTtJQUNoQkEsVUFBVSxDQUFDLGVBQWUsR0FBRztBQUNqQyxHQUFHQSxjQUFlQSxDQUFBQSxhQUFhLENBQUM7QUFDaEMsSUFBSUU7QUFDSCxVQUFTQSxRQUFRO0lBQ2RBLFFBQVEsQ0FBQyxhQUFhLEdBQUc7QUFDN0IsR0FBR0EsWUFBYUEsQ0FBQUEsV0FBVyxDQUFDO0FBQzVCLElBQUlDO0FBQ0gsVUFBU0EseUJBQXlCO0lBQy9CQSx5QkFBeUIsQ0FBQyxhQUFhLEdBQUc7QUFDOUMsR0FBR0EsNkJBQThCQSxDQUFBQSw0QkFBNEIsQ0FBQztBQUM5RCxJQUFJQztBQUNILFVBQVNBLG1CQUFtQjtJQUN6QkEsbUJBQW1CLENBQUMsbUJBQW1CLEdBQUc7QUFDOUMsR0FBR0EsdUJBQXdCQSxDQUFBQSxzQkFBc0IsQ0FBQztBQUNsRCxNQUFNWCwyQkFBMkI7SUFDN0I7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0NBQ0gsRUFFRCxxQ0FBcUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mdWxsc3RhY2stcm9sZS1iYXNlZC1uZXh0anMtMi8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3Qvc2VydmVyL2xpYi90cmFjZS9jb25zdGFudHMuanM/ZjgyNSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvbnRhaW5zIHByZWRlZmluZWQgY29uc3RhbnRzIGZvciB0aGUgdHJhY2Ugc3BhbiBuYW1lIGluIG5leHQvc2VydmVyLlxuICpcbiAqIEN1cnJlbnRseSwgbmV4dC9zZXJ2ZXIvdHJhY2VyIGlzIGludGVybmFsIGltcGxlbWVudGF0aW9uIG9ubHkgZm9yIHRyYWNraW5nXG4gKiBuZXh0LmpzJ3MgaW1wbGVtZW50YXRpb24gb25seSB3aXRoIGtub3duIHNwYW4gbmFtZXMgZGVmaW5lZCBoZXJlLlxuICoqLyAvLyBlc2xpbnQgdHlwZXNjcmlwdCBoYXMgYSBidWcgd2l0aCBUUyBlbnVtc1xuLyogZXNsaW50LWRpc2FibGUgbm8tc2hhZG93ICovIFwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gICAgdmFsdWU6IHRydWVcbn0pO1xuMCAmJiAobW9kdWxlLmV4cG9ydHMgPSB7XG4gICAgTmV4dFZhbmlsbGFTcGFuQWxsb3dsaXN0OiBudWxsLFxuICAgIEJhc2VTZXJ2ZXJTcGFuOiBudWxsLFxuICAgIExvYWRDb21wb25lbnRzU3BhbjogbnVsbCxcbiAgICBOZXh0U2VydmVyU3BhbjogbnVsbCxcbiAgICBOZXh0Tm9kZVNlcnZlclNwYW46IG51bGwsXG4gICAgU3RhcnRTZXJ2ZXJTcGFuOiBudWxsLFxuICAgIFJlbmRlclNwYW46IG51bGwsXG4gICAgUm91dGVyU3BhbjogbnVsbCxcbiAgICBBcHBSZW5kZXJTcGFuOiBudWxsLFxuICAgIE5vZGVTcGFuOiBudWxsLFxuICAgIEFwcFJvdXRlUm91dGVIYW5kbGVyc1NwYW46IG51bGwsXG4gICAgUmVzb2x2ZU1ldGFkYXRhU3BhbjogbnVsbFxufSk7XG5mdW5jdGlvbiBfZXhwb3J0KHRhcmdldCwgYWxsKSB7XG4gICAgZm9yKHZhciBuYW1lIGluIGFsbClPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBuYW1lLCB7XG4gICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgIGdldDogYWxsW25hbWVdXG4gICAgfSk7XG59XG5fZXhwb3J0KGV4cG9ydHMsIHtcbiAgICBOZXh0VmFuaWxsYVNwYW5BbGxvd2xpc3Q6IGZ1bmN0aW9uKCkge1xuICAgICAgICByZXR1cm4gTmV4dFZhbmlsbGFTcGFuQWxsb3dsaXN0O1xuICAgIH0sXG4gICAgQmFzZVNlcnZlclNwYW46IGZ1bmN0aW9uKCkge1xuICAgICAgICByZXR1cm4gQmFzZVNlcnZlclNwYW47XG4gICAgfSxcbiAgICBMb2FkQ29tcG9uZW50c1NwYW46IGZ1bmN0aW9uKCkge1xuICAgICAgICByZXR1cm4gTG9hZENvbXBvbmVudHNTcGFuO1xuICAgIH0sXG4gICAgTmV4dFNlcnZlclNwYW46IGZ1bmN0aW9uKCkge1xuICAgICAgICByZXR1cm4gTmV4dFNlcnZlclNwYW47XG4gICAgfSxcbiAgICBOZXh0Tm9kZVNlcnZlclNwYW46IGZ1bmN0aW9uKCkge1xuICAgICAgICByZXR1cm4gTmV4dE5vZGVTZXJ2ZXJTcGFuO1xuICAgIH0sXG4gICAgU3RhcnRTZXJ2ZXJTcGFuOiBmdW5jdGlvbigpIHtcbiAgICAgICAgcmV0dXJuIFN0YXJ0U2VydmVyU3BhbjtcbiAgICB9LFxuICAgIFJlbmRlclNwYW46IGZ1bmN0aW9uKCkge1xuICAgICAgICByZXR1cm4gUmVuZGVyU3BhbjtcbiAgICB9LFxuICAgIFJvdXRlclNwYW46IGZ1bmN0aW9uKCkge1xuICAgICAgICByZXR1cm4gUm91dGVyU3BhbjtcbiAgICB9LFxuICAgIEFwcFJlbmRlclNwYW46IGZ1bmN0aW9uKCkge1xuICAgICAgICByZXR1cm4gQXBwUmVuZGVyU3BhbjtcbiAgICB9LFxuICAgIE5vZGVTcGFuOiBmdW5jdGlvbigpIHtcbiAgICAgICAgcmV0dXJuIE5vZGVTcGFuO1xuICAgIH0sXG4gICAgQXBwUm91dGVSb3V0ZUhhbmRsZXJzU3BhbjogZnVuY3Rpb24oKSB7XG4gICAgICAgIHJldHVybiBBcHBSb3V0ZVJvdXRlSGFuZGxlcnNTcGFuO1xuICAgIH0sXG4gICAgUmVzb2x2ZU1ldGFkYXRhU3BhbjogZnVuY3Rpb24oKSB7XG4gICAgICAgIHJldHVybiBSZXNvbHZlTWV0YWRhdGFTcGFuO1xuICAgIH1cbn0pO1xudmFyIEJhc2VTZXJ2ZXJTcGFuO1xuKGZ1bmN0aW9uKEJhc2VTZXJ2ZXJTcGFuKSB7XG4gICAgQmFzZVNlcnZlclNwYW5bXCJoYW5kbGVSZXF1ZXN0XCJdID0gXCJCYXNlU2VydmVyLmhhbmRsZVJlcXVlc3RcIjtcbiAgICBCYXNlU2VydmVyU3BhbltcInJ1blwiXSA9IFwiQmFzZVNlcnZlci5ydW5cIjtcbiAgICBCYXNlU2VydmVyU3BhbltcInBpcGVcIl0gPSBcIkJhc2VTZXJ2ZXIucGlwZVwiO1xuICAgIEJhc2VTZXJ2ZXJTcGFuW1wiZ2V0U3RhdGljSFRNTFwiXSA9IFwiQmFzZVNlcnZlci5nZXRTdGF0aWNIVE1MXCI7XG4gICAgQmFzZVNlcnZlclNwYW5bXCJyZW5kZXJcIl0gPSBcIkJhc2VTZXJ2ZXIucmVuZGVyXCI7XG4gICAgQmFzZVNlcnZlclNwYW5bXCJyZW5kZXJUb1Jlc3BvbnNlV2l0aENvbXBvbmVudHNcIl0gPSBcIkJhc2VTZXJ2ZXIucmVuZGVyVG9SZXNwb25zZVdpdGhDb21wb25lbnRzXCI7XG4gICAgQmFzZVNlcnZlclNwYW5bXCJyZW5kZXJUb1Jlc3BvbnNlXCJdID0gXCJCYXNlU2VydmVyLnJlbmRlclRvUmVzcG9uc2VcIjtcbiAgICBCYXNlU2VydmVyU3BhbltcInJlbmRlclRvSFRNTFwiXSA9IFwiQmFzZVNlcnZlci5yZW5kZXJUb0hUTUxcIjtcbiAgICBCYXNlU2VydmVyU3BhbltcInJlbmRlckVycm9yXCJdID0gXCJCYXNlU2VydmVyLnJlbmRlckVycm9yXCI7XG4gICAgQmFzZVNlcnZlclNwYW5bXCJyZW5kZXJFcnJvclRvUmVzcG9uc2VcIl0gPSBcIkJhc2VTZXJ2ZXIucmVuZGVyRXJyb3JUb1Jlc3BvbnNlXCI7XG4gICAgQmFzZVNlcnZlclNwYW5bXCJyZW5kZXJFcnJvclRvSFRNTFwiXSA9IFwiQmFzZVNlcnZlci5yZW5kZXJFcnJvclRvSFRNTFwiO1xuICAgIEJhc2VTZXJ2ZXJTcGFuW1wicmVuZGVyNDA0XCJdID0gXCJCYXNlU2VydmVyLnJlbmRlcjQwNFwiO1xufSkoQmFzZVNlcnZlclNwYW4gfHwgKEJhc2VTZXJ2ZXJTcGFuID0ge30pKTtcbnZhciBMb2FkQ29tcG9uZW50c1NwYW47XG4oZnVuY3Rpb24oTG9hZENvbXBvbmVudHNTcGFuKSB7XG4gICAgTG9hZENvbXBvbmVudHNTcGFuW1wibG9hZERlZmF1bHRFcnJvckNvbXBvbmVudHNcIl0gPSBcIkxvYWRDb21wb25lbnRzLmxvYWREZWZhdWx0RXJyb3JDb21wb25lbnRzXCI7XG4gICAgTG9hZENvbXBvbmVudHNTcGFuW1wibG9hZENvbXBvbmVudHNcIl0gPSBcIkxvYWRDb21wb25lbnRzLmxvYWRDb21wb25lbnRzXCI7XG59KShMb2FkQ29tcG9uZW50c1NwYW4gfHwgKExvYWRDb21wb25lbnRzU3BhbiA9IHt9KSk7XG52YXIgTmV4dFNlcnZlclNwYW47XG4oZnVuY3Rpb24oTmV4dFNlcnZlclNwYW4pIHtcbiAgICBOZXh0U2VydmVyU3BhbltcImdldFJlcXVlc3RIYW5kbGVyXCJdID0gXCJOZXh0U2VydmVyLmdldFJlcXVlc3RIYW5kbGVyXCI7XG4gICAgTmV4dFNlcnZlclNwYW5bXCJnZXRTZXJ2ZXJcIl0gPSBcIk5leHRTZXJ2ZXIuZ2V0U2VydmVyXCI7XG4gICAgTmV4dFNlcnZlclNwYW5bXCJnZXRTZXJ2ZXJSZXF1ZXN0SGFuZGxlclwiXSA9IFwiTmV4dFNlcnZlci5nZXRTZXJ2ZXJSZXF1ZXN0SGFuZGxlclwiO1xuICAgIE5leHRTZXJ2ZXJTcGFuW1wiY3JlYXRlU2VydmVyXCJdID0gXCJjcmVhdGVTZXJ2ZXIuY3JlYXRlU2VydmVyXCI7XG59KShOZXh0U2VydmVyU3BhbiB8fCAoTmV4dFNlcnZlclNwYW4gPSB7fSkpO1xudmFyIE5leHROb2RlU2VydmVyU3BhbjtcbihmdW5jdGlvbihOZXh0Tm9kZVNlcnZlclNwYW4pIHtcbiAgICBOZXh0Tm9kZVNlcnZlclNwYW5bXCJjb21wcmVzc2lvblwiXSA9IFwiTmV4dE5vZGVTZXJ2ZXIuY29tcHJlc3Npb25cIjtcbiAgICBOZXh0Tm9kZVNlcnZlclNwYW5bXCJnZXRCdWlsZElkXCJdID0gXCJOZXh0Tm9kZVNlcnZlci5nZXRCdWlsZElkXCI7XG4gICAgTmV4dE5vZGVTZXJ2ZXJTcGFuW1wiZ2VuZXJhdGVTdGF0aWNSb3V0ZXNcIl0gPSBcIk5leHROb2RlU2VydmVyLmdlbmVyYXRlU3RhdGljUm91dGVzXCI7XG4gICAgTmV4dE5vZGVTZXJ2ZXJTcGFuW1wiZ2VuZXJhdGVGc1N0YXRpY1JvdXRlc1wiXSA9IFwiTmV4dE5vZGVTZXJ2ZXIuZ2VuZXJhdGVGc1N0YXRpY1JvdXRlc1wiO1xuICAgIE5leHROb2RlU2VydmVyU3BhbltcImdlbmVyYXRlUHVibGljUm91dGVzXCJdID0gXCJOZXh0Tm9kZVNlcnZlci5nZW5lcmF0ZVB1YmxpY1JvdXRlc1wiO1xuICAgIE5leHROb2RlU2VydmVyU3BhbltcImdlbmVyYXRlSW1hZ2VSb3V0ZXNcIl0gPSBcIk5leHROb2RlU2VydmVyLmdlbmVyYXRlSW1hZ2VSb3V0ZXMucm91dGVcIjtcbiAgICBOZXh0Tm9kZVNlcnZlclNwYW5bXCJzZW5kUmVuZGVyUmVzdWx0XCJdID0gXCJOZXh0Tm9kZVNlcnZlci5zZW5kUmVuZGVyUmVzdWx0XCI7XG4gICAgTmV4dE5vZGVTZXJ2ZXJTcGFuW1wic2VuZFN0YXRpY1wiXSA9IFwiTmV4dE5vZGVTZXJ2ZXIuc2VuZFN0YXRpY1wiO1xuICAgIE5leHROb2RlU2VydmVyU3BhbltcInByb3h5UmVxdWVzdFwiXSA9IFwiTmV4dE5vZGVTZXJ2ZXIucHJveHlSZXF1ZXN0XCI7XG4gICAgTmV4dE5vZGVTZXJ2ZXJTcGFuW1wicnVuQXBpXCJdID0gXCJOZXh0Tm9kZVNlcnZlci5ydW5BcGlcIjtcbiAgICBOZXh0Tm9kZVNlcnZlclNwYW5bXCJyZW5kZXJcIl0gPSBcIk5leHROb2RlU2VydmVyLnJlbmRlclwiO1xuICAgIE5leHROb2RlU2VydmVyU3BhbltcInJlbmRlckhUTUxcIl0gPSBcIk5leHROb2RlU2VydmVyLnJlbmRlckhUTUxcIjtcbiAgICBOZXh0Tm9kZVNlcnZlclNwYW5bXCJpbWFnZU9wdGltaXplclwiXSA9IFwiTmV4dE5vZGVTZXJ2ZXIuaW1hZ2VPcHRpbWl6ZXJcIjtcbiAgICBOZXh0Tm9kZVNlcnZlclNwYW5bXCJnZXRQYWdlUGF0aFwiXSA9IFwiTmV4dE5vZGVTZXJ2ZXIuZ2V0UGFnZVBhdGhcIjtcbiAgICBOZXh0Tm9kZVNlcnZlclNwYW5bXCJnZXRSb3V0ZXNNYW5pZmVzdFwiXSA9IFwiTmV4dE5vZGVTZXJ2ZXIuZ2V0Um91dGVzTWFuaWZlc3RcIjtcbiAgICBOZXh0Tm9kZVNlcnZlclNwYW5bXCJmaW5kUGFnZUNvbXBvbmVudHNcIl0gPSBcIk5leHROb2RlU2VydmVyLmZpbmRQYWdlQ29tcG9uZW50c1wiO1xuICAgIE5leHROb2RlU2VydmVyU3BhbltcImdldEZvbnRNYW5pZmVzdFwiXSA9IFwiTmV4dE5vZGVTZXJ2ZXIuZ2V0Rm9udE1hbmlmZXN0XCI7XG4gICAgTmV4dE5vZGVTZXJ2ZXJTcGFuW1wiZ2V0U2VydmVyQ29tcG9uZW50TWFuaWZlc3RcIl0gPSBcIk5leHROb2RlU2VydmVyLmdldFNlcnZlckNvbXBvbmVudE1hbmlmZXN0XCI7XG4gICAgTmV4dE5vZGVTZXJ2ZXJTcGFuW1wiZ2V0UmVxdWVzdEhhbmRsZXJcIl0gPSBcIk5leHROb2RlU2VydmVyLmdldFJlcXVlc3RIYW5kbGVyXCI7XG4gICAgTmV4dE5vZGVTZXJ2ZXJTcGFuW1wicmVuZGVyVG9IVE1MXCJdID0gXCJOZXh0Tm9kZVNlcnZlci5yZW5kZXJUb0hUTUxcIjtcbiAgICBOZXh0Tm9kZVNlcnZlclNwYW5bXCJyZW5kZXJFcnJvclwiXSA9IFwiTmV4dE5vZGVTZXJ2ZXIucmVuZGVyRXJyb3JcIjtcbiAgICBOZXh0Tm9kZVNlcnZlclNwYW5bXCJyZW5kZXJFcnJvclRvSFRNTFwiXSA9IFwiTmV4dE5vZGVTZXJ2ZXIucmVuZGVyRXJyb3JUb0hUTUxcIjtcbiAgICBOZXh0Tm9kZVNlcnZlclNwYW5bXCJyZW5kZXI0MDRcIl0gPSBcIk5leHROb2RlU2VydmVyLnJlbmRlcjQwNFwiO1xuICAgIE5leHROb2RlU2VydmVyU3BhblsvLyBuZXN0ZWQgaW5uZXIgc3BhbiwgZG9lcyBub3QgcmVxdWlyZSBwYXJlbnQgc2NvcGUgbmFtZVxuICAgIFwicm91dGVcIl0gPSBcInJvdXRlXCI7XG4gICAgTmV4dE5vZGVTZXJ2ZXJTcGFuW1wib25Qcm94eVJlcVwiXSA9IFwib25Qcm94eVJlcVwiO1xuICAgIE5leHROb2RlU2VydmVyU3BhbltcImFwaVJlc29sdmVyXCJdID0gXCJhcGlSZXNvbHZlclwiO1xufSkoTmV4dE5vZGVTZXJ2ZXJTcGFuIHx8IChOZXh0Tm9kZVNlcnZlclNwYW4gPSB7fSkpO1xudmFyIFN0YXJ0U2VydmVyU3BhbjtcbihmdW5jdGlvbihTdGFydFNlcnZlclNwYW4pIHtcbiAgICBTdGFydFNlcnZlclNwYW5bXCJzdGFydFNlcnZlclwiXSA9IFwic3RhcnRTZXJ2ZXIuc3RhcnRTZXJ2ZXJcIjtcbn0pKFN0YXJ0U2VydmVyU3BhbiB8fCAoU3RhcnRTZXJ2ZXJTcGFuID0ge30pKTtcbnZhciBSZW5kZXJTcGFuO1xuKGZ1bmN0aW9uKFJlbmRlclNwYW4pIHtcbiAgICBSZW5kZXJTcGFuW1wiZ2V0U2VydmVyU2lkZVByb3BzXCJdID0gXCJSZW5kZXIuZ2V0U2VydmVyU2lkZVByb3BzXCI7XG4gICAgUmVuZGVyU3BhbltcImdldFN0YXRpY1Byb3BzXCJdID0gXCJSZW5kZXIuZ2V0U3RhdGljUHJvcHNcIjtcbiAgICBSZW5kZXJTcGFuW1wicmVuZGVyVG9TdHJpbmdcIl0gPSBcIlJlbmRlci5yZW5kZXJUb1N0cmluZ1wiO1xuICAgIFJlbmRlclNwYW5bXCJyZW5kZXJEb2N1bWVudFwiXSA9IFwiUmVuZGVyLnJlbmRlckRvY3VtZW50XCI7XG4gICAgUmVuZGVyU3BhbltcImNyZWF0ZUJvZHlSZXN1bHRcIl0gPSBcIlJlbmRlci5jcmVhdGVCb2R5UmVzdWx0XCI7XG59KShSZW5kZXJTcGFuIHx8IChSZW5kZXJTcGFuID0ge30pKTtcbnZhciBBcHBSZW5kZXJTcGFuO1xuKGZ1bmN0aW9uKEFwcFJlbmRlclNwYW4pIHtcbiAgICBBcHBSZW5kZXJTcGFuW1wicmVuZGVyVG9TdHJpbmdcIl0gPSBcIkFwcFJlbmRlci5yZW5kZXJUb1N0cmluZ1wiO1xuICAgIEFwcFJlbmRlclNwYW5bXCJyZW5kZXJUb1JlYWRhYmxlU3RyZWFtXCJdID0gXCJBcHBSZW5kZXIucmVuZGVyVG9SZWFkYWJsZVN0cmVhbVwiO1xuICAgIEFwcFJlbmRlclNwYW5bXCJnZXRCb2R5UmVzdWx0XCJdID0gXCJBcHBSZW5kZXIuZ2V0Qm9keVJlc3VsdFwiO1xuICAgIEFwcFJlbmRlclNwYW5bXCJmZXRjaFwiXSA9IFwiQXBwUmVuZGVyLmZldGNoXCI7XG59KShBcHBSZW5kZXJTcGFuIHx8IChBcHBSZW5kZXJTcGFuID0ge30pKTtcbnZhciBSb3V0ZXJTcGFuO1xuKGZ1bmN0aW9uKFJvdXRlclNwYW4pIHtcbiAgICBSb3V0ZXJTcGFuW1wiZXhlY3V0ZVJvdXRlXCJdID0gXCJSb3V0ZXIuZXhlY3V0ZVJvdXRlXCI7XG59KShSb3V0ZXJTcGFuIHx8IChSb3V0ZXJTcGFuID0ge30pKTtcbnZhciBOb2RlU3BhbjtcbihmdW5jdGlvbihOb2RlU3Bhbikge1xuICAgIE5vZGVTcGFuW1wicnVuSGFuZGxlclwiXSA9IFwiTm9kZS5ydW5IYW5kbGVyXCI7XG59KShOb2RlU3BhbiB8fCAoTm9kZVNwYW4gPSB7fSkpO1xudmFyIEFwcFJvdXRlUm91dGVIYW5kbGVyc1NwYW47XG4oZnVuY3Rpb24oQXBwUm91dGVSb3V0ZUhhbmRsZXJzU3Bhbikge1xuICAgIEFwcFJvdXRlUm91dGVIYW5kbGVyc1NwYW5bXCJydW5IYW5kbGVyXCJdID0gXCJBcHBSb3V0ZVJvdXRlSGFuZGxlcnMucnVuSGFuZGxlclwiO1xufSkoQXBwUm91dGVSb3V0ZUhhbmRsZXJzU3BhbiB8fCAoQXBwUm91dGVSb3V0ZUhhbmRsZXJzU3BhbiA9IHt9KSk7XG52YXIgUmVzb2x2ZU1ldGFkYXRhU3BhbjtcbihmdW5jdGlvbihSZXNvbHZlTWV0YWRhdGFTcGFuKSB7XG4gICAgUmVzb2x2ZU1ldGFkYXRhU3BhbltcImdlbmVyYXRlTWV0YWRhdGFcIl0gPSBcIlJlc29sdmVNZXRhZGF0YS5nZW5lcmF0ZU1ldGFkYXRhXCI7XG59KShSZXNvbHZlTWV0YWRhdGFTcGFuIHx8IChSZXNvbHZlTWV0YWRhdGFTcGFuID0ge30pKTtcbmNvbnN0IE5leHRWYW5pbGxhU3BhbkFsbG93bGlzdCA9IFtcbiAgICBcIkJhc2VTZXJ2ZXIuaGFuZGxlUmVxdWVzdFwiLFxuICAgIFwiUmVuZGVyLmdldFNlcnZlclNpZGVQcm9wc1wiLFxuICAgIFwiUmVuZGVyLmdldFN0YXRpY1Byb3BzXCIsXG4gICAgXCJBcHBSZW5kZXIuZmV0Y2hcIixcbiAgICBcIkFwcFJlbmRlci5nZXRCb2R5UmVzdWx0XCIsXG4gICAgXCJSZW5kZXIucmVuZGVyRG9jdW1lbnRcIixcbiAgICBcIk5vZGUucnVuSGFuZGxlclwiLFxuICAgIFwiQXBwUm91dGVSb3V0ZUhhbmRsZXJzLnJ1bkhhbmRsZXJcIixcbiAgICBcIlJlc29sdmVNZXRhZGF0YS5nZW5lcmF0ZU1ldGFkYXRhXCJcbl07XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWNvbnN0YW50cy5qcy5tYXAiXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJtb2R1bGUiLCJOZXh0VmFuaWxsYVNwYW5BbGxvd2xpc3QiLCJCYXNlU2VydmVyU3BhbiIsIkxvYWRDb21wb25lbnRzU3BhbiIsIk5leHRTZXJ2ZXJTcGFuIiwiTmV4dE5vZGVTZXJ2ZXJTcGFuIiwiU3RhcnRTZXJ2ZXJTcGFuIiwiUmVuZGVyU3BhbiIsIlJvdXRlclNwYW4iLCJBcHBSZW5kZXJTcGFuIiwiTm9kZVNwYW4iLCJBcHBSb3V0ZVJvdXRlSGFuZGxlcnNTcGFuIiwiUmVzb2x2ZU1ldGFkYXRhU3BhbiIsIl9leHBvcnQiLCJ0YXJnZXQiLCJhbGwiLCJuYW1lIiwiZW51bWVyYWJsZSIsImdldCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/next/dist/server/lib/trace/constants.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/next/dist/server/lib/trace/tracer.js":
/*!***********************************************************!*\
  !*** ./node_modules/next/dist/server/lib/trace/tracer.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\n0 && (0);\nfunction _export(target, all) {\n    for(var name in all)Object.defineProperty(target, name, {\n        enumerable: true,\n        get: all[name]\n    });\n}\n_export(exports, {\n    getTracer: function() {\n        return getTracer;\n    },\n    SpanStatusCode: function() {\n        return SpanStatusCode;\n    },\n    SpanKind: function() {\n        return SpanKind;\n    }\n});\nconst _constants = __webpack_require__(/*! ./constants */ \"(sc_server)/./node_modules/next/dist/server/lib/trace/constants.js\");\nlet api;\n// we want to allow users to use their own version of @opentelemetry/api if they\n// want to, so we try to require it first, and if it fails we fall back to the\n// version that is bundled with Next.js\n// this is because @opentelemetry/api has to be synced with the version of\n// @opentelemetry/tracing that is used, and we don't want to force users to use\n// the version that is bundled with Next.js.\n// the API is ~stable, so this should be fine\nif (false) {} else {\n    try {\n        api = __webpack_require__(/*! @opentelemetry/api */ \"(sc_server)/./node_modules/next/dist/compiled/@opentelemetry/api/index.js\");\n    } catch (err) {\n        api = __webpack_require__(/*! next/dist/compiled/@opentelemetry/api */ \"next/dist/compiled/@opentelemetry/api\");\n    }\n}\nconst { context , trace , SpanStatusCode , SpanKind  } = api;\nconst isPromise = (p)=>{\n    return p !== null && typeof p === \"object\" && typeof p.then === \"function\";\n};\nconst closeSpanWithError = (span, error)=>{\n    if (error) {\n        span.recordException(error);\n    }\n    span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: error == null ? void 0 : error.message\n    });\n    span.end();\n};\n/** we use this map to propagate attributes from nested spans to the top span */ const rootSpanAttributesStore = new Map();\nconst rootSpanIdKey = api.createContextKey(\"next.rootSpanId\");\nlet lastSpanId = 0;\nconst getSpanId = ()=>lastSpanId++;\nclass NextTracerImpl {\n    /**\n   * Returns an instance to the trace with configured name.\n   * Since wrap / trace can be defined in any place prior to actual trace subscriber initialization,\n   * This should be lazily evaluated.\n   */ getTracerInstance() {\n        return trace.getTracer(\"next.js\", \"0.0.1\");\n    }\n    getContext() {\n        return context;\n    }\n    getActiveScopeSpan() {\n        return trace.getSpan(context == null ? void 0 : context.active());\n    }\n    trace(...args) {\n        const [type, fnOrOptions, fnOrEmpty] = args;\n        // coerce options form overload\n        const { fn , options  } = typeof fnOrOptions === \"function\" ? {\n            fn: fnOrOptions,\n            options: {}\n        } : {\n            fn: fnOrEmpty,\n            options: {\n                ...fnOrOptions\n            }\n        };\n        if (!_constants.NextVanillaSpanAllowlist.includes(type) && process.env.NEXT_OTEL_VERBOSE !== \"1\" || options.hideSpan) {\n            return fn();\n        }\n        const spanName = options.spanName ?? type;\n        // Trying to get active scoped span to assign parent. If option specifies parent span manually, will try to use it.\n        let spanContext = this.getSpanContext((options == null ? void 0 : options.parentSpan) ?? this.getActiveScopeSpan());\n        let isRootSpan = false;\n        if (!spanContext) {\n            spanContext = api.ROOT_CONTEXT;\n            isRootSpan = true;\n        }\n        const spanId = getSpanId();\n        options.attributes = {\n            \"next.span_name\": spanName,\n            \"next.span_type\": type,\n            ...options.attributes\n        };\n        return api.context.with(spanContext.setValue(rootSpanIdKey, spanId), ()=>this.getTracerInstance().startActiveSpan(spanName, options, (span)=>{\n                const onCleanup = ()=>{\n                    rootSpanAttributesStore.delete(spanId);\n                };\n                if (isRootSpan) {\n                    rootSpanAttributesStore.set(spanId, new Map(Object.entries(options.attributes ?? {})));\n                }\n                try {\n                    if (fn.length > 1) {\n                        return fn(span, (err)=>closeSpanWithError(span, err));\n                    }\n                    const result = fn(span);\n                    if (isPromise(result)) {\n                        result.then(()=>span.end(), (err)=>closeSpanWithError(span, err)).finally(onCleanup);\n                    } else {\n                        span.end();\n                        onCleanup();\n                    }\n                    return result;\n                } catch (err) {\n                    closeSpanWithError(span, err);\n                    onCleanup();\n                    throw err;\n                }\n            }));\n    }\n    wrap(...args) {\n        const tracer = this;\n        const [name, options, fn] = args.length === 3 ? args : [\n            args[0],\n            {},\n            args[1]\n        ];\n        if (!_constants.NextVanillaSpanAllowlist.includes(name) && process.env.NEXT_OTEL_VERBOSE !== \"1\") {\n            return fn;\n        }\n        return function() {\n            let optionsObj = options;\n            if (typeof optionsObj === \"function\" && typeof fn === \"function\") {\n                optionsObj = optionsObj.apply(this, arguments);\n            }\n            const lastArgId = arguments.length - 1;\n            const cb = arguments[lastArgId];\n            if (typeof cb === \"function\") {\n                const scopeBoundCb = tracer.getContext().bind(context.active(), cb);\n                return tracer.trace(name, optionsObj, (_span, done)=>{\n                    arguments[lastArgId] = function(err) {\n                        done == null ? void 0 : done(err);\n                        return scopeBoundCb.apply(this, arguments);\n                    };\n                    return fn.apply(this, arguments);\n                });\n            } else {\n                return tracer.trace(name, optionsObj, ()=>fn.apply(this, arguments));\n            }\n        };\n    }\n    startSpan(...args) {\n        const [type, options] = args;\n        const spanContext = this.getSpanContext((options == null ? void 0 : options.parentSpan) ?? this.getActiveScopeSpan());\n        return this.getTracerInstance().startSpan(type, options, spanContext);\n    }\n    getSpanContext(parentSpan) {\n        const spanContext = parentSpan ? trace.setSpan(context.active(), parentSpan) : undefined;\n        return spanContext;\n    }\n    getRootSpanAttributes() {\n        const spanId = context.active().getValue(rootSpanIdKey);\n        return rootSpanAttributesStore.get(spanId);\n    }\n}\nconst getTracer = (()=>{\n    const tracer = new NextTracerImpl();\n    return ()=>tracer;\n})(); //# sourceMappingURL=tracer.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/next/dist/server/lib/trace/tracer.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/next/dist/server/node-polyfill-headers.js":
/*!****************************************************************!*\
  !*** ./node_modules/next/dist/server/node-polyfill-headers.js ***!
  \****************************************************************/
/***/ (() => {

"use strict";
eval("/**\n * Polyfills the `Headers.getAll(name)` method so it'll work in the edge\n * runtime.\n */ \nif (!(\"getAll\" in Headers.prototype)) {\n    // @ts-expect-error - this is polyfilling this method so it doesn't exist yet\n    Headers.prototype.getAll = function(name) {\n        name = name.toLowerCase();\n        if (name !== \"set-cookie\") throw new Error(\"Headers.getAll is only supported for Set-Cookie header\");\n        const headers = [\n            ...this.entries()\n        ].filter(([key])=>key === name);\n        return headers.map(([, value])=>value);\n    };\n} //# sourceMappingURL=node-polyfill-headers.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L3NlcnZlci9ub2RlLXBvbHlmaWxsLWhlYWRlcnMuanMiLCJtYXBwaW5ncyI6IkFBQUE7OztDQUdDLEdBQWdCO0FBQ2pCLElBQUksQ0FBRSxhQUFZQSxRQUFRQyxTQUFRLEdBQUk7SUFDbEMsNkVBQTZFO0lBQzdFRCxRQUFRQyxVQUFVQyxTQUFTLFNBQVNDLElBQUk7UUFDcENBLE9BQU9BLEtBQUtDO1FBQ1osSUFBSUQsU0FBUyxjQUFjLE1BQU0sSUFBSUUsTUFBTTtRQUMzQyxNQUFNQyxVQUFVO2VBQ1QsSUFBSSxDQUFDQztTQUNYLENBQUNDLE9BQU8sQ0FBQyxDQUFDQyxJQUFJLEdBQUdBLFFBQVFOO1FBQzFCLE9BQU9HLFFBQVFJLElBQUksQ0FBQyxHQUFHQyxNQUFNLEdBQUdBO0lBQ3BDO0FBQ0osRUFFQSxpREFBaUQiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mdWxsc3RhY2stcm9sZS1iYXNlZC1uZXh0anMtMi8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3Qvc2VydmVyL25vZGUtcG9seWZpbGwtaGVhZGVycy5qcz85NWI4Il0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogUG9seWZpbGxzIHRoZSBgSGVhZGVycy5nZXRBbGwobmFtZSlgIG1ldGhvZCBzbyBpdCdsbCB3b3JrIGluIHRoZSBlZGdlXG4gKiBydW50aW1lLlxuICovIFwidXNlIHN0cmljdFwiO1xuaWYgKCEoXCJnZXRBbGxcIiBpbiBIZWFkZXJzLnByb3RvdHlwZSkpIHtcbiAgICAvLyBAdHMtZXhwZWN0LWVycm9yIC0gdGhpcyBpcyBwb2x5ZmlsbGluZyB0aGlzIG1ldGhvZCBzbyBpdCBkb2Vzbid0IGV4aXN0IHlldFxuICAgIEhlYWRlcnMucHJvdG90eXBlLmdldEFsbCA9IGZ1bmN0aW9uKG5hbWUpIHtcbiAgICAgICAgbmFtZSA9IG5hbWUudG9Mb3dlckNhc2UoKTtcbiAgICAgICAgaWYgKG5hbWUgIT09IFwic2V0LWNvb2tpZVwiKSB0aHJvdyBuZXcgRXJyb3IoXCJIZWFkZXJzLmdldEFsbCBpcyBvbmx5IHN1cHBvcnRlZCBmb3IgU2V0LUNvb2tpZSBoZWFkZXJcIik7XG4gICAgICAgIGNvbnN0IGhlYWRlcnMgPSBbXG4gICAgICAgICAgICAuLi50aGlzLmVudHJpZXMoKVxuICAgICAgICBdLmZpbHRlcigoW2tleV0pPT5rZXkgPT09IG5hbWUpO1xuICAgICAgICByZXR1cm4gaGVhZGVycy5tYXAoKFssIHZhbHVlXSk9PnZhbHVlKTtcbiAgICB9O1xufVxuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1ub2RlLXBvbHlmaWxsLWhlYWRlcnMuanMubWFwIl0sIm5hbWVzIjpbIkhlYWRlcnMiLCJwcm90b3R5cGUiLCJnZXRBbGwiLCJuYW1lIiwidG9Mb3dlckNhc2UiLCJFcnJvciIsImhlYWRlcnMiLCJlbnRyaWVzIiwiZmlsdGVyIiwia2V5IiwibWFwIiwidmFsdWUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/next/dist/server/node-polyfill-headers.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/next/dist/server/web/http.js":
/*!***************************************************!*\
  !*** ./node_modules/next/dist/server/web/http.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("/**\n * List of valid HTTP methods that can be implemented by Next.js's Custom App\n * Routes.\n */ \nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\n0 && (0);\nfunction _export(target, all) {\n    for(var name in all)Object.defineProperty(target, name, {\n        enumerable: true,\n        get: all[name]\n    });\n}\n_export(exports, {\n    HTTP_METHODS: function() {\n        return HTTP_METHODS;\n    },\n    isHTTPMethod: function() {\n        return isHTTPMethod;\n    }\n});\nconst HTTP_METHODS = [\n    \"GET\",\n    \"HEAD\",\n    \"OPTIONS\",\n    \"POST\",\n    \"PUT\",\n    \"DELETE\",\n    \"PATCH\"\n];\nfunction isHTTPMethod(maybeMethod) {\n    return HTTP_METHODS.includes(maybeMethod);\n} //# sourceMappingURL=http.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L3NlcnZlci93ZWIvaHR0cC5qcyIsIm1hcHBpbmdzIjoiQUFBQTs7O0NBR0MsR0FBZ0I7QUFDakJBLDhDQUE2QztJQUN6Q0csT0FBTztBQUNYLENBQUMsRUFBQztBQUNGLEtBQU1DLENBQUFBLENBR047QUFDQSxTQUFTRyxRQUFRQyxNQUFNLEVBQUVDLEdBQUc7SUFDeEIsSUFBSSxJQUFJQyxRQUFRRCxJQUFJVCxPQUFPQyxlQUFlTyxRQUFRRSxNQUFNO1FBQ3BEQyxZQUFZO1FBQ1pDLEtBQUtILEdBQUcsQ0FBQ0MsS0FBSztJQUNsQjtBQUNKO0FBQ0FILFFBQVFMLFNBQVM7SUFDYkcsY0FBYztRQUNWLE9BQU9BO0lBQ1g7SUFDQUMsY0FBYztRQUNWLE9BQU9BO0lBQ1g7QUFDSjtBQUNBLE1BQU1ELGVBQWU7SUFDakI7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7Q0FDSDtBQUNELFNBQVNDLGFBQWFPLFdBQVc7SUFDN0IsT0FBT1IsYUFBYVMsU0FBU0Q7QUFDakMsRUFFQSxnQ0FBZ0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mdWxsc3RhY2stcm9sZS1iYXNlZC1uZXh0anMtMi8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3Qvc2VydmVyL3dlYi9odHRwLmpzP2UwY2MiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBMaXN0IG9mIHZhbGlkIEhUVFAgbWV0aG9kcyB0aGF0IGNhbiBiZSBpbXBsZW1lbnRlZCBieSBOZXh0LmpzJ3MgQ3VzdG9tIEFwcFxuICogUm91dGVzLlxuICovIFwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gICAgdmFsdWU6IHRydWVcbn0pO1xuMCAmJiAobW9kdWxlLmV4cG9ydHMgPSB7XG4gICAgSFRUUF9NRVRIT0RTOiBudWxsLFxuICAgIGlzSFRUUE1ldGhvZDogbnVsbFxufSk7XG5mdW5jdGlvbiBfZXhwb3J0KHRhcmdldCwgYWxsKSB7XG4gICAgZm9yKHZhciBuYW1lIGluIGFsbClPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBuYW1lLCB7XG4gICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgIGdldDogYWxsW25hbWVdXG4gICAgfSk7XG59XG5fZXhwb3J0KGV4cG9ydHMsIHtcbiAgICBIVFRQX01FVEhPRFM6IGZ1bmN0aW9uKCkge1xuICAgICAgICByZXR1cm4gSFRUUF9NRVRIT0RTO1xuICAgIH0sXG4gICAgaXNIVFRQTWV0aG9kOiBmdW5jdGlvbigpIHtcbiAgICAgICAgcmV0dXJuIGlzSFRUUE1ldGhvZDtcbiAgICB9XG59KTtcbmNvbnN0IEhUVFBfTUVUSE9EUyA9IFtcbiAgICBcIkdFVFwiLFxuICAgIFwiSEVBRFwiLFxuICAgIFwiT1BUSU9OU1wiLFxuICAgIFwiUE9TVFwiLFxuICAgIFwiUFVUXCIsXG4gICAgXCJERUxFVEVcIixcbiAgICBcIlBBVENIXCJcbl07XG5mdW5jdGlvbiBpc0hUVFBNZXRob2QobWF5YmVNZXRob2QpIHtcbiAgICByZXR1cm4gSFRUUF9NRVRIT0RTLmluY2x1ZGVzKG1heWJlTWV0aG9kKTtcbn1cblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aHR0cC5qcy5tYXAiXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJtb2R1bGUiLCJIVFRQX01FVEhPRFMiLCJpc0hUVFBNZXRob2QiLCJfZXhwb3J0IiwidGFyZ2V0IiwiYWxsIiwibmFtZSIsImVudW1lcmFibGUiLCJnZXQiLCJtYXliZU1ldGhvZCIsImluY2x1ZGVzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/next/dist/server/web/http.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/next/dist/server/web/next-url.js":
/*!*******************************************************!*\
  !*** ./node_modules/next/dist/server/web/next-url.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nObject.defineProperty(exports, \"NextURL\", ({\n    enumerable: true,\n    get: function() {\n        return NextURL;\n    }\n}));\nconst _detectdomainlocale = __webpack_require__(/*! ../../shared/lib/i18n/detect-domain-locale */ \"(sc_server)/./node_modules/next/dist/shared/lib/i18n/detect-domain-locale.js\");\nconst _formatnextpathnameinfo = __webpack_require__(/*! ../../shared/lib/router/utils/format-next-pathname-info */ \"(sc_server)/./node_modules/next/dist/shared/lib/router/utils/format-next-pathname-info.js\");\nconst _gethostname = __webpack_require__(/*! ../../shared/lib/get-hostname */ \"(sc_server)/./node_modules/next/dist/shared/lib/get-hostname.js\");\nconst _getnextpathnameinfo = __webpack_require__(/*! ../../shared/lib/router/utils/get-next-pathname-info */ \"(sc_server)/./node_modules/next/dist/shared/lib/router/utils/get-next-pathname-info.js\");\nconst REGEX_LOCALHOST_HOSTNAME = /(?!^https?:\\/\\/)(127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}|::1|localhost)/;\nfunction parseURL(url, base) {\n    return new URL(String(url).replace(REGEX_LOCALHOST_HOSTNAME, \"localhost\"), base && String(base).replace(REGEX_LOCALHOST_HOSTNAME, \"localhost\"));\n}\nconst Internal = Symbol(\"NextURLInternal\");\nclass NextURL {\n    constructor(input, baseOrOpts, opts){\n        let base;\n        let options;\n        if (typeof baseOrOpts === \"object\" && \"pathname\" in baseOrOpts || typeof baseOrOpts === \"string\") {\n            base = baseOrOpts;\n            options = opts || {};\n        } else {\n            options = opts || baseOrOpts || {};\n        }\n        this[Internal] = {\n            url: parseURL(input, base ?? options.base),\n            options: options,\n            basePath: \"\"\n        };\n        this.analyze();\n    }\n    analyze() {\n        var _this_Internal_options_nextConfig, _this_Internal_options_nextConfig_i18n, _this_Internal_domainLocale, _this_Internal_options_nextConfig1, _this_Internal_options_nextConfig_i18n1;\n        const info = (0, _getnextpathnameinfo.getNextPathnameInfo)(this[Internal].url.pathname, {\n            nextConfig: this[Internal].options.nextConfig,\n            parseData: !undefined,\n            i18nProvider: this[Internal].options.i18nProvider\n        });\n        const hostname = (0, _gethostname.getHostname)(this[Internal].url, this[Internal].options.headers);\n        this[Internal].domainLocale = this[Internal].options.i18nProvider ? this[Internal].options.i18nProvider.detectDomainLocale(hostname) : (0, _detectdomainlocale.detectDomainLocale)((_this_Internal_options_nextConfig = this[Internal].options.nextConfig) == null ? void 0 : (_this_Internal_options_nextConfig_i18n = _this_Internal_options_nextConfig.i18n) == null ? void 0 : _this_Internal_options_nextConfig_i18n.domains, hostname);\n        const defaultLocale = ((_this_Internal_domainLocale = this[Internal].domainLocale) == null ? void 0 : _this_Internal_domainLocale.defaultLocale) || ((_this_Internal_options_nextConfig1 = this[Internal].options.nextConfig) == null ? void 0 : (_this_Internal_options_nextConfig_i18n1 = _this_Internal_options_nextConfig1.i18n) == null ? void 0 : _this_Internal_options_nextConfig_i18n1.defaultLocale);\n        this[Internal].url.pathname = info.pathname;\n        this[Internal].defaultLocale = defaultLocale;\n        this[Internal].basePath = info.basePath ?? \"\";\n        this[Internal].buildId = info.buildId;\n        this[Internal].locale = info.locale ?? defaultLocale;\n        this[Internal].trailingSlash = info.trailingSlash;\n    }\n    formatPathname() {\n        return (0, _formatnextpathnameinfo.formatNextPathnameInfo)({\n            basePath: this[Internal].basePath,\n            buildId: this[Internal].buildId,\n            defaultLocale: !this[Internal].options.forceLocale ? this[Internal].defaultLocale : undefined,\n            locale: this[Internal].locale,\n            pathname: this[Internal].url.pathname,\n            trailingSlash: this[Internal].trailingSlash\n        });\n    }\n    formatSearch() {\n        return this[Internal].url.search;\n    }\n    get buildId() {\n        return this[Internal].buildId;\n    }\n    set buildId(buildId) {\n        this[Internal].buildId = buildId;\n    }\n    get locale() {\n        return this[Internal].locale ?? \"\";\n    }\n    set locale(locale) {\n        var _this_Internal_options_nextConfig, _this_Internal_options_nextConfig_i18n;\n        if (!this[Internal].locale || !((_this_Internal_options_nextConfig = this[Internal].options.nextConfig) == null ? void 0 : (_this_Internal_options_nextConfig_i18n = _this_Internal_options_nextConfig.i18n) == null ? void 0 : _this_Internal_options_nextConfig_i18n.locales.includes(locale))) {\n            throw new TypeError(`The NextURL configuration includes no locale \"${locale}\"`);\n        }\n        this[Internal].locale = locale;\n    }\n    get defaultLocale() {\n        return this[Internal].defaultLocale;\n    }\n    get domainLocale() {\n        return this[Internal].domainLocale;\n    }\n    get searchParams() {\n        return this[Internal].url.searchParams;\n    }\n    get host() {\n        return this[Internal].url.host;\n    }\n    set host(value) {\n        this[Internal].url.host = value;\n    }\n    get hostname() {\n        return this[Internal].url.hostname;\n    }\n    set hostname(value) {\n        this[Internal].url.hostname = value;\n    }\n    get port() {\n        return this[Internal].url.port;\n    }\n    set port(value) {\n        this[Internal].url.port = value;\n    }\n    get protocol() {\n        return this[Internal].url.protocol;\n    }\n    set protocol(value) {\n        this[Internal].url.protocol = value;\n    }\n    get href() {\n        const pathname = this.formatPathname();\n        const search = this.formatSearch();\n        return `${this.protocol}//${this.host}${pathname}${search}${this.hash}`;\n    }\n    set href(url) {\n        this[Internal].url = parseURL(url);\n        this.analyze();\n    }\n    get origin() {\n        return this[Internal].url.origin;\n    }\n    get pathname() {\n        return this[Internal].url.pathname;\n    }\n    set pathname(value) {\n        this[Internal].url.pathname = value;\n    }\n    get hash() {\n        return this[Internal].url.hash;\n    }\n    set hash(value) {\n        this[Internal].url.hash = value;\n    }\n    get search() {\n        return this[Internal].url.search;\n    }\n    set search(value) {\n        this[Internal].url.search = value;\n    }\n    get password() {\n        return this[Internal].url.password;\n    }\n    set password(value) {\n        this[Internal].url.password = value;\n    }\n    get username() {\n        return this[Internal].url.username;\n    }\n    set username(value) {\n        this[Internal].url.username = value;\n    }\n    get basePath() {\n        return this[Internal].basePath;\n    }\n    set basePath(value) {\n        this[Internal].basePath = value.startsWith(\"/\") ? value : `/${value}`;\n    }\n    toString() {\n        return this.href;\n    }\n    toJSON() {\n        return this.href;\n    }\n    [Symbol.for(\"edge-runtime.inspect.custom\")]() {\n        return {\n            href: this.href,\n            origin: this.origin,\n            protocol: this.protocol,\n            username: this.username,\n            password: this.password,\n            host: this.host,\n            hostname: this.hostname,\n            port: this.port,\n            pathname: this.pathname,\n            search: this.search,\n            searchParams: this.searchParams,\n            hash: this.hash\n        };\n    }\n    clone() {\n        return new NextURL(String(this), this[Internal].options);\n    }\n} //# sourceMappingURL=next-url.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/next/dist/server/web/next-url.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/next/dist/server/web/spec-extension/adapters/headers.js":
/*!******************************************************************************!*\
  !*** ./node_modules/next/dist/server/web/spec-extension/adapters/headers.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\n0 && (0);\nfunction _export(target, all) {\n    for(var name in all)Object.defineProperty(target, name, {\n        enumerable: true,\n        get: all[name]\n    });\n}\n_export(exports, {\n    ReadonlyHeadersError: function() {\n        return ReadonlyHeadersError;\n    },\n    HeadersAdapter: function() {\n        return HeadersAdapter;\n    }\n});\nconst _reflect = __webpack_require__(/*! ./reflect */ \"(sc_server)/./node_modules/next/dist/server/web/spec-extension/adapters/reflect.js\");\nclass ReadonlyHeadersError extends Error {\n    constructor(){\n        super(\"Headers cannot be modified. Read more: https://nextjs.org/docs/api-reference/headers\");\n    }\n    static callable() {\n        throw new ReadonlyHeadersError();\n    }\n}\nclass HeadersAdapter extends Headers {\n    constructor(headers){\n        // We've already overridden the methods that would be called, so we're just\n        // calling the super constructor to ensure that the instanceof check works.\n        super();\n        this.headers = new Proxy(headers, {\n            get (target, prop, receiver) {\n                // Because this is just an object, we expect that all \"get\" operations\n                // are for properties. If it's a \"get\" for a symbol, we'll just return\n                // the symbol.\n                if (typeof prop === \"symbol\") {\n                    return _reflect.ReflectAdapter.get(target, prop, receiver);\n                }\n                const lowercased = prop.toLowerCase();\n                // Let's find the original casing of the key. This assumes that there is\n                // no mixed case keys (e.g. \"Content-Type\" and \"content-type\") in the\n                // headers object.\n                const original = Object.keys(headers).find((o)=>o.toLowerCase() === lowercased);\n                // If the original casing doesn't exist, return undefined.\n                if (typeof original === \"undefined\") return;\n                // If the original casing exists, return the value.\n                return _reflect.ReflectAdapter.get(target, original, receiver);\n            },\n            set (target, prop, value, receiver) {\n                if (typeof prop === \"symbol\") {\n                    return _reflect.ReflectAdapter.set(target, prop, value, receiver);\n                }\n                const lowercased = prop.toLowerCase();\n                // Let's find the original casing of the key. This assumes that there is\n                // no mixed case keys (e.g. \"Content-Type\" and \"content-type\") in the\n                // headers object.\n                const original = Object.keys(headers).find((o)=>o.toLowerCase() === lowercased);\n                // If the original casing doesn't exist, use the prop as the key.\n                return _reflect.ReflectAdapter.set(target, original ?? prop, value, receiver);\n            },\n            has (target, prop) {\n                if (typeof prop === \"symbol\") return _reflect.ReflectAdapter.has(target, prop);\n                const lowercased = prop.toLowerCase();\n                // Let's find the original casing of the key. This assumes that there is\n                // no mixed case keys (e.g. \"Content-Type\" and \"content-type\") in the\n                // headers object.\n                const original = Object.keys(headers).find((o)=>o.toLowerCase() === lowercased);\n                // If the original casing doesn't exist, return false.\n                if (typeof original === \"undefined\") return false;\n                // If the original casing exists, return true.\n                return _reflect.ReflectAdapter.has(target, original);\n            },\n            deleteProperty (target, prop) {\n                if (typeof prop === \"symbol\") return _reflect.ReflectAdapter.deleteProperty(target, prop);\n                const lowercased = prop.toLowerCase();\n                // Let's find the original casing of the key. This assumes that there is\n                // no mixed case keys (e.g. \"Content-Type\" and \"content-type\") in the\n                // headers object.\n                const original = Object.keys(headers).find((o)=>o.toLowerCase() === lowercased);\n                // If the original casing doesn't exist, return true.\n                if (typeof original === \"undefined\") return true;\n                // If the original casing exists, delete the property.\n                return _reflect.ReflectAdapter.deleteProperty(target, original);\n            }\n        });\n    }\n    /**\n   * Seals a Headers instance to prevent modification by throwing an error when\n   * any mutating method is called.\n   */ static seal(headers) {\n        return new Proxy(headers, {\n            get (target, prop, receiver) {\n                switch(prop){\n                    case \"append\":\n                    case \"delete\":\n                    case \"set\":\n                        return ReadonlyHeadersError.callable;\n                    default:\n                        return _reflect.ReflectAdapter.get(target, prop, receiver);\n                }\n            }\n        });\n    }\n    /**\n   * Merges a header value into a string. This stores multiple values as an\n   * array, so we need to merge them into a string.\n   *\n   * @param value a header value\n   * @returns a merged header value (a string)\n   */ merge(value) {\n        if (Array.isArray(value)) return value.join(\", \");\n        return value;\n    }\n    /**\n   * Creates a Headers instance from a plain object or a Headers instance.\n   *\n   * @param headers a plain object or a Headers instance\n   * @returns a headers instance\n   */ static from(headers) {\n        if (headers instanceof Headers) return headers;\n        return new HeadersAdapter(headers);\n    }\n    append(name, value) {\n        const existing = this.headers[name];\n        if (typeof existing === \"string\") {\n            this.headers[name] = [\n                existing,\n                value\n            ];\n        } else if (Array.isArray(existing)) {\n            existing.push(value);\n        } else {\n            this.headers[name] = value;\n        }\n    }\n    delete(name) {\n        delete this.headers[name];\n    }\n    get(name) {\n        const value = this.headers[name];\n        if (typeof value !== \"undefined\") return this.merge(value);\n        return null;\n    }\n    has(name) {\n        return typeof this.headers[name] !== \"undefined\";\n    }\n    set(name, value) {\n        this.headers[name] = value;\n    }\n    forEach(callbackfn, thisArg) {\n        for (const [name, value] of this.entries()){\n            callbackfn.call(thisArg, value, name, this);\n        }\n    }\n    *entries() {\n        for (const key of Object.keys(this.headers)){\n            const name = key.toLowerCase();\n            // We assert here that this is a string because we got it from the\n            // Object.keys() call above.\n            const value = this.get(name);\n            yield [\n                name,\n                value\n            ];\n        }\n    }\n    *keys() {\n        for (const key of Object.keys(this.headers)){\n            const name = key.toLowerCase();\n            yield name;\n        }\n    }\n    *values() {\n        for (const key of Object.keys(this.headers)){\n            // We assert here that this is a string because we got it from the\n            // Object.keys() call above.\n            const value = this.get(key);\n            yield value;\n        }\n    }\n    [Symbol.iterator]() {\n        return this.entries();\n    }\n} //# sourceMappingURL=headers.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L3NlcnZlci93ZWIvc3BlYy1leHRlbnNpb24vYWRhcHRlcnMvaGVhZGVycy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFDekNHLE9BQU87QUFDWCxDQUFDLEVBQUM7QUFDRixLQUFNQyxDQUFBQSxDQUdOO0FBQ0EsU0FBU0csUUFBUUMsTUFBTSxFQUFFQyxHQUFHO0lBQ3hCLElBQUksSUFBSUMsUUFBUUQsSUFBSVQsT0FBT0MsZUFBZU8sUUFBUUUsTUFBTTtRQUNwREMsWUFBWTtRQUNaQyxLQUFLSCxHQUFHLENBQUNDLEtBQUs7SUFDbEI7QUFDSjtBQUNBSCxRQUFRTCxTQUFTO0lBQ2JHLHNCQUFzQjtRQUNsQixPQUFPQTtJQUNYO0lBQ0FDLGdCQUFnQjtRQUNaLE9BQU9BO0lBQ1g7QUFDSjtBQUNBLE1BQU1PLFdBQVdDLG1CQUFPQSxDQUFDLHFHQUFXO0FBQ3BDLE1BQU1ULDZCQUE2QlU7SUFDL0JDLGFBQWE7UUFDVCxLQUFLLENBQUM7SUFDVjtJQUNBLE9BQU9DLFdBQVc7UUFDZCxNQUFNLElBQUlaO0lBQ2Q7QUFDSjtBQUNBLE1BQU1DLHVCQUF1Qlk7SUFDekJGLFlBQVlHLE9BQU8sQ0FBQztRQUNoQiwyRUFBMkU7UUFDM0UsMkVBQTJFO1FBQzNFLEtBQUs7UUFDTCxJQUFJLENBQUNBLFVBQVUsSUFBSUMsTUFBTUQsU0FBUztZQUM5QlAsS0FBS0osTUFBTSxFQUFFYSxJQUFJLEVBQUVDLFFBQVE7Z0JBQ3ZCLHNFQUFzRTtnQkFDdEUsc0VBQXNFO2dCQUN0RSxjQUFjO2dCQUNkLElBQUksT0FBT0QsU0FBUyxVQUFVO29CQUMxQixPQUFPUixTQUFTVSxlQUFlWCxJQUFJSixRQUFRYSxNQUFNQztnQkFDckQ7Z0JBQ0EsTUFBTUUsYUFBYUgsS0FBS0k7Z0JBQ3hCLHdFQUF3RTtnQkFDeEUscUVBQXFFO2dCQUNyRSxrQkFBa0I7Z0JBQ2xCLE1BQU1DLFdBQVcxQixPQUFPMkIsS0FBS1IsU0FBU1MsS0FBSyxDQUFDQyxJQUFJQSxFQUFFSixrQkFBa0JEO2dCQUNwRSwwREFBMEQ7Z0JBQzFELElBQUksT0FBT0UsYUFBYSxhQUFhO2dCQUNyQyxtREFBbUQ7Z0JBQ25ELE9BQU9iLFNBQVNVLGVBQWVYLElBQUlKLFFBQVFrQixVQUFVSjtZQUN6RDtZQUNBUSxLQUFLdEIsTUFBTSxFQUFFYSxJQUFJLEVBQUVsQixLQUFLLEVBQUVtQixRQUFRO2dCQUM5QixJQUFJLE9BQU9ELFNBQVMsVUFBVTtvQkFDMUIsT0FBT1IsU0FBU1UsZUFBZU8sSUFBSXRCLFFBQVFhLE1BQU1sQixPQUFPbUI7Z0JBQzVEO2dCQUNBLE1BQU1FLGFBQWFILEtBQUtJO2dCQUN4Qix3RUFBd0U7Z0JBQ3hFLHFFQUFxRTtnQkFDckUsa0JBQWtCO2dCQUNsQixNQUFNQyxXQUFXMUIsT0FBTzJCLEtBQUtSLFNBQVNTLEtBQUssQ0FBQ0MsSUFBSUEsRUFBRUosa0JBQWtCRDtnQkFDcEUsaUVBQWlFO2dCQUNqRSxPQUFPWCxTQUFTVSxlQUFlTyxJQUFJdEIsUUFBUWtCLFlBQVlMLE1BQU1sQixPQUFPbUI7WUFDeEU7WUFDQVMsS0FBS3ZCLE1BQU0sRUFBRWEsSUFBSTtnQkFDYixJQUFJLE9BQU9BLFNBQVMsVUFBVSxPQUFPUixTQUFTVSxlQUFlUSxJQUFJdkIsUUFBUWE7Z0JBQ3pFLE1BQU1HLGFBQWFILEtBQUtJO2dCQUN4Qix3RUFBd0U7Z0JBQ3hFLHFFQUFxRTtnQkFDckUsa0JBQWtCO2dCQUNsQixNQUFNQyxXQUFXMUIsT0FBTzJCLEtBQUtSLFNBQVNTLEtBQUssQ0FBQ0MsSUFBSUEsRUFBRUosa0JBQWtCRDtnQkFDcEUsc0RBQXNEO2dCQUN0RCxJQUFJLE9BQU9FLGFBQWEsYUFBYSxPQUFPO2dCQUM1Qyw4Q0FBOEM7Z0JBQzlDLE9BQU9iLFNBQVNVLGVBQWVRLElBQUl2QixRQUFRa0I7WUFDL0M7WUFDQU0sZ0JBQWdCeEIsTUFBTSxFQUFFYSxJQUFJO2dCQUN4QixJQUFJLE9BQU9BLFNBQVMsVUFBVSxPQUFPUixTQUFTVSxlQUFlUyxlQUFleEIsUUFBUWE7Z0JBQ3BGLE1BQU1HLGFBQWFILEtBQUtJO2dCQUN4Qix3RUFBd0U7Z0JBQ3hFLHFFQUFxRTtnQkFDckUsa0JBQWtCO2dCQUNsQixNQUFNQyxXQUFXMUIsT0FBTzJCLEtBQUtSLFNBQVNTLEtBQUssQ0FBQ0MsSUFBSUEsRUFBRUosa0JBQWtCRDtnQkFDcEUscURBQXFEO2dCQUNyRCxJQUFJLE9BQU9FLGFBQWEsYUFBYSxPQUFPO2dCQUM1QyxzREFBc0Q7Z0JBQ3RELE9BQU9iLFNBQVNVLGVBQWVTLGVBQWV4QixRQUFRa0I7WUFDMUQ7UUFDSjtJQUNKO0lBQ0E7OztHQUdELEdBQUcsT0FBT08sS0FBS2QsT0FBTyxFQUFFO1FBQ25CLE9BQU8sSUFBSUMsTUFBTUQsU0FBUztZQUN0QlAsS0FBS0osTUFBTSxFQUFFYSxJQUFJLEVBQUVDLFFBQVE7Z0JBQ3ZCLE9BQU9EO29CQUNILEtBQUs7b0JBQ0wsS0FBSztvQkFDTCxLQUFLO3dCQUNELE9BQU9oQixxQkFBcUJZO29CQUNoQzt3QkFDSSxPQUFPSixTQUFTVSxlQUFlWCxJQUFJSixRQUFRYSxNQUFNQztnQkFDekQ7WUFDSjtRQUNKO0lBQ0o7SUFDQTs7Ozs7O0dBTUQsR0FBR1ksTUFBTS9CLEtBQUssRUFBRTtRQUNYLElBQUlnQyxNQUFNQyxRQUFRakMsUUFBUSxPQUFPQSxNQUFNa0MsS0FBSztRQUM1QyxPQUFPbEM7SUFDWDtJQUNBOzs7OztHQUtELEdBQUcsT0FBT21DLEtBQUtuQixPQUFPLEVBQUU7UUFDbkIsSUFBSUEsbUJBQW1CRCxTQUFTLE9BQU9DO1FBQ3ZDLE9BQU8sSUFBSWIsZUFBZWE7SUFDOUI7SUFDQW9CLE9BQU83QixJQUFJLEVBQUVQLEtBQUssRUFBRTtRQUNoQixNQUFNcUMsV0FBVyxJQUFJLENBQUNyQixPQUFPLENBQUNULEtBQUs7UUFDbkMsSUFBSSxPQUFPOEIsYUFBYSxVQUFVO1lBQzlCLElBQUksQ0FBQ3JCLE9BQU8sQ0FBQ1QsS0FBSyxHQUFHO2dCQUNqQjhCO2dCQUNBckM7YUFDSDtRQUNMLE9BQU8sSUFBSWdDLE1BQU1DLFFBQVFJLFdBQVc7WUFDaENBLFNBQVNDLEtBQUt0QztRQUNsQixPQUFPO1lBQ0gsSUFBSSxDQUFDZ0IsT0FBTyxDQUFDVCxLQUFLLEdBQUdQO1FBQ3pCO0lBQ0o7SUFDQXVDLE9BQU9oQyxJQUFJLEVBQUU7UUFDVCxPQUFPLElBQUksQ0FBQ1MsT0FBTyxDQUFDVCxLQUFLO0lBQzdCO0lBQ0FFLElBQUlGLElBQUksRUFBRTtRQUNOLE1BQU1QLFFBQVEsSUFBSSxDQUFDZ0IsT0FBTyxDQUFDVCxLQUFLO1FBQ2hDLElBQUksT0FBT1AsVUFBVSxhQUFhLE9BQU8sSUFBSSxDQUFDK0IsTUFBTS9CO1FBQ3BELE9BQU87SUFDWDtJQUNBNEIsSUFBSXJCLElBQUksRUFBRTtRQUNOLE9BQU8sT0FBTyxJQUFJLENBQUNTLE9BQU8sQ0FBQ1QsS0FBSyxLQUFLO0lBQ3pDO0lBQ0FvQixJQUFJcEIsSUFBSSxFQUFFUCxLQUFLLEVBQUU7UUFDYixJQUFJLENBQUNnQixPQUFPLENBQUNULEtBQUssR0FBR1A7SUFDekI7SUFDQXdDLFFBQVFDLFVBQVUsRUFBRUMsT0FBTyxFQUFFO1FBQ3pCLEtBQUssTUFBTSxDQUFDbkMsTUFBTVAsTUFBTSxJQUFJLElBQUksQ0FBQzJDLFVBQVU7WUFDdkNGLFdBQVdHLEtBQUtGLFNBQVMxQyxPQUFPTyxNQUFNLElBQUk7UUFDOUM7SUFDSjtJQUNBLENBQUNvQyxVQUFVO1FBQ1AsS0FBSyxNQUFNRSxPQUFPaEQsT0FBTzJCLEtBQUssSUFBSSxDQUFDUixTQUFTO1lBQ3hDLE1BQU1ULE9BQU9zQyxJQUFJdkI7WUFDakIsa0VBQWtFO1lBQ2xFLDRCQUE0QjtZQUM1QixNQUFNdEIsUUFBUSxJQUFJLENBQUNTLElBQUlGO1lBQ3ZCLE1BQU07Z0JBQ0ZBO2dCQUNBUDthQUNIO1FBQ0w7SUFDSjtJQUNBLENBQUN3QixPQUFPO1FBQ0osS0FBSyxNQUFNcUIsT0FBT2hELE9BQU8yQixLQUFLLElBQUksQ0FBQ1IsU0FBUztZQUN4QyxNQUFNVCxPQUFPc0MsSUFBSXZCO1lBQ2pCLE1BQU1mO1FBQ1Y7SUFDSjtJQUNBLENBQUN1QyxTQUFTO1FBQ04sS0FBSyxNQUFNRCxPQUFPaEQsT0FBTzJCLEtBQUssSUFBSSxDQUFDUixTQUFTO1lBQ3hDLGtFQUFrRTtZQUNsRSw0QkFBNEI7WUFDNUIsTUFBTWhCLFFBQVEsSUFBSSxDQUFDUyxJQUFJb0M7WUFDdkIsTUFBTTdDO1FBQ1Y7SUFDSjtJQUNBLENBQUMrQyxPQUFPQyxTQUFTLEdBQUc7UUFDaEIsT0FBTyxJQUFJLENBQUNMO0lBQ2hCO0FBQ0osRUFFQSxtQ0FBbUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mdWxsc3RhY2stcm9sZS1iYXNlZC1uZXh0anMtMi8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3Qvc2VydmVyL3dlYi9zcGVjLWV4dGVuc2lvbi9hZGFwdGVycy9oZWFkZXJzLmpzP2U2ZGEiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgICB2YWx1ZTogdHJ1ZVxufSk7XG4wICYmIChtb2R1bGUuZXhwb3J0cyA9IHtcbiAgICBSZWFkb25seUhlYWRlcnNFcnJvcjogbnVsbCxcbiAgICBIZWFkZXJzQWRhcHRlcjogbnVsbFxufSk7XG5mdW5jdGlvbiBfZXhwb3J0KHRhcmdldCwgYWxsKSB7XG4gICAgZm9yKHZhciBuYW1lIGluIGFsbClPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBuYW1lLCB7XG4gICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgIGdldDogYWxsW25hbWVdXG4gICAgfSk7XG59XG5fZXhwb3J0KGV4cG9ydHMsIHtcbiAgICBSZWFkb25seUhlYWRlcnNFcnJvcjogZnVuY3Rpb24oKSB7XG4gICAgICAgIHJldHVybiBSZWFkb25seUhlYWRlcnNFcnJvcjtcbiAgICB9LFxuICAgIEhlYWRlcnNBZGFwdGVyOiBmdW5jdGlvbigpIHtcbiAgICAgICAgcmV0dXJuIEhlYWRlcnNBZGFwdGVyO1xuICAgIH1cbn0pO1xuY29uc3QgX3JlZmxlY3QgPSByZXF1aXJlKFwiLi9yZWZsZWN0XCIpO1xuY2xhc3MgUmVhZG9ubHlIZWFkZXJzRXJyb3IgZXh0ZW5kcyBFcnJvciB7XG4gICAgY29uc3RydWN0b3IoKXtcbiAgICAgICAgc3VwZXIoXCJIZWFkZXJzIGNhbm5vdCBiZSBtb2RpZmllZC4gUmVhZCBtb3JlOiBodHRwczovL25leHRqcy5vcmcvZG9jcy9hcGktcmVmZXJlbmNlL2hlYWRlcnNcIik7XG4gICAgfVxuICAgIHN0YXRpYyBjYWxsYWJsZSgpIHtcbiAgICAgICAgdGhyb3cgbmV3IFJlYWRvbmx5SGVhZGVyc0Vycm9yKCk7XG4gICAgfVxufVxuY2xhc3MgSGVhZGVyc0FkYXB0ZXIgZXh0ZW5kcyBIZWFkZXJzIHtcbiAgICBjb25zdHJ1Y3RvcihoZWFkZXJzKXtcbiAgICAgICAgLy8gV2UndmUgYWxyZWFkeSBvdmVycmlkZGVuIHRoZSBtZXRob2RzIHRoYXQgd291bGQgYmUgY2FsbGVkLCBzbyB3ZSdyZSBqdXN0XG4gICAgICAgIC8vIGNhbGxpbmcgdGhlIHN1cGVyIGNvbnN0cnVjdG9yIHRvIGVuc3VyZSB0aGF0IHRoZSBpbnN0YW5jZW9mIGNoZWNrIHdvcmtzLlxuICAgICAgICBzdXBlcigpO1xuICAgICAgICB0aGlzLmhlYWRlcnMgPSBuZXcgUHJveHkoaGVhZGVycywge1xuICAgICAgICAgICAgZ2V0ICh0YXJnZXQsIHByb3AsIHJlY2VpdmVyKSB7XG4gICAgICAgICAgICAgICAgLy8gQmVjYXVzZSB0aGlzIGlzIGp1c3QgYW4gb2JqZWN0LCB3ZSBleHBlY3QgdGhhdCBhbGwgXCJnZXRcIiBvcGVyYXRpb25zXG4gICAgICAgICAgICAgICAgLy8gYXJlIGZvciBwcm9wZXJ0aWVzLiBJZiBpdCdzIGEgXCJnZXRcIiBmb3IgYSBzeW1ib2wsIHdlJ2xsIGp1c3QgcmV0dXJuXG4gICAgICAgICAgICAgICAgLy8gdGhlIHN5bWJvbC5cbiAgICAgICAgICAgICAgICBpZiAodHlwZW9mIHByb3AgPT09IFwic3ltYm9sXCIpIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIF9yZWZsZWN0LlJlZmxlY3RBZGFwdGVyLmdldCh0YXJnZXQsIHByb3AsIHJlY2VpdmVyKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgY29uc3QgbG93ZXJjYXNlZCA9IHByb3AudG9Mb3dlckNhc2UoKTtcbiAgICAgICAgICAgICAgICAvLyBMZXQncyBmaW5kIHRoZSBvcmlnaW5hbCBjYXNpbmcgb2YgdGhlIGtleS4gVGhpcyBhc3N1bWVzIHRoYXQgdGhlcmUgaXNcbiAgICAgICAgICAgICAgICAvLyBubyBtaXhlZCBjYXNlIGtleXMgKGUuZy4gXCJDb250ZW50LVR5cGVcIiBhbmQgXCJjb250ZW50LXR5cGVcIikgaW4gdGhlXG4gICAgICAgICAgICAgICAgLy8gaGVhZGVycyBvYmplY3QuXG4gICAgICAgICAgICAgICAgY29uc3Qgb3JpZ2luYWwgPSBPYmplY3Qua2V5cyhoZWFkZXJzKS5maW5kKChvKT0+by50b0xvd2VyQ2FzZSgpID09PSBsb3dlcmNhc2VkKTtcbiAgICAgICAgICAgICAgICAvLyBJZiB0aGUgb3JpZ2luYWwgY2FzaW5nIGRvZXNuJ3QgZXhpc3QsIHJldHVybiB1bmRlZmluZWQuXG4gICAgICAgICAgICAgICAgaWYgKHR5cGVvZiBvcmlnaW5hbCA9PT0gXCJ1bmRlZmluZWRcIikgcmV0dXJuO1xuICAgICAgICAgICAgICAgIC8vIElmIHRoZSBvcmlnaW5hbCBjYXNpbmcgZXhpc3RzLCByZXR1cm4gdGhlIHZhbHVlLlxuICAgICAgICAgICAgICAgIHJldHVybiBfcmVmbGVjdC5SZWZsZWN0QWRhcHRlci5nZXQodGFyZ2V0LCBvcmlnaW5hbCwgcmVjZWl2ZXIpO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHNldCAodGFyZ2V0LCBwcm9wLCB2YWx1ZSwgcmVjZWl2ZXIpIHtcbiAgICAgICAgICAgICAgICBpZiAodHlwZW9mIHByb3AgPT09IFwic3ltYm9sXCIpIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIF9yZWZsZWN0LlJlZmxlY3RBZGFwdGVyLnNldCh0YXJnZXQsIHByb3AsIHZhbHVlLCByZWNlaXZlcik7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGNvbnN0IGxvd2VyY2FzZWQgPSBwcm9wLnRvTG93ZXJDYXNlKCk7XG4gICAgICAgICAgICAgICAgLy8gTGV0J3MgZmluZCB0aGUgb3JpZ2luYWwgY2FzaW5nIG9mIHRoZSBrZXkuIFRoaXMgYXNzdW1lcyB0aGF0IHRoZXJlIGlzXG4gICAgICAgICAgICAgICAgLy8gbm8gbWl4ZWQgY2FzZSBrZXlzIChlLmcuIFwiQ29udGVudC1UeXBlXCIgYW5kIFwiY29udGVudC10eXBlXCIpIGluIHRoZVxuICAgICAgICAgICAgICAgIC8vIGhlYWRlcnMgb2JqZWN0LlxuICAgICAgICAgICAgICAgIGNvbnN0IG9yaWdpbmFsID0gT2JqZWN0LmtleXMoaGVhZGVycykuZmluZCgobyk9Pm8udG9Mb3dlckNhc2UoKSA9PT0gbG93ZXJjYXNlZCk7XG4gICAgICAgICAgICAgICAgLy8gSWYgdGhlIG9yaWdpbmFsIGNhc2luZyBkb2Vzbid0IGV4aXN0LCB1c2UgdGhlIHByb3AgYXMgdGhlIGtleS5cbiAgICAgICAgICAgICAgICByZXR1cm4gX3JlZmxlY3QuUmVmbGVjdEFkYXB0ZXIuc2V0KHRhcmdldCwgb3JpZ2luYWwgPz8gcHJvcCwgdmFsdWUsIHJlY2VpdmVyKTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBoYXMgKHRhcmdldCwgcHJvcCkge1xuICAgICAgICAgICAgICAgIGlmICh0eXBlb2YgcHJvcCA9PT0gXCJzeW1ib2xcIikgcmV0dXJuIF9yZWZsZWN0LlJlZmxlY3RBZGFwdGVyLmhhcyh0YXJnZXQsIHByb3ApO1xuICAgICAgICAgICAgICAgIGNvbnN0IGxvd2VyY2FzZWQgPSBwcm9wLnRvTG93ZXJDYXNlKCk7XG4gICAgICAgICAgICAgICAgLy8gTGV0J3MgZmluZCB0aGUgb3JpZ2luYWwgY2FzaW5nIG9mIHRoZSBrZXkuIFRoaXMgYXNzdW1lcyB0aGF0IHRoZXJlIGlzXG4gICAgICAgICAgICAgICAgLy8gbm8gbWl4ZWQgY2FzZSBrZXlzIChlLmcuIFwiQ29udGVudC1UeXBlXCIgYW5kIFwiY29udGVudC10eXBlXCIpIGluIHRoZVxuICAgICAgICAgICAgICAgIC8vIGhlYWRlcnMgb2JqZWN0LlxuICAgICAgICAgICAgICAgIGNvbnN0IG9yaWdpbmFsID0gT2JqZWN0LmtleXMoaGVhZGVycykuZmluZCgobyk9Pm8udG9Mb3dlckNhc2UoKSA9PT0gbG93ZXJjYXNlZCk7XG4gICAgICAgICAgICAgICAgLy8gSWYgdGhlIG9yaWdpbmFsIGNhc2luZyBkb2Vzbid0IGV4aXN0LCByZXR1cm4gZmFsc2UuXG4gICAgICAgICAgICAgICAgaWYgKHR5cGVvZiBvcmlnaW5hbCA9PT0gXCJ1bmRlZmluZWRcIikgcmV0dXJuIGZhbHNlO1xuICAgICAgICAgICAgICAgIC8vIElmIHRoZSBvcmlnaW5hbCBjYXNpbmcgZXhpc3RzLCByZXR1cm4gdHJ1ZS5cbiAgICAgICAgICAgICAgICByZXR1cm4gX3JlZmxlY3QuUmVmbGVjdEFkYXB0ZXIuaGFzKHRhcmdldCwgb3JpZ2luYWwpO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGRlbGV0ZVByb3BlcnR5ICh0YXJnZXQsIHByb3ApIHtcbiAgICAgICAgICAgICAgICBpZiAodHlwZW9mIHByb3AgPT09IFwic3ltYm9sXCIpIHJldHVybiBfcmVmbGVjdC5SZWZsZWN0QWRhcHRlci5kZWxldGVQcm9wZXJ0eSh0YXJnZXQsIHByb3ApO1xuICAgICAgICAgICAgICAgIGNvbnN0IGxvd2VyY2FzZWQgPSBwcm9wLnRvTG93ZXJDYXNlKCk7XG4gICAgICAgICAgICAgICAgLy8gTGV0J3MgZmluZCB0aGUgb3JpZ2luYWwgY2FzaW5nIG9mIHRoZSBrZXkuIFRoaXMgYXNzdW1lcyB0aGF0IHRoZXJlIGlzXG4gICAgICAgICAgICAgICAgLy8gbm8gbWl4ZWQgY2FzZSBrZXlzIChlLmcuIFwiQ29udGVudC1UeXBlXCIgYW5kIFwiY29udGVudC10eXBlXCIpIGluIHRoZVxuICAgICAgICAgICAgICAgIC8vIGhlYWRlcnMgb2JqZWN0LlxuICAgICAgICAgICAgICAgIGNvbnN0IG9yaWdpbmFsID0gT2JqZWN0LmtleXMoaGVhZGVycykuZmluZCgobyk9Pm8udG9Mb3dlckNhc2UoKSA9PT0gbG93ZXJjYXNlZCk7XG4gICAgICAgICAgICAgICAgLy8gSWYgdGhlIG9yaWdpbmFsIGNhc2luZyBkb2Vzbid0IGV4aXN0LCByZXR1cm4gdHJ1ZS5cbiAgICAgICAgICAgICAgICBpZiAodHlwZW9mIG9yaWdpbmFsID09PSBcInVuZGVmaW5lZFwiKSByZXR1cm4gdHJ1ZTtcbiAgICAgICAgICAgICAgICAvLyBJZiB0aGUgb3JpZ2luYWwgY2FzaW5nIGV4aXN0cywgZGVsZXRlIHRoZSBwcm9wZXJ0eS5cbiAgICAgICAgICAgICAgICByZXR1cm4gX3JlZmxlY3QuUmVmbGVjdEFkYXB0ZXIuZGVsZXRlUHJvcGVydHkodGFyZ2V0LCBvcmlnaW5hbCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICAvKipcbiAgICogU2VhbHMgYSBIZWFkZXJzIGluc3RhbmNlIHRvIHByZXZlbnQgbW9kaWZpY2F0aW9uIGJ5IHRocm93aW5nIGFuIGVycm9yIHdoZW5cbiAgICogYW55IG11dGF0aW5nIG1ldGhvZCBpcyBjYWxsZWQuXG4gICAqLyBzdGF0aWMgc2VhbChoZWFkZXJzKSB7XG4gICAgICAgIHJldHVybiBuZXcgUHJveHkoaGVhZGVycywge1xuICAgICAgICAgICAgZ2V0ICh0YXJnZXQsIHByb3AsIHJlY2VpdmVyKSB7XG4gICAgICAgICAgICAgICAgc3dpdGNoKHByb3Ape1xuICAgICAgICAgICAgICAgICAgICBjYXNlIFwiYXBwZW5kXCI6XG4gICAgICAgICAgICAgICAgICAgIGNhc2UgXCJkZWxldGVcIjpcbiAgICAgICAgICAgICAgICAgICAgY2FzZSBcInNldFwiOlxuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIFJlYWRvbmx5SGVhZGVyc0Vycm9yLmNhbGxhYmxlO1xuICAgICAgICAgICAgICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIF9yZWZsZWN0LlJlZmxlY3RBZGFwdGVyLmdldCh0YXJnZXQsIHByb3AsIHJlY2VpdmVyKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICAvKipcbiAgICogTWVyZ2VzIGEgaGVhZGVyIHZhbHVlIGludG8gYSBzdHJpbmcuIFRoaXMgc3RvcmVzIG11bHRpcGxlIHZhbHVlcyBhcyBhblxuICAgKiBhcnJheSwgc28gd2UgbmVlZCB0byBtZXJnZSB0aGVtIGludG8gYSBzdHJpbmcuXG4gICAqXG4gICAqIEBwYXJhbSB2YWx1ZSBhIGhlYWRlciB2YWx1ZVxuICAgKiBAcmV0dXJucyBhIG1lcmdlZCBoZWFkZXIgdmFsdWUgKGEgc3RyaW5nKVxuICAgKi8gbWVyZ2UodmFsdWUpIHtcbiAgICAgICAgaWYgKEFycmF5LmlzQXJyYXkodmFsdWUpKSByZXR1cm4gdmFsdWUuam9pbihcIiwgXCIpO1xuICAgICAgICByZXR1cm4gdmFsdWU7XG4gICAgfVxuICAgIC8qKlxuICAgKiBDcmVhdGVzIGEgSGVhZGVycyBpbnN0YW5jZSBmcm9tIGEgcGxhaW4gb2JqZWN0IG9yIGEgSGVhZGVycyBpbnN0YW5jZS5cbiAgICpcbiAgICogQHBhcmFtIGhlYWRlcnMgYSBwbGFpbiBvYmplY3Qgb3IgYSBIZWFkZXJzIGluc3RhbmNlXG4gICAqIEByZXR1cm5zIGEgaGVhZGVycyBpbnN0YW5jZVxuICAgKi8gc3RhdGljIGZyb20oaGVhZGVycykge1xuICAgICAgICBpZiAoaGVhZGVycyBpbnN0YW5jZW9mIEhlYWRlcnMpIHJldHVybiBoZWFkZXJzO1xuICAgICAgICByZXR1cm4gbmV3IEhlYWRlcnNBZGFwdGVyKGhlYWRlcnMpO1xuICAgIH1cbiAgICBhcHBlbmQobmFtZSwgdmFsdWUpIHtcbiAgICAgICAgY29uc3QgZXhpc3RpbmcgPSB0aGlzLmhlYWRlcnNbbmFtZV07XG4gICAgICAgIGlmICh0eXBlb2YgZXhpc3RpbmcgPT09IFwic3RyaW5nXCIpIHtcbiAgICAgICAgICAgIHRoaXMuaGVhZGVyc1tuYW1lXSA9IFtcbiAgICAgICAgICAgICAgICBleGlzdGluZyxcbiAgICAgICAgICAgICAgICB2YWx1ZVxuICAgICAgICAgICAgXTtcbiAgICAgICAgfSBlbHNlIGlmIChBcnJheS5pc0FycmF5KGV4aXN0aW5nKSkge1xuICAgICAgICAgICAgZXhpc3RpbmcucHVzaCh2YWx1ZSk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICB0aGlzLmhlYWRlcnNbbmFtZV0gPSB2YWx1ZTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBkZWxldGUobmFtZSkge1xuICAgICAgICBkZWxldGUgdGhpcy5oZWFkZXJzW25hbWVdO1xuICAgIH1cbiAgICBnZXQobmFtZSkge1xuICAgICAgICBjb25zdCB2YWx1ZSA9IHRoaXMuaGVhZGVyc1tuYW1lXTtcbiAgICAgICAgaWYgKHR5cGVvZiB2YWx1ZSAhPT0gXCJ1bmRlZmluZWRcIikgcmV0dXJuIHRoaXMubWVyZ2UodmFsdWUpO1xuICAgICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG4gICAgaGFzKG5hbWUpIHtcbiAgICAgICAgcmV0dXJuIHR5cGVvZiB0aGlzLmhlYWRlcnNbbmFtZV0gIT09IFwidW5kZWZpbmVkXCI7XG4gICAgfVxuICAgIHNldChuYW1lLCB2YWx1ZSkge1xuICAgICAgICB0aGlzLmhlYWRlcnNbbmFtZV0gPSB2YWx1ZTtcbiAgICB9XG4gICAgZm9yRWFjaChjYWxsYmFja2ZuLCB0aGlzQXJnKSB7XG4gICAgICAgIGZvciAoY29uc3QgW25hbWUsIHZhbHVlXSBvZiB0aGlzLmVudHJpZXMoKSl7XG4gICAgICAgICAgICBjYWxsYmFja2ZuLmNhbGwodGhpc0FyZywgdmFsdWUsIG5hbWUsIHRoaXMpO1xuICAgICAgICB9XG4gICAgfVxuICAgICplbnRyaWVzKCkge1xuICAgICAgICBmb3IgKGNvbnN0IGtleSBvZiBPYmplY3Qua2V5cyh0aGlzLmhlYWRlcnMpKXtcbiAgICAgICAgICAgIGNvbnN0IG5hbWUgPSBrZXkudG9Mb3dlckNhc2UoKTtcbiAgICAgICAgICAgIC8vIFdlIGFzc2VydCBoZXJlIHRoYXQgdGhpcyBpcyBhIHN0cmluZyBiZWNhdXNlIHdlIGdvdCBpdCBmcm9tIHRoZVxuICAgICAgICAgICAgLy8gT2JqZWN0LmtleXMoKSBjYWxsIGFib3ZlLlxuICAgICAgICAgICAgY29uc3QgdmFsdWUgPSB0aGlzLmdldChuYW1lKTtcbiAgICAgICAgICAgIHlpZWxkIFtcbiAgICAgICAgICAgICAgICBuYW1lLFxuICAgICAgICAgICAgICAgIHZhbHVlXG4gICAgICAgICAgICBdO1xuICAgICAgICB9XG4gICAgfVxuICAgICprZXlzKCkge1xuICAgICAgICBmb3IgKGNvbnN0IGtleSBvZiBPYmplY3Qua2V5cyh0aGlzLmhlYWRlcnMpKXtcbiAgICAgICAgICAgIGNvbnN0IG5hbWUgPSBrZXkudG9Mb3dlckNhc2UoKTtcbiAgICAgICAgICAgIHlpZWxkIG5hbWU7XG4gICAgICAgIH1cbiAgICB9XG4gICAgKnZhbHVlcygpIHtcbiAgICAgICAgZm9yIChjb25zdCBrZXkgb2YgT2JqZWN0LmtleXModGhpcy5oZWFkZXJzKSl7XG4gICAgICAgICAgICAvLyBXZSBhc3NlcnQgaGVyZSB0aGF0IHRoaXMgaXMgYSBzdHJpbmcgYmVjYXVzZSB3ZSBnb3QgaXQgZnJvbSB0aGVcbiAgICAgICAgICAgIC8vIE9iamVjdC5rZXlzKCkgY2FsbCBhYm92ZS5cbiAgICAgICAgICAgIGNvbnN0IHZhbHVlID0gdGhpcy5nZXQoa2V5KTtcbiAgICAgICAgICAgIHlpZWxkIHZhbHVlO1xuICAgICAgICB9XG4gICAgfVxuICAgIFtTeW1ib2wuaXRlcmF0b3JdKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5lbnRyaWVzKCk7XG4gICAgfVxufVxuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1oZWFkZXJzLmpzLm1hcCJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsIm1vZHVsZSIsIlJlYWRvbmx5SGVhZGVyc0Vycm9yIiwiSGVhZGVyc0FkYXB0ZXIiLCJfZXhwb3J0IiwidGFyZ2V0IiwiYWxsIiwibmFtZSIsImVudW1lcmFibGUiLCJnZXQiLCJfcmVmbGVjdCIsInJlcXVpcmUiLCJFcnJvciIsImNvbnN0cnVjdG9yIiwiY2FsbGFibGUiLCJIZWFkZXJzIiwiaGVhZGVycyIsIlByb3h5IiwicHJvcCIsInJlY2VpdmVyIiwiUmVmbGVjdEFkYXB0ZXIiLCJsb3dlcmNhc2VkIiwidG9Mb3dlckNhc2UiLCJvcmlnaW5hbCIsImtleXMiLCJmaW5kIiwibyIsInNldCIsImhhcyIsImRlbGV0ZVByb3BlcnR5Iiwic2VhbCIsIm1lcmdlIiwiQXJyYXkiLCJpc0FycmF5Iiwiam9pbiIsImZyb20iLCJhcHBlbmQiLCJleGlzdGluZyIsInB1c2giLCJkZWxldGUiLCJmb3JFYWNoIiwiY2FsbGJhY2tmbiIsInRoaXNBcmciLCJlbnRyaWVzIiwiY2FsbCIsImtleSIsInZhbHVlcyIsIlN5bWJvbCIsIml0ZXJhdG9yIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/next/dist/server/web/spec-extension/adapters/headers.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/next/dist/server/web/spec-extension/adapters/reflect.js":
/*!******************************************************************************!*\
  !*** ./node_modules/next/dist/server/web/spec-extension/adapters/reflect.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nObject.defineProperty(exports, \"ReflectAdapter\", ({\n    enumerable: true,\n    get: function() {\n        return ReflectAdapter;\n    }\n}));\nclass ReflectAdapter {\n    static get(target, prop, receiver) {\n        const value = Reflect.get(target, prop, receiver);\n        if (typeof value === \"function\") {\n            return value.bind(target);\n        }\n        return value;\n    }\n    static set(target, prop, value, receiver) {\n        return Reflect.set(target, prop, value, receiver);\n    }\n    static has(target, prop) {\n        return Reflect.has(target, prop);\n    }\n    static deleteProperty(target, prop) {\n        return Reflect.deleteProperty(target, prop);\n    }\n} //# sourceMappingURL=reflect.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L3NlcnZlci93ZWIvc3BlYy1leHRlbnNpb24vYWRhcHRlcnMvcmVmbGVjdC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFDekNHLE9BQU87QUFDWCxDQUFDLEVBQUM7QUFDRkgsa0RBQWlEO0lBQzdDSSxZQUFZO0lBQ1pDLEtBQUs7UUFDRCxPQUFPQztJQUNYO0FBQ0osQ0FBQyxFQUFDO0FBQ0YsTUFBTUE7SUFDRixPQUFPRCxJQUFJRSxNQUFNLEVBQUVDLElBQUksRUFBRUMsUUFBUSxFQUFFO1FBQy9CLE1BQU1OLFFBQVFPLFFBQVFMLElBQUlFLFFBQVFDLE1BQU1DO1FBQ3hDLElBQUksT0FBT04sVUFBVSxZQUFZO1lBQzdCLE9BQU9BLE1BQU1RLEtBQUtKO1FBQ3RCO1FBQ0EsT0FBT0o7SUFDWDtJQUNBLE9BQU9TLElBQUlMLE1BQU0sRUFBRUMsSUFBSSxFQUFFTCxLQUFLLEVBQUVNLFFBQVEsRUFBRTtRQUN0QyxPQUFPQyxRQUFRRSxJQUFJTCxRQUFRQyxNQUFNTCxPQUFPTTtJQUM1QztJQUNBLE9BQU9JLElBQUlOLE1BQU0sRUFBRUMsSUFBSSxFQUFFO1FBQ3JCLE9BQU9FLFFBQVFHLElBQUlOLFFBQVFDO0lBQy9CO0lBQ0EsT0FBT00sZUFBZVAsTUFBTSxFQUFFQyxJQUFJLEVBQUU7UUFDaEMsT0FBT0UsUUFBUUksZUFBZVAsUUFBUUM7SUFDMUM7QUFDSixFQUVBLG1DQUFtQyIsInNvdXJjZXMiOlsid2VicGFjazovL2Z1bGxzdGFjay1yb2xlLWJhc2VkLW5leHRqcy0yLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9zZXJ2ZXIvd2ViL3NwZWMtZXh0ZW5zaW9uL2FkYXB0ZXJzL3JlZmxlY3QuanM/NGNjMSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICAgIHZhbHVlOiB0cnVlXG59KTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIlJlZmxlY3RBZGFwdGVyXCIsIHtcbiAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgIGdldDogZnVuY3Rpb24oKSB7XG4gICAgICAgIHJldHVybiBSZWZsZWN0QWRhcHRlcjtcbiAgICB9XG59KTtcbmNsYXNzIFJlZmxlY3RBZGFwdGVyIHtcbiAgICBzdGF0aWMgZ2V0KHRhcmdldCwgcHJvcCwgcmVjZWl2ZXIpIHtcbiAgICAgICAgY29uc3QgdmFsdWUgPSBSZWZsZWN0LmdldCh0YXJnZXQsIHByb3AsIHJlY2VpdmVyKTtcbiAgICAgICAgaWYgKHR5cGVvZiB2YWx1ZSA9PT0gXCJmdW5jdGlvblwiKSB7XG4gICAgICAgICAgICByZXR1cm4gdmFsdWUuYmluZCh0YXJnZXQpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB2YWx1ZTtcbiAgICB9XG4gICAgc3RhdGljIHNldCh0YXJnZXQsIHByb3AsIHZhbHVlLCByZWNlaXZlcikge1xuICAgICAgICByZXR1cm4gUmVmbGVjdC5zZXQodGFyZ2V0LCBwcm9wLCB2YWx1ZSwgcmVjZWl2ZXIpO1xuICAgIH1cbiAgICBzdGF0aWMgaGFzKHRhcmdldCwgcHJvcCkge1xuICAgICAgICByZXR1cm4gUmVmbGVjdC5oYXModGFyZ2V0LCBwcm9wKTtcbiAgICB9XG4gICAgc3RhdGljIGRlbGV0ZVByb3BlcnR5KHRhcmdldCwgcHJvcCkge1xuICAgICAgICByZXR1cm4gUmVmbGVjdC5kZWxldGVQcm9wZXJ0eSh0YXJnZXQsIHByb3ApO1xuICAgIH1cbn1cblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cmVmbGVjdC5qcy5tYXAiXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJlbnVtZXJhYmxlIiwiZ2V0IiwiUmVmbGVjdEFkYXB0ZXIiLCJ0YXJnZXQiLCJwcm9wIiwicmVjZWl2ZXIiLCJSZWZsZWN0IiwiYmluZCIsInNldCIsImhhcyIsImRlbGV0ZVByb3BlcnR5Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/next/dist/server/web/spec-extension/adapters/reflect.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/next/dist/server/web/spec-extension/adapters/request-cookies.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/next/dist/server/web/spec-extension/adapters/request-cookies.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\n0 && (0);\nfunction _export(target, all) {\n    for(var name in all)Object.defineProperty(target, name, {\n        enumerable: true,\n        get: all[name]\n    });\n}\n_export(exports, {\n    ReadonlyRequestCookiesError: function() {\n        return ReadonlyRequestCookiesError;\n    },\n    RequestCookiesAdapter: function() {\n        return RequestCookiesAdapter;\n    },\n    appendMutableCookies: function() {\n        return appendMutableCookies;\n    },\n    MutableRequestCookiesAdapter: function() {\n        return MutableRequestCookiesAdapter;\n    }\n});\nconst _cookies = __webpack_require__(/*! ../cookies */ \"(sc_server)/./node_modules/next/dist/server/web/spec-extension/cookies.js\");\nconst _reflect = __webpack_require__(/*! ./reflect */ \"(sc_server)/./node_modules/next/dist/server/web/spec-extension/adapters/reflect.js\");\nclass ReadonlyRequestCookiesError extends Error {\n    constructor(){\n        super(\"Cookies can only be modified in a Server Action or Route Handler. Read more: https://nextjs.org/docs/app/api-reference/functions/cookies#cookiessetname-value-options\");\n    }\n    static callable() {\n        throw new ReadonlyRequestCookiesError();\n    }\n}\nclass RequestCookiesAdapter {\n    static seal(cookies) {\n        return new Proxy(cookies, {\n            get (target, prop, receiver) {\n                switch(prop){\n                    case \"clear\":\n                    case \"delete\":\n                    case \"set\":\n                        return ReadonlyRequestCookiesError.callable;\n                    default:\n                        return _reflect.ReflectAdapter.get(target, prop, receiver);\n                }\n            }\n        });\n    }\n}\nconst SYMBOL_MODIFY_COOKIE_VALUES = Symbol.for(\"next.mutated.cookies\");\nfunction getModifiedCookieValues(cookies) {\n    const modified = cookies[SYMBOL_MODIFY_COOKIE_VALUES];\n    if (!modified || !Array.isArray(modified) || modified.length === 0) {\n        return [];\n    }\n    return modified;\n}\nfunction appendMutableCookies(headers, mutableCookies) {\n    const modifiedCookieValues = getModifiedCookieValues(mutableCookies);\n    if (modifiedCookieValues.length === 0) {\n        return false;\n    }\n    // Return a new response that extends the response with\n    // the modified cookies as fallbacks. `res`' cookies\n    // will still take precedence.\n    const resCookies = new _cookies.ResponseCookies(headers);\n    const returnedCookies = resCookies.getAll();\n    // Set the modified cookies as fallbacks.\n    for (const cookie of modifiedCookieValues){\n        resCookies.set(cookie);\n    }\n    // Set the original cookies as the final values.\n    for (const cookie of returnedCookies){\n        resCookies.set(cookie);\n    }\n    return true;\n}\nclass MutableRequestCookiesAdapter {\n    static wrap(cookies, res) {\n        const responseCookes = new _cookies.ResponseCookies(new Headers());\n        for (const cookie of cookies.getAll()){\n            responseCookes.set(cookie);\n        }\n        let modifiedValues = [];\n        const modifiedCookies = new Set();\n        const updateResponseCookies = ()=>{\n            var _fetch___nextGetStaticStore;\n            // TODO-APP: change method of getting staticGenerationAsyncStore\n            const staticGenerationAsyncStore = fetch.__nextGetStaticStore == null ? void 0 : (_fetch___nextGetStaticStore = fetch.__nextGetStaticStore()) == null ? void 0 : _fetch___nextGetStaticStore.getStore();\n            if (staticGenerationAsyncStore) {\n                staticGenerationAsyncStore.pathWasRevalidated = true;\n            }\n            const allCookies = responseCookes.getAll();\n            modifiedValues = allCookies.filter((c)=>modifiedCookies.has(c.name));\n            if (res) {\n                const serializedCookies = [];\n                for (const cookie of modifiedValues){\n                    const tempCookies = new _cookies.ResponseCookies(new Headers());\n                    tempCookies.set(cookie);\n                    serializedCookies.push(tempCookies.toString());\n                }\n                res.setHeader(\"Set-Cookie\", serializedCookies);\n            }\n        };\n        return new Proxy(responseCookes, {\n            get (target, prop, receiver) {\n                switch(prop){\n                    // A special symbol to get the modified cookie values\n                    case SYMBOL_MODIFY_COOKIE_VALUES:\n                        return modifiedValues;\n                    // TODO: Throw error if trying to set a cookie after the response\n                    // headers have been set.\n                    case \"delete\":\n                        return function(...args) {\n                            modifiedCookies.add(typeof args[0] === \"string\" ? args[0] : args[0].name);\n                            try {\n                                target.delete(...args);\n                            } finally{\n                                updateResponseCookies();\n                            }\n                        };\n                    case \"set\":\n                        return function(...args) {\n                            modifiedCookies.add(typeof args[0] === \"string\" ? args[0] : args[0].name);\n                            try {\n                                return target.set(...args);\n                            } finally{\n                                updateResponseCookies();\n                            }\n                        };\n                    default:\n                        return _reflect.ReflectAdapter.get(target, prop, receiver);\n                }\n            }\n        });\n    }\n} //# sourceMappingURL=request-cookies.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/next/dist/server/web/spec-extension/adapters/request-cookies.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/next/dist/server/web/spec-extension/cookies.js":
/*!*********************************************************************!*\
  !*** ./node_modules/next/dist/server/web/spec-extension/cookies.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\n0 && (0);\nfunction _export(target, all) {\n    for(var name in all)Object.defineProperty(target, name, {\n        enumerable: true,\n        get: all[name]\n    });\n}\n_export(exports, {\n    RequestCookies: function() {\n        return _cookies.RequestCookies;\n    },\n    ResponseCookies: function() {\n        return _cookies.ResponseCookies;\n    }\n});\nconst _cookies = __webpack_require__(/*! next/dist/compiled/@edge-runtime/cookies */ \"next/dist/compiled/@edge-runtime/cookies\"); //# sourceMappingURL=cookies.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L3NlcnZlci93ZWIvc3BlYy1leHRlbnNpb24vY29va2llcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFDekNHLE9BQU87QUFDWCxDQUFDLEVBQUM7QUFDRixLQUFNQyxDQUFBQSxDQUdOO0FBQ0EsU0FBU0csUUFBUUMsTUFBTSxFQUFFQyxHQUFHO0lBQ3hCLElBQUksSUFBSUMsUUFBUUQsSUFBSVQsT0FBT0MsZUFBZU8sUUFBUUUsTUFBTTtRQUNwREMsWUFBWTtRQUNaQyxLQUFLSCxHQUFHLENBQUNDLEtBQUs7SUFDbEI7QUFDSjtBQUNBSCxRQUFRTCxTQUFTO0lBQ2JHLGdCQUFnQjtRQUNaLE9BQU9RLFNBQVNSO0lBQ3BCO0lBQ0FDLGlCQUFpQjtRQUNiLE9BQU9PLFNBQVNQO0lBQ3BCO0FBQ0o7QUFDQSxNQUFNTyxXQUFXQyxtQkFBT0EsQ0FBQywwRkFBMEMsR0FFbkUsbUNBQW1DIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZnVsbHN0YWNrLXJvbGUtYmFzZWQtbmV4dGpzLTIvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L3NlcnZlci93ZWIvc3BlYy1leHRlbnNpb24vY29va2llcy5qcz8xNDI0Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gICAgdmFsdWU6IHRydWVcbn0pO1xuMCAmJiAobW9kdWxlLmV4cG9ydHMgPSB7XG4gICAgUmVxdWVzdENvb2tpZXM6IG51bGwsXG4gICAgUmVzcG9uc2VDb29raWVzOiBudWxsXG59KTtcbmZ1bmN0aW9uIF9leHBvcnQodGFyZ2V0LCBhbGwpIHtcbiAgICBmb3IodmFyIG5hbWUgaW4gYWxsKU9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIG5hbWUsIHtcbiAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgICAgZ2V0OiBhbGxbbmFtZV1cbiAgICB9KTtcbn1cbl9leHBvcnQoZXhwb3J0cywge1xuICAgIFJlcXVlc3RDb29raWVzOiBmdW5jdGlvbigpIHtcbiAgICAgICAgcmV0dXJuIF9jb29raWVzLlJlcXVlc3RDb29raWVzO1xuICAgIH0sXG4gICAgUmVzcG9uc2VDb29raWVzOiBmdW5jdGlvbigpIHtcbiAgICAgICAgcmV0dXJuIF9jb29raWVzLlJlc3BvbnNlQ29va2llcztcbiAgICB9XG59KTtcbmNvbnN0IF9jb29raWVzID0gcmVxdWlyZShcIm5leHQvZGlzdC9jb21waWxlZC9AZWRnZS1ydW50aW1lL2Nvb2tpZXNcIik7XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWNvb2tpZXMuanMubWFwIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwibW9kdWxlIiwiUmVxdWVzdENvb2tpZXMiLCJSZXNwb25zZUNvb2tpZXMiLCJfZXhwb3J0IiwidGFyZ2V0IiwiYWxsIiwibmFtZSIsImVudW1lcmFibGUiLCJnZXQiLCJfY29va2llcyIsInJlcXVpcmUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/next/dist/server/web/spec-extension/cookies.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/next/dist/shared/lib/get-hostname.js":
/*!***********************************************************!*\
  !*** ./node_modules/next/dist/shared/lib/get-hostname.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nObject.defineProperty(exports, \"getHostname\", ({\n    enumerable: true,\n    get: function() {\n        return getHostname;\n    }\n}));\nfunction getHostname(parsed, headers) {\n    // Get the hostname from the headers if it exists, otherwise use the parsed\n    // hostname.\n    let hostname;\n    if ((headers == null ? void 0 : headers.host) && !Array.isArray(headers.host)) {\n        hostname = headers.host.toString().split(\":\")[0];\n    } else if (parsed.hostname) {\n        hostname = parsed.hostname;\n    } else return;\n    return hostname.toLowerCase();\n} //# sourceMappingURL=get-hostname.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L3NoYXJlZC9saWIvZ2V0LWhvc3RuYW1lLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2JBLDhDQUE2QztJQUN6Q0csT0FBTztBQUNYLENBQUMsRUFBQztBQUNGSCwrQ0FBOEM7SUFDMUNJLFlBQVk7SUFDWkMsS0FBSztRQUNELE9BQU9DO0lBQ1g7QUFDSixDQUFDLEVBQUM7QUFDRixTQUFTQSxZQUFZQyxNQUFNLEVBQUVDLE9BQU87SUFDaEMsMkVBQTJFO0lBQzNFLFlBQVk7SUFDWixJQUFJQztJQUNKLElBQUksQ0FBQ0QsV0FBVyxPQUFPLEtBQUssSUFBSUEsUUFBUUUsSUFBRyxLQUFNLENBQUNDLE1BQU1DLFFBQVFKLFFBQVFFLE9BQU87UUFDM0VELFdBQVdELFFBQVFFLEtBQUtHLFdBQVdDLE1BQU0sSUFBSSxDQUFDLEVBQUU7SUFDcEQsT0FBTyxJQUFJUCxPQUFPRSxVQUFVO1FBQ3hCQSxXQUFXRixPQUFPRTtJQUN0QixPQUFPO0lBQ1AsT0FBT0EsU0FBU007QUFDcEIsRUFFQSx3Q0FBd0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mdWxsc3RhY2stcm9sZS1iYXNlZC1uZXh0anMtMi8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3Qvc2hhcmVkL2xpYi9nZXQtaG9zdG5hbWUuanM/NGNmOSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICAgIHZhbHVlOiB0cnVlXG59KTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcImdldEhvc3RuYW1lXCIsIHtcbiAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgIGdldDogZnVuY3Rpb24oKSB7XG4gICAgICAgIHJldHVybiBnZXRIb3N0bmFtZTtcbiAgICB9XG59KTtcbmZ1bmN0aW9uIGdldEhvc3RuYW1lKHBhcnNlZCwgaGVhZGVycykge1xuICAgIC8vIEdldCB0aGUgaG9zdG5hbWUgZnJvbSB0aGUgaGVhZGVycyBpZiBpdCBleGlzdHMsIG90aGVyd2lzZSB1c2UgdGhlIHBhcnNlZFxuICAgIC8vIGhvc3RuYW1lLlxuICAgIGxldCBob3N0bmFtZTtcbiAgICBpZiAoKGhlYWRlcnMgPT0gbnVsbCA/IHZvaWQgMCA6IGhlYWRlcnMuaG9zdCkgJiYgIUFycmF5LmlzQXJyYXkoaGVhZGVycy5ob3N0KSkge1xuICAgICAgICBob3N0bmFtZSA9IGhlYWRlcnMuaG9zdC50b1N0cmluZygpLnNwbGl0KFwiOlwiKVswXTtcbiAgICB9IGVsc2UgaWYgKHBhcnNlZC5ob3N0bmFtZSkge1xuICAgICAgICBob3N0bmFtZSA9IHBhcnNlZC5ob3N0bmFtZTtcbiAgICB9IGVsc2UgcmV0dXJuO1xuICAgIHJldHVybiBob3N0bmFtZS50b0xvd2VyQ2FzZSgpO1xufVxuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1nZXQtaG9zdG5hbWUuanMubWFwIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiZW51bWVyYWJsZSIsImdldCIsImdldEhvc3RuYW1lIiwicGFyc2VkIiwiaGVhZGVycyIsImhvc3RuYW1lIiwiaG9zdCIsIkFycmF5IiwiaXNBcnJheSIsInRvU3RyaW5nIiwic3BsaXQiLCJ0b0xvd2VyQ2FzZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/next/dist/shared/lib/get-hostname.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/next/dist/shared/lib/i18n/detect-domain-locale.js":
/*!************************************************************************!*\
  !*** ./node_modules/next/dist/shared/lib/i18n/detect-domain-locale.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nObject.defineProperty(exports, \"detectDomainLocale\", ({\n    enumerable: true,\n    get: function() {\n        return detectDomainLocale;\n    }\n}));\nfunction detectDomainLocale(domainItems, hostname, detectedLocale) {\n    if (!domainItems) return;\n    if (detectedLocale) {\n        detectedLocale = detectedLocale.toLowerCase();\n    }\n    for (const item of domainItems){\n        var _item_domain, _item_locales;\n        // remove port if present\n        const domainHostname = (_item_domain = item.domain) == null ? void 0 : _item_domain.split(\":\")[0].toLowerCase();\n        if (hostname === domainHostname || detectedLocale === item.defaultLocale.toLowerCase() || ((_item_locales = item.locales) == null ? void 0 : _item_locales.some((locale)=>locale.toLowerCase() === detectedLocale))) {\n            return item;\n        }\n    }\n} //# sourceMappingURL=detect-domain-locale.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L3NoYXJlZC9saWIvaTE4bi9kZXRlY3QtZG9tYWluLWxvY2FsZS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFDekNHLE9BQU87QUFDWCxDQUFDLEVBQUM7QUFDRkgsc0RBQXFEO0lBQ2pESSxZQUFZO0lBQ1pDLEtBQUs7UUFDRCxPQUFPQztJQUNYO0FBQ0osQ0FBQyxFQUFDO0FBQ0YsU0FBU0EsbUJBQW1CQyxXQUFXLEVBQUVDLFFBQVEsRUFBRUMsY0FBYztJQUM3RCxJQUFJLENBQUNGLGFBQWE7SUFDbEIsSUFBSUUsZ0JBQWdCO1FBQ2hCQSxpQkFBaUJBLGVBQWVDO0lBQ3BDO0lBQ0EsS0FBSyxNQUFNQyxRQUFRSixZQUFZO1FBQzNCLElBQUlLLGNBQWNDO1FBQ2xCLHlCQUF5QjtRQUN6QixNQUFNQyxpQkFBaUIsQ0FBQ0YsZUFBZUQsS0FBS0ksTUFBSyxLQUFNLE9BQU8sS0FBSyxJQUFJSCxhQUFhSSxNQUFNLElBQUksQ0FBQyxFQUFFLENBQUNOO1FBQ2xHLElBQUlGLGFBQWFNLGtCQUFrQkwsbUJBQW1CRSxLQUFLTSxjQUFjUCxpQkFBa0IsRUFBQ0csZ0JBQWdCRixLQUFLTyxPQUFNLEtBQU0sT0FBTyxLQUFLLElBQUlMLGNBQWNNLEtBQUssQ0FBQ0MsU0FBU0EsT0FBT1Ysa0JBQWtCRCxlQUFjLEdBQUk7WUFDak4sT0FBT0U7UUFDWDtJQUNKO0FBQ0osRUFFQSxnREFBZ0QiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mdWxsc3RhY2stcm9sZS1iYXNlZC1uZXh0anMtMi8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3Qvc2hhcmVkL2xpYi9pMThuL2RldGVjdC1kb21haW4tbG9jYWxlLmpzPzc4ZDEiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgICB2YWx1ZTogdHJ1ZVxufSk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJkZXRlY3REb21haW5Mb2NhbGVcIiwge1xuICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgZ2V0OiBmdW5jdGlvbigpIHtcbiAgICAgICAgcmV0dXJuIGRldGVjdERvbWFpbkxvY2FsZTtcbiAgICB9XG59KTtcbmZ1bmN0aW9uIGRldGVjdERvbWFpbkxvY2FsZShkb21haW5JdGVtcywgaG9zdG5hbWUsIGRldGVjdGVkTG9jYWxlKSB7XG4gICAgaWYgKCFkb21haW5JdGVtcykgcmV0dXJuO1xuICAgIGlmIChkZXRlY3RlZExvY2FsZSkge1xuICAgICAgICBkZXRlY3RlZExvY2FsZSA9IGRldGVjdGVkTG9jYWxlLnRvTG93ZXJDYXNlKCk7XG4gICAgfVxuICAgIGZvciAoY29uc3QgaXRlbSBvZiBkb21haW5JdGVtcyl7XG4gICAgICAgIHZhciBfaXRlbV9kb21haW4sIF9pdGVtX2xvY2FsZXM7XG4gICAgICAgIC8vIHJlbW92ZSBwb3J0IGlmIHByZXNlbnRcbiAgICAgICAgY29uc3QgZG9tYWluSG9zdG5hbWUgPSAoX2l0ZW1fZG9tYWluID0gaXRlbS5kb21haW4pID09IG51bGwgPyB2b2lkIDAgOiBfaXRlbV9kb21haW4uc3BsaXQoXCI6XCIpWzBdLnRvTG93ZXJDYXNlKCk7XG4gICAgICAgIGlmIChob3N0bmFtZSA9PT0gZG9tYWluSG9zdG5hbWUgfHwgZGV0ZWN0ZWRMb2NhbGUgPT09IGl0ZW0uZGVmYXVsdExvY2FsZS50b0xvd2VyQ2FzZSgpIHx8ICgoX2l0ZW1fbG9jYWxlcyA9IGl0ZW0ubG9jYWxlcykgPT0gbnVsbCA/IHZvaWQgMCA6IF9pdGVtX2xvY2FsZXMuc29tZSgobG9jYWxlKT0+bG9jYWxlLnRvTG93ZXJDYXNlKCkgPT09IGRldGVjdGVkTG9jYWxlKSkpIHtcbiAgICAgICAgICAgIHJldHVybiBpdGVtO1xuICAgICAgICB9XG4gICAgfVxufVxuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1kZXRlY3QtZG9tYWluLWxvY2FsZS5qcy5tYXAiXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJlbnVtZXJhYmxlIiwiZ2V0IiwiZGV0ZWN0RG9tYWluTG9jYWxlIiwiZG9tYWluSXRlbXMiLCJob3N0bmFtZSIsImRldGVjdGVkTG9jYWxlIiwidG9Mb3dlckNhc2UiLCJpdGVtIiwiX2l0ZW1fZG9tYWluIiwiX2l0ZW1fbG9jYWxlcyIsImRvbWFpbkhvc3RuYW1lIiwiZG9tYWluIiwic3BsaXQiLCJkZWZhdWx0TG9jYWxlIiwibG9jYWxlcyIsInNvbWUiLCJsb2NhbGUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/next/dist/shared/lib/i18n/detect-domain-locale.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/next/dist/shared/lib/i18n/normalize-locale-path.js":
/*!*************************************************************************!*\
  !*** ./node_modules/next/dist/shared/lib/i18n/normalize-locale-path.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nObject.defineProperty(exports, \"normalizeLocalePath\", ({\n    enumerable: true,\n    get: function() {\n        return normalizeLocalePath;\n    }\n}));\nfunction normalizeLocalePath(pathname, locales) {\n    let detectedLocale;\n    // first item will be empty string from splitting at first char\n    const pathnameParts = pathname.split(\"/\");\n    (locales || []).some((locale)=>{\n        if (pathnameParts[1] && pathnameParts[1].toLowerCase() === locale.toLowerCase()) {\n            detectedLocale = locale;\n            pathnameParts.splice(1, 1);\n            pathname = pathnameParts.join(\"/\") || \"/\";\n            return true;\n        }\n        return false;\n    });\n    return {\n        pathname,\n        detectedLocale\n    };\n} //# sourceMappingURL=normalize-locale-path.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L3NoYXJlZC9saWIvaTE4bi9ub3JtYWxpemUtbG9jYWxlLXBhdGguanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYkEsOENBQTZDO0lBQ3pDRyxPQUFPO0FBQ1gsQ0FBQyxFQUFDO0FBQ0ZILHVEQUFzRDtJQUNsREksWUFBWTtJQUNaQyxLQUFLO1FBQ0QsT0FBT0M7SUFDWDtBQUNKLENBQUMsRUFBQztBQUNGLFNBQVNBLG9CQUFvQkMsUUFBUSxFQUFFQyxPQUFPO0lBQzFDLElBQUlDO0lBQ0osK0RBQStEO0lBQy9ELE1BQU1DLGdCQUFnQkgsU0FBU0ksTUFBTTtJQUNwQ0gsQ0FBQUEsV0FBVyxFQUFFLEVBQUVJLEtBQUssQ0FBQ0M7UUFDbEIsSUFBSUgsYUFBYSxDQUFDLEVBQUUsSUFBSUEsYUFBYSxDQUFDLEVBQUUsQ0FBQ0ksa0JBQWtCRCxPQUFPQyxlQUFlO1lBQzdFTCxpQkFBaUJJO1lBQ2pCSCxjQUFjSyxPQUFPLEdBQUc7WUFDeEJSLFdBQVdHLGNBQWNNLEtBQUssUUFBUTtZQUN0QyxPQUFPO1FBQ1g7UUFDQSxPQUFPO0lBQ1g7SUFDQSxPQUFPO1FBQ0hUO1FBQ0FFO0lBQ0o7QUFDSixFQUVBLGlEQUFpRCIsInNvdXJjZXMiOlsid2VicGFjazovL2Z1bGxzdGFjay1yb2xlLWJhc2VkLW5leHRqcy0yLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9zaGFyZWQvbGliL2kxOG4vbm9ybWFsaXplLWxvY2FsZS1wYXRoLmpzPzA0M2IiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgICB2YWx1ZTogdHJ1ZVxufSk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJub3JtYWxpemVMb2NhbGVQYXRoXCIsIHtcbiAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgIGdldDogZnVuY3Rpb24oKSB7XG4gICAgICAgIHJldHVybiBub3JtYWxpemVMb2NhbGVQYXRoO1xuICAgIH1cbn0pO1xuZnVuY3Rpb24gbm9ybWFsaXplTG9jYWxlUGF0aChwYXRobmFtZSwgbG9jYWxlcykge1xuICAgIGxldCBkZXRlY3RlZExvY2FsZTtcbiAgICAvLyBmaXJzdCBpdGVtIHdpbGwgYmUgZW1wdHkgc3RyaW5nIGZyb20gc3BsaXR0aW5nIGF0IGZpcnN0IGNoYXJcbiAgICBjb25zdCBwYXRobmFtZVBhcnRzID0gcGF0aG5hbWUuc3BsaXQoXCIvXCIpO1xuICAgIChsb2NhbGVzIHx8IFtdKS5zb21lKChsb2NhbGUpPT57XG4gICAgICAgIGlmIChwYXRobmFtZVBhcnRzWzFdICYmIHBhdGhuYW1lUGFydHNbMV0udG9Mb3dlckNhc2UoKSA9PT0gbG9jYWxlLnRvTG93ZXJDYXNlKCkpIHtcbiAgICAgICAgICAgIGRldGVjdGVkTG9jYWxlID0gbG9jYWxlO1xuICAgICAgICAgICAgcGF0aG5hbWVQYXJ0cy5zcGxpY2UoMSwgMSk7XG4gICAgICAgICAgICBwYXRobmFtZSA9IHBhdGhuYW1lUGFydHMuam9pbihcIi9cIikgfHwgXCIvXCI7XG4gICAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfSk7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgcGF0aG5hbWUsXG4gICAgICAgIGRldGVjdGVkTG9jYWxlXG4gICAgfTtcbn1cblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9bm9ybWFsaXplLWxvY2FsZS1wYXRoLmpzLm1hcCJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsImVudW1lcmFibGUiLCJnZXQiLCJub3JtYWxpemVMb2NhbGVQYXRoIiwicGF0aG5hbWUiLCJsb2NhbGVzIiwiZGV0ZWN0ZWRMb2NhbGUiLCJwYXRobmFtZVBhcnRzIiwic3BsaXQiLCJzb21lIiwibG9jYWxlIiwidG9Mb3dlckNhc2UiLCJzcGxpY2UiLCJqb2luIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/next/dist/shared/lib/i18n/normalize-locale-path.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/next/dist/shared/lib/router/utils/add-locale.js":
/*!**********************************************************************!*\
  !*** ./node_modules/next/dist/shared/lib/router/utils/add-locale.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nObject.defineProperty(exports, \"addLocale\", ({\n    enumerable: true,\n    get: function() {\n        return addLocale;\n    }\n}));\nconst _addpathprefix = __webpack_require__(/*! ./add-path-prefix */ \"(sc_server)/./node_modules/next/dist/shared/lib/router/utils/add-path-prefix.js\");\nconst _pathhasprefix = __webpack_require__(/*! ./path-has-prefix */ \"(sc_server)/./node_modules/next/dist/shared/lib/router/utils/path-has-prefix.js\");\nfunction addLocale(path, locale, defaultLocale, ignorePrefix) {\n    // If no locale was given or the locale is the default locale, we don't need\n    // to prefix the path.\n    if (!locale || locale === defaultLocale) return path;\n    const lower = path.toLowerCase();\n    // If the path is an API path or the path already has the locale prefix, we\n    // don't need to prefix the path.\n    if (!ignorePrefix) {\n        if ((0, _pathhasprefix.pathHasPrefix)(lower, \"/api\")) return path;\n        if ((0, _pathhasprefix.pathHasPrefix)(lower, \"/\" + locale.toLowerCase())) return path;\n    }\n    // Add the locale prefix to the path.\n    return (0, _addpathprefix.addPathPrefix)(path, \"/\" + locale);\n} //# sourceMappingURL=add-locale.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L3NoYXJlZC9saWIvcm91dGVyL3V0aWxzL2FkZC1sb2NhbGUuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYkEsOENBQTZDO0lBQ3pDRyxPQUFPO0FBQ1gsQ0FBQyxFQUFDO0FBQ0ZILDZDQUE0QztJQUN4Q0ksWUFBWTtJQUNaQyxLQUFLO1FBQ0QsT0FBT0M7SUFDWDtBQUNKLENBQUMsRUFBQztBQUNGLE1BQU1DLGlCQUFpQkMsbUJBQU9BLENBQUMsMEdBQW1CO0FBQ2xELE1BQU1DLGlCQUFpQkQsbUJBQU9BLENBQUMsMEdBQW1CO0FBQ2xELFNBQVNGLFVBQVVJLElBQUksRUFBRUMsTUFBTSxFQUFFQyxhQUFhLEVBQUVDLFlBQVk7SUFDeEQsNEVBQTRFO0lBQzVFLHNCQUFzQjtJQUN0QixJQUFJLENBQUNGLFVBQVVBLFdBQVdDLGVBQWUsT0FBT0Y7SUFDaEQsTUFBTUksUUFBUUosS0FBS0s7SUFDbkIsMkVBQTJFO0lBQzNFLGlDQUFpQztJQUNqQyxJQUFJLENBQUNGLGNBQWM7UUFDZixJQUFJLENBQUMsR0FBR0osZUFBZU8sYUFBWSxFQUFHRixPQUFPLFNBQVMsT0FBT0o7UUFDN0QsSUFBSSxDQUFDLEdBQUdELGVBQWVPLGFBQVksRUFBR0YsT0FBTyxNQUFNSCxPQUFPSSxnQkFBZ0IsT0FBT0w7SUFDckY7SUFDQSxxQ0FBcUM7SUFDckMsT0FBTyxDQUFDLEdBQUdILGVBQWVVLGFBQVksRUFBR1AsTUFBTSxNQUFNQztBQUN6RCxFQUVBLHNDQUFzQyIsInNvdXJjZXMiOlsid2VicGFjazovL2Z1bGxzdGFjay1yb2xlLWJhc2VkLW5leHRqcy0yLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9zaGFyZWQvbGliL3JvdXRlci91dGlscy9hZGQtbG9jYWxlLmpzPzAyMzEiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgICB2YWx1ZTogdHJ1ZVxufSk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJhZGRMb2NhbGVcIiwge1xuICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgZ2V0OiBmdW5jdGlvbigpIHtcbiAgICAgICAgcmV0dXJuIGFkZExvY2FsZTtcbiAgICB9XG59KTtcbmNvbnN0IF9hZGRwYXRocHJlZml4ID0gcmVxdWlyZShcIi4vYWRkLXBhdGgtcHJlZml4XCIpO1xuY29uc3QgX3BhdGhoYXNwcmVmaXggPSByZXF1aXJlKFwiLi9wYXRoLWhhcy1wcmVmaXhcIik7XG5mdW5jdGlvbiBhZGRMb2NhbGUocGF0aCwgbG9jYWxlLCBkZWZhdWx0TG9jYWxlLCBpZ25vcmVQcmVmaXgpIHtcbiAgICAvLyBJZiBubyBsb2NhbGUgd2FzIGdpdmVuIG9yIHRoZSBsb2NhbGUgaXMgdGhlIGRlZmF1bHQgbG9jYWxlLCB3ZSBkb24ndCBuZWVkXG4gICAgLy8gdG8gcHJlZml4IHRoZSBwYXRoLlxuICAgIGlmICghbG9jYWxlIHx8IGxvY2FsZSA9PT0gZGVmYXVsdExvY2FsZSkgcmV0dXJuIHBhdGg7XG4gICAgY29uc3QgbG93ZXIgPSBwYXRoLnRvTG93ZXJDYXNlKCk7XG4gICAgLy8gSWYgdGhlIHBhdGggaXMgYW4gQVBJIHBhdGggb3IgdGhlIHBhdGggYWxyZWFkeSBoYXMgdGhlIGxvY2FsZSBwcmVmaXgsIHdlXG4gICAgLy8gZG9uJ3QgbmVlZCB0byBwcmVmaXggdGhlIHBhdGguXG4gICAgaWYgKCFpZ25vcmVQcmVmaXgpIHtcbiAgICAgICAgaWYgKCgwLCBfcGF0aGhhc3ByZWZpeC5wYXRoSGFzUHJlZml4KShsb3dlciwgXCIvYXBpXCIpKSByZXR1cm4gcGF0aDtcbiAgICAgICAgaWYgKCgwLCBfcGF0aGhhc3ByZWZpeC5wYXRoSGFzUHJlZml4KShsb3dlciwgXCIvXCIgKyBsb2NhbGUudG9Mb3dlckNhc2UoKSkpIHJldHVybiBwYXRoO1xuICAgIH1cbiAgICAvLyBBZGQgdGhlIGxvY2FsZSBwcmVmaXggdG8gdGhlIHBhdGguXG4gICAgcmV0dXJuICgwLCBfYWRkcGF0aHByZWZpeC5hZGRQYXRoUHJlZml4KShwYXRoLCBcIi9cIiArIGxvY2FsZSk7XG59XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWFkZC1sb2NhbGUuanMubWFwIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiZW51bWVyYWJsZSIsImdldCIsImFkZExvY2FsZSIsIl9hZGRwYXRocHJlZml4IiwicmVxdWlyZSIsIl9wYXRoaGFzcHJlZml4IiwicGF0aCIsImxvY2FsZSIsImRlZmF1bHRMb2NhbGUiLCJpZ25vcmVQcmVmaXgiLCJsb3dlciIsInRvTG93ZXJDYXNlIiwicGF0aEhhc1ByZWZpeCIsImFkZFBhdGhQcmVmaXgiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/next/dist/shared/lib/router/utils/add-locale.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/next/dist/shared/lib/router/utils/add-path-prefix.js":
/*!***************************************************************************!*\
  !*** ./node_modules/next/dist/shared/lib/router/utils/add-path-prefix.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nObject.defineProperty(exports, \"addPathPrefix\", ({\n    enumerable: true,\n    get: function() {\n        return addPathPrefix;\n    }\n}));\nconst _parsepath = __webpack_require__(/*! ./parse-path */ \"(sc_server)/./node_modules/next/dist/shared/lib/router/utils/parse-path.js\");\nfunction addPathPrefix(path, prefix) {\n    if (!path.startsWith(\"/\") || !prefix) {\n        return path;\n    }\n    const { pathname , query , hash  } = (0, _parsepath.parsePath)(path);\n    return \"\" + prefix + pathname + query + hash;\n} //# sourceMappingURL=add-path-prefix.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L3NoYXJlZC9saWIvcm91dGVyL3V0aWxzL2FkZC1wYXRoLXByZWZpeC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFDekNHLE9BQU87QUFDWCxDQUFDLEVBQUM7QUFDRkgsaURBQWdEO0lBQzVDSSxZQUFZO0lBQ1pDLEtBQUs7UUFDRCxPQUFPQztJQUNYO0FBQ0osQ0FBQyxFQUFDO0FBQ0YsTUFBTUMsYUFBYUMsbUJBQU9BLENBQUMsZ0dBQWM7QUFDekMsU0FBU0YsY0FBY0csSUFBSSxFQUFFQyxNQUFNO0lBQy9CLElBQUksQ0FBQ0QsS0FBS0UsV0FBVyxRQUFRLENBQUNELFFBQVE7UUFDbEMsT0FBT0Q7SUFDWDtJQUNBLE1BQU0sRUFBRUcsU0FBUSxFQUFHQyxNQUFLLEVBQUdDLEtBQUksRUFBRyxHQUFHLENBQUMsR0FBR1AsV0FBV1EsU0FBUSxFQUFHTjtJQUMvRCxPQUFPLEtBQUtDLFNBQVNFLFdBQVdDLFFBQVFDO0FBQzVDLEVBRUEsMkNBQTJDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZnVsbHN0YWNrLXJvbGUtYmFzZWQtbmV4dGpzLTIvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L3NoYXJlZC9saWIvcm91dGVyL3V0aWxzL2FkZC1wYXRoLXByZWZpeC5qcz9jMTI5Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gICAgdmFsdWU6IHRydWVcbn0pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiYWRkUGF0aFByZWZpeFwiLCB7XG4gICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICBnZXQ6IGZ1bmN0aW9uKCkge1xuICAgICAgICByZXR1cm4gYWRkUGF0aFByZWZpeDtcbiAgICB9XG59KTtcbmNvbnN0IF9wYXJzZXBhdGggPSByZXF1aXJlKFwiLi9wYXJzZS1wYXRoXCIpO1xuZnVuY3Rpb24gYWRkUGF0aFByZWZpeChwYXRoLCBwcmVmaXgpIHtcbiAgICBpZiAoIXBhdGguc3RhcnRzV2l0aChcIi9cIikgfHwgIXByZWZpeCkge1xuICAgICAgICByZXR1cm4gcGF0aDtcbiAgICB9XG4gICAgY29uc3QgeyBwYXRobmFtZSAsIHF1ZXJ5ICwgaGFzaCAgfSA9ICgwLCBfcGFyc2VwYXRoLnBhcnNlUGF0aCkocGF0aCk7XG4gICAgcmV0dXJuIFwiXCIgKyBwcmVmaXggKyBwYXRobmFtZSArIHF1ZXJ5ICsgaGFzaDtcbn1cblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YWRkLXBhdGgtcHJlZml4LmpzLm1hcCJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsImVudW1lcmFibGUiLCJnZXQiLCJhZGRQYXRoUHJlZml4IiwiX3BhcnNlcGF0aCIsInJlcXVpcmUiLCJwYXRoIiwicHJlZml4Iiwic3RhcnRzV2l0aCIsInBhdGhuYW1lIiwicXVlcnkiLCJoYXNoIiwicGFyc2VQYXRoIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/next/dist/shared/lib/router/utils/add-path-prefix.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/next/dist/shared/lib/router/utils/add-path-suffix.js":
/*!***************************************************************************!*\
  !*** ./node_modules/next/dist/shared/lib/router/utils/add-path-suffix.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nObject.defineProperty(exports, \"addPathSuffix\", ({\n    enumerable: true,\n    get: function() {\n        return addPathSuffix;\n    }\n}));\nconst _parsepath = __webpack_require__(/*! ./parse-path */ \"(sc_server)/./node_modules/next/dist/shared/lib/router/utils/parse-path.js\");\nfunction addPathSuffix(path, suffix) {\n    if (!path.startsWith(\"/\") || !suffix) {\n        return path;\n    }\n    const { pathname , query , hash  } = (0, _parsepath.parsePath)(path);\n    return \"\" + pathname + suffix + query + hash;\n} //# sourceMappingURL=add-path-suffix.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L3NoYXJlZC9saWIvcm91dGVyL3V0aWxzL2FkZC1wYXRoLXN1ZmZpeC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFDekNHLE9BQU87QUFDWCxDQUFDLEVBQUM7QUFDRkgsaURBQWdEO0lBQzVDSSxZQUFZO0lBQ1pDLEtBQUs7UUFDRCxPQUFPQztJQUNYO0FBQ0osQ0FBQyxFQUFDO0FBQ0YsTUFBTUMsYUFBYUMsbUJBQU9BLENBQUMsZ0dBQWM7QUFDekMsU0FBU0YsY0FBY0csSUFBSSxFQUFFQyxNQUFNO0lBQy9CLElBQUksQ0FBQ0QsS0FBS0UsV0FBVyxRQUFRLENBQUNELFFBQVE7UUFDbEMsT0FBT0Q7SUFDWDtJQUNBLE1BQU0sRUFBRUcsU0FBUSxFQUFHQyxNQUFLLEVBQUdDLEtBQUksRUFBRyxHQUFHLENBQUMsR0FBR1AsV0FBV1EsU0FBUSxFQUFHTjtJQUMvRCxPQUFPLEtBQUtHLFdBQVdGLFNBQVNHLFFBQVFDO0FBQzVDLEVBRUEsMkNBQTJDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZnVsbHN0YWNrLXJvbGUtYmFzZWQtbmV4dGpzLTIvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L3NoYXJlZC9saWIvcm91dGVyL3V0aWxzL2FkZC1wYXRoLXN1ZmZpeC5qcz83YjM2Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gICAgdmFsdWU6IHRydWVcbn0pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiYWRkUGF0aFN1ZmZpeFwiLCB7XG4gICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICBnZXQ6IGZ1bmN0aW9uKCkge1xuICAgICAgICByZXR1cm4gYWRkUGF0aFN1ZmZpeDtcbiAgICB9XG59KTtcbmNvbnN0IF9wYXJzZXBhdGggPSByZXF1aXJlKFwiLi9wYXJzZS1wYXRoXCIpO1xuZnVuY3Rpb24gYWRkUGF0aFN1ZmZpeChwYXRoLCBzdWZmaXgpIHtcbiAgICBpZiAoIXBhdGguc3RhcnRzV2l0aChcIi9cIikgfHwgIXN1ZmZpeCkge1xuICAgICAgICByZXR1cm4gcGF0aDtcbiAgICB9XG4gICAgY29uc3QgeyBwYXRobmFtZSAsIHF1ZXJ5ICwgaGFzaCAgfSA9ICgwLCBfcGFyc2VwYXRoLnBhcnNlUGF0aCkocGF0aCk7XG4gICAgcmV0dXJuIFwiXCIgKyBwYXRobmFtZSArIHN1ZmZpeCArIHF1ZXJ5ICsgaGFzaDtcbn1cblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YWRkLXBhdGgtc3VmZml4LmpzLm1hcCJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsImVudW1lcmFibGUiLCJnZXQiLCJhZGRQYXRoU3VmZml4IiwiX3BhcnNlcGF0aCIsInJlcXVpcmUiLCJwYXRoIiwic3VmZml4Iiwic3RhcnRzV2l0aCIsInBhdGhuYW1lIiwicXVlcnkiLCJoYXNoIiwicGFyc2VQYXRoIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/next/dist/shared/lib/router/utils/add-path-suffix.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/next/dist/shared/lib/router/utils/format-next-pathname-info.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/next/dist/shared/lib/router/utils/format-next-pathname-info.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nObject.defineProperty(exports, \"formatNextPathnameInfo\", ({\n    enumerable: true,\n    get: function() {\n        return formatNextPathnameInfo;\n    }\n}));\nconst _removetrailingslash = __webpack_require__(/*! ./remove-trailing-slash */ \"(sc_server)/./node_modules/next/dist/shared/lib/router/utils/remove-trailing-slash.js\");\nconst _addpathprefix = __webpack_require__(/*! ./add-path-prefix */ \"(sc_server)/./node_modules/next/dist/shared/lib/router/utils/add-path-prefix.js\");\nconst _addpathsuffix = __webpack_require__(/*! ./add-path-suffix */ \"(sc_server)/./node_modules/next/dist/shared/lib/router/utils/add-path-suffix.js\");\nconst _addlocale = __webpack_require__(/*! ./add-locale */ \"(sc_server)/./node_modules/next/dist/shared/lib/router/utils/add-locale.js\");\nfunction formatNextPathnameInfo(info) {\n    let pathname = (0, _addlocale.addLocale)(info.pathname, info.locale, info.buildId ? undefined : info.defaultLocale, info.ignorePrefix);\n    if (info.buildId || !info.trailingSlash) {\n        pathname = (0, _removetrailingslash.removeTrailingSlash)(pathname);\n    }\n    if (info.buildId) {\n        pathname = (0, _addpathsuffix.addPathSuffix)((0, _addpathprefix.addPathPrefix)(pathname, \"/_next/data/\" + info.buildId), info.pathname === \"/\" ? \"index.json\" : \".json\");\n    }\n    pathname = (0, _addpathprefix.addPathPrefix)(pathname, info.basePath);\n    return !info.buildId && info.trailingSlash ? !pathname.endsWith(\"/\") ? (0, _addpathsuffix.addPathSuffix)(pathname, \"/\") : pathname : (0, _removetrailingslash.removeTrailingSlash)(pathname);\n} //# sourceMappingURL=format-next-pathname-info.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L3NoYXJlZC9saWIvcm91dGVyL3V0aWxzL2Zvcm1hdC1uZXh0LXBhdGhuYW1lLWluZm8uanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYkEsOENBQTZDO0lBQ3pDRyxPQUFPO0FBQ1gsQ0FBQyxFQUFDO0FBQ0ZILDBEQUF5RDtJQUNyREksWUFBWTtJQUNaQyxLQUFLO1FBQ0QsT0FBT0M7SUFDWDtBQUNKLENBQUMsRUFBQztBQUNGLE1BQU1DLHVCQUF1QkMsbUJBQU9BLENBQUMsc0hBQXlCO0FBQzlELE1BQU1DLGlCQUFpQkQsbUJBQU9BLENBQUMsMEdBQW1CO0FBQ2xELE1BQU1FLGlCQUFpQkYsbUJBQU9BLENBQUMsMEdBQW1CO0FBQ2xELE1BQU1HLGFBQWFILG1CQUFPQSxDQUFDLGdHQUFjO0FBQ3pDLFNBQVNGLHVCQUF1Qk0sSUFBSTtJQUNoQyxJQUFJQyxXQUFXLENBQUMsR0FBR0YsV0FBV0csU0FBUSxFQUFHRixLQUFLQyxVQUFVRCxLQUFLRyxRQUFRSCxLQUFLSSxVQUFVQyxZQUFZTCxLQUFLTSxlQUFlTixLQUFLTztJQUN6SCxJQUFJUCxLQUFLSSxXQUFXLENBQUNKLEtBQUtRLGVBQWU7UUFDckNQLFdBQVcsQ0FBQyxHQUFHTixxQkFBcUJjLG1CQUFrQixFQUFHUjtJQUM3RDtJQUNBLElBQUlELEtBQUtJLFNBQVM7UUFDZEgsV0FBVyxDQUFDLEdBQUdILGVBQWVZLGFBQVksRUFBRyxDQUFDLEdBQUdiLGVBQWVjLGFBQVksRUFBR1YsVUFBVSxpQkFBaUJELEtBQUtJLFVBQVVKLEtBQUtDLGFBQWEsTUFBTSxlQUFlO0lBQ3BLO0lBQ0FBLFdBQVcsQ0FBQyxHQUFHSixlQUFlYyxhQUFZLEVBQUdWLFVBQVVELEtBQUtZO0lBQzVELE9BQU8sQ0FBQ1osS0FBS0ksV0FBV0osS0FBS1EsZ0JBQWdCLENBQUNQLFNBQVNZLFNBQVMsT0FBTyxDQUFDLEdBQUdmLGVBQWVZLGFBQVksRUFBR1QsVUFBVSxPQUFPQSxXQUFXLENBQUMsR0FBR04scUJBQXFCYyxtQkFBa0IsRUFBR1I7QUFDdkwsRUFFQSxxREFBcUQiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mdWxsc3RhY2stcm9sZS1iYXNlZC1uZXh0anMtMi8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3Qvc2hhcmVkL2xpYi9yb3V0ZXIvdXRpbHMvZm9ybWF0LW5leHQtcGF0aG5hbWUtaW5mby5qcz9iMTQ2Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gICAgdmFsdWU6IHRydWVcbn0pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiZm9ybWF0TmV4dFBhdGhuYW1lSW5mb1wiLCB7XG4gICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICBnZXQ6IGZ1bmN0aW9uKCkge1xuICAgICAgICByZXR1cm4gZm9ybWF0TmV4dFBhdGhuYW1lSW5mbztcbiAgICB9XG59KTtcbmNvbnN0IF9yZW1vdmV0cmFpbGluZ3NsYXNoID0gcmVxdWlyZShcIi4vcmVtb3ZlLXRyYWlsaW5nLXNsYXNoXCIpO1xuY29uc3QgX2FkZHBhdGhwcmVmaXggPSByZXF1aXJlKFwiLi9hZGQtcGF0aC1wcmVmaXhcIik7XG5jb25zdCBfYWRkcGF0aHN1ZmZpeCA9IHJlcXVpcmUoXCIuL2FkZC1wYXRoLXN1ZmZpeFwiKTtcbmNvbnN0IF9hZGRsb2NhbGUgPSByZXF1aXJlKFwiLi9hZGQtbG9jYWxlXCIpO1xuZnVuY3Rpb24gZm9ybWF0TmV4dFBhdGhuYW1lSW5mbyhpbmZvKSB7XG4gICAgbGV0IHBhdGhuYW1lID0gKDAsIF9hZGRsb2NhbGUuYWRkTG9jYWxlKShpbmZvLnBhdGhuYW1lLCBpbmZvLmxvY2FsZSwgaW5mby5idWlsZElkID8gdW5kZWZpbmVkIDogaW5mby5kZWZhdWx0TG9jYWxlLCBpbmZvLmlnbm9yZVByZWZpeCk7XG4gICAgaWYgKGluZm8uYnVpbGRJZCB8fCAhaW5mby50cmFpbGluZ1NsYXNoKSB7XG4gICAgICAgIHBhdGhuYW1lID0gKDAsIF9yZW1vdmV0cmFpbGluZ3NsYXNoLnJlbW92ZVRyYWlsaW5nU2xhc2gpKHBhdGhuYW1lKTtcbiAgICB9XG4gICAgaWYgKGluZm8uYnVpbGRJZCkge1xuICAgICAgICBwYXRobmFtZSA9ICgwLCBfYWRkcGF0aHN1ZmZpeC5hZGRQYXRoU3VmZml4KSgoMCwgX2FkZHBhdGhwcmVmaXguYWRkUGF0aFByZWZpeCkocGF0aG5hbWUsIFwiL19uZXh0L2RhdGEvXCIgKyBpbmZvLmJ1aWxkSWQpLCBpbmZvLnBhdGhuYW1lID09PSBcIi9cIiA/IFwiaW5kZXguanNvblwiIDogXCIuanNvblwiKTtcbiAgICB9XG4gICAgcGF0aG5hbWUgPSAoMCwgX2FkZHBhdGhwcmVmaXguYWRkUGF0aFByZWZpeCkocGF0aG5hbWUsIGluZm8uYmFzZVBhdGgpO1xuICAgIHJldHVybiAhaW5mby5idWlsZElkICYmIGluZm8udHJhaWxpbmdTbGFzaCA/ICFwYXRobmFtZS5lbmRzV2l0aChcIi9cIikgPyAoMCwgX2FkZHBhdGhzdWZmaXguYWRkUGF0aFN1ZmZpeCkocGF0aG5hbWUsIFwiL1wiKSA6IHBhdGhuYW1lIDogKDAsIF9yZW1vdmV0cmFpbGluZ3NsYXNoLnJlbW92ZVRyYWlsaW5nU2xhc2gpKHBhdGhuYW1lKTtcbn1cblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Zm9ybWF0LW5leHQtcGF0aG5hbWUtaW5mby5qcy5tYXAiXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJlbnVtZXJhYmxlIiwiZ2V0IiwiZm9ybWF0TmV4dFBhdGhuYW1lSW5mbyIsIl9yZW1vdmV0cmFpbGluZ3NsYXNoIiwicmVxdWlyZSIsIl9hZGRwYXRocHJlZml4IiwiX2FkZHBhdGhzdWZmaXgiLCJfYWRkbG9jYWxlIiwiaW5mbyIsInBhdGhuYW1lIiwiYWRkTG9jYWxlIiwibG9jYWxlIiwiYnVpbGRJZCIsInVuZGVmaW5lZCIsImRlZmF1bHRMb2NhbGUiLCJpZ25vcmVQcmVmaXgiLCJ0cmFpbGluZ1NsYXNoIiwicmVtb3ZlVHJhaWxpbmdTbGFzaCIsImFkZFBhdGhTdWZmaXgiLCJhZGRQYXRoUHJlZml4IiwiYmFzZVBhdGgiLCJlbmRzV2l0aCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/next/dist/shared/lib/router/utils/format-next-pathname-info.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/next/dist/shared/lib/router/utils/get-next-pathname-info.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/next/dist/shared/lib/router/utils/get-next-pathname-info.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nObject.defineProperty(exports, \"getNextPathnameInfo\", ({\n    enumerable: true,\n    get: function() {\n        return getNextPathnameInfo;\n    }\n}));\nconst _normalizelocalepath = __webpack_require__(/*! ../../i18n/normalize-locale-path */ \"(sc_server)/./node_modules/next/dist/shared/lib/i18n/normalize-locale-path.js\");\nconst _removepathprefix = __webpack_require__(/*! ./remove-path-prefix */ \"(sc_server)/./node_modules/next/dist/shared/lib/router/utils/remove-path-prefix.js\");\nconst _pathhasprefix = __webpack_require__(/*! ./path-has-prefix */ \"(sc_server)/./node_modules/next/dist/shared/lib/router/utils/path-has-prefix.js\");\nfunction getNextPathnameInfo(pathname, options) {\n    var _options_nextConfig;\n    const { basePath , i18n , trailingSlash  } = (_options_nextConfig = options.nextConfig) != null ? _options_nextConfig : {};\n    const info = {\n        pathname: pathname,\n        trailingSlash: pathname !== \"/\" ? pathname.endsWith(\"/\") : trailingSlash\n    };\n    if (basePath && (0, _pathhasprefix.pathHasPrefix)(info.pathname, basePath)) {\n        info.pathname = (0, _removepathprefix.removePathPrefix)(info.pathname, basePath);\n        info.basePath = basePath;\n    }\n    if (options.parseData === true && info.pathname.startsWith(\"/_next/data/\") && info.pathname.endsWith(\".json\")) {\n        const paths = info.pathname.replace(/^\\/_next\\/data\\//, \"\").replace(/\\.json$/, \"\").split(\"/\");\n        const buildId = paths[0];\n        info.pathname = paths[1] !== \"index\" ? \"/\" + paths.slice(1).join(\"/\") : \"/\";\n        info.buildId = buildId;\n    }\n    // If provided, use the locale route normalizer to detect the locale instead\n    // of the function below.\n    if (options.i18nProvider) {\n        const result = options.i18nProvider.analyze(info.pathname);\n        info.locale = result.detectedLocale;\n        var _result_pathname;\n        info.pathname = (_result_pathname = result.pathname) != null ? _result_pathname : info.pathname;\n    } else if (i18n) {\n        const pathLocale = (0, _normalizelocalepath.normalizeLocalePath)(info.pathname, i18n.locales);\n        info.locale = pathLocale.detectedLocale;\n        var _pathLocale_pathname;\n        info.pathname = (_pathLocale_pathname = pathLocale.pathname) != null ? _pathLocale_pathname : info.pathname;\n    }\n    return info;\n} //# sourceMappingURL=get-next-pathname-info.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L3NoYXJlZC9saWIvcm91dGVyL3V0aWxzL2dldC1uZXh0LXBhdGhuYW1lLWluZm8uanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYkEsOENBQTZDO0lBQ3pDRyxPQUFPO0FBQ1gsQ0FBQyxFQUFDO0FBQ0ZILHVEQUFzRDtJQUNsREksWUFBWTtJQUNaQyxLQUFLO1FBQ0QsT0FBT0M7SUFDWDtBQUNKLENBQUMsRUFBQztBQUNGLE1BQU1DLHVCQUF1QkMsbUJBQU9BLENBQUMsdUhBQWtDO0FBQ3ZFLE1BQU1DLG9CQUFvQkQsbUJBQU9BLENBQUMsZ0hBQXNCO0FBQ3hELE1BQU1FLGlCQUFpQkYsbUJBQU9BLENBQUMsMEdBQW1CO0FBQ2xELFNBQVNGLG9CQUFvQkssUUFBUSxFQUFFQyxPQUFPO0lBQzFDLElBQUlDO0lBQ0osTUFBTSxFQUFFQyxTQUFRLEVBQUdDLEtBQUksRUFBR0MsY0FBYSxFQUFHLEdBQUcsQ0FBQ0gsc0JBQXNCRCxRQUFRSyxVQUFTLEtBQU0sT0FBT0osc0JBQXNCLENBQUM7SUFDekgsTUFBTUssT0FBTztRQUNUUCxVQUFVQTtRQUNWSyxlQUFlTCxhQUFhLE1BQU1BLFNBQVNRLFNBQVMsT0FBT0g7SUFDL0Q7SUFDQSxJQUFJRixZQUFZLENBQUMsR0FBR0osZUFBZVUsYUFBWSxFQUFHRixLQUFLUCxVQUFVRyxXQUFXO1FBQ3hFSSxLQUFLUCxXQUFXLENBQUMsR0FBR0Ysa0JBQWtCWSxnQkFBZSxFQUFHSCxLQUFLUCxVQUFVRztRQUN2RUksS0FBS0osV0FBV0E7SUFDcEI7SUFDQSxJQUFJRixRQUFRVSxjQUFjLFFBQVFKLEtBQUtQLFNBQVNZLFdBQVcsbUJBQW1CTCxLQUFLUCxTQUFTUSxTQUFTLFVBQVU7UUFDM0csTUFBTUssUUFBUU4sS0FBS1AsU0FBU2MsUUFBUSxvQkFBb0IsSUFBSUEsUUFBUSxXQUFXLElBQUlDLE1BQU07UUFDekYsTUFBTUMsVUFBVUgsS0FBSyxDQUFDLEVBQUU7UUFDeEJOLEtBQUtQLFdBQVdhLEtBQUssQ0FBQyxFQUFFLEtBQUssVUFBVSxNQUFNQSxNQUFNSSxNQUFNLEdBQUdDLEtBQUssT0FBTztRQUN4RVgsS0FBS1MsVUFBVUE7SUFDbkI7SUFDQSw0RUFBNEU7SUFDNUUseUJBQXlCO0lBQ3pCLElBQUlmLFFBQVFrQixjQUFjO1FBQ3RCLE1BQU1DLFNBQVNuQixRQUFRa0IsYUFBYUUsUUFBUWQsS0FBS1A7UUFDakRPLEtBQUtlLFNBQVNGLE9BQU9HO1FBQ3JCLElBQUlDO1FBQ0pqQixLQUFLUCxXQUFXLENBQUN3QixtQkFBbUJKLE9BQU9wQixRQUFPLEtBQU0sT0FBT3dCLG1CQUFtQmpCLEtBQUtQO0lBQzNGLE9BQU8sSUFBSUksTUFBTTtRQUNiLE1BQU1xQixhQUFhLENBQUMsR0FBRzdCLHFCQUFxQjhCLG1CQUFrQixFQUFHbkIsS0FBS1AsVUFBVUksS0FBS3VCO1FBQ3JGcEIsS0FBS2UsU0FBU0csV0FBV0Y7UUFDekIsSUFBSUs7UUFDSnJCLEtBQUtQLFdBQVcsQ0FBQzRCLHVCQUF1QkgsV0FBV3pCLFFBQU8sS0FBTSxPQUFPNEIsdUJBQXVCckIsS0FBS1A7SUFDdkc7SUFDQSxPQUFPTztBQUNYLEVBRUEsa0RBQWtEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZnVsbHN0YWNrLXJvbGUtYmFzZWQtbmV4dGpzLTIvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L3NoYXJlZC9saWIvcm91dGVyL3V0aWxzL2dldC1uZXh0LXBhdGhuYW1lLWluZm8uanM/MGQyNiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICAgIHZhbHVlOiB0cnVlXG59KTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcImdldE5leHRQYXRobmFtZUluZm9cIiwge1xuICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgZ2V0OiBmdW5jdGlvbigpIHtcbiAgICAgICAgcmV0dXJuIGdldE5leHRQYXRobmFtZUluZm87XG4gICAgfVxufSk7XG5jb25zdCBfbm9ybWFsaXplbG9jYWxlcGF0aCA9IHJlcXVpcmUoXCIuLi8uLi9pMThuL25vcm1hbGl6ZS1sb2NhbGUtcGF0aFwiKTtcbmNvbnN0IF9yZW1vdmVwYXRocHJlZml4ID0gcmVxdWlyZShcIi4vcmVtb3ZlLXBhdGgtcHJlZml4XCIpO1xuY29uc3QgX3BhdGhoYXNwcmVmaXggPSByZXF1aXJlKFwiLi9wYXRoLWhhcy1wcmVmaXhcIik7XG5mdW5jdGlvbiBnZXROZXh0UGF0aG5hbWVJbmZvKHBhdGhuYW1lLCBvcHRpb25zKSB7XG4gICAgdmFyIF9vcHRpb25zX25leHRDb25maWc7XG4gICAgY29uc3QgeyBiYXNlUGF0aCAsIGkxOG4gLCB0cmFpbGluZ1NsYXNoICB9ID0gKF9vcHRpb25zX25leHRDb25maWcgPSBvcHRpb25zLm5leHRDb25maWcpICE9IG51bGwgPyBfb3B0aW9uc19uZXh0Q29uZmlnIDoge307XG4gICAgY29uc3QgaW5mbyA9IHtcbiAgICAgICAgcGF0aG5hbWU6IHBhdGhuYW1lLFxuICAgICAgICB0cmFpbGluZ1NsYXNoOiBwYXRobmFtZSAhPT0gXCIvXCIgPyBwYXRobmFtZS5lbmRzV2l0aChcIi9cIikgOiB0cmFpbGluZ1NsYXNoXG4gICAgfTtcbiAgICBpZiAoYmFzZVBhdGggJiYgKDAsIF9wYXRoaGFzcHJlZml4LnBhdGhIYXNQcmVmaXgpKGluZm8ucGF0aG5hbWUsIGJhc2VQYXRoKSkge1xuICAgICAgICBpbmZvLnBhdGhuYW1lID0gKDAsIF9yZW1vdmVwYXRocHJlZml4LnJlbW92ZVBhdGhQcmVmaXgpKGluZm8ucGF0aG5hbWUsIGJhc2VQYXRoKTtcbiAgICAgICAgaW5mby5iYXNlUGF0aCA9IGJhc2VQYXRoO1xuICAgIH1cbiAgICBpZiAob3B0aW9ucy5wYXJzZURhdGEgPT09IHRydWUgJiYgaW5mby5wYXRobmFtZS5zdGFydHNXaXRoKFwiL19uZXh0L2RhdGEvXCIpICYmIGluZm8ucGF0aG5hbWUuZW5kc1dpdGgoXCIuanNvblwiKSkge1xuICAgICAgICBjb25zdCBwYXRocyA9IGluZm8ucGF0aG5hbWUucmVwbGFjZSgvXlxcL19uZXh0XFwvZGF0YVxcLy8sIFwiXCIpLnJlcGxhY2UoL1xcLmpzb24kLywgXCJcIikuc3BsaXQoXCIvXCIpO1xuICAgICAgICBjb25zdCBidWlsZElkID0gcGF0aHNbMF07XG4gICAgICAgIGluZm8ucGF0aG5hbWUgPSBwYXRoc1sxXSAhPT0gXCJpbmRleFwiID8gXCIvXCIgKyBwYXRocy5zbGljZSgxKS5qb2luKFwiL1wiKSA6IFwiL1wiO1xuICAgICAgICBpbmZvLmJ1aWxkSWQgPSBidWlsZElkO1xuICAgIH1cbiAgICAvLyBJZiBwcm92aWRlZCwgdXNlIHRoZSBsb2NhbGUgcm91dGUgbm9ybWFsaXplciB0byBkZXRlY3QgdGhlIGxvY2FsZSBpbnN0ZWFkXG4gICAgLy8gb2YgdGhlIGZ1bmN0aW9uIGJlbG93LlxuICAgIGlmIChvcHRpb25zLmkxOG5Qcm92aWRlcikge1xuICAgICAgICBjb25zdCByZXN1bHQgPSBvcHRpb25zLmkxOG5Qcm92aWRlci5hbmFseXplKGluZm8ucGF0aG5hbWUpO1xuICAgICAgICBpbmZvLmxvY2FsZSA9IHJlc3VsdC5kZXRlY3RlZExvY2FsZTtcbiAgICAgICAgdmFyIF9yZXN1bHRfcGF0aG5hbWU7XG4gICAgICAgIGluZm8ucGF0aG5hbWUgPSAoX3Jlc3VsdF9wYXRobmFtZSA9IHJlc3VsdC5wYXRobmFtZSkgIT0gbnVsbCA/IF9yZXN1bHRfcGF0aG5hbWUgOiBpbmZvLnBhdGhuYW1lO1xuICAgIH0gZWxzZSBpZiAoaTE4bikge1xuICAgICAgICBjb25zdCBwYXRoTG9jYWxlID0gKDAsIF9ub3JtYWxpemVsb2NhbGVwYXRoLm5vcm1hbGl6ZUxvY2FsZVBhdGgpKGluZm8ucGF0aG5hbWUsIGkxOG4ubG9jYWxlcyk7XG4gICAgICAgIGluZm8ubG9jYWxlID0gcGF0aExvY2FsZS5kZXRlY3RlZExvY2FsZTtcbiAgICAgICAgdmFyIF9wYXRoTG9jYWxlX3BhdGhuYW1lO1xuICAgICAgICBpbmZvLnBhdGhuYW1lID0gKF9wYXRoTG9jYWxlX3BhdGhuYW1lID0gcGF0aExvY2FsZS5wYXRobmFtZSkgIT0gbnVsbCA/IF9wYXRoTG9jYWxlX3BhdGhuYW1lIDogaW5mby5wYXRobmFtZTtcbiAgICB9XG4gICAgcmV0dXJuIGluZm87XG59XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWdldC1uZXh0LXBhdGhuYW1lLWluZm8uanMubWFwIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiZW51bWVyYWJsZSIsImdldCIsImdldE5leHRQYXRobmFtZUluZm8iLCJfbm9ybWFsaXplbG9jYWxlcGF0aCIsInJlcXVpcmUiLCJfcmVtb3ZlcGF0aHByZWZpeCIsIl9wYXRoaGFzcHJlZml4IiwicGF0aG5hbWUiLCJvcHRpb25zIiwiX29wdGlvbnNfbmV4dENvbmZpZyIsImJhc2VQYXRoIiwiaTE4biIsInRyYWlsaW5nU2xhc2giLCJuZXh0Q29uZmlnIiwiaW5mbyIsImVuZHNXaXRoIiwicGF0aEhhc1ByZWZpeCIsInJlbW92ZVBhdGhQcmVmaXgiLCJwYXJzZURhdGEiLCJzdGFydHNXaXRoIiwicGF0aHMiLCJyZXBsYWNlIiwic3BsaXQiLCJidWlsZElkIiwic2xpY2UiLCJqb2luIiwiaTE4blByb3ZpZGVyIiwicmVzdWx0IiwiYW5hbHl6ZSIsImxvY2FsZSIsImRldGVjdGVkTG9jYWxlIiwiX3Jlc3VsdF9wYXRobmFtZSIsInBhdGhMb2NhbGUiLCJub3JtYWxpemVMb2NhbGVQYXRoIiwibG9jYWxlcyIsIl9wYXRoTG9jYWxlX3BhdGhuYW1lIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/next/dist/shared/lib/router/utils/get-next-pathname-info.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/next/dist/shared/lib/router/utils/parse-path.js":
/*!**********************************************************************!*\
  !*** ./node_modules/next/dist/shared/lib/router/utils/parse-path.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("/**\n * Given a path this function will find the pathname, query and hash and return\n * them. This is useful to parse full paths on the client side.\n * @param path A path to parse e.g. /foo/bar?id=1#hash\n */ \nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nObject.defineProperty(exports, \"parsePath\", ({\n    enumerable: true,\n    get: function() {\n        return parsePath;\n    }\n}));\nfunction parsePath(path) {\n    const hashIndex = path.indexOf(\"#\");\n    const queryIndex = path.indexOf(\"?\");\n    const hasQuery = queryIndex > -1 && (hashIndex < 0 || queryIndex < hashIndex);\n    if (hasQuery || hashIndex > -1) {\n        return {\n            pathname: path.substring(0, hasQuery ? queryIndex : hashIndex),\n            query: hasQuery ? path.substring(queryIndex, hashIndex > -1 ? hashIndex : undefined) : \"\",\n            hash: hashIndex > -1 ? path.slice(hashIndex) : \"\"\n        };\n    }\n    return {\n        pathname: path,\n        query: \"\",\n        hash: \"\"\n    };\n} //# sourceMappingURL=parse-path.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L3NoYXJlZC9saWIvcm91dGVyL3V0aWxzL3BhcnNlLXBhdGguanMiLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Q0FJQyxHQUFnQjtBQUNqQkEsOENBQTZDO0lBQ3pDRyxPQUFPO0FBQ1gsQ0FBQyxFQUFDO0FBQ0ZILDZDQUE0QztJQUN4Q0ksWUFBWTtJQUNaQyxLQUFLO1FBQ0QsT0FBT0M7SUFDWDtBQUNKLENBQUMsRUFBQztBQUNGLFNBQVNBLFVBQVVDLElBQUk7SUFDbkIsTUFBTUMsWUFBWUQsS0FBS0UsUUFBUTtJQUMvQixNQUFNQyxhQUFhSCxLQUFLRSxRQUFRO0lBQ2hDLE1BQU1FLFdBQVdELGFBQWEsQ0FBQyxLQUFNRixDQUFBQSxZQUFZLEtBQUtFLGFBQWFGLFNBQVE7SUFDM0UsSUFBSUcsWUFBWUgsWUFBWSxDQUFDLEdBQUc7UUFDNUIsT0FBTztZQUNISSxVQUFVTCxLQUFLTSxVQUFVLEdBQUdGLFdBQVdELGFBQWFGO1lBQ3BETSxPQUFPSCxXQUFXSixLQUFLTSxVQUFVSCxZQUFZRixZQUFZLENBQUMsSUFBSUEsWUFBWU8sYUFBYTtZQUN2RkMsTUFBTVIsWUFBWSxDQUFDLElBQUlELEtBQUtVLE1BQU1ULGFBQWE7UUFDbkQ7SUFDSjtJQUNBLE9BQU87UUFDSEksVUFBVUw7UUFDVk8sT0FBTztRQUNQRSxNQUFNO0lBQ1Y7QUFDSixFQUVBLHNDQUFzQyIsInNvdXJjZXMiOlsid2VicGFjazovL2Z1bGxzdGFjay1yb2xlLWJhc2VkLW5leHRqcy0yLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9zaGFyZWQvbGliL3JvdXRlci91dGlscy9wYXJzZS1wYXRoLmpzP2U1MmMiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBHaXZlbiBhIHBhdGggdGhpcyBmdW5jdGlvbiB3aWxsIGZpbmQgdGhlIHBhdGhuYW1lLCBxdWVyeSBhbmQgaGFzaCBhbmQgcmV0dXJuXG4gKiB0aGVtLiBUaGlzIGlzIHVzZWZ1bCB0byBwYXJzZSBmdWxsIHBhdGhzIG9uIHRoZSBjbGllbnQgc2lkZS5cbiAqIEBwYXJhbSBwYXRoIEEgcGF0aCB0byBwYXJzZSBlLmcuIC9mb28vYmFyP2lkPTEjaGFzaFxuICovIFwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gICAgdmFsdWU6IHRydWVcbn0pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwicGFyc2VQYXRoXCIsIHtcbiAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgIGdldDogZnVuY3Rpb24oKSB7XG4gICAgICAgIHJldHVybiBwYXJzZVBhdGg7XG4gICAgfVxufSk7XG5mdW5jdGlvbiBwYXJzZVBhdGgocGF0aCkge1xuICAgIGNvbnN0IGhhc2hJbmRleCA9IHBhdGguaW5kZXhPZihcIiNcIik7XG4gICAgY29uc3QgcXVlcnlJbmRleCA9IHBhdGguaW5kZXhPZihcIj9cIik7XG4gICAgY29uc3QgaGFzUXVlcnkgPSBxdWVyeUluZGV4ID4gLTEgJiYgKGhhc2hJbmRleCA8IDAgfHwgcXVlcnlJbmRleCA8IGhhc2hJbmRleCk7XG4gICAgaWYgKGhhc1F1ZXJ5IHx8IGhhc2hJbmRleCA+IC0xKSB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBwYXRobmFtZTogcGF0aC5zdWJzdHJpbmcoMCwgaGFzUXVlcnkgPyBxdWVyeUluZGV4IDogaGFzaEluZGV4KSxcbiAgICAgICAgICAgIHF1ZXJ5OiBoYXNRdWVyeSA/IHBhdGguc3Vic3RyaW5nKHF1ZXJ5SW5kZXgsIGhhc2hJbmRleCA+IC0xID8gaGFzaEluZGV4IDogdW5kZWZpbmVkKSA6IFwiXCIsXG4gICAgICAgICAgICBoYXNoOiBoYXNoSW5kZXggPiAtMSA/IHBhdGguc2xpY2UoaGFzaEluZGV4KSA6IFwiXCJcbiAgICAgICAgfTtcbiAgICB9XG4gICAgcmV0dXJuIHtcbiAgICAgICAgcGF0aG5hbWU6IHBhdGgsXG4gICAgICAgIHF1ZXJ5OiBcIlwiLFxuICAgICAgICBoYXNoOiBcIlwiXG4gICAgfTtcbn1cblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cGFyc2UtcGF0aC5qcy5tYXAiXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJlbnVtZXJhYmxlIiwiZ2V0IiwicGFyc2VQYXRoIiwicGF0aCIsImhhc2hJbmRleCIsImluZGV4T2YiLCJxdWVyeUluZGV4IiwiaGFzUXVlcnkiLCJwYXRobmFtZSIsInN1YnN0cmluZyIsInF1ZXJ5IiwidW5kZWZpbmVkIiwiaGFzaCIsInNsaWNlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/next/dist/shared/lib/router/utils/parse-path.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/next/dist/shared/lib/router/utils/path-has-prefix.js":
/*!***************************************************************************!*\
  !*** ./node_modules/next/dist/shared/lib/router/utils/path-has-prefix.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nObject.defineProperty(exports, \"pathHasPrefix\", ({\n    enumerable: true,\n    get: function() {\n        return pathHasPrefix;\n    }\n}));\nconst _parsepath = __webpack_require__(/*! ./parse-path */ \"(sc_server)/./node_modules/next/dist/shared/lib/router/utils/parse-path.js\");\nfunction pathHasPrefix(path, prefix) {\n    if (typeof path !== \"string\") {\n        return false;\n    }\n    const { pathname  } = (0, _parsepath.parsePath)(path);\n    return pathname === prefix || pathname.startsWith(prefix + \"/\");\n} //# sourceMappingURL=path-has-prefix.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L3NoYXJlZC9saWIvcm91dGVyL3V0aWxzL3BhdGgtaGFzLXByZWZpeC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFDekNHLE9BQU87QUFDWCxDQUFDLEVBQUM7QUFDRkgsaURBQWdEO0lBQzVDSSxZQUFZO0lBQ1pDLEtBQUs7UUFDRCxPQUFPQztJQUNYO0FBQ0osQ0FBQyxFQUFDO0FBQ0YsTUFBTUMsYUFBYUMsbUJBQU9BLENBQUMsZ0dBQWM7QUFDekMsU0FBU0YsY0FBY0csSUFBSSxFQUFFQyxNQUFNO0lBQy9CLElBQUksT0FBT0QsU0FBUyxVQUFVO1FBQzFCLE9BQU87SUFDWDtJQUNBLE1BQU0sRUFBRUUsU0FBUSxFQUFHLEdBQUcsQ0FBQyxHQUFHSixXQUFXSyxTQUFRLEVBQUdIO0lBQ2hELE9BQU9FLGFBQWFELFVBQVVDLFNBQVNFLFdBQVdILFNBQVM7QUFDL0QsRUFFQSwyQ0FBMkMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mdWxsc3RhY2stcm9sZS1iYXNlZC1uZXh0anMtMi8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3Qvc2hhcmVkL2xpYi9yb3V0ZXIvdXRpbHMvcGF0aC1oYXMtcHJlZml4LmpzP2I1MzgiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgICB2YWx1ZTogdHJ1ZVxufSk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJwYXRoSGFzUHJlZml4XCIsIHtcbiAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgIGdldDogZnVuY3Rpb24oKSB7XG4gICAgICAgIHJldHVybiBwYXRoSGFzUHJlZml4O1xuICAgIH1cbn0pO1xuY29uc3QgX3BhcnNlcGF0aCA9IHJlcXVpcmUoXCIuL3BhcnNlLXBhdGhcIik7XG5mdW5jdGlvbiBwYXRoSGFzUHJlZml4KHBhdGgsIHByZWZpeCkge1xuICAgIGlmICh0eXBlb2YgcGF0aCAhPT0gXCJzdHJpbmdcIikge1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICAgIGNvbnN0IHsgcGF0aG5hbWUgIH0gPSAoMCwgX3BhcnNlcGF0aC5wYXJzZVBhdGgpKHBhdGgpO1xuICAgIHJldHVybiBwYXRobmFtZSA9PT0gcHJlZml4IHx8IHBhdGhuYW1lLnN0YXJ0c1dpdGgocHJlZml4ICsgXCIvXCIpO1xufVxuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1wYXRoLWhhcy1wcmVmaXguanMubWFwIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiZW51bWVyYWJsZSIsImdldCIsInBhdGhIYXNQcmVmaXgiLCJfcGFyc2VwYXRoIiwicmVxdWlyZSIsInBhdGgiLCJwcmVmaXgiLCJwYXRobmFtZSIsInBhcnNlUGF0aCIsInN0YXJ0c1dpdGgiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/next/dist/shared/lib/router/utils/path-has-prefix.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/next/dist/shared/lib/router/utils/remove-path-prefix.js":
/*!******************************************************************************!*\
  !*** ./node_modules/next/dist/shared/lib/router/utils/remove-path-prefix.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nObject.defineProperty(exports, \"removePathPrefix\", ({\n    enumerable: true,\n    get: function() {\n        return removePathPrefix;\n    }\n}));\nconst _pathhasprefix = __webpack_require__(/*! ./path-has-prefix */ \"(sc_server)/./node_modules/next/dist/shared/lib/router/utils/path-has-prefix.js\");\nfunction removePathPrefix(path, prefix) {\n    // If the path doesn't start with the prefix we can return it as is. This\n    // protects us from situations where the prefix is a substring of the path\n    // prefix such as:\n    //\n    // For prefix: /blog\n    //\n    //   /blog -> true\n    //   /blog/ -> true\n    //   /blog/1 -> true\n    //   /blogging -> false\n    //   /blogging/ -> false\n    //   /blogging/1 -> false\n    if (!(0, _pathhasprefix.pathHasPrefix)(path, prefix)) {\n        return path;\n    }\n    // Remove the prefix from the path via slicing.\n    const withoutPrefix = path.slice(prefix.length);\n    // If the path without the prefix starts with a `/` we can return it as is.\n    if (withoutPrefix.startsWith(\"/\")) {\n        return withoutPrefix;\n    }\n    // If the path without the prefix doesn't start with a `/` we need to add it\n    // back to the path to make sure it's a valid path.\n    return \"/\" + withoutPrefix;\n} //# sourceMappingURL=remove-path-prefix.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L3NoYXJlZC9saWIvcm91dGVyL3V0aWxzL3JlbW92ZS1wYXRoLXByZWZpeC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFDekNHLE9BQU87QUFDWCxDQUFDLEVBQUM7QUFDRkgsb0RBQW1EO0lBQy9DSSxZQUFZO0lBQ1pDLEtBQUs7UUFDRCxPQUFPQztJQUNYO0FBQ0osQ0FBQyxFQUFDO0FBQ0YsTUFBTUMsaUJBQWlCQyxtQkFBT0EsQ0FBQywwR0FBbUI7QUFDbEQsU0FBU0YsaUJBQWlCRyxJQUFJLEVBQUVDLE1BQU07SUFDbEMseUVBQXlFO0lBQ3pFLDBFQUEwRTtJQUMxRSxrQkFBa0I7SUFDbEIsRUFBRTtJQUNGLG9CQUFvQjtJQUNwQixFQUFFO0lBQ0Ysa0JBQWtCO0lBQ2xCLG1CQUFtQjtJQUNuQixvQkFBb0I7SUFDcEIsdUJBQXVCO0lBQ3ZCLHdCQUF3QjtJQUN4Qix5QkFBeUI7SUFDekIsSUFBSSxDQUFDLENBQUMsR0FBR0gsZUFBZUksYUFBWSxFQUFHRixNQUFNQyxTQUFTO1FBQ2xELE9BQU9EO0lBQ1g7SUFDQSwrQ0FBK0M7SUFDL0MsTUFBTUcsZ0JBQWdCSCxLQUFLSSxNQUFNSCxPQUFPSTtJQUN4QywyRUFBMkU7SUFDM0UsSUFBSUYsY0FBY0csV0FBVyxNQUFNO1FBQy9CLE9BQU9IO0lBQ1g7SUFDQSw0RUFBNEU7SUFDNUUsbURBQW1EO0lBQ25ELE9BQU8sTUFBTUE7QUFDakIsRUFFQSw4Q0FBOEMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mdWxsc3RhY2stcm9sZS1iYXNlZC1uZXh0anMtMi8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3Qvc2hhcmVkL2xpYi9yb3V0ZXIvdXRpbHMvcmVtb3ZlLXBhdGgtcHJlZml4LmpzPzYxNDMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgICB2YWx1ZTogdHJ1ZVxufSk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJyZW1vdmVQYXRoUHJlZml4XCIsIHtcbiAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgIGdldDogZnVuY3Rpb24oKSB7XG4gICAgICAgIHJldHVybiByZW1vdmVQYXRoUHJlZml4O1xuICAgIH1cbn0pO1xuY29uc3QgX3BhdGhoYXNwcmVmaXggPSByZXF1aXJlKFwiLi9wYXRoLWhhcy1wcmVmaXhcIik7XG5mdW5jdGlvbiByZW1vdmVQYXRoUHJlZml4KHBhdGgsIHByZWZpeCkge1xuICAgIC8vIElmIHRoZSBwYXRoIGRvZXNuJ3Qgc3RhcnQgd2l0aCB0aGUgcHJlZml4IHdlIGNhbiByZXR1cm4gaXQgYXMgaXMuIFRoaXNcbiAgICAvLyBwcm90ZWN0cyB1cyBmcm9tIHNpdHVhdGlvbnMgd2hlcmUgdGhlIHByZWZpeCBpcyBhIHN1YnN0cmluZyBvZiB0aGUgcGF0aFxuICAgIC8vIHByZWZpeCBzdWNoIGFzOlxuICAgIC8vXG4gICAgLy8gRm9yIHByZWZpeDogL2Jsb2dcbiAgICAvL1xuICAgIC8vICAgL2Jsb2cgLT4gdHJ1ZVxuICAgIC8vICAgL2Jsb2cvIC0+IHRydWVcbiAgICAvLyAgIC9ibG9nLzEgLT4gdHJ1ZVxuICAgIC8vICAgL2Jsb2dnaW5nIC0+IGZhbHNlXG4gICAgLy8gICAvYmxvZ2dpbmcvIC0+IGZhbHNlXG4gICAgLy8gICAvYmxvZ2dpbmcvMSAtPiBmYWxzZVxuICAgIGlmICghKDAsIF9wYXRoaGFzcHJlZml4LnBhdGhIYXNQcmVmaXgpKHBhdGgsIHByZWZpeCkpIHtcbiAgICAgICAgcmV0dXJuIHBhdGg7XG4gICAgfVxuICAgIC8vIFJlbW92ZSB0aGUgcHJlZml4IGZyb20gdGhlIHBhdGggdmlhIHNsaWNpbmcuXG4gICAgY29uc3Qgd2l0aG91dFByZWZpeCA9IHBhdGguc2xpY2UocHJlZml4Lmxlbmd0aCk7XG4gICAgLy8gSWYgdGhlIHBhdGggd2l0aG91dCB0aGUgcHJlZml4IHN0YXJ0cyB3aXRoIGEgYC9gIHdlIGNhbiByZXR1cm4gaXQgYXMgaXMuXG4gICAgaWYgKHdpdGhvdXRQcmVmaXguc3RhcnRzV2l0aChcIi9cIikpIHtcbiAgICAgICAgcmV0dXJuIHdpdGhvdXRQcmVmaXg7XG4gICAgfVxuICAgIC8vIElmIHRoZSBwYXRoIHdpdGhvdXQgdGhlIHByZWZpeCBkb2Vzbid0IHN0YXJ0IHdpdGggYSBgL2Agd2UgbmVlZCB0byBhZGQgaXRcbiAgICAvLyBiYWNrIHRvIHRoZSBwYXRoIHRvIG1ha2Ugc3VyZSBpdCdzIGEgdmFsaWQgcGF0aC5cbiAgICByZXR1cm4gXCIvXCIgKyB3aXRob3V0UHJlZml4O1xufVxuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1yZW1vdmUtcGF0aC1wcmVmaXguanMubWFwIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiZW51bWVyYWJsZSIsImdldCIsInJlbW92ZVBhdGhQcmVmaXgiLCJfcGF0aGhhc3ByZWZpeCIsInJlcXVpcmUiLCJwYXRoIiwicHJlZml4IiwicGF0aEhhc1ByZWZpeCIsIndpdGhvdXRQcmVmaXgiLCJzbGljZSIsImxlbmd0aCIsInN0YXJ0c1dpdGgiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/next/dist/shared/lib/router/utils/remove-path-prefix.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/next/dist/shared/lib/router/utils/remove-trailing-slash.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/next/dist/shared/lib/router/utils/remove-trailing-slash.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("/**\n * Removes the trailing slash for a given route or page path. Preserves the\n * root page. Examples:\n *   - `/foo/bar/` -> `/foo/bar`\n *   - `/foo/bar` -> `/foo/bar`\n *   - `/` -> `/`\n */ \nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nObject.defineProperty(exports, \"removeTrailingSlash\", ({\n    enumerable: true,\n    get: function() {\n        return removeTrailingSlash;\n    }\n}));\nfunction removeTrailingSlash(route) {\n    return route.replace(/\\/$/, \"\") || \"/\";\n} //# sourceMappingURL=remove-trailing-slash.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L3NoYXJlZC9saWIvcm91dGVyL3V0aWxzL3JlbW92ZS10cmFpbGluZy1zbGFzaC5qcyIsIm1hcHBpbmdzIjoiQUFBQTs7Ozs7O0NBTUMsR0FBZ0I7QUFDakJBLDhDQUE2QztJQUN6Q0csT0FBTztBQUNYLENBQUMsRUFBQztBQUNGSCx1REFBc0Q7SUFDbERJLFlBQVk7SUFDWkMsS0FBSztRQUNELE9BQU9DO0lBQ1g7QUFDSixDQUFDLEVBQUM7QUFDRixTQUFTQSxvQkFBb0JDLEtBQUs7SUFDOUIsT0FBT0EsTUFBTUMsUUFBUSxPQUFPLE9BQU87QUFDdkMsRUFFQSxpREFBaUQiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mdWxsc3RhY2stcm9sZS1iYXNlZC1uZXh0anMtMi8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3Qvc2hhcmVkL2xpYi9yb3V0ZXIvdXRpbHMvcmVtb3ZlLXRyYWlsaW5nLXNsYXNoLmpzP2VjMDYiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBSZW1vdmVzIHRoZSB0cmFpbGluZyBzbGFzaCBmb3IgYSBnaXZlbiByb3V0ZSBvciBwYWdlIHBhdGguIFByZXNlcnZlcyB0aGVcbiAqIHJvb3QgcGFnZS4gRXhhbXBsZXM6XG4gKiAgIC0gYC9mb28vYmFyL2AgLT4gYC9mb28vYmFyYFxuICogICAtIGAvZm9vL2JhcmAgLT4gYC9mb28vYmFyYFxuICogICAtIGAvYCAtPiBgL2BcbiAqLyBcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICAgIHZhbHVlOiB0cnVlXG59KTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcInJlbW92ZVRyYWlsaW5nU2xhc2hcIiwge1xuICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgZ2V0OiBmdW5jdGlvbigpIHtcbiAgICAgICAgcmV0dXJuIHJlbW92ZVRyYWlsaW5nU2xhc2g7XG4gICAgfVxufSk7XG5mdW5jdGlvbiByZW1vdmVUcmFpbGluZ1NsYXNoKHJvdXRlKSB7XG4gICAgcmV0dXJuIHJvdXRlLnJlcGxhY2UoL1xcLyQvLCBcIlwiKSB8fCBcIi9cIjtcbn1cblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cmVtb3ZlLXRyYWlsaW5nLXNsYXNoLmpzLm1hcCJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsImVudW1lcmFibGUiLCJnZXQiLCJyZW1vdmVUcmFpbGluZ1NsYXNoIiwicm91dGUiLCJyZXBsYWNlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/next/dist/shared/lib/router/utils/remove-trailing-slash.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/next/headers.js":
/*!**************************************!*\
  !*** ./node_modules/next/headers.js ***!
  \**************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nmodule.exports = __webpack_require__(/*! ./dist/client/components/headers */ \"(sc_server)/./node_modules/next/dist/client/components/headers.js\");\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvbmV4dC9oZWFkZXJzLmpzIiwibWFwcGluZ3MiOiI7QUFBQUEsaUpBQXlCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZnVsbHN0YWNrLXJvbGUtYmFzZWQtbmV4dGpzLTIvLi9ub2RlX21vZHVsZXMvbmV4dC9oZWFkZXJzLmpzP2RmZjIiXSwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Rpc3QvY2xpZW50L2NvbXBvbmVudHMvaGVhZGVycycpXG4iXSwibmFtZXMiOlsibW9kdWxlIiwiZXhwb3J0cyIsInJlcXVpcmUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/next/headers.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/oauth/index.js":
/*!*************************************!*\
  !*** ./node_modules/oauth/index.js ***!
  \*************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("exports.OAuth = __webpack_require__(/*! ./lib/oauth */ \"(sc_server)/./node_modules/oauth/lib/oauth.js\").OAuth;\nexports.OAuthEcho = __webpack_require__(/*! ./lib/oauth */ \"(sc_server)/./node_modules/oauth/lib/oauth.js\").OAuthEcho;\nexports.OAuth2 = __webpack_require__(/*! ./lib/oauth2 */ \"(sc_server)/./node_modules/oauth/lib/oauth2.js\").OAuth2;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvb2F1dGgvaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQUFBLDZHQUE0Q0M7QUFDNUNELHFIQUFvREc7QUFDcERILGlIQUErQ0kiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mdWxsc3RhY2stcm9sZS1iYXNlZC1uZXh0anMtMi8uL25vZGVfbW9kdWxlcy9vYXV0aC9pbmRleC5qcz81ODk1Il0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydHMuT0F1dGggPSByZXF1aXJlKFwiLi9saWIvb2F1dGhcIikuT0F1dGg7XG5leHBvcnRzLk9BdXRoRWNobyA9IHJlcXVpcmUoXCIuL2xpYi9vYXV0aFwiKS5PQXV0aEVjaG87XG5leHBvcnRzLk9BdXRoMiA9IHJlcXVpcmUoXCIuL2xpYi9vYXV0aDJcIikuT0F1dGgyOyJdLCJuYW1lcyI6WyJleHBvcnRzIiwiT0F1dGgiLCJyZXF1aXJlIiwiT0F1dGhFY2hvIiwiT0F1dGgyIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/oauth/index.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/oauth/lib/_utils.js":
/*!******************************************!*\
  !*** ./node_modules/oauth/lib/_utils.js ***!
  \******************************************/
/***/ ((module) => {

"use strict";
eval("// Returns true if this is a host that closes *before* it ends?!?!\n\nmodule.exports.isAnEarlyCloseHost = function(hostName) {\n    return hostName && hostName.match(\".*google(apis)?.com$\");\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvb2F1dGgvbGliL191dGlscy5qcyIsIm1hcHBpbmdzIjoiQUFBQSxrRUFBa0U7O0FBQ2xFQSxpQ0FBaUNFLEdBQUUsU0FBVUMsUUFBUTtJQUNuRCxPQUFPQSxZQUFZQSxTQUFTQyxNQUFNO0FBQ3BDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZnVsbHN0YWNrLXJvbGUtYmFzZWQtbmV4dGpzLTIvLi9ub2RlX21vZHVsZXMvb2F1dGgvbGliL191dGlscy5qcz8xMzkzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIFJldHVybnMgdHJ1ZSBpZiB0aGlzIGlzIGEgaG9zdCB0aGF0IGNsb3NlcyAqYmVmb3JlKiBpdCBlbmRzPyE/IVxubW9kdWxlLmV4cG9ydHMuaXNBbkVhcmx5Q2xvc2VIb3N0PSBmdW5jdGlvbiggaG9zdE5hbWUgKSB7XG4gIHJldHVybiBob3N0TmFtZSAmJiBob3N0TmFtZS5tYXRjaChcIi4qZ29vZ2xlKGFwaXMpPy5jb20kXCIpXG59Il0sIm5hbWVzIjpbIm1vZHVsZSIsImV4cG9ydHMiLCJpc0FuRWFybHlDbG9zZUhvc3QiLCJob3N0TmFtZSIsIm1hdGNoIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/oauth/lib/_utils.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/oauth/lib/oauth.js":
/*!*****************************************!*\
  !*** ./node_modules/oauth/lib/oauth.js ***!
  \*****************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("var crypto = __webpack_require__(/*! crypto */ \"crypto\"), sha1 = __webpack_require__(/*! ./sha1 */ \"(sc_server)/./node_modules/oauth/lib/sha1.js\"), http = __webpack_require__(/*! http */ \"http\"), https = __webpack_require__(/*! https */ \"https\"), URL = __webpack_require__(/*! url */ \"url\"), querystring = __webpack_require__(/*! querystring */ \"querystring\"), OAuthUtils = __webpack_require__(/*! ./_utils */ \"(sc_server)/./node_modules/oauth/lib/_utils.js\");\nexports.OAuth = function(requestUrl, accessUrl, consumerKey, consumerSecret, version, authorize_callback, signatureMethod, nonceSize, customHeaders) {\n    this._isEcho = false;\n    this._requestUrl = requestUrl;\n    this._accessUrl = accessUrl;\n    this._consumerKey = consumerKey;\n    this._consumerSecret = this._encodeData(consumerSecret);\n    if (signatureMethod == \"RSA-SHA1\") {\n        this._privateKey = consumerSecret;\n    }\n    this._version = version;\n    if (authorize_callback === undefined) {\n        this._authorize_callback = \"oob\";\n    } else {\n        this._authorize_callback = authorize_callback;\n    }\n    if (signatureMethod != \"PLAINTEXT\" && signatureMethod != \"HMAC-SHA1\" && signatureMethod != \"RSA-SHA1\") throw new Error(\"Un-supported signature method: \" + signatureMethod);\n    this._signatureMethod = signatureMethod;\n    this._nonceSize = nonceSize || 32;\n    this._headers = customHeaders || {\n        \"Accept\": \"*/*\",\n        \"Connection\": \"close\",\n        \"User-Agent\": \"Node authentication\"\n    };\n    this._clientOptions = this._defaultClientOptions = {\n        \"requestTokenHttpMethod\": \"POST\",\n        \"accessTokenHttpMethod\": \"POST\",\n        \"followRedirects\": true\n    };\n    this._oauthParameterSeperator = \",\";\n};\nexports.OAuthEcho = function(realm, verify_credentials, consumerKey, consumerSecret, version, signatureMethod, nonceSize, customHeaders) {\n    this._isEcho = true;\n    this._realm = realm;\n    this._verifyCredentials = verify_credentials;\n    this._consumerKey = consumerKey;\n    this._consumerSecret = this._encodeData(consumerSecret);\n    if (signatureMethod == \"RSA-SHA1\") {\n        this._privateKey = consumerSecret;\n    }\n    this._version = version;\n    if (signatureMethod != \"PLAINTEXT\" && signatureMethod != \"HMAC-SHA1\" && signatureMethod != \"RSA-SHA1\") throw new Error(\"Un-supported signature method: \" + signatureMethod);\n    this._signatureMethod = signatureMethod;\n    this._nonceSize = nonceSize || 32;\n    this._headers = customHeaders || {\n        \"Accept\": \"*/*\",\n        \"Connection\": \"close\",\n        \"User-Agent\": \"Node authentication\"\n    };\n    this._oauthParameterSeperator = \",\";\n};\nexports.OAuthEcho.prototype = exports.OAuth.prototype;\nexports.OAuth.prototype._getTimestamp = function() {\n    return Math.floor(new Date().getTime() / 1000);\n};\nexports.OAuth.prototype._encodeData = function(toEncode) {\n    if (toEncode == null || toEncode == \"\") return \"\";\n    else {\n        var result = encodeURIComponent(toEncode);\n        // Fix the mismatch between OAuth's  RFC3986's and Javascript's beliefs in what is right and wrong ;)\n        return result.replace(/\\!/g, \"%21\").replace(/\\'/g, \"%27\").replace(/\\(/g, \"%28\").replace(/\\)/g, \"%29\").replace(/\\*/g, \"%2A\");\n    }\n};\nexports.OAuth.prototype._decodeData = function(toDecode) {\n    if (toDecode != null) {\n        toDecode = toDecode.replace(/\\+/g, \" \");\n    }\n    return decodeURIComponent(toDecode);\n};\nexports.OAuth.prototype._getSignature = function(method, url, parameters, tokenSecret) {\n    var signatureBase = this._createSignatureBase(method, url, parameters);\n    return this._createSignature(signatureBase, tokenSecret);\n};\nexports.OAuth.prototype._normalizeUrl = function(url) {\n    var parsedUrl = URL.parse(url, true);\n    var port = \"\";\n    if (parsedUrl.port) {\n        if (parsedUrl.protocol == \"http:\" && parsedUrl.port != \"80\" || parsedUrl.protocol == \"https:\" && parsedUrl.port != \"443\") {\n            port = \":\" + parsedUrl.port;\n        }\n    }\n    if (!parsedUrl.pathname || parsedUrl.pathname == \"\") parsedUrl.pathname = \"/\";\n    return parsedUrl.protocol + \"//\" + parsedUrl.hostname + port + parsedUrl.pathname;\n};\n// Is the parameter considered an OAuth parameter\nexports.OAuth.prototype._isParameterNameAnOAuthParameter = function(parameter) {\n    var m = parameter.match(\"^oauth_\");\n    if (m && m[0] === \"oauth_\") {\n        return true;\n    } else {\n        return false;\n    }\n};\n// build the OAuth request authorization header\nexports.OAuth.prototype._buildAuthorizationHeaders = function(orderedParameters) {\n    var authHeader = \"OAuth \";\n    if (this._isEcho) {\n        authHeader += 'realm=\"' + this._realm + '\",';\n    }\n    for(var i = 0; i < orderedParameters.length; i++){\n        // Whilst the all the parameters should be included within the signature, only the oauth_ arguments\n        // should appear within the authorization header.\n        if (this._isParameterNameAnOAuthParameter(orderedParameters[i][0])) {\n            authHeader += \"\" + this._encodeData(orderedParameters[i][0]) + '=\"' + this._encodeData(orderedParameters[i][1]) + '\"' + this._oauthParameterSeperator;\n        }\n    }\n    authHeader = authHeader.substring(0, authHeader.length - this._oauthParameterSeperator.length);\n    return authHeader;\n};\n// Takes an object literal that represents the arguments, and returns an array\n// of argument/value pairs.\nexports.OAuth.prototype._makeArrayOfArgumentsHash = function(argumentsHash) {\n    var argument_pairs = [];\n    for(var key in argumentsHash){\n        if (argumentsHash.hasOwnProperty(key)) {\n            var value = argumentsHash[key];\n            if (Array.isArray(value)) {\n                for(var i = 0; i < value.length; i++){\n                    argument_pairs[argument_pairs.length] = [\n                        key,\n                        value[i]\n                    ];\n                }\n            } else {\n                argument_pairs[argument_pairs.length] = [\n                    key,\n                    value\n                ];\n            }\n        }\n    }\n    return argument_pairs;\n};\n// Sorts the encoded key value pairs by encoded name, then encoded value\nexports.OAuth.prototype._sortRequestParams = function(argument_pairs) {\n    // Sort by name, then value.\n    argument_pairs.sort(function(a, b) {\n        if (a[0] == b[0]) {\n            return a[1] < b[1] ? -1 : 1;\n        } else return a[0] < b[0] ? -1 : 1;\n    });\n    return argument_pairs;\n};\nexports.OAuth.prototype._normaliseRequestParams = function(args) {\n    var argument_pairs = this._makeArrayOfArgumentsHash(args);\n    // First encode them #3.4.1.3.2 .1\n    for(var i = 0; i < argument_pairs.length; i++){\n        argument_pairs[i][0] = this._encodeData(argument_pairs[i][0]);\n        argument_pairs[i][1] = this._encodeData(argument_pairs[i][1]);\n    }\n    // Then sort them #3.4.1.3.2 .2\n    argument_pairs = this._sortRequestParams(argument_pairs);\n    // Then concatenate together #3.4.1.3.2 .3 & .4\n    var args = \"\";\n    for(var i = 0; i < argument_pairs.length; i++){\n        args += argument_pairs[i][0];\n        args += \"=\";\n        args += argument_pairs[i][1];\n        if (i < argument_pairs.length - 1) args += \"&\";\n    }\n    return args;\n};\nexports.OAuth.prototype._createSignatureBase = function(method, url, parameters) {\n    url = this._encodeData(this._normalizeUrl(url));\n    parameters = this._encodeData(parameters);\n    return method.toUpperCase() + \"&\" + url + \"&\" + parameters;\n};\nexports.OAuth.prototype._createSignature = function(signatureBase, tokenSecret) {\n    if (tokenSecret === undefined) var tokenSecret = \"\";\n    else tokenSecret = this._encodeData(tokenSecret);\n    // consumerSecret is already encoded\n    var key = this._consumerSecret + \"&\" + tokenSecret;\n    var hash = \"\";\n    if (this._signatureMethod == \"PLAINTEXT\") {\n        hash = key;\n    } else if (this._signatureMethod == \"RSA-SHA1\") {\n        key = this._privateKey || \"\";\n        hash = crypto.createSign(\"RSA-SHA1\").update(signatureBase).sign(key, \"base64\");\n    } else {\n        if (crypto.Hmac) {\n            hash = crypto.createHmac(\"sha1\", key).update(signatureBase).digest(\"base64\");\n        } else {\n            hash = sha1.HMACSHA1(key, signatureBase);\n        }\n    }\n    return hash;\n};\nexports.OAuth.prototype.NONCE_CHARS = [\n    \"a\",\n    \"b\",\n    \"c\",\n    \"d\",\n    \"e\",\n    \"f\",\n    \"g\",\n    \"h\",\n    \"i\",\n    \"j\",\n    \"k\",\n    \"l\",\n    \"m\",\n    \"n\",\n    \"o\",\n    \"p\",\n    \"q\",\n    \"r\",\n    \"s\",\n    \"t\",\n    \"u\",\n    \"v\",\n    \"w\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"A\",\n    \"B\",\n    \"C\",\n    \"D\",\n    \"E\",\n    \"F\",\n    \"G\",\n    \"H\",\n    \"I\",\n    \"J\",\n    \"K\",\n    \"L\",\n    \"M\",\n    \"N\",\n    \"O\",\n    \"P\",\n    \"Q\",\n    \"R\",\n    \"S\",\n    \"T\",\n    \"U\",\n    \"V\",\n    \"W\",\n    \"X\",\n    \"Y\",\n    \"Z\",\n    \"0\",\n    \"1\",\n    \"2\",\n    \"3\",\n    \"4\",\n    \"5\",\n    \"6\",\n    \"7\",\n    \"8\",\n    \"9\"\n];\nexports.OAuth.prototype._getNonce = function(nonceSize) {\n    var result = [];\n    var chars = this.NONCE_CHARS;\n    var char_pos;\n    var nonce_chars_length = chars.length;\n    for(var i = 0; i < nonceSize; i++){\n        char_pos = Math.floor(Math.random() * nonce_chars_length);\n        result[i] = chars[char_pos];\n    }\n    return result.join(\"\");\n};\nexports.OAuth.prototype._createClient = function(port, hostname, method, path, headers, sslEnabled) {\n    var options = {\n        host: hostname,\n        port: port,\n        path: path,\n        method: method,\n        headers: headers\n    };\n    var httpModel;\n    if (sslEnabled) {\n        httpModel = https;\n    } else {\n        httpModel = http;\n    }\n    return httpModel.request(options);\n};\nexports.OAuth.prototype._prepareParameters = function(oauth_token, oauth_token_secret, method, url, extra_params) {\n    var oauthParameters = {\n        \"oauth_timestamp\": this._getTimestamp(),\n        \"oauth_nonce\": this._getNonce(this._nonceSize),\n        \"oauth_version\": this._version,\n        \"oauth_signature_method\": this._signatureMethod,\n        \"oauth_consumer_key\": this._consumerKey\n    };\n    if (oauth_token) {\n        oauthParameters[\"oauth_token\"] = oauth_token;\n    }\n    var sig;\n    if (this._isEcho) {\n        sig = this._getSignature(\"GET\", this._verifyCredentials, this._normaliseRequestParams(oauthParameters), oauth_token_secret);\n    } else {\n        if (extra_params) {\n            for(var key in extra_params){\n                if (extra_params.hasOwnProperty(key)) oauthParameters[key] = extra_params[key];\n            }\n        }\n        var parsedUrl = URL.parse(url, false);\n        if (parsedUrl.query) {\n            var key2;\n            var extraParameters = querystring.parse(parsedUrl.query);\n            for(var key in extraParameters){\n                var value = extraParameters[key];\n                if (typeof value == \"object\") {\n                    // TODO: This probably should be recursive\n                    for(key2 in value){\n                        oauthParameters[key + \"[\" + key2 + \"]\"] = value[key2];\n                    }\n                } else {\n                    oauthParameters[key] = value;\n                }\n            }\n        }\n        sig = this._getSignature(method, url, this._normaliseRequestParams(oauthParameters), oauth_token_secret);\n    }\n    var orderedParameters = this._sortRequestParams(this._makeArrayOfArgumentsHash(oauthParameters));\n    orderedParameters[orderedParameters.length] = [\n        \"oauth_signature\",\n        sig\n    ];\n    return orderedParameters;\n};\nexports.OAuth.prototype._performSecureRequest = function(oauth_token, oauth_token_secret, method, url, extra_params, post_body, post_content_type, callback) {\n    var orderedParameters = this._prepareParameters(oauth_token, oauth_token_secret, method, url, extra_params);\n    if (!post_content_type) {\n        post_content_type = \"application/x-www-form-urlencoded\";\n    }\n    var parsedUrl = URL.parse(url, false);\n    if (parsedUrl.protocol == \"http:\" && !parsedUrl.port) parsedUrl.port = 80;\n    if (parsedUrl.protocol == \"https:\" && !parsedUrl.port) parsedUrl.port = 443;\n    var headers = {};\n    var authorization = this._buildAuthorizationHeaders(orderedParameters);\n    if (this._isEcho) {\n        headers[\"X-Verify-Credentials-Authorization\"] = authorization;\n    } else {\n        headers[\"Authorization\"] = authorization;\n    }\n    headers[\"Host\"] = parsedUrl.host;\n    for(var key in this._headers){\n        if (this._headers.hasOwnProperty(key)) {\n            headers[key] = this._headers[key];\n        }\n    }\n    // Filter out any passed extra_params that are really to do with OAuth\n    for(var key in extra_params){\n        if (this._isParameterNameAnOAuthParameter(key)) {\n            delete extra_params[key];\n        }\n    }\n    if ((method == \"POST\" || method == \"PUT\") && post_body == null && extra_params != null) {\n        // Fix the mismatch between the output of querystring.stringify() and this._encodeData()\n        post_body = querystring.stringify(extra_params).replace(/\\!/g, \"%21\").replace(/\\'/g, \"%27\").replace(/\\(/g, \"%28\").replace(/\\)/g, \"%29\").replace(/\\*/g, \"%2A\");\n    }\n    if (post_body) {\n        if (Buffer.isBuffer(post_body)) {\n            headers[\"Content-length\"] = post_body.length;\n        } else {\n            headers[\"Content-length\"] = Buffer.byteLength(post_body);\n        }\n    } else {\n        headers[\"Content-length\"] = 0;\n    }\n    headers[\"Content-Type\"] = post_content_type;\n    var path;\n    if (!parsedUrl.pathname || parsedUrl.pathname == \"\") parsedUrl.pathname = \"/\";\n    if (parsedUrl.query) path = parsedUrl.pathname + \"?\" + parsedUrl.query;\n    else path = parsedUrl.pathname;\n    var request;\n    if (parsedUrl.protocol == \"https:\") {\n        request = this._createClient(parsedUrl.port, parsedUrl.hostname, method, path, headers, true);\n    } else {\n        request = this._createClient(parsedUrl.port, parsedUrl.hostname, method, path, headers);\n    }\n    var clientOptions = this._clientOptions;\n    if (callback) {\n        var data = \"\";\n        var self = this;\n        // Some hosts *cough* google appear to close the connection early / send no content-length header\n        // allow this behaviour.\n        var allowEarlyClose = OAuthUtils.isAnEarlyCloseHost(parsedUrl.hostname);\n        var callbackCalled = false;\n        var passBackControl = function(response) {\n            if (!callbackCalled) {\n                callbackCalled = true;\n                if (response.statusCode >= 200 && response.statusCode <= 299) {\n                    callback(null, data, response);\n                } else {\n                    // Follow 301 or 302 redirects with Location HTTP header\n                    if ((response.statusCode == 301 || response.statusCode == 302) && clientOptions.followRedirects && response.headers && response.headers.location) {\n                        self._performSecureRequest(oauth_token, oauth_token_secret, method, response.headers.location, extra_params, post_body, post_content_type, callback);\n                    } else {\n                        callback({\n                            statusCode: response.statusCode,\n                            data: data\n                        }, data, response);\n                    }\n                }\n            }\n        };\n        request.on(\"response\", function(response) {\n            response.setEncoding(\"utf8\");\n            response.on(\"data\", function(chunk) {\n                data += chunk;\n            });\n            response.on(\"end\", function() {\n                passBackControl(response);\n            });\n            response.on(\"close\", function() {\n                if (allowEarlyClose) {\n                    passBackControl(response);\n                }\n            });\n        });\n        request.on(\"error\", function(err) {\n            if (!callbackCalled) {\n                callbackCalled = true;\n                callback(err);\n            }\n        });\n        if ((method == \"POST\" || method == \"PUT\") && post_body != null && post_body != \"\") {\n            request.write(post_body);\n        }\n        request.end();\n    } else {\n        if ((method == \"POST\" || method == \"PUT\") && post_body != null && post_body != \"\") {\n            request.write(post_body);\n        }\n        return request;\n    }\n    return;\n};\nexports.OAuth.prototype.setClientOptions = function(options) {\n    var key, mergedOptions = {}, hasOwnProperty = Object.prototype.hasOwnProperty;\n    for(key in this._defaultClientOptions){\n        if (!hasOwnProperty.call(options, key)) {\n            mergedOptions[key] = this._defaultClientOptions[key];\n        } else {\n            mergedOptions[key] = options[key];\n        }\n    }\n    this._clientOptions = mergedOptions;\n};\nexports.OAuth.prototype.getOAuthAccessToken = function(oauth_token, oauth_token_secret, oauth_verifier, callback) {\n    var extraParams = {};\n    if (typeof oauth_verifier == \"function\") {\n        callback = oauth_verifier;\n    } else {\n        extraParams.oauth_verifier = oauth_verifier;\n    }\n    this._performSecureRequest(oauth_token, oauth_token_secret, this._clientOptions.accessTokenHttpMethod, this._accessUrl, extraParams, null, null, function(error, data, response) {\n        if (error) callback(error);\n        else {\n            var results = querystring.parse(data);\n            var oauth_access_token = results[\"oauth_token\"];\n            delete results[\"oauth_token\"];\n            var oauth_access_token_secret = results[\"oauth_token_secret\"];\n            delete results[\"oauth_token_secret\"];\n            callback(null, oauth_access_token, oauth_access_token_secret, results);\n        }\n    });\n};\n// Deprecated\nexports.OAuth.prototype.getProtectedResource = function(url, method, oauth_token, oauth_token_secret, callback) {\n    this._performSecureRequest(oauth_token, oauth_token_secret, method, url, null, \"\", null, callback);\n};\nexports.OAuth.prototype[\"delete\"] = function(url, oauth_token, oauth_token_secret, callback) {\n    return this._performSecureRequest(oauth_token, oauth_token_secret, \"DELETE\", url, null, \"\", null, callback);\n};\nexports.OAuth.prototype.get = function(url, oauth_token, oauth_token_secret, callback) {\n    return this._performSecureRequest(oauth_token, oauth_token_secret, \"GET\", url, null, \"\", null, callback);\n};\nexports.OAuth.prototype._putOrPost = function(method, url, oauth_token, oauth_token_secret, post_body, post_content_type, callback) {\n    var extra_params = null;\n    if (typeof post_content_type == \"function\") {\n        callback = post_content_type;\n        post_content_type = null;\n    }\n    if (typeof post_body != \"string\" && !Buffer.isBuffer(post_body)) {\n        post_content_type = \"application/x-www-form-urlencoded\";\n        extra_params = post_body;\n        post_body = null;\n    }\n    return this._performSecureRequest(oauth_token, oauth_token_secret, method, url, extra_params, post_body, post_content_type, callback);\n};\nexports.OAuth.prototype.put = function(url, oauth_token, oauth_token_secret, post_body, post_content_type, callback) {\n    return this._putOrPost(\"PUT\", url, oauth_token, oauth_token_secret, post_body, post_content_type, callback);\n};\nexports.OAuth.prototype.post = function(url, oauth_token, oauth_token_secret, post_body, post_content_type, callback) {\n    return this._putOrPost(\"POST\", url, oauth_token, oauth_token_secret, post_body, post_content_type, callback);\n};\n/**\n * Gets a request token from the OAuth provider and passes that information back\n * to the calling code.\n *\n * The callback should expect a function of the following form:\n *\n * function(err, token, token_secret, parsedQueryString) {}\n *\n * This method has optional parameters so can be called in the following 2 ways:\n *\n * 1) Primary use case: Does a basic request with no extra parameters\n *  getOAuthRequestToken( callbackFunction )\n *\n * 2) As above but allows for provision of extra parameters to be sent as part of the query to the server.\n *  getOAuthRequestToken( extraParams, callbackFunction )\n *\n * N.B. This method will HTTP POST verbs by default, if you wish to override this behaviour you will\n * need to provide a requestTokenHttpMethod option when creating the client.\n *\n **/ exports.OAuth.prototype.getOAuthRequestToken = function(extraParams, callback) {\n    if (typeof extraParams == \"function\") {\n        callback = extraParams;\n        extraParams = {};\n    }\n    // Callbacks are 1.0A related\n    if (this._authorize_callback) {\n        extraParams[\"oauth_callback\"] = this._authorize_callback;\n    }\n    this._performSecureRequest(null, null, this._clientOptions.requestTokenHttpMethod, this._requestUrl, extraParams, null, null, function(error, data, response) {\n        if (error) callback(error);\n        else {\n            var results = querystring.parse(data);\n            var oauth_token = results[\"oauth_token\"];\n            var oauth_token_secret = results[\"oauth_token_secret\"];\n            delete results[\"oauth_token\"];\n            delete results[\"oauth_token_secret\"];\n            callback(null, oauth_token, oauth_token_secret, results);\n        }\n    });\n};\nexports.OAuth.prototype.signUrl = function(url, oauth_token, oauth_token_secret, method) {\n    if (method === undefined) {\n        var method = \"GET\";\n    }\n    var orderedParameters = this._prepareParameters(oauth_token, oauth_token_secret, method, url, {});\n    var parsedUrl = URL.parse(url, false);\n    var query = \"\";\n    for(var i = 0; i < orderedParameters.length; i++){\n        query += orderedParameters[i][0] + \"=\" + this._encodeData(orderedParameters[i][1]) + \"&\";\n    }\n    query = query.substring(0, query.length - 1);\n    return parsedUrl.protocol + \"//\" + parsedUrl.host + parsedUrl.pathname + \"?\" + query;\n};\nexports.OAuth.prototype.authHeader = function(url, oauth_token, oauth_token_secret, method) {\n    if (method === undefined) {\n        var method = \"GET\";\n    }\n    var orderedParameters = this._prepareParameters(oauth_token, oauth_token_secret, method, url, {});\n    return this._buildAuthorizationHeaders(orderedParameters);\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/oauth/lib/oauth.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/oauth/lib/oauth2.js":
/*!******************************************!*\
  !*** ./node_modules/oauth/lib/oauth2.js ***!
  \******************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("var querystring = __webpack_require__(/*! querystring */ \"querystring\"), crypto = __webpack_require__(/*! crypto */ \"crypto\"), https = __webpack_require__(/*! https */ \"https\"), http = __webpack_require__(/*! http */ \"http\"), URL = __webpack_require__(/*! url */ \"url\"), OAuthUtils = __webpack_require__(/*! ./_utils */ \"(sc_server)/./node_modules/oauth/lib/_utils.js\");\nexports.OAuth2 = function(clientId, clientSecret, baseSite, authorizePath, accessTokenPath, customHeaders) {\n    this._clientId = clientId;\n    this._clientSecret = clientSecret;\n    this._baseSite = baseSite;\n    this._authorizeUrl = authorizePath || \"/oauth/authorize\";\n    this._accessTokenUrl = accessTokenPath || \"/oauth/access_token\";\n    this._accessTokenName = \"access_token\";\n    this._authMethod = \"Bearer\";\n    this._customHeaders = customHeaders || {};\n    this._useAuthorizationHeaderForGET = false;\n    //our agent\n    this._agent = undefined;\n};\n// Allows you to set an agent to use instead of the default HTTP or\n// HTTPS agents. Useful when dealing with your own certificates.\nexports.OAuth2.prototype.setAgent = function(agent) {\n    this._agent = agent;\n};\n// This 'hack' method is required for sites that don't use\n// 'access_token' as the name of the access token (for requests).\n// ( http://tools.ietf.org/html/draft-ietf-oauth-v2-16#section-7 )\n// it isn't clear what the correct value should be atm, so allowing\n// for specific (temporary?) override for now.\nexports.OAuth2.prototype.setAccessTokenName = function(name) {\n    this._accessTokenName = name;\n};\n// Sets the authorization method for Authorization header.\n// e.g. Authorization: Bearer <token>  # \"Bearer\" is the authorization method.\nexports.OAuth2.prototype.setAuthMethod = function(authMethod) {\n    this._authMethod = authMethod;\n};\n// If you use the OAuth2 exposed 'get' method (and don't construct your own _request call )\n// this will specify whether to use an 'Authorize' header instead of passing the access_token as a query parameter\nexports.OAuth2.prototype.useAuthorizationHeaderforGET = function(useIt) {\n    this._useAuthorizationHeaderForGET = useIt;\n};\nexports.OAuth2.prototype._getAccessTokenUrl = function() {\n    return this._baseSite + this._accessTokenUrl; /* + \"?\" + querystring.stringify(params); */ \n};\n// Build the authorization header. In particular, build the part after the colon.\n// e.g. Authorization: Bearer <token>  # Build \"Bearer <token>\"\nexports.OAuth2.prototype.buildAuthHeader = function(token) {\n    return this._authMethod + \" \" + token;\n};\nexports.OAuth2.prototype._chooseHttpLibrary = function(parsedUrl) {\n    var http_library = https;\n    // As this is OAUth2, we *assume* https unless told explicitly otherwise.\n    if (parsedUrl.protocol != \"https:\") {\n        http_library = http;\n    }\n    return http_library;\n};\nexports.OAuth2.prototype._request = function(method, url, headers, post_body, access_token, callback) {\n    var parsedUrl = URL.parse(url, true);\n    if (parsedUrl.protocol == \"https:\" && !parsedUrl.port) {\n        parsedUrl.port = 443;\n    }\n    var http_library = this._chooseHttpLibrary(parsedUrl);\n    var realHeaders = {};\n    for(var key in this._customHeaders){\n        realHeaders[key] = this._customHeaders[key];\n    }\n    if (headers) {\n        for(var key in headers){\n            realHeaders[key] = headers[key];\n        }\n    }\n    realHeaders[\"Host\"] = parsedUrl.host;\n    if (!realHeaders[\"User-Agent\"]) {\n        realHeaders[\"User-Agent\"] = \"Node-oauth\";\n    }\n    if (post_body) {\n        if (Buffer.isBuffer(post_body)) {\n            realHeaders[\"Content-Length\"] = post_body.length;\n        } else {\n            realHeaders[\"Content-Length\"] = Buffer.byteLength(post_body);\n        }\n    } else {\n        realHeaders[\"Content-length\"] = 0;\n    }\n    if (access_token && !(\"Authorization\" in realHeaders)) {\n        if (!parsedUrl.query) parsedUrl.query = {};\n        parsedUrl.query[this._accessTokenName] = access_token;\n    }\n    var queryStr = querystring.stringify(parsedUrl.query);\n    if (queryStr) queryStr = \"?\" + queryStr;\n    var options = {\n        host: parsedUrl.hostname,\n        port: parsedUrl.port,\n        path: parsedUrl.pathname + queryStr,\n        method: method,\n        headers: realHeaders\n    };\n    this._executeRequest(http_library, options, post_body, callback);\n};\nexports.OAuth2.prototype._executeRequest = function(http_library, options, post_body, callback) {\n    // Some hosts *cough* google appear to close the connection early / send no content-length header\n    // allow this behaviour.\n    var allowEarlyClose = OAuthUtils.isAnEarlyCloseHost(options.host);\n    var callbackCalled = false;\n    function passBackControl(response, result) {\n        if (!callbackCalled) {\n            callbackCalled = true;\n            if (!(response.statusCode >= 200 && response.statusCode <= 299) && response.statusCode != 301 && response.statusCode != 302) {\n                callback({\n                    statusCode: response.statusCode,\n                    data: result\n                });\n            } else {\n                callback(null, result, response);\n            }\n        }\n    }\n    var result = \"\";\n    //set the agent on the request options\n    if (this._agent) {\n        options.agent = this._agent;\n    }\n    var request = http_library.request(options);\n    request.on(\"response\", function(response) {\n        response.on(\"data\", function(chunk) {\n            result += chunk;\n        });\n        response.on(\"close\", function(err) {\n            if (allowEarlyClose) {\n                passBackControl(response, result);\n            }\n        });\n        response.addListener(\"end\", function() {\n            passBackControl(response, result);\n        });\n    });\n    request.on(\"error\", function(e) {\n        callbackCalled = true;\n        callback(e);\n    });\n    if ((options.method == \"POST\" || options.method == \"PUT\") && post_body) {\n        request.write(post_body);\n    }\n    request.end();\n};\nexports.OAuth2.prototype.getAuthorizeUrl = function(params) {\n    var params = params || {};\n    params[\"client_id\"] = this._clientId;\n    return this._baseSite + this._authorizeUrl + \"?\" + querystring.stringify(params);\n};\nexports.OAuth2.prototype.getOAuthAccessToken = function(code, params, callback) {\n    var params = params || {};\n    params[\"client_id\"] = this._clientId;\n    params[\"client_secret\"] = this._clientSecret;\n    var codeParam = params.grant_type === \"refresh_token\" ? \"refresh_token\" : \"code\";\n    params[codeParam] = code;\n    var post_data = querystring.stringify(params);\n    var post_headers = {\n        \"Content-Type\": \"application/x-www-form-urlencoded\"\n    };\n    this._request(\"POST\", this._getAccessTokenUrl(), post_headers, post_data, null, function(error, data, response) {\n        if (error) callback(error);\n        else {\n            var results;\n            try {\n                // As of http://tools.ietf.org/html/draft-ietf-oauth-v2-07\n                // responses should be in JSON\n                results = JSON.parse(data);\n            } catch (e) {\n                // .... However both Facebook + Github currently use rev05 of the spec\n                // and neither seem to specify a content-type correctly in their response headers :(\n                // clients of these services will suffer a *minor* performance cost of the exception\n                // being thrown\n                results = querystring.parse(data);\n            }\n            var access_token = results[\"access_token\"];\n            var refresh_token = results[\"refresh_token\"];\n            delete results[\"refresh_token\"];\n            callback(null, access_token, refresh_token, results); // callback results =-=\n        }\n    });\n};\n// Deprecated\nexports.OAuth2.prototype.getProtectedResource = function(url, access_token, callback) {\n    this._request(\"GET\", url, {}, \"\", access_token, callback);\n};\nexports.OAuth2.prototype.get = function(url, access_token, callback) {\n    if (this._useAuthorizationHeaderForGET) {\n        var headers = {\n            \"Authorization\": this.buildAuthHeader(access_token)\n        };\n        access_token = null;\n    } else {\n        headers = {};\n    }\n    this._request(\"GET\", url, headers, \"\", access_token, callback);\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/oauth/lib/oauth2.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/oauth/lib/sha1.js":
/*!****************************************!*\
  !*** ./node_modules/oauth/lib/sha1.js ***!
  \****************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("/*\n * A JavaScript implementation of the Secure Hash Algorithm, SHA-1, as defined\n * in FIPS 180-1\n * Version 2.2 Copyright Paul Johnston 2000 - 2009.\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n * Distributed under the BSD License\n * See http://pajhome.org.uk/crypt/md5 for details.\n */ /*\n * Configurable variables. You may need to tweak these to be compatible with\n * the server-side, but the defaults work in most cases.\n */ var hexcase = 1; /* hex output format. 0 - lowercase; 1 - uppercase        */ \nvar b64pad = \"=\"; /* base-64 pad character. \"=\" for strict RFC compliance   */ \n/*\n * These are the functions you'll usually want to call\n * They take string arguments and return either hex or base-64 encoded strings\n */ function hex_sha1(s) {\n    return rstr2hex(rstr_sha1(str2rstr_utf8(s)));\n}\nfunction b64_sha1(s) {\n    return rstr2b64(rstr_sha1(str2rstr_utf8(s)));\n}\nfunction any_sha1(s, e) {\n    return rstr2any(rstr_sha1(str2rstr_utf8(s)), e);\n}\nfunction hex_hmac_sha1(k, d) {\n    return rstr2hex(rstr_hmac_sha1(str2rstr_utf8(k), str2rstr_utf8(d)));\n}\nfunction b64_hmac_sha1(k, d) {\n    return rstr2b64(rstr_hmac_sha1(str2rstr_utf8(k), str2rstr_utf8(d)));\n}\nfunction any_hmac_sha1(k, d, e) {\n    return rstr2any(rstr_hmac_sha1(str2rstr_utf8(k), str2rstr_utf8(d)), e);\n}\n/*\n * Perform a simple self-test to see if the VM is working\n */ function sha1_vm_test() {\n    return hex_sha1(\"abc\").toLowerCase() == \"a9993e364706816aba3e25717850c26c9cd0d89d\";\n}\n/*\n * Calculate the SHA1 of a raw string\n */ function rstr_sha1(s) {\n    return binb2rstr(binb_sha1(rstr2binb(s), s.length * 8));\n}\n/*\n * Calculate the HMAC-SHA1 of a key and some data (raw strings)\n */ function rstr_hmac_sha1(key, data) {\n    var bkey = rstr2binb(key);\n    if (bkey.length > 16) bkey = binb_sha1(bkey, key.length * 8);\n    var ipad = Array(16), opad = Array(16);\n    for(var i = 0; i < 16; i++){\n        ipad[i] = bkey[i] ^ 0x36363636;\n        opad[i] = bkey[i] ^ 0x5C5C5C5C;\n    }\n    var hash = binb_sha1(ipad.concat(rstr2binb(data)), 512 + data.length * 8);\n    return binb2rstr(binb_sha1(opad.concat(hash), 512 + 160));\n}\n/*\n * Convert a raw string to a hex string\n */ function rstr2hex(input) {\n    try {\n        hexcase;\n    } catch (e) {\n        hexcase = 0;\n    }\n    var hex_tab = hexcase ? \"0123456789ABCDEF\" : \"0123456789abcdef\";\n    var output = \"\";\n    var x;\n    for(var i = 0; i < input.length; i++){\n        x = input.charCodeAt(i);\n        output += hex_tab.charAt(x >>> 4 & 0x0F) + hex_tab.charAt(x & 0x0F);\n    }\n    return output;\n}\n/*\n * Convert a raw string to a base-64 string\n */ function rstr2b64(input) {\n    try {\n        b64pad;\n    } catch (e) {\n        b64pad = \"\";\n    }\n    var tab = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\n    var output = \"\";\n    var len = input.length;\n    for(var i = 0; i < len; i += 3){\n        var triplet = input.charCodeAt(i) << 16 | (i + 1 < len ? input.charCodeAt(i + 1) << 8 : 0) | (i + 2 < len ? input.charCodeAt(i + 2) : 0);\n        for(var j = 0; j < 4; j++){\n            if (i * 8 + j * 6 > input.length * 8) output += b64pad;\n            else output += tab.charAt(triplet >>> 6 * (3 - j) & 0x3F);\n        }\n    }\n    return output;\n}\n/*\n * Convert a raw string to an arbitrary string encoding\n */ function rstr2any(input, encoding) {\n    var divisor = encoding.length;\n    var remainders = Array();\n    var i, q, x, quotient;\n    /* Convert to an array of 16-bit big-endian values, forming the dividend */ var dividend = Array(Math.ceil(input.length / 2));\n    for(i = 0; i < dividend.length; i++){\n        dividend[i] = input.charCodeAt(i * 2) << 8 | input.charCodeAt(i * 2 + 1);\n    }\n    /*\n   * Repeatedly perform a long division. The binary array forms the dividend,\n   * the length of the encoding is the divisor. Once computed, the quotient\n   * forms the dividend for the next step. We stop when the dividend is zero.\n   * All remainders are stored for later use.\n   */ while(dividend.length > 0){\n        quotient = Array();\n        x = 0;\n        for(i = 0; i < dividend.length; i++){\n            x = (x << 16) + dividend[i];\n            q = Math.floor(x / divisor);\n            x -= q * divisor;\n            if (quotient.length > 0 || q > 0) quotient[quotient.length] = q;\n        }\n        remainders[remainders.length] = x;\n        dividend = quotient;\n    }\n    /* Convert the remainders to the output string */ var output = \"\";\n    for(i = remainders.length - 1; i >= 0; i--)output += encoding.charAt(remainders[i]);\n    /* Append leading zero equivalents */ var full_length = Math.ceil(input.length * 8 / (Math.log(encoding.length) / Math.log(2)));\n    for(i = output.length; i < full_length; i++)output = encoding[0] + output;\n    return output;\n}\n/*\n * Encode a string as utf-8.\n * For efficiency, this assumes the input is valid utf-16.\n */ function str2rstr_utf8(input) {\n    var output = \"\";\n    var i = -1;\n    var x, y;\n    while(++i < input.length){\n        /* Decode utf-16 surrogate pairs */ x = input.charCodeAt(i);\n        y = i + 1 < input.length ? input.charCodeAt(i + 1) : 0;\n        if (0xD800 <= x && x <= 0xDBFF && 0xDC00 <= y && y <= 0xDFFF) {\n            x = 0x10000 + ((x & 0x03FF) << 10) + (y & 0x03FF);\n            i++;\n        }\n        /* Encode output as utf-8 */ if (x <= 0x7F) output += String.fromCharCode(x);\n        else if (x <= 0x7FF) output += String.fromCharCode(0xC0 | x >>> 6 & 0x1F, 0x80 | x & 0x3F);\n        else if (x <= 0xFFFF) output += String.fromCharCode(0xE0 | x >>> 12 & 0x0F, 0x80 | x >>> 6 & 0x3F, 0x80 | x & 0x3F);\n        else if (x <= 0x1FFFFF) output += String.fromCharCode(0xF0 | x >>> 18 & 0x07, 0x80 | x >>> 12 & 0x3F, 0x80 | x >>> 6 & 0x3F, 0x80 | x & 0x3F);\n    }\n    return output;\n}\n/*\n * Encode a string as utf-16\n */ function str2rstr_utf16le(input) {\n    var output = \"\";\n    for(var i = 0; i < input.length; i++)output += String.fromCharCode(input.charCodeAt(i) & 0xFF, input.charCodeAt(i) >>> 8 & 0xFF);\n    return output;\n}\nfunction str2rstr_utf16be(input) {\n    var output = \"\";\n    for(var i = 0; i < input.length; i++)output += String.fromCharCode(input.charCodeAt(i) >>> 8 & 0xFF, input.charCodeAt(i) & 0xFF);\n    return output;\n}\n/*\n * Convert a raw string to an array of big-endian words\n * Characters >255 have their high-byte silently ignored.\n */ function rstr2binb(input) {\n    var output = Array(input.length >> 2);\n    for(var i = 0; i < output.length; i++)output[i] = 0;\n    for(var i = 0; i < input.length * 8; i += 8)output[i >> 5] |= (input.charCodeAt(i / 8) & 0xFF) << 24 - i % 32;\n    return output;\n}\n/*\n * Convert an array of big-endian words to a string\n */ function binb2rstr(input) {\n    var output = \"\";\n    for(var i = 0; i < input.length * 32; i += 8)output += String.fromCharCode(input[i >> 5] >>> 24 - i % 32 & 0xFF);\n    return output;\n}\n/*\n * Calculate the SHA-1 of an array of big-endian words, and a bit length\n */ function binb_sha1(x, len) {\n    /* append padding */ x[len >> 5] |= 0x80 << 24 - len % 32;\n    x[(len + 64 >> 9 << 4) + 15] = len;\n    var w = Array(80);\n    var a = 1732584193;\n    var b = -271733879;\n    var c = -1732584194;\n    var d = 271733878;\n    var e = -1009589776;\n    for(var i = 0; i < x.length; i += 16){\n        var olda = a;\n        var oldb = b;\n        var oldc = c;\n        var oldd = d;\n        var olde = e;\n        for(var j = 0; j < 80; j++){\n            if (j < 16) w[j] = x[i + j];\n            else w[j] = bit_rol(w[j - 3] ^ w[j - 8] ^ w[j - 14] ^ w[j - 16], 1);\n            var t = safe_add(safe_add(bit_rol(a, 5), sha1_ft(j, b, c, d)), safe_add(safe_add(e, w[j]), sha1_kt(j)));\n            e = d;\n            d = c;\n            c = bit_rol(b, 30);\n            b = a;\n            a = t;\n        }\n        a = safe_add(a, olda);\n        b = safe_add(b, oldb);\n        c = safe_add(c, oldc);\n        d = safe_add(d, oldd);\n        e = safe_add(e, olde);\n    }\n    return Array(a, b, c, d, e);\n}\n/*\n * Perform the appropriate triplet combination function for the current\n * iteration\n */ function sha1_ft(t, b, c, d) {\n    if (t < 20) return b & c | ~b & d;\n    if (t < 40) return b ^ c ^ d;\n    if (t < 60) return b & c | b & d | c & d;\n    return b ^ c ^ d;\n}\n/*\n * Determine the appropriate additive constant for the current iteration\n */ function sha1_kt(t) {\n    return t < 20 ? 1518500249 : t < 40 ? 1859775393 : t < 60 ? -1894007588 : -899497514;\n}\n/*\n * Add integers, wrapping at 2^32. This uses 16-bit operations internally\n * to work around bugs in some JS interpreters.\n */ function safe_add(x, y) {\n    var lsw = (x & 0xFFFF) + (y & 0xFFFF);\n    var msw = (x >> 16) + (y >> 16) + (lsw >> 16);\n    return msw << 16 | lsw & 0xFFFF;\n}\n/*\n * Bitwise rotate a 32-bit number to the left.\n */ function bit_rol(num, cnt) {\n    return num << cnt | num >>> 32 - cnt;\n}\nexports.HMACSHA1 = function(key, data) {\n    return b64_hmac_sha1(key, data);\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvb2F1dGgvbGliL3NoYTEuanMiLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Q0FPQyxHQUVEOzs7Q0FHQyxHQUNELElBQUlBLFVBQVUsR0FBSSwwREFBMEQ7QUFDNUUsSUFBSUMsU0FBVSxLQUFLLDBEQUEwRDtBQUU3RTs7O0NBR0MsR0FDRCxTQUFTQyxTQUFTQyxDQUFDO0lBQU8sT0FBT0MsU0FBU0MsVUFBVUMsY0FBY0g7QUFBTTtBQUN4RSxTQUFTSSxTQUFTSixDQUFDO0lBQU8sT0FBT0ssU0FBU0gsVUFBVUMsY0FBY0g7QUFBTTtBQUN4RSxTQUFTTSxTQUFTTixDQUFDLEVBQUVPLENBQUM7SUFBSSxPQUFPQyxTQUFTTixVQUFVQyxjQUFjSCxLQUFLTztBQUFJO0FBQzNFLFNBQVNFLGNBQWNDLENBQUMsRUFBRUMsQ0FBQztJQUN2QixPQUFPVixTQUFTVyxlQUFlVCxjQUFjTyxJQUFJUCxjQUFjUTtBQUFNO0FBQ3pFLFNBQVNFLGNBQWNILENBQUMsRUFBRUMsQ0FBQztJQUN2QixPQUFPTixTQUFTTyxlQUFlVCxjQUFjTyxJQUFJUCxjQUFjUTtBQUFNO0FBQ3pFLFNBQVNHLGNBQWNKLENBQUMsRUFBRUMsQ0FBQyxFQUFFSixDQUFDO0lBQzFCLE9BQU9DLFNBQVNJLGVBQWVULGNBQWNPLElBQUlQLGNBQWNRLEtBQUtKO0FBQUk7QUFFNUU7O0NBRUMsR0FDRCxTQUFTUTtJQUVQLE9BQU9oQixTQUFTLE9BQU9pQixpQkFBaUI7QUFDMUM7QUFFQTs7Q0FFQyxHQUNELFNBQVNkLFVBQVVGLENBQUM7SUFFbEIsT0FBT2lCLFVBQVVDLFVBQVVDLFVBQVVuQixJQUFJQSxFQUFFb0IsU0FBUztBQUN0RDtBQUVBOztDQUVDLEdBQ0QsU0FBU1IsZUFBZVMsR0FBRyxFQUFFQyxJQUFJO0lBRS9CLElBQUlDLE9BQU9KLFVBQVVFO0lBQ3JCLElBQUdFLEtBQUtILFNBQVMsSUFBSUcsT0FBT0wsVUFBVUssTUFBTUYsSUFBSUQsU0FBUztJQUV6RCxJQUFJSSxPQUFPQyxNQUFNLEtBQUtDLE9BQU9ELE1BQU07SUFDbkMsSUFBSSxJQUFJRSxJQUFJLEdBQUdBLElBQUksSUFBSUEsSUFDdkI7UUFDRUgsSUFBSSxDQUFDRyxFQUFFLEdBQUdKLElBQUksQ0FBQ0ksRUFBRSxHQUFHO1FBQ3BCRCxJQUFJLENBQUNDLEVBQUUsR0FBR0osSUFBSSxDQUFDSSxFQUFFLEdBQUc7SUFDdEI7SUFFQSxJQUFJQyxPQUFPVixVQUFVTSxLQUFLSyxPQUFPVixVQUFVRyxRQUFRLE1BQU1BLEtBQUtGLFNBQVM7SUFDdkUsT0FBT0gsVUFBVUMsVUFBVVEsS0FBS0csT0FBT0QsT0FBTyxNQUFNO0FBQ3REO0FBRUE7O0NBRUMsR0FDRCxTQUFTM0IsU0FBUzZCLEtBQUs7SUFFckIsSUFBSTtRQUFFakM7SUFBUSxFQUFFLE9BQU1VLEdBQUc7UUFBRVYsVUFBUTtJQUFHO0lBQ3RDLElBQUlrQyxVQUFVbEMsVUFBVSxxQkFBcUI7SUFDN0MsSUFBSW1DLFNBQVM7SUFDYixJQUFJQztJQUNKLElBQUksSUFBSU4sSUFBSSxHQUFHQSxJQUFJRyxNQUFNVixRQUFRTyxJQUNqQztRQUNFTSxJQUFJSCxNQUFNSSxXQUFXUDtRQUNyQkssVUFBVUQsUUFBUUksT0FBTyxNQUFPLElBQUssUUFDM0JKLFFBQVFJLE9BQVFGLElBQVc7SUFDdkM7SUFDQSxPQUFPRDtBQUNUO0FBRUE7O0NBRUMsR0FDRCxTQUFTM0IsU0FBU3lCLEtBQUs7SUFFckIsSUFBSTtRQUFFaEM7SUFBTyxFQUFFLE9BQU1TLEdBQUc7UUFBRVQsU0FBTztJQUFJO0lBQ3JDLElBQUlzQyxNQUFNO0lBQ1YsSUFBSUosU0FBUztJQUNiLElBQUlLLE1BQU1QLE1BQU1WO0lBQ2hCLElBQUksSUFBSU8sSUFBSSxHQUFHQSxJQUFJVSxLQUFLVixLQUFLLEVBQzdCO1FBQ0UsSUFBSVcsVUFBVSxNQUFPSixXQUFXUCxNQUFNLEtBQ3ZCQSxDQUFBQSxJQUFJLElBQUlVLE1BQU1QLE1BQU1JLFdBQVdQLElBQUUsTUFBTSxJQUFJLEtBQzNDQSxDQUFBQSxJQUFJLElBQUlVLE1BQU1QLE1BQU1JLFdBQVdQLElBQUUsS0FBVTtRQUMxRCxJQUFJLElBQUlZLElBQUksR0FBR0EsSUFBSSxHQUFHQSxJQUN0QjtZQUNFLElBQUdaLElBQUksSUFBSVksSUFBSSxJQUFJVCxNQUFNVixTQUFTLEdBQUdZLFVBQVVsQztpQkFDMUNrQyxVQUFVSSxJQUFJRCxPQUFPLFlBQWEsSUFBRyxLQUFFSSxDQUFBQSxJQUFNO1FBQ3BEO0lBQ0Y7SUFDQSxPQUFPUDtBQUNUO0FBRUE7O0NBRUMsR0FDRCxTQUFTeEIsU0FBU3NCLEtBQUssRUFBRVUsUUFBUTtJQUUvQixJQUFJQyxVQUFVRCxTQUFTcEI7SUFDdkIsSUFBSXNCLGFBQWFqQjtJQUNqQixJQUFJRSxHQUFHZ0IsR0FBR1YsR0FBR1c7SUFFYix5RUFBeUUsR0FDekUsSUFBSUMsV0FBV3BCLE1BQU1xQixLQUFLQyxLQUFLakIsTUFBTVYsU0FBUztJQUM5QyxJQUFJTyxJQUFJLEdBQUdBLElBQUlrQixTQUFTekIsUUFBUU8sSUFDaEM7UUFDRWtCLFFBQVEsQ0FBQ2xCLEVBQUUsR0FBRyxNQUFPTyxXQUFXUCxJQUFJLE1BQU0sSUFBS0csTUFBTUksV0FBV1AsSUFBSSxJQUFJO0lBQzFFO0lBRUE7Ozs7O0dBS0MsR0FDRCxNQUFNa0IsU0FBU3pCLFNBQVMsRUFDeEI7UUFDRXdCLFdBQVduQjtRQUNYUSxJQUFJO1FBQ0osSUFBSU4sSUFBSSxHQUFHQSxJQUFJa0IsU0FBU3pCLFFBQVFPLElBQ2hDO1lBQ0VNLElBQUksQ0FBQ0EsS0FBSyxFQUFDLElBQUtZLFFBQVEsQ0FBQ2xCLEVBQUU7WUFDM0JnQixJQUFJRyxLQUFLRSxNQUFNZixJQUFJUTtZQUNuQlIsS0FBS1UsSUFBSUY7WUFDVCxJQUFHRyxTQUFTeEIsU0FBUyxLQUFLdUIsSUFBSSxHQUM1QkMsUUFBUSxDQUFDQSxTQUFTeEIsT0FBTyxHQUFHdUI7UUFDaEM7UUFDQUQsVUFBVSxDQUFDQSxXQUFXdEIsT0FBTyxHQUFHYTtRQUNoQ1ksV0FBV0Q7SUFDYjtJQUVBLCtDQUErQyxHQUMvQyxJQUFJWixTQUFTO0lBQ2IsSUFBSUwsSUFBSWUsV0FBV3RCLFNBQVMsR0FBR08sS0FBSyxHQUFHQSxJQUNyQ0ssVUFBVVEsU0FBU0wsT0FBT08sVUFBVSxDQUFDZixFQUFFO0lBRXpDLG1DQUFtQyxHQUNuQyxJQUFJc0IsY0FBY0gsS0FBS0MsS0FBS2pCLE1BQU1WLFNBQVMsSUFDUjBCLENBQUFBLEtBQUtJLElBQUlWLFNBQVNwQixVQUFVMEIsS0FBS0ksSUFBSSxFQUFDO0lBQ3pFLElBQUl2QixJQUFJSyxPQUFPWixRQUFRTyxJQUFJc0IsYUFBYXRCLElBQ3RDSyxTQUFTUSxRQUFRLENBQUMsRUFBRSxHQUFHUjtJQUV6QixPQUFPQTtBQUNUO0FBRUE7OztDQUdDLEdBQ0QsU0FBUzdCLGNBQWMyQixLQUFLO0lBRTFCLElBQUlFLFNBQVM7SUFDYixJQUFJTCxJQUFJLENBQUM7SUFDVCxJQUFJTSxHQUFHa0I7SUFFUCxNQUFNLEVBQUV4QixJQUFJRyxNQUFNVixPQUNsQjtRQUNFLGlDQUFpQyxHQUNqQ2EsSUFBSUgsTUFBTUksV0FBV1A7UUFDckJ3QixJQUFJeEIsSUFBSSxJQUFJRyxNQUFNVixTQUFTVSxNQUFNSSxXQUFXUCxJQUFJLEtBQUs7UUFDckQsSUFBRyxVQUFVTSxLQUFLQSxLQUFLLFVBQVUsVUFBVWtCLEtBQUtBLEtBQUssUUFDckQ7WUFDRWxCLElBQUksVUFBVyxFQUFDQSxJQUFJLE1BQUssS0FBTSxFQUFDLElBQU1rQixDQUFBQSxJQUFJLE1BQUs7WUFDL0N4QjtRQUNGO1FBRUEsMEJBQTBCLEdBQzFCLElBQUdNLEtBQUssTUFDTkQsVUFBVW9CLE9BQU9DLGFBQWFwQjthQUMzQixJQUFHQSxLQUFLLE9BQ1hELFVBQVVvQixPQUFPQyxhQUFhLE9BQVEsTUFBTyxJQUFNLE1BQ3JCLE9BQVNwQixJQUFZO2FBQ2hELElBQUdBLEtBQUssUUFDWEQsVUFBVW9CLE9BQU9DLGFBQWEsT0FBUSxNQUFPLEtBQU0sTUFDckIsT0FBUSxNQUFPLElBQU0sTUFDckIsT0FBU3BCLElBQVk7YUFDaEQsSUFBR0EsS0FBSyxVQUNYRCxVQUFVb0IsT0FBT0MsYUFBYSxPQUFRLE1BQU8sS0FBTSxNQUNyQixPQUFRLE1BQU8sS0FBTSxNQUNyQixPQUFRLE1BQU8sSUFBTSxNQUNyQixPQUFTcEIsSUFBWTtJQUN2RDtJQUNBLE9BQU9EO0FBQ1Q7QUFFQTs7Q0FFQyxHQUNELFNBQVNzQixpQkFBaUJ4QixLQUFLO0lBRTdCLElBQUlFLFNBQVM7SUFDYixJQUFJLElBQUlMLElBQUksR0FBR0EsSUFBSUcsTUFBTVYsUUFBUU8sSUFDL0JLLFVBQVVvQixPQUFPQyxhQUFjdkIsTUFBTUksV0FBV1AsS0FBWSxNQUM5QixNQUFPTyxXQUFXUCxPQUFPLElBQUs7SUFDOUQsT0FBT0s7QUFDVDtBQUVBLFNBQVN1QixpQkFBaUJ6QixLQUFLO0lBRTdCLElBQUlFLFNBQVM7SUFDYixJQUFJLElBQUlMLElBQUksR0FBR0EsSUFBSUcsTUFBTVYsUUFBUU8sSUFDL0JLLFVBQVVvQixPQUFPQyxhQUFhLE1BQU9uQixXQUFXUCxPQUFPLElBQUssTUFDN0JHLE1BQU1JLFdBQVdQLEtBQVk7SUFDOUQsT0FBT0s7QUFDVDtBQUVBOzs7Q0FHQyxHQUNELFNBQVNiLFVBQVVXLEtBQUs7SUFFdEIsSUFBSUUsU0FBU1AsTUFBTUssTUFBTVYsVUFBVTtJQUNuQyxJQUFJLElBQUlPLElBQUksR0FBR0EsSUFBSUssT0FBT1osUUFBUU8sSUFDaENLLE1BQU0sQ0FBQ0wsRUFBRSxHQUFHO0lBQ2QsSUFBSSxJQUFJQSxJQUFJLEdBQUdBLElBQUlHLE1BQU1WLFNBQVMsR0FBR08sS0FBSyxFQUN4Q0ssTUFBTSxDQUFDTCxLQUFHLEVBQUUsSUFBSSxDQUFDRyxNQUFNSSxXQUFXUCxJQUFJLEtBQUssSUFBRyxLQUFPLEtBQUtBLElBQUk7SUFDaEUsT0FBT0s7QUFDVDtBQUVBOztDQUVDLEdBQ0QsU0FBU2YsVUFBVWEsS0FBSztJQUV0QixJQUFJRSxTQUFTO0lBQ2IsSUFBSSxJQUFJTCxJQUFJLEdBQUdBLElBQUlHLE1BQU1WLFNBQVMsSUFBSU8sS0FBSyxFQUN6Q0ssVUFBVW9CLE9BQU9DLGFBQWEsS0FBTSxDQUFDMUIsS0FBRyxFQUFFLEtBQU0sS0FBS0EsSUFBSSxLQUFPO0lBQ2xFLE9BQU9LO0FBQ1Q7QUFFQTs7Q0FFQyxHQUNELFNBQVNkLFVBQVVlLENBQUMsRUFBRUksR0FBRztJQUV2QixrQkFBa0IsR0FDbEJKLENBQUMsQ0FBQ0ksT0FBTyxFQUFFLElBQUksUUFBUyxLQUFLQSxNQUFNO0lBQ25DSixDQUFDLENBQUMsQ0FBQyxNQUFPLE1BQU0sS0FBTSxLQUFLLEdBQUcsR0FBR0k7SUFFakMsSUFBSW1CLElBQUkvQixNQUFNO0lBQ2QsSUFBSWdDLElBQUs7SUFDVCxJQUFJQyxJQUFJLENBQUM7SUFDVCxJQUFJQyxJQUFJLENBQUM7SUFDVCxJQUFJaEQsSUFBSztJQUNULElBQUlKLElBQUksQ0FBQztJQUVULElBQUksSUFBSW9CLElBQUksR0FBR0EsSUFBSU0sRUFBRWIsUUFBUU8sS0FBSyxHQUNsQztRQUNFLElBQUlpQyxPQUFPSDtRQUNYLElBQUlJLE9BQU9IO1FBQ1gsSUFBSUksT0FBT0g7UUFDWCxJQUFJSSxPQUFPcEQ7UUFDWCxJQUFJcUQsT0FBT3pEO1FBRVgsSUFBSSxJQUFJZ0MsSUFBSSxHQUFHQSxJQUFJLElBQUlBLElBQ3ZCO1lBQ0UsSUFBR0EsSUFBSSxJQUFJaUIsQ0FBQyxDQUFDakIsRUFBRSxHQUFHTixDQUFDLENBQUNOLElBQUlZLEVBQUU7aUJBQ3JCaUIsQ0FBQyxDQUFDakIsRUFBRSxHQUFHMEIsUUFBUVQsQ0FBQyxDQUFDakIsSUFBRSxFQUFFLEdBQUdpQixDQUFDLENBQUNqQixJQUFFLEVBQUUsR0FBR2lCLENBQUMsQ0FBQ2pCLElBQUUsR0FBRyxHQUFHaUIsQ0FBQyxDQUFDakIsSUFBRSxHQUFHLEVBQUU7WUFDekQsSUFBSTJCLElBQUlDLFNBQVNBLFNBQVNGLFFBQVFSLEdBQUcsSUFBSVcsUUFBUTdCLEdBQUdtQixHQUFHQyxHQUFHaEQsS0FDekN3RCxTQUFTQSxTQUFTNUQsR0FBR2lELENBQUMsQ0FBQ2pCLEVBQUUsR0FBRzhCLFFBQVE5QjtZQUNyRGhDLElBQUlJO1lBQ0pBLElBQUlnRDtZQUNKQSxJQUFJTSxRQUFRUCxHQUFHO1lBQ2ZBLElBQUlEO1lBQ0pBLElBQUlTO1FBQ047UUFFQVQsSUFBSVUsU0FBU1YsR0FBR0c7UUFDaEJGLElBQUlTLFNBQVNULEdBQUdHO1FBQ2hCRixJQUFJUSxTQUFTUixHQUFHRztRQUNoQm5ELElBQUl3RCxTQUFTeEQsR0FBR29EO1FBQ2hCeEQsSUFBSTRELFNBQVM1RCxHQUFHeUQ7SUFDbEI7SUFDQSxPQUFPdkMsTUFBTWdDLEdBQUdDLEdBQUdDLEdBQUdoRCxHQUFHSjtBQUUzQjtBQUVBOzs7Q0FHQyxHQUNELFNBQVM2RCxRQUFRRixDQUFDLEVBQUVSLENBQUMsRUFBRUMsQ0FBQyxFQUFFaEQsQ0FBQztJQUV6QixJQUFHdUQsSUFBSSxJQUFJLE9BQU8sSUFBS1AsSUFBTSxDQUFFRCxJQUFLL0M7SUFDcEMsSUFBR3VELElBQUksSUFBSSxPQUFPUixJQUFJQyxJQUFJaEQ7SUFDMUIsSUFBR3VELElBQUksSUFBSSxPQUFPLElBQUtQLElBQU1ELElBQUkvQyxJQUFNZ0QsSUFBSWhEO0lBQzNDLE9BQU8rQyxJQUFJQyxJQUFJaEQ7QUFDakI7QUFFQTs7Q0FFQyxHQUNELFNBQVMwRCxRQUFRSCxDQUFDO0lBRWhCLE9BQU8sSUFBSyxLQUFPLGFBQWEsSUFBSyxLQUFPLGFBQ3JDLElBQUssS0FBTSxDQUFDLGFBQWEsQ0FBQztBQUNuQztBQUVBOzs7Q0FHQyxHQUNELFNBQVNDLFNBQVNsQyxDQUFDLEVBQUVrQixDQUFDO0lBRXBCLElBQUltQixNQUFNLENBQUNyQyxJQUFJLE1BQUssSUFBTWtCLENBQUFBLElBQUksTUFBSztJQUNuQyxJQUFJb0IsTUFBTSxDQUFDdEMsS0FBSyxFQUFDLElBQU1rQixDQUFBQSxLQUFLLEVBQUMsSUFBTW1CLENBQUFBLE9BQU8sRUFBQztJQUMzQyxPQUFPLE9BQVEsS0FBT0EsTUFBTTtBQUM5QjtBQUVBOztDQUVDLEdBQ0QsU0FBU0wsUUFBUU8sR0FBRyxFQUFFQyxHQUFHO0lBRXZCLE9BQU8sT0FBUUEsTUFBUUQsUUFBUyxLQUFLQztBQUN2QztBQUVBQyxnQkFBZ0JDLEdBQUUsU0FBU3RELEdBQUcsRUFBRUMsSUFBSTtJQUNsQyxPQUFPVCxjQUFjUSxLQUFLQztBQUM1QiIsInNvdXJjZXMiOlsid2VicGFjazovL2Z1bGxzdGFjay1yb2xlLWJhc2VkLW5leHRqcy0yLy4vbm9kZV9tb2R1bGVzL29hdXRoL2xpYi9zaGExLmpzPzRhYjciXSwic291cmNlc0NvbnRlbnQiOlsiLypcbiAqIEEgSmF2YVNjcmlwdCBpbXBsZW1lbnRhdGlvbiBvZiB0aGUgU2VjdXJlIEhhc2ggQWxnb3JpdGhtLCBTSEEtMSwgYXMgZGVmaW5lZFxuICogaW4gRklQUyAxODAtMVxuICogVmVyc2lvbiAyLjIgQ29weXJpZ2h0IFBhdWwgSm9obnN0b24gMjAwMCAtIDIwMDkuXG4gKiBPdGhlciBjb250cmlidXRvcnM6IEdyZWcgSG9sdCwgQW5kcmV3IEtlcGVydCwgWWRuYXIsIExvc3RpbmV0XG4gKiBEaXN0cmlidXRlZCB1bmRlciB0aGUgQlNEIExpY2Vuc2VcbiAqIFNlZSBodHRwOi8vcGFqaG9tZS5vcmcudWsvY3J5cHQvbWQ1IGZvciBkZXRhaWxzLlxuICovXG5cbi8qXG4gKiBDb25maWd1cmFibGUgdmFyaWFibGVzLiBZb3UgbWF5IG5lZWQgdG8gdHdlYWsgdGhlc2UgdG8gYmUgY29tcGF0aWJsZSB3aXRoXG4gKiB0aGUgc2VydmVyLXNpZGUsIGJ1dCB0aGUgZGVmYXVsdHMgd29yayBpbiBtb3N0IGNhc2VzLlxuICovXG52YXIgaGV4Y2FzZSA9IDE7ICAvKiBoZXggb3V0cHV0IGZvcm1hdC4gMCAtIGxvd2VyY2FzZTsgMSAtIHVwcGVyY2FzZSAgICAgICAgKi9cbnZhciBiNjRwYWQgID0gXCI9XCI7IC8qIGJhc2UtNjQgcGFkIGNoYXJhY3Rlci4gXCI9XCIgZm9yIHN0cmljdCBSRkMgY29tcGxpYW5jZSAgICovXG5cbi8qXG4gKiBUaGVzZSBhcmUgdGhlIGZ1bmN0aW9ucyB5b3UnbGwgdXN1YWxseSB3YW50IHRvIGNhbGxcbiAqIFRoZXkgdGFrZSBzdHJpbmcgYXJndW1lbnRzIGFuZCByZXR1cm4gZWl0aGVyIGhleCBvciBiYXNlLTY0IGVuY29kZWQgc3RyaW5nc1xuICovXG5mdW5jdGlvbiBoZXhfc2hhMShzKSAgICB7IHJldHVybiByc3RyMmhleChyc3RyX3NoYTEoc3RyMnJzdHJfdXRmOChzKSkpOyB9XG5mdW5jdGlvbiBiNjRfc2hhMShzKSAgICB7IHJldHVybiByc3RyMmI2NChyc3RyX3NoYTEoc3RyMnJzdHJfdXRmOChzKSkpOyB9XG5mdW5jdGlvbiBhbnlfc2hhMShzLCBlKSB7IHJldHVybiByc3RyMmFueShyc3RyX3NoYTEoc3RyMnJzdHJfdXRmOChzKSksIGUpOyB9XG5mdW5jdGlvbiBoZXhfaG1hY19zaGExKGssIGQpXG4gIHsgcmV0dXJuIHJzdHIyaGV4KHJzdHJfaG1hY19zaGExKHN0cjJyc3RyX3V0ZjgoayksIHN0cjJyc3RyX3V0ZjgoZCkpKTsgfVxuZnVuY3Rpb24gYjY0X2htYWNfc2hhMShrLCBkKVxuICB7IHJldHVybiByc3RyMmI2NChyc3RyX2htYWNfc2hhMShzdHIycnN0cl91dGY4KGspLCBzdHIycnN0cl91dGY4KGQpKSk7IH1cbmZ1bmN0aW9uIGFueV9obWFjX3NoYTEoaywgZCwgZSlcbiAgeyByZXR1cm4gcnN0cjJhbnkocnN0cl9obWFjX3NoYTEoc3RyMnJzdHJfdXRmOChrKSwgc3RyMnJzdHJfdXRmOChkKSksIGUpOyB9XG5cbi8qXG4gKiBQZXJmb3JtIGEgc2ltcGxlIHNlbGYtdGVzdCB0byBzZWUgaWYgdGhlIFZNIGlzIHdvcmtpbmdcbiAqL1xuZnVuY3Rpb24gc2hhMV92bV90ZXN0KClcbntcbiAgcmV0dXJuIGhleF9zaGExKFwiYWJjXCIpLnRvTG93ZXJDYXNlKCkgPT0gXCJhOTk5M2UzNjQ3MDY4MTZhYmEzZTI1NzE3ODUwYzI2YzljZDBkODlkXCI7XG59XG5cbi8qXG4gKiBDYWxjdWxhdGUgdGhlIFNIQTEgb2YgYSByYXcgc3RyaW5nXG4gKi9cbmZ1bmN0aW9uIHJzdHJfc2hhMShzKVxue1xuICByZXR1cm4gYmluYjJyc3RyKGJpbmJfc2hhMShyc3RyMmJpbmIocyksIHMubGVuZ3RoICogOCkpO1xufVxuXG4vKlxuICogQ2FsY3VsYXRlIHRoZSBITUFDLVNIQTEgb2YgYSBrZXkgYW5kIHNvbWUgZGF0YSAocmF3IHN0cmluZ3MpXG4gKi9cbmZ1bmN0aW9uIHJzdHJfaG1hY19zaGExKGtleSwgZGF0YSlcbntcbiAgdmFyIGJrZXkgPSByc3RyMmJpbmIoa2V5KTtcbiAgaWYoYmtleS5sZW5ndGggPiAxNikgYmtleSA9IGJpbmJfc2hhMShia2V5LCBrZXkubGVuZ3RoICogOCk7XG5cbiAgdmFyIGlwYWQgPSBBcnJheSgxNiksIG9wYWQgPSBBcnJheSgxNik7XG4gIGZvcih2YXIgaSA9IDA7IGkgPCAxNjsgaSsrKVxuICB7XG4gICAgaXBhZFtpXSA9IGJrZXlbaV0gXiAweDM2MzYzNjM2O1xuICAgIG9wYWRbaV0gPSBia2V5W2ldIF4gMHg1QzVDNUM1QztcbiAgfVxuXG4gIHZhciBoYXNoID0gYmluYl9zaGExKGlwYWQuY29uY2F0KHJzdHIyYmluYihkYXRhKSksIDUxMiArIGRhdGEubGVuZ3RoICogOCk7XG4gIHJldHVybiBiaW5iMnJzdHIoYmluYl9zaGExKG9wYWQuY29uY2F0KGhhc2gpLCA1MTIgKyAxNjApKTtcbn1cblxuLypcbiAqIENvbnZlcnQgYSByYXcgc3RyaW5nIHRvIGEgaGV4IHN0cmluZ1xuICovXG5mdW5jdGlvbiByc3RyMmhleChpbnB1dClcbntcbiAgdHJ5IHsgaGV4Y2FzZSB9IGNhdGNoKGUpIHsgaGV4Y2FzZT0wOyB9XG4gIHZhciBoZXhfdGFiID0gaGV4Y2FzZSA/IFwiMDEyMzQ1Njc4OUFCQ0RFRlwiIDogXCIwMTIzNDU2Nzg5YWJjZGVmXCI7XG4gIHZhciBvdXRwdXQgPSBcIlwiO1xuICB2YXIgeDtcbiAgZm9yKHZhciBpID0gMDsgaSA8IGlucHV0Lmxlbmd0aDsgaSsrKVxuICB7XG4gICAgeCA9IGlucHV0LmNoYXJDb2RlQXQoaSk7XG4gICAgb3V0cHV0ICs9IGhleF90YWIuY2hhckF0KCh4ID4+PiA0KSAmIDB4MEYpXG4gICAgICAgICAgICsgIGhleF90YWIuY2hhckF0KCB4ICAgICAgICAmIDB4MEYpO1xuICB9XG4gIHJldHVybiBvdXRwdXQ7XG59XG5cbi8qXG4gKiBDb252ZXJ0IGEgcmF3IHN0cmluZyB0byBhIGJhc2UtNjQgc3RyaW5nXG4gKi9cbmZ1bmN0aW9uIHJzdHIyYjY0KGlucHV0KVxue1xuICB0cnkgeyBiNjRwYWQgfSBjYXRjaChlKSB7IGI2NHBhZD0nJzsgfVxuICB2YXIgdGFiID0gXCJBQkNERUZHSElKS0xNTk9QUVJTVFVWV1hZWmFiY2RlZmdoaWprbG1ub3BxcnN0dXZ3eHl6MDEyMzQ1Njc4OSsvXCI7XG4gIHZhciBvdXRwdXQgPSBcIlwiO1xuICB2YXIgbGVuID0gaW5wdXQubGVuZ3RoO1xuICBmb3IodmFyIGkgPSAwOyBpIDwgbGVuOyBpICs9IDMpXG4gIHtcbiAgICB2YXIgdHJpcGxldCA9IChpbnB1dC5jaGFyQ29kZUF0KGkpIDw8IDE2KVxuICAgICAgICAgICAgICAgIHwgKGkgKyAxIDwgbGVuID8gaW5wdXQuY2hhckNvZGVBdChpKzEpIDw8IDggOiAwKVxuICAgICAgICAgICAgICAgIHwgKGkgKyAyIDwgbGVuID8gaW5wdXQuY2hhckNvZGVBdChpKzIpICAgICAgOiAwKTtcbiAgICBmb3IodmFyIGogPSAwOyBqIDwgNDsgaisrKVxuICAgIHtcbiAgICAgIGlmKGkgKiA4ICsgaiAqIDYgPiBpbnB1dC5sZW5ndGggKiA4KSBvdXRwdXQgKz0gYjY0cGFkO1xuICAgICAgZWxzZSBvdXRwdXQgKz0gdGFiLmNoYXJBdCgodHJpcGxldCA+Pj4gNiooMy1qKSkgJiAweDNGKTtcbiAgICB9XG4gIH1cbiAgcmV0dXJuIG91dHB1dDtcbn1cblxuLypcbiAqIENvbnZlcnQgYSByYXcgc3RyaW5nIHRvIGFuIGFyYml0cmFyeSBzdHJpbmcgZW5jb2RpbmdcbiAqL1xuZnVuY3Rpb24gcnN0cjJhbnkoaW5wdXQsIGVuY29kaW5nKVxue1xuICB2YXIgZGl2aXNvciA9IGVuY29kaW5nLmxlbmd0aDtcbiAgdmFyIHJlbWFpbmRlcnMgPSBBcnJheSgpO1xuICB2YXIgaSwgcSwgeCwgcXVvdGllbnQ7XG5cbiAgLyogQ29udmVydCB0byBhbiBhcnJheSBvZiAxNi1iaXQgYmlnLWVuZGlhbiB2YWx1ZXMsIGZvcm1pbmcgdGhlIGRpdmlkZW5kICovXG4gIHZhciBkaXZpZGVuZCA9IEFycmF5KE1hdGguY2VpbChpbnB1dC5sZW5ndGggLyAyKSk7XG4gIGZvcihpID0gMDsgaSA8IGRpdmlkZW5kLmxlbmd0aDsgaSsrKVxuICB7XG4gICAgZGl2aWRlbmRbaV0gPSAoaW5wdXQuY2hhckNvZGVBdChpICogMikgPDwgOCkgfCBpbnB1dC5jaGFyQ29kZUF0KGkgKiAyICsgMSk7XG4gIH1cblxuICAvKlxuICAgKiBSZXBlYXRlZGx5IHBlcmZvcm0gYSBsb25nIGRpdmlzaW9uLiBUaGUgYmluYXJ5IGFycmF5IGZvcm1zIHRoZSBkaXZpZGVuZCxcbiAgICogdGhlIGxlbmd0aCBvZiB0aGUgZW5jb2RpbmcgaXMgdGhlIGRpdmlzb3IuIE9uY2UgY29tcHV0ZWQsIHRoZSBxdW90aWVudFxuICAgKiBmb3JtcyB0aGUgZGl2aWRlbmQgZm9yIHRoZSBuZXh0IHN0ZXAuIFdlIHN0b3Agd2hlbiB0aGUgZGl2aWRlbmQgaXMgemVyby5cbiAgICogQWxsIHJlbWFpbmRlcnMgYXJlIHN0b3JlZCBmb3IgbGF0ZXIgdXNlLlxuICAgKi9cbiAgd2hpbGUoZGl2aWRlbmQubGVuZ3RoID4gMClcbiAge1xuICAgIHF1b3RpZW50ID0gQXJyYXkoKTtcbiAgICB4ID0gMDtcbiAgICBmb3IoaSA9IDA7IGkgPCBkaXZpZGVuZC5sZW5ndGg7IGkrKylcbiAgICB7XG4gICAgICB4ID0gKHggPDwgMTYpICsgZGl2aWRlbmRbaV07XG4gICAgICBxID0gTWF0aC5mbG9vcih4IC8gZGl2aXNvcik7XG4gICAgICB4IC09IHEgKiBkaXZpc29yO1xuICAgICAgaWYocXVvdGllbnQubGVuZ3RoID4gMCB8fCBxID4gMClcbiAgICAgICAgcXVvdGllbnRbcXVvdGllbnQubGVuZ3RoXSA9IHE7XG4gICAgfVxuICAgIHJlbWFpbmRlcnNbcmVtYWluZGVycy5sZW5ndGhdID0geDtcbiAgICBkaXZpZGVuZCA9IHF1b3RpZW50O1xuICB9XG5cbiAgLyogQ29udmVydCB0aGUgcmVtYWluZGVycyB0byB0aGUgb3V0cHV0IHN0cmluZyAqL1xuICB2YXIgb3V0cHV0ID0gXCJcIjtcbiAgZm9yKGkgPSByZW1haW5kZXJzLmxlbmd0aCAtIDE7IGkgPj0gMDsgaS0tKVxuICAgIG91dHB1dCArPSBlbmNvZGluZy5jaGFyQXQocmVtYWluZGVyc1tpXSk7XG5cbiAgLyogQXBwZW5kIGxlYWRpbmcgemVybyBlcXVpdmFsZW50cyAqL1xuICB2YXIgZnVsbF9sZW5ndGggPSBNYXRoLmNlaWwoaW5wdXQubGVuZ3RoICogOCAvXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAoTWF0aC5sb2coZW5jb2RpbmcubGVuZ3RoKSAvIE1hdGgubG9nKDIpKSlcbiAgZm9yKGkgPSBvdXRwdXQubGVuZ3RoOyBpIDwgZnVsbF9sZW5ndGg7IGkrKylcbiAgICBvdXRwdXQgPSBlbmNvZGluZ1swXSArIG91dHB1dDtcblxuICByZXR1cm4gb3V0cHV0O1xufVxuXG4vKlxuICogRW5jb2RlIGEgc3RyaW5nIGFzIHV0Zi04LlxuICogRm9yIGVmZmljaWVuY3ksIHRoaXMgYXNzdW1lcyB0aGUgaW5wdXQgaXMgdmFsaWQgdXRmLTE2LlxuICovXG5mdW5jdGlvbiBzdHIycnN0cl91dGY4KGlucHV0KVxue1xuICB2YXIgb3V0cHV0ID0gXCJcIjtcbiAgdmFyIGkgPSAtMTtcbiAgdmFyIHgsIHk7XG5cbiAgd2hpbGUoKytpIDwgaW5wdXQubGVuZ3RoKVxuICB7XG4gICAgLyogRGVjb2RlIHV0Zi0xNiBzdXJyb2dhdGUgcGFpcnMgKi9cbiAgICB4ID0gaW5wdXQuY2hhckNvZGVBdChpKTtcbiAgICB5ID0gaSArIDEgPCBpbnB1dC5sZW5ndGggPyBpbnB1dC5jaGFyQ29kZUF0KGkgKyAxKSA6IDA7XG4gICAgaWYoMHhEODAwIDw9IHggJiYgeCA8PSAweERCRkYgJiYgMHhEQzAwIDw9IHkgJiYgeSA8PSAweERGRkYpXG4gICAge1xuICAgICAgeCA9IDB4MTAwMDAgKyAoKHggJiAweDAzRkYpIDw8IDEwKSArICh5ICYgMHgwM0ZGKTtcbiAgICAgIGkrKztcbiAgICB9XG5cbiAgICAvKiBFbmNvZGUgb3V0cHV0IGFzIHV0Zi04ICovXG4gICAgaWYoeCA8PSAweDdGKVxuICAgICAgb3V0cHV0ICs9IFN0cmluZy5mcm9tQ2hhckNvZGUoeCk7XG4gICAgZWxzZSBpZih4IDw9IDB4N0ZGKVxuICAgICAgb3V0cHV0ICs9IFN0cmluZy5mcm9tQ2hhckNvZGUoMHhDMCB8ICgoeCA+Pj4gNiApICYgMHgxRiksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAweDgwIHwgKCB4ICAgICAgICAgJiAweDNGKSk7XG4gICAgZWxzZSBpZih4IDw9IDB4RkZGRilcbiAgICAgIG91dHB1dCArPSBTdHJpbmcuZnJvbUNoYXJDb2RlKDB4RTAgfCAoKHggPj4+IDEyKSAmIDB4MEYpLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgMHg4MCB8ICgoeCA+Pj4gNiApICYgMHgzRiksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAweDgwIHwgKCB4ICAgICAgICAgJiAweDNGKSk7XG4gICAgZWxzZSBpZih4IDw9IDB4MUZGRkZGKVxuICAgICAgb3V0cHV0ICs9IFN0cmluZy5mcm9tQ2hhckNvZGUoMHhGMCB8ICgoeCA+Pj4gMTgpICYgMHgwNyksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAweDgwIHwgKCh4ID4+PiAxMikgJiAweDNGKSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDB4ODAgfCAoKHggPj4+IDYgKSAmIDB4M0YpLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgMHg4MCB8ICggeCAgICAgICAgICYgMHgzRikpO1xuICB9XG4gIHJldHVybiBvdXRwdXQ7XG59XG5cbi8qXG4gKiBFbmNvZGUgYSBzdHJpbmcgYXMgdXRmLTE2XG4gKi9cbmZ1bmN0aW9uIHN0cjJyc3RyX3V0ZjE2bGUoaW5wdXQpXG57XG4gIHZhciBvdXRwdXQgPSBcIlwiO1xuICBmb3IodmFyIGkgPSAwOyBpIDwgaW5wdXQubGVuZ3RoOyBpKyspXG4gICAgb3V0cHV0ICs9IFN0cmluZy5mcm9tQ2hhckNvZGUoIGlucHV0LmNoYXJDb2RlQXQoaSkgICAgICAgICYgMHhGRixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAoaW5wdXQuY2hhckNvZGVBdChpKSA+Pj4gOCkgJiAweEZGKTtcbiAgcmV0dXJuIG91dHB1dDtcbn1cblxuZnVuY3Rpb24gc3RyMnJzdHJfdXRmMTZiZShpbnB1dClcbntcbiAgdmFyIG91dHB1dCA9IFwiXCI7XG4gIGZvcih2YXIgaSA9IDA7IGkgPCBpbnB1dC5sZW5ndGg7IGkrKylcbiAgICBvdXRwdXQgKz0gU3RyaW5nLmZyb21DaGFyQ29kZSgoaW5wdXQuY2hhckNvZGVBdChpKSA+Pj4gOCkgJiAweEZGLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpbnB1dC5jaGFyQ29kZUF0KGkpICAgICAgICAmIDB4RkYpO1xuICByZXR1cm4gb3V0cHV0O1xufVxuXG4vKlxuICogQ29udmVydCBhIHJhdyBzdHJpbmcgdG8gYW4gYXJyYXkgb2YgYmlnLWVuZGlhbiB3b3Jkc1xuICogQ2hhcmFjdGVycyA+MjU1IGhhdmUgdGhlaXIgaGlnaC1ieXRlIHNpbGVudGx5IGlnbm9yZWQuXG4gKi9cbmZ1bmN0aW9uIHJzdHIyYmluYihpbnB1dClcbntcbiAgdmFyIG91dHB1dCA9IEFycmF5KGlucHV0Lmxlbmd0aCA+PiAyKTtcbiAgZm9yKHZhciBpID0gMDsgaSA8IG91dHB1dC5sZW5ndGg7IGkrKylcbiAgICBvdXRwdXRbaV0gPSAwO1xuICBmb3IodmFyIGkgPSAwOyBpIDwgaW5wdXQubGVuZ3RoICogODsgaSArPSA4KVxuICAgIG91dHB1dFtpPj41XSB8PSAoaW5wdXQuY2hhckNvZGVBdChpIC8gOCkgJiAweEZGKSA8PCAoMjQgLSBpICUgMzIpO1xuICByZXR1cm4gb3V0cHV0O1xufVxuXG4vKlxuICogQ29udmVydCBhbiBhcnJheSBvZiBiaWctZW5kaWFuIHdvcmRzIHRvIGEgc3RyaW5nXG4gKi9cbmZ1bmN0aW9uIGJpbmIycnN0cihpbnB1dClcbntcbiAgdmFyIG91dHB1dCA9IFwiXCI7XG4gIGZvcih2YXIgaSA9IDA7IGkgPCBpbnB1dC5sZW5ndGggKiAzMjsgaSArPSA4KVxuICAgIG91dHB1dCArPSBTdHJpbmcuZnJvbUNoYXJDb2RlKChpbnB1dFtpPj41XSA+Pj4gKDI0IC0gaSAlIDMyKSkgJiAweEZGKTtcbiAgcmV0dXJuIG91dHB1dDtcbn1cblxuLypcbiAqIENhbGN1bGF0ZSB0aGUgU0hBLTEgb2YgYW4gYXJyYXkgb2YgYmlnLWVuZGlhbiB3b3JkcywgYW5kIGEgYml0IGxlbmd0aFxuICovXG5mdW5jdGlvbiBiaW5iX3NoYTEoeCwgbGVuKVxue1xuICAvKiBhcHBlbmQgcGFkZGluZyAqL1xuICB4W2xlbiA+PiA1XSB8PSAweDgwIDw8ICgyNCAtIGxlbiAlIDMyKTtcbiAgeFsoKGxlbiArIDY0ID4+IDkpIDw8IDQpICsgMTVdID0gbGVuO1xuXG4gIHZhciB3ID0gQXJyYXkoODApO1xuICB2YXIgYSA9ICAxNzMyNTg0MTkzO1xuICB2YXIgYiA9IC0yNzE3MzM4Nzk7XG4gIHZhciBjID0gLTE3MzI1ODQxOTQ7XG4gIHZhciBkID0gIDI3MTczMzg3ODtcbiAgdmFyIGUgPSAtMTAwOTU4OTc3NjtcblxuICBmb3IodmFyIGkgPSAwOyBpIDwgeC5sZW5ndGg7IGkgKz0gMTYpXG4gIHtcbiAgICB2YXIgb2xkYSA9IGE7XG4gICAgdmFyIG9sZGIgPSBiO1xuICAgIHZhciBvbGRjID0gYztcbiAgICB2YXIgb2xkZCA9IGQ7XG4gICAgdmFyIG9sZGUgPSBlO1xuXG4gICAgZm9yKHZhciBqID0gMDsgaiA8IDgwOyBqKyspXG4gICAge1xuICAgICAgaWYoaiA8IDE2KSB3W2pdID0geFtpICsgal07XG4gICAgICBlbHNlIHdbal0gPSBiaXRfcm9sKHdbai0zXSBeIHdbai04XSBeIHdbai0xNF0gXiB3W2otMTZdLCAxKTtcbiAgICAgIHZhciB0ID0gc2FmZV9hZGQoc2FmZV9hZGQoYml0X3JvbChhLCA1KSwgc2hhMV9mdChqLCBiLCBjLCBkKSksXG4gICAgICAgICAgICAgICAgICAgICAgIHNhZmVfYWRkKHNhZmVfYWRkKGUsIHdbal0pLCBzaGExX2t0KGopKSk7XG4gICAgICBlID0gZDtcbiAgICAgIGQgPSBjO1xuICAgICAgYyA9IGJpdF9yb2woYiwgMzApO1xuICAgICAgYiA9IGE7XG4gICAgICBhID0gdDtcbiAgICB9XG5cbiAgICBhID0gc2FmZV9hZGQoYSwgb2xkYSk7XG4gICAgYiA9IHNhZmVfYWRkKGIsIG9sZGIpO1xuICAgIGMgPSBzYWZlX2FkZChjLCBvbGRjKTtcbiAgICBkID0gc2FmZV9hZGQoZCwgb2xkZCk7XG4gICAgZSA9IHNhZmVfYWRkKGUsIG9sZGUpO1xuICB9XG4gIHJldHVybiBBcnJheShhLCBiLCBjLCBkLCBlKTtcblxufVxuXG4vKlxuICogUGVyZm9ybSB0aGUgYXBwcm9wcmlhdGUgdHJpcGxldCBjb21iaW5hdGlvbiBmdW5jdGlvbiBmb3IgdGhlIGN1cnJlbnRcbiAqIGl0ZXJhdGlvblxuICovXG5mdW5jdGlvbiBzaGExX2Z0KHQsIGIsIGMsIGQpXG57XG4gIGlmKHQgPCAyMCkgcmV0dXJuIChiICYgYykgfCAoKH5iKSAmIGQpO1xuICBpZih0IDwgNDApIHJldHVybiBiIF4gYyBeIGQ7XG4gIGlmKHQgPCA2MCkgcmV0dXJuIChiICYgYykgfCAoYiAmIGQpIHwgKGMgJiBkKTtcbiAgcmV0dXJuIGIgXiBjIF4gZDtcbn1cblxuLypcbiAqIERldGVybWluZSB0aGUgYXBwcm9wcmlhdGUgYWRkaXRpdmUgY29uc3RhbnQgZm9yIHRoZSBjdXJyZW50IGl0ZXJhdGlvblxuICovXG5mdW5jdGlvbiBzaGExX2t0KHQpXG57XG4gIHJldHVybiAodCA8IDIwKSA/ICAxNTE4NTAwMjQ5IDogKHQgPCA0MCkgPyAgMTg1OTc3NTM5MyA6XG4gICAgICAgICAodCA8IDYwKSA/IC0xODk0MDA3NTg4IDogLTg5OTQ5NzUxNDtcbn1cblxuLypcbiAqIEFkZCBpbnRlZ2Vycywgd3JhcHBpbmcgYXQgMl4zMi4gVGhpcyB1c2VzIDE2LWJpdCBvcGVyYXRpb25zIGludGVybmFsbHlcbiAqIHRvIHdvcmsgYXJvdW5kIGJ1Z3MgaW4gc29tZSBKUyBpbnRlcnByZXRlcnMuXG4gKi9cbmZ1bmN0aW9uIHNhZmVfYWRkKHgsIHkpXG57XG4gIHZhciBsc3cgPSAoeCAmIDB4RkZGRikgKyAoeSAmIDB4RkZGRik7XG4gIHZhciBtc3cgPSAoeCA+PiAxNikgKyAoeSA+PiAxNikgKyAobHN3ID4+IDE2KTtcbiAgcmV0dXJuIChtc3cgPDwgMTYpIHwgKGxzdyAmIDB4RkZGRik7XG59XG5cbi8qXG4gKiBCaXR3aXNlIHJvdGF0ZSBhIDMyLWJpdCBudW1iZXIgdG8gdGhlIGxlZnQuXG4gKi9cbmZ1bmN0aW9uIGJpdF9yb2wobnVtLCBjbnQpXG57XG4gIHJldHVybiAobnVtIDw8IGNudCkgfCAobnVtID4+PiAoMzIgLSBjbnQpKTtcbn1cblxuZXhwb3J0cy5ITUFDU0hBMT0gZnVuY3Rpb24oa2V5LCBkYXRhKSB7XG4gIHJldHVybiBiNjRfaG1hY19zaGExKGtleSwgZGF0YSk7XG59Il0sIm5hbWVzIjpbImhleGNhc2UiLCJiNjRwYWQiLCJoZXhfc2hhMSIsInMiLCJyc3RyMmhleCIsInJzdHJfc2hhMSIsInN0cjJyc3RyX3V0ZjgiLCJiNjRfc2hhMSIsInJzdHIyYjY0IiwiYW55X3NoYTEiLCJlIiwicnN0cjJhbnkiLCJoZXhfaG1hY19zaGExIiwiayIsImQiLCJyc3RyX2htYWNfc2hhMSIsImI2NF9obWFjX3NoYTEiLCJhbnlfaG1hY19zaGExIiwic2hhMV92bV90ZXN0IiwidG9Mb3dlckNhc2UiLCJiaW5iMnJzdHIiLCJiaW5iX3NoYTEiLCJyc3RyMmJpbmIiLCJsZW5ndGgiLCJrZXkiLCJkYXRhIiwiYmtleSIsImlwYWQiLCJBcnJheSIsIm9wYWQiLCJpIiwiaGFzaCIsImNvbmNhdCIsImlucHV0IiwiaGV4X3RhYiIsIm91dHB1dCIsIngiLCJjaGFyQ29kZUF0IiwiY2hhckF0IiwidGFiIiwibGVuIiwidHJpcGxldCIsImoiLCJlbmNvZGluZyIsImRpdmlzb3IiLCJyZW1haW5kZXJzIiwicSIsInF1b3RpZW50IiwiZGl2aWRlbmQiLCJNYXRoIiwiY2VpbCIsImZsb29yIiwiZnVsbF9sZW5ndGgiLCJsb2ciLCJ5IiwiU3RyaW5nIiwiZnJvbUNoYXJDb2RlIiwic3RyMnJzdHJfdXRmMTZsZSIsInN0cjJyc3RyX3V0ZjE2YmUiLCJ3IiwiYSIsImIiLCJjIiwib2xkYSIsIm9sZGIiLCJvbGRjIiwib2xkZCIsIm9sZGUiLCJiaXRfcm9sIiwidCIsInNhZmVfYWRkIiwic2hhMV9mdCIsInNoYTFfa3QiLCJsc3ciLCJtc3ciLCJudW0iLCJjbnQiLCJleHBvcnRzIiwiSE1BQ1NIQTEiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/oauth/lib/sha1.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/oidc-token-hash/lib/index.js":
/*!***************************************************!*\
  !*** ./node_modules/oidc-token-hash/lib/index.js ***!
  \***************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nconst { strict: assert  } = __webpack_require__(/*! assert */ \"assert\");\nconst { createHash  } = __webpack_require__(/*! crypto */ \"crypto\");\nconst { format  } = __webpack_require__(/*! util */ \"util\");\nconst shake256 = __webpack_require__(/*! ./shake256 */ \"(sc_server)/./node_modules/oidc-token-hash/lib/shake256.js\");\nlet encode;\nif (Buffer.isEncoding(\"base64url\")) {\n    encode = (input)=>input.toString(\"base64url\");\n} else {\n    const fromBase64 = (base64)=>base64.replace(/=/g, \"\").replace(/\\+/g, \"-\").replace(/\\//g, \"_\");\n    encode = (input)=>fromBase64(input.toString(\"base64\"));\n}\n/** SPECIFICATION\n * Its (_hash) value is the base64url encoding of the left-most half of the hash of the octets of\n * the ASCII representation of the token value, where the hash algorithm used is the hash algorithm\n * used in the alg Header Parameter of the ID Token's JOSE Header. For instance, if the alg is\n * RS256, hash the token value with SHA-256, then take the left-most 128 bits and base64url encode\n * them. The _hash value is a case sensitive string.\n */ /**\n * @name getHash\n * @api private\n *\n * returns the sha length based off the JOSE alg heade value, defaults to sha256\n *\n * @param token {String} token value to generate the hash from\n * @param alg {String} ID Token JOSE header alg value (i.e. RS256, HS384, ES512, PS256)\n * @param [crv] {String} For EdDSA the curve decides what hash algorithm is used. Required for EdDSA\n */ function getHash(alg, crv) {\n    switch(alg){\n        case \"HS256\":\n        case \"RS256\":\n        case \"PS256\":\n        case \"ES256\":\n        case \"ES256K\":\n            return createHash(\"sha256\");\n        case \"HS384\":\n        case \"RS384\":\n        case \"PS384\":\n        case \"ES384\":\n            return createHash(\"sha384\");\n        case \"HS512\":\n        case \"RS512\":\n        case \"PS512\":\n        case \"ES512\":\n            return createHash(\"sha512\");\n        case \"EdDSA\":\n            switch(crv){\n                case \"Ed25519\":\n                    return createHash(\"sha512\");\n                case \"Ed448\":\n                    if (!shake256) {\n                        throw new TypeError(\"Ed448 *_hash calculation is not supported in your Node.js runtime version\");\n                    }\n                    return createHash(\"shake256\", {\n                        outputLength: 114\n                    });\n                default:\n                    throw new TypeError(\"unrecognized or invalid EdDSA curve provided\");\n            }\n        default:\n            throw new TypeError(\"unrecognized or invalid JWS algorithm provided\");\n    }\n}\nfunction generate(token, alg, crv) {\n    const digest = getHash(alg, crv).update(token).digest();\n    return encode(digest.slice(0, digest.length / 2));\n}\nfunction validate(names, actual, source, alg, crv) {\n    if (typeof names.claim !== \"string\" || !names.claim) {\n        throw new TypeError(\"names.claim must be a non-empty string\");\n    }\n    if (typeof names.source !== \"string\" || !names.source) {\n        throw new TypeError(\"names.source must be a non-empty string\");\n    }\n    assert(typeof actual === \"string\" && actual, `${names.claim} must be a non-empty string`);\n    assert(typeof source === \"string\" && source, `${names.source} must be a non-empty string`);\n    let expected;\n    let msg;\n    try {\n        expected = generate(source, alg, crv);\n    } catch (err) {\n        msg = format(\"%s could not be validated (%s)\", names.claim, err.message);\n    }\n    msg = msg || format(\"%s mismatch, expected %s, got: %s\", names.claim, expected, actual);\n    assert.equal(expected, actual, msg);\n}\nmodule.exports = {\n    validate,\n    generate\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvb2lkYy10b2tlbi1oYXNoL2xpYi9pbmRleC5qcyIsIm1hcHBpbmdzIjoiO0FBQUEsTUFBTSxFQUFFQSxRQUFRQyxPQUFNLEVBQUUsR0FBR0MsbUJBQU9BLENBQUM7QUFDbkMsTUFBTSxFQUFFQyxXQUFVLEVBQUUsR0FBR0QsbUJBQU9BLENBQUM7QUFDL0IsTUFBTSxFQUFFRSxPQUFNLEVBQUUsR0FBR0YsbUJBQU9BLENBQUM7QUFFM0IsTUFBTUcsV0FBV0gsbUJBQU9BLENBQUM7QUFFekIsSUFBSUk7QUFDSixJQUFJQyxPQUFPQyxXQUFXLGNBQWM7SUFDbENGLFNBQVMsQ0FBQ0csUUFBVUEsTUFBTUMsU0FBUztBQUNyQyxPQUFPO0lBQ0wsTUFBTUMsYUFBYSxDQUFDQyxTQUFXQSxPQUFPQyxRQUFRLE1BQU0sSUFBSUEsUUFBUSxPQUFPLEtBQUtBLFFBQVEsT0FBTztJQUMzRlAsU0FBUyxDQUFDRyxRQUFVRSxXQUFXRixNQUFNQyxTQUFTO0FBQ2hEO0FBRUE7Ozs7OztDQU1DLEdBRUQ7Ozs7Ozs7OztDQVNDLEdBQ0QsU0FBU0ksUUFBUUMsR0FBRyxFQUFFQyxHQUFHO0lBQ3ZCLE9BQVFEO1FBQ04sS0FBSztRQUNMLEtBQUs7UUFDTCxLQUFLO1FBQ0wsS0FBSztRQUNMLEtBQUs7WUFDSCxPQUFPWixXQUFXO1FBRXBCLEtBQUs7UUFDTCxLQUFLO1FBQ0wsS0FBSztRQUNMLEtBQUs7WUFDSCxPQUFPQSxXQUFXO1FBRXBCLEtBQUs7UUFDTCxLQUFLO1FBQ0wsS0FBSztRQUNMLEtBQUs7WUFDSCxPQUFPQSxXQUFXO1FBRXBCLEtBQUs7WUFDSCxPQUFRYTtnQkFDTixLQUFLO29CQUNILE9BQU9iLFdBQVc7Z0JBQ3BCLEtBQUs7b0JBQ0gsSUFBSSxDQUFDRSxVQUFVO3dCQUNiLE1BQU0sSUFBSVksVUFBVTtvQkFDdEI7b0JBRUEsT0FBT2QsV0FBVyxZQUFZO3dCQUFFZSxjQUFjO29CQUFJO2dCQUNwRDtvQkFDRSxNQUFNLElBQUlELFVBQVU7WUFDeEI7UUFFRjtZQUNFLE1BQU0sSUFBSUEsVUFBVTtJQUN4QjtBQUNGO0FBRUEsU0FBU0UsU0FBU0MsS0FBSyxFQUFFTCxHQUFHLEVBQUVDLEdBQUc7SUFDL0IsTUFBTUssU0FBU1AsUUFBUUMsS0FBS0MsS0FBS00sT0FBT0YsT0FBT0M7SUFDL0MsT0FBT2YsT0FBT2UsT0FBT0UsTUFBTSxHQUFHRixPQUFPRyxTQUFTO0FBQ2hEO0FBRUEsU0FBU0MsU0FBU0MsS0FBSyxFQUFFQyxNQUFNLEVBQUVDLE1BQU0sRUFBRWIsR0FBRyxFQUFFQyxHQUFHO0lBQy9DLElBQUksT0FBT1UsTUFBTUcsVUFBVSxZQUFZLENBQUNILE1BQU1HLE9BQU87UUFDbkQsTUFBTSxJQUFJWixVQUFVO0lBQ3RCO0lBRUEsSUFBSSxPQUFPUyxNQUFNRSxXQUFXLFlBQVksQ0FBQ0YsTUFBTUUsUUFBUTtRQUNyRCxNQUFNLElBQUlYLFVBQVU7SUFDdEI7SUFFQWhCLE9BQU8sT0FBTzBCLFdBQVcsWUFBWUEsUUFBUSxDQUFDLEVBQUVELE1BQU1HLE1BQU0sMkJBQTJCLENBQUM7SUFDeEY1QixPQUFPLE9BQU8yQixXQUFXLFlBQVlBLFFBQVEsQ0FBQyxFQUFFRixNQUFNRSxPQUFPLDJCQUEyQixDQUFDO0lBRXpGLElBQUlFO0lBQ0osSUFBSUM7SUFDSixJQUFJO1FBQ0ZELFdBQVdYLFNBQVNTLFFBQVFiLEtBQUtDO0lBQ25DLEVBQUUsT0FBT2dCLEtBQUs7UUFDWkQsTUFBTTNCLE9BQU8sa0NBQWtDc0IsTUFBTUcsT0FBT0csSUFBSUM7SUFDbEU7SUFFQUYsTUFBTUEsT0FBTzNCLE9BQU8scUNBQXFDc0IsTUFBTUcsT0FBT0MsVUFBVUg7SUFFaEYxQixPQUFPaUMsTUFBTUosVUFBVUgsUUFBUUk7QUFDakM7QUFFQUksT0FBT0MsVUFBVTtJQUNmWDtJQUNBTjtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZnVsbHN0YWNrLXJvbGUtYmFzZWQtbmV4dGpzLTIvLi9ub2RlX21vZHVsZXMvb2lkYy10b2tlbi1oYXNoL2xpYi9pbmRleC5qcz9jODIzIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IHsgc3RyaWN0OiBhc3NlcnQgfSA9IHJlcXVpcmUoJ2Fzc2VydCcpO1xuY29uc3QgeyBjcmVhdGVIYXNoIH0gPSByZXF1aXJlKCdjcnlwdG8nKTtcbmNvbnN0IHsgZm9ybWF0IH0gPSByZXF1aXJlKCd1dGlsJyk7XG5cbmNvbnN0IHNoYWtlMjU2ID0gcmVxdWlyZSgnLi9zaGFrZTI1NicpO1xuXG5sZXQgZW5jb2RlO1xuaWYgKEJ1ZmZlci5pc0VuY29kaW5nKCdiYXNlNjR1cmwnKSkge1xuICBlbmNvZGUgPSAoaW5wdXQpID0+IGlucHV0LnRvU3RyaW5nKCdiYXNlNjR1cmwnKTtcbn0gZWxzZSB7XG4gIGNvbnN0IGZyb21CYXNlNjQgPSAoYmFzZTY0KSA9PiBiYXNlNjQucmVwbGFjZSgvPS9nLCAnJykucmVwbGFjZSgvXFwrL2csICctJykucmVwbGFjZSgvXFwvL2csICdfJyk7XG4gIGVuY29kZSA9IChpbnB1dCkgPT4gZnJvbUJhc2U2NChpbnB1dC50b1N0cmluZygnYmFzZTY0JykpO1xufVxuXG4vKiogU1BFQ0lGSUNBVElPTlxuICogSXRzIChfaGFzaCkgdmFsdWUgaXMgdGhlIGJhc2U2NHVybCBlbmNvZGluZyBvZiB0aGUgbGVmdC1tb3N0IGhhbGYgb2YgdGhlIGhhc2ggb2YgdGhlIG9jdGV0cyBvZlxuICogdGhlIEFTQ0lJIHJlcHJlc2VudGF0aW9uIG9mIHRoZSB0b2tlbiB2YWx1ZSwgd2hlcmUgdGhlIGhhc2ggYWxnb3JpdGhtIHVzZWQgaXMgdGhlIGhhc2ggYWxnb3JpdGhtXG4gKiB1c2VkIGluIHRoZSBhbGcgSGVhZGVyIFBhcmFtZXRlciBvZiB0aGUgSUQgVG9rZW4ncyBKT1NFIEhlYWRlci4gRm9yIGluc3RhbmNlLCBpZiB0aGUgYWxnIGlzXG4gKiBSUzI1NiwgaGFzaCB0aGUgdG9rZW4gdmFsdWUgd2l0aCBTSEEtMjU2LCB0aGVuIHRha2UgdGhlIGxlZnQtbW9zdCAxMjggYml0cyBhbmQgYmFzZTY0dXJsIGVuY29kZVxuICogdGhlbS4gVGhlIF9oYXNoIHZhbHVlIGlzIGEgY2FzZSBzZW5zaXRpdmUgc3RyaW5nLlxuICovXG5cbi8qKlxuICogQG5hbWUgZ2V0SGFzaFxuICogQGFwaSBwcml2YXRlXG4gKlxuICogcmV0dXJucyB0aGUgc2hhIGxlbmd0aCBiYXNlZCBvZmYgdGhlIEpPU0UgYWxnIGhlYWRlIHZhbHVlLCBkZWZhdWx0cyB0byBzaGEyNTZcbiAqXG4gKiBAcGFyYW0gdG9rZW4ge1N0cmluZ30gdG9rZW4gdmFsdWUgdG8gZ2VuZXJhdGUgdGhlIGhhc2ggZnJvbVxuICogQHBhcmFtIGFsZyB7U3RyaW5nfSBJRCBUb2tlbiBKT1NFIGhlYWRlciBhbGcgdmFsdWUgKGkuZS4gUlMyNTYsIEhTMzg0LCBFUzUxMiwgUFMyNTYpXG4gKiBAcGFyYW0gW2Nydl0ge1N0cmluZ30gRm9yIEVkRFNBIHRoZSBjdXJ2ZSBkZWNpZGVzIHdoYXQgaGFzaCBhbGdvcml0aG0gaXMgdXNlZC4gUmVxdWlyZWQgZm9yIEVkRFNBXG4gKi9cbmZ1bmN0aW9uIGdldEhhc2goYWxnLCBjcnYpIHtcbiAgc3dpdGNoIChhbGcpIHtcbiAgICBjYXNlICdIUzI1Nic6XG4gICAgY2FzZSAnUlMyNTYnOlxuICAgIGNhc2UgJ1BTMjU2JzpcbiAgICBjYXNlICdFUzI1Nic6XG4gICAgY2FzZSAnRVMyNTZLJzpcbiAgICAgIHJldHVybiBjcmVhdGVIYXNoKCdzaGEyNTYnKTtcblxuICAgIGNhc2UgJ0hTMzg0JzpcbiAgICBjYXNlICdSUzM4NCc6XG4gICAgY2FzZSAnUFMzODQnOlxuICAgIGNhc2UgJ0VTMzg0JzpcbiAgICAgIHJldHVybiBjcmVhdGVIYXNoKCdzaGEzODQnKTtcblxuICAgIGNhc2UgJ0hTNTEyJzpcbiAgICBjYXNlICdSUzUxMic6XG4gICAgY2FzZSAnUFM1MTInOlxuICAgIGNhc2UgJ0VTNTEyJzpcbiAgICAgIHJldHVybiBjcmVhdGVIYXNoKCdzaGE1MTInKTtcblxuICAgIGNhc2UgJ0VkRFNBJzpcbiAgICAgIHN3aXRjaCAoY3J2KSB7XG4gICAgICAgIGNhc2UgJ0VkMjU1MTknOlxuICAgICAgICAgIHJldHVybiBjcmVhdGVIYXNoKCdzaGE1MTInKTtcbiAgICAgICAgY2FzZSAnRWQ0NDgnOlxuICAgICAgICAgIGlmICghc2hha2UyNTYpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ0VkNDQ4ICpfaGFzaCBjYWxjdWxhdGlvbiBpcyBub3Qgc3VwcG9ydGVkIGluIHlvdXIgTm9kZS5qcyBydW50aW1lIHZlcnNpb24nKTtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICByZXR1cm4gY3JlYXRlSGFzaCgnc2hha2UyNTYnLCB7IG91dHB1dExlbmd0aDogMTE0IH0pO1xuICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ3VucmVjb2duaXplZCBvciBpbnZhbGlkIEVkRFNBIGN1cnZlIHByb3ZpZGVkJyk7XG4gICAgICB9XG5cbiAgICBkZWZhdWx0OlxuICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcigndW5yZWNvZ25pemVkIG9yIGludmFsaWQgSldTIGFsZ29yaXRobSBwcm92aWRlZCcpO1xuICB9XG59XG5cbmZ1bmN0aW9uIGdlbmVyYXRlKHRva2VuLCBhbGcsIGNydikge1xuICBjb25zdCBkaWdlc3QgPSBnZXRIYXNoKGFsZywgY3J2KS51cGRhdGUodG9rZW4pLmRpZ2VzdCgpO1xuICByZXR1cm4gZW5jb2RlKGRpZ2VzdC5zbGljZSgwLCBkaWdlc3QubGVuZ3RoIC8gMikpO1xufVxuXG5mdW5jdGlvbiB2YWxpZGF0ZShuYW1lcywgYWN0dWFsLCBzb3VyY2UsIGFsZywgY3J2KSB7XG4gIGlmICh0eXBlb2YgbmFtZXMuY2xhaW0gIT09ICdzdHJpbmcnIHx8ICFuYW1lcy5jbGFpbSkge1xuICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ25hbWVzLmNsYWltIG11c3QgYmUgYSBub24tZW1wdHkgc3RyaW5nJyk7XG4gIH1cblxuICBpZiAodHlwZW9mIG5hbWVzLnNvdXJjZSAhPT0gJ3N0cmluZycgfHwgIW5hbWVzLnNvdXJjZSkge1xuICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ25hbWVzLnNvdXJjZSBtdXN0IGJlIGEgbm9uLWVtcHR5IHN0cmluZycpO1xuICB9XG5cbiAgYXNzZXJ0KHR5cGVvZiBhY3R1YWwgPT09ICdzdHJpbmcnICYmIGFjdHVhbCwgYCR7bmFtZXMuY2xhaW19IG11c3QgYmUgYSBub24tZW1wdHkgc3RyaW5nYCk7XG4gIGFzc2VydCh0eXBlb2Ygc291cmNlID09PSAnc3RyaW5nJyAmJiBzb3VyY2UsIGAke25hbWVzLnNvdXJjZX0gbXVzdCBiZSBhIG5vbi1lbXB0eSBzdHJpbmdgKTtcblxuICBsZXQgZXhwZWN0ZWQ7XG4gIGxldCBtc2c7XG4gIHRyeSB7XG4gICAgZXhwZWN0ZWQgPSBnZW5lcmF0ZShzb3VyY2UsIGFsZywgY3J2KTtcbiAgfSBjYXRjaCAoZXJyKSB7XG4gICAgbXNnID0gZm9ybWF0KCclcyBjb3VsZCBub3QgYmUgdmFsaWRhdGVkICglcyknLCBuYW1lcy5jbGFpbSwgZXJyLm1lc3NhZ2UpO1xuICB9XG5cbiAgbXNnID0gbXNnIHx8IGZvcm1hdCgnJXMgbWlzbWF0Y2gsIGV4cGVjdGVkICVzLCBnb3Q6ICVzJywgbmFtZXMuY2xhaW0sIGV4cGVjdGVkLCBhY3R1YWwpO1xuXG4gIGFzc2VydC5lcXVhbChleHBlY3RlZCwgYWN0dWFsLCBtc2cpO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgdmFsaWRhdGUsXG4gIGdlbmVyYXRlLFxufTtcbiJdLCJuYW1lcyI6WyJzdHJpY3QiLCJhc3NlcnQiLCJyZXF1aXJlIiwiY3JlYXRlSGFzaCIsImZvcm1hdCIsInNoYWtlMjU2IiwiZW5jb2RlIiwiQnVmZmVyIiwiaXNFbmNvZGluZyIsImlucHV0IiwidG9TdHJpbmciLCJmcm9tQmFzZTY0IiwiYmFzZTY0IiwicmVwbGFjZSIsImdldEhhc2giLCJhbGciLCJjcnYiLCJUeXBlRXJyb3IiLCJvdXRwdXRMZW5ndGgiLCJnZW5lcmF0ZSIsInRva2VuIiwiZGlnZXN0IiwidXBkYXRlIiwic2xpY2UiLCJsZW5ndGgiLCJ2YWxpZGF0ZSIsIm5hbWVzIiwiYWN0dWFsIiwic291cmNlIiwiY2xhaW0iLCJleHBlY3RlZCIsIm1zZyIsImVyciIsIm1lc3NhZ2UiLCJlcXVhbCIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/oidc-token-hash/lib/index.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/oidc-token-hash/lib/shake256.js":
/*!******************************************************!*\
  !*** ./node_modules/oidc-token-hash/lib/shake256.js ***!
  \******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nconst crypto = __webpack_require__(/*! crypto */ \"crypto\");\nconst [major, minor] = process.version.substring(1).split(\".\").map((x)=>parseInt(x, 10));\nconst xofOutputLength = major > 12 || major === 12 && minor >= 8;\nconst shake256 = xofOutputLength && crypto.getHashes().includes(\"shake256\");\nmodule.exports = shake256;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvb2lkYy10b2tlbi1oYXNoL2xpYi9zaGFrZTI1Ni5qcyIsIm1hcHBpbmdzIjoiO0FBQUEsTUFBTUEsU0FBU0MsbUJBQU9BLENBQUM7QUFFdkIsTUFBTSxDQUFDQyxPQUFPQyxNQUFNLEdBQUdDLFFBQVFDLFFBQVFDLFVBQVUsR0FBR0MsTUFBTSxLQUFLQyxJQUFJLENBQUNDLElBQU1DLFNBQVNELEdBQUc7QUFDdEYsTUFBTUUsa0JBQWtCVCxRQUFRLE1BQU9BLFVBQVUsTUFBTUMsU0FBUztBQUNoRSxNQUFNUyxXQUFXRCxtQkFBbUJYLE9BQU9hLFlBQVlDLFNBQVM7QUFFaEVDLE9BQU9DLFVBQVVKIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZnVsbHN0YWNrLXJvbGUtYmFzZWQtbmV4dGpzLTIvLi9ub2RlX21vZHVsZXMvb2lkYy10b2tlbi1oYXNoL2xpYi9zaGFrZTI1Ni5qcz84MjQ1Il0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGNyeXB0byA9IHJlcXVpcmUoJ2NyeXB0bycpO1xuXG5jb25zdCBbbWFqb3IsIG1pbm9yXSA9IHByb2Nlc3MudmVyc2lvbi5zdWJzdHJpbmcoMSkuc3BsaXQoJy4nKS5tYXAoKHgpID0+IHBhcnNlSW50KHgsIDEwKSk7XG5jb25zdCB4b2ZPdXRwdXRMZW5ndGggPSBtYWpvciA+IDEyIHx8IChtYWpvciA9PT0gMTIgJiYgbWlub3IgPj0gOCk7XG5jb25zdCBzaGFrZTI1NiA9IHhvZk91dHB1dExlbmd0aCAmJiBjcnlwdG8uZ2V0SGFzaGVzKCkuaW5jbHVkZXMoJ3NoYWtlMjU2Jyk7XG5cbm1vZHVsZS5leHBvcnRzID0gc2hha2UyNTY7XG4iXSwibmFtZXMiOlsiY3J5cHRvIiwicmVxdWlyZSIsIm1ham9yIiwibWlub3IiLCJwcm9jZXNzIiwidmVyc2lvbiIsInN1YnN0cmluZyIsInNwbGl0IiwibWFwIiwieCIsInBhcnNlSW50IiwieG9mT3V0cHV0TGVuZ3RoIiwic2hha2UyNTYiLCJnZXRIYXNoZXMiLCJpbmNsdWRlcyIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/oidc-token-hash/lib/shake256.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/openid-client/lib/client.js":
/*!**************************************************!*\
  !*** ./node_modules/openid-client/lib/client.js ***!
  \**************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nconst { inspect  } = __webpack_require__(/*! util */ \"util\");\nconst stdhttp = __webpack_require__(/*! http */ \"http\");\nconst crypto = __webpack_require__(/*! crypto */ \"crypto\");\nconst { strict: assert  } = __webpack_require__(/*! assert */ \"assert\");\nconst querystring = __webpack_require__(/*! querystring */ \"querystring\");\nconst url = __webpack_require__(/*! url */ \"url\");\nconst jose = __webpack_require__(/*! jose */ \"(sc_server)/./node_modules/jose/dist/node/cjs/index.js\");\nconst tokenHash = __webpack_require__(/*! oidc-token-hash */ \"(sc_server)/./node_modules/oidc-token-hash/lib/index.js\");\nconst isKeyObject = __webpack_require__(/*! ./helpers/is_key_object */ \"(sc_server)/./node_modules/openid-client/lib/helpers/is_key_object.js\");\nconst decodeJWT = __webpack_require__(/*! ./helpers/decode_jwt */ \"(sc_server)/./node_modules/openid-client/lib/helpers/decode_jwt.js\");\nconst base64url = __webpack_require__(/*! ./helpers/base64url */ \"(sc_server)/./node_modules/openid-client/lib/helpers/base64url.js\");\nconst defaults = __webpack_require__(/*! ./helpers/defaults */ \"(sc_server)/./node_modules/openid-client/lib/helpers/defaults.js\");\nconst parseWwwAuthenticate = __webpack_require__(/*! ./helpers/www_authenticate_parser */ \"(sc_server)/./node_modules/openid-client/lib/helpers/www_authenticate_parser.js\");\nconst { assertSigningAlgValuesSupport , assertIssuerConfiguration  } = __webpack_require__(/*! ./helpers/assert */ \"(sc_server)/./node_modules/openid-client/lib/helpers/assert.js\");\nconst pick = __webpack_require__(/*! ./helpers/pick */ \"(sc_server)/./node_modules/openid-client/lib/helpers/pick.js\");\nconst isPlainObject = __webpack_require__(/*! ./helpers/is_plain_object */ \"(sc_server)/./node_modules/openid-client/lib/helpers/is_plain_object.js\");\nconst processResponse = __webpack_require__(/*! ./helpers/process_response */ \"(sc_server)/./node_modules/openid-client/lib/helpers/process_response.js\");\nconst TokenSet = __webpack_require__(/*! ./token_set */ \"(sc_server)/./node_modules/openid-client/lib/token_set.js\");\nconst { OPError , RPError  } = __webpack_require__(/*! ./errors */ \"(sc_server)/./node_modules/openid-client/lib/errors.js\");\nconst now = __webpack_require__(/*! ./helpers/unix_timestamp */ \"(sc_server)/./node_modules/openid-client/lib/helpers/unix_timestamp.js\");\nconst { random  } = __webpack_require__(/*! ./helpers/generators */ \"(sc_server)/./node_modules/openid-client/lib/helpers/generators.js\");\nconst request = __webpack_require__(/*! ./helpers/request */ \"(sc_server)/./node_modules/openid-client/lib/helpers/request.js\");\nconst { CLOCK_TOLERANCE  } = __webpack_require__(/*! ./helpers/consts */ \"(sc_server)/./node_modules/openid-client/lib/helpers/consts.js\");\nconst { keystores  } = __webpack_require__(/*! ./helpers/weak_cache */ \"(sc_server)/./node_modules/openid-client/lib/helpers/weak_cache.js\");\nconst KeyStore = __webpack_require__(/*! ./helpers/keystore */ \"(sc_server)/./node_modules/openid-client/lib/helpers/keystore.js\");\nconst clone = __webpack_require__(/*! ./helpers/deep_clone */ \"(sc_server)/./node_modules/openid-client/lib/helpers/deep_clone.js\");\nconst { authenticatedPost , resolveResponseType , resolveRedirectUri  } = __webpack_require__(/*! ./helpers/client */ \"(sc_server)/./node_modules/openid-client/lib/helpers/client.js\");\nconst { queryKeyStore  } = __webpack_require__(/*! ./helpers/issuer */ \"(sc_server)/./node_modules/openid-client/lib/helpers/issuer.js\");\nconst DeviceFlowHandle = __webpack_require__(/*! ./device_flow_handle */ \"(sc_server)/./node_modules/openid-client/lib/device_flow_handle.js\");\nconst [major, minor] = process.version.slice(1).split(\".\").map((str)=>parseInt(str, 10));\nconst rsaPssParams = major >= 17 || major === 16 && minor >= 9;\nconst retryAttempt = Symbol();\nconst skipNonceCheck = Symbol();\nconst skipMaxAgeCheck = Symbol();\nfunction pickCb(input) {\n    return pick(input, \"access_token\", \"code\", \"error_description\", \"error_uri\", \"error\", \"expires_in\", \"id_token\", \"iss\", \"response\", \"session_state\", \"state\", \"token_type\");\n}\nfunction authorizationHeaderValue(token, tokenType = \"Bearer\") {\n    return `${tokenType} ${token}`;\n}\nfunction verifyPresence(payload, jwt, prop) {\n    if (payload[prop] === undefined) {\n        throw new RPError({\n            message: `missing required JWT property ${prop}`,\n            jwt\n        });\n    }\n}\nfunction authorizationParams(params) {\n    const authParams = {\n        client_id: this.client_id,\n        scope: \"openid\",\n        response_type: resolveResponseType.call(this),\n        redirect_uri: resolveRedirectUri.call(this),\n        ...params\n    };\n    Object.entries(authParams).forEach(([key, value])=>{\n        if (value === null || value === undefined) {\n            delete authParams[key];\n        } else if (key === \"claims\" && typeof value === \"object\") {\n            authParams[key] = JSON.stringify(value);\n        } else if (key === \"resource\" && Array.isArray(value)) {\n            authParams[key] = value;\n        } else if (typeof value !== \"string\") {\n            authParams[key] = String(value);\n        }\n    });\n    return authParams;\n}\nfunction getKeystore(jwks) {\n    if (!isPlainObject(jwks) || !Array.isArray(jwks.keys) || jwks.keys.some((k)=>!isPlainObject(k) || !(\"kty\" in k))) {\n        throw new TypeError(\"jwks must be a JSON Web Key Set formatted object\");\n    }\n    return KeyStore.fromJWKS(jwks, {\n        onlyPrivate: true\n    });\n}\n// if an OP doesnt support client_secret_basic but supports client_secret_post, use it instead\n// this is in place to take care of most common pitfalls when first using discovered Issuers without\n// the support for default values defined by Discovery 1.0\nfunction checkBasicSupport(client, properties) {\n    try {\n        const supported = client.issuer.token_endpoint_auth_methods_supported;\n        if (!supported.includes(properties.token_endpoint_auth_method)) {\n            if (supported.includes(\"client_secret_post\")) {\n                properties.token_endpoint_auth_method = \"client_secret_post\";\n            }\n        }\n    } catch (err) {}\n}\nfunction handleCommonMistakes(client, metadata, properties) {\n    if (!metadata.token_endpoint_auth_method) {\n        // if no explicit value was provided\n        checkBasicSupport(client, properties);\n    }\n    // :fp: c'mon people... RTFM\n    if (metadata.redirect_uri) {\n        if (metadata.redirect_uris) {\n            throw new TypeError(\"provide a redirect_uri or redirect_uris, not both\");\n        }\n        properties.redirect_uris = [\n            metadata.redirect_uri\n        ];\n        delete properties.redirect_uri;\n    }\n    if (metadata.response_type) {\n        if (metadata.response_types) {\n            throw new TypeError(\"provide a response_type or response_types, not both\");\n        }\n        properties.response_types = [\n            metadata.response_type\n        ];\n        delete properties.response_type;\n    }\n}\nfunction getDefaultsForEndpoint(endpoint, issuer, properties) {\n    if (!issuer[`${endpoint}_endpoint`]) return;\n    const tokenEndpointAuthMethod = properties.token_endpoint_auth_method;\n    const tokenEndpointAuthSigningAlg = properties.token_endpoint_auth_signing_alg;\n    const eam = `${endpoint}_endpoint_auth_method`;\n    const easa = `${endpoint}_endpoint_auth_signing_alg`;\n    if (properties[eam] === undefined && properties[easa] === undefined) {\n        if (tokenEndpointAuthMethod !== undefined) {\n            properties[eam] = tokenEndpointAuthMethod;\n        }\n        if (tokenEndpointAuthSigningAlg !== undefined) {\n            properties[easa] = tokenEndpointAuthSigningAlg;\n        }\n    }\n}\nclass BaseClient {\n    #metadata;\n    #issuer;\n    #aadIssValidation;\n    #additionalAuthorizedParties;\n    constructor(issuer, aadIssValidation, metadata = {}, jwks, options){\n        this.#metadata = new Map();\n        this.#issuer = issuer;\n        this.#aadIssValidation = aadIssValidation;\n        if (typeof metadata.client_id !== \"string\" || !metadata.client_id) {\n            throw new TypeError(\"client_id is required\");\n        }\n        const properties = {\n            grant_types: [\n                \"authorization_code\"\n            ],\n            id_token_signed_response_alg: \"RS256\",\n            authorization_signed_response_alg: \"RS256\",\n            response_types: [\n                \"code\"\n            ],\n            token_endpoint_auth_method: \"client_secret_basic\",\n            ...this.fapi() ? {\n                grant_types: [\n                    \"authorization_code\",\n                    \"implicit\"\n                ],\n                id_token_signed_response_alg: \"PS256\",\n                authorization_signed_response_alg: \"PS256\",\n                response_types: [\n                    \"code id_token\"\n                ],\n                tls_client_certificate_bound_access_tokens: true,\n                token_endpoint_auth_method: undefined\n            } : undefined,\n            ...metadata\n        };\n        if (this.fapi()) {\n            switch(properties.token_endpoint_auth_method){\n                case \"self_signed_tls_client_auth\":\n                case \"tls_client_auth\":\n                    break;\n                case \"private_key_jwt\":\n                    if (!jwks) {\n                        throw new TypeError(\"jwks is required\");\n                    }\n                    break;\n                case undefined:\n                    throw new TypeError(\"token_endpoint_auth_method is required\");\n                default:\n                    throw new TypeError(\"invalid or unsupported token_endpoint_auth_method\");\n            }\n        }\n        handleCommonMistakes(this, metadata, properties);\n        assertSigningAlgValuesSupport(\"token\", this.issuer, properties);\n        [\n            \"introspection\",\n            \"revocation\"\n        ].forEach((endpoint)=>{\n            getDefaultsForEndpoint(endpoint, this.issuer, properties);\n            assertSigningAlgValuesSupport(endpoint, this.issuer, properties);\n        });\n        Object.entries(properties).forEach(([key, value])=>{\n            this.#metadata.set(key, value);\n            if (!this[key]) {\n                Object.defineProperty(this, key, {\n                    get () {\n                        return this.#metadata.get(key);\n                    },\n                    enumerable: true\n                });\n            }\n        });\n        if (jwks !== undefined) {\n            const keystore = getKeystore.call(this, jwks);\n            keystores.set(this, keystore);\n        }\n        if (options != null && options.additionalAuthorizedParties) {\n            this.#additionalAuthorizedParties = clone(options.additionalAuthorizedParties);\n        }\n        this[CLOCK_TOLERANCE] = 0;\n    }\n    authorizationUrl(params = {}) {\n        if (!isPlainObject(params)) {\n            throw new TypeError(\"params must be a plain object\");\n        }\n        assertIssuerConfiguration(this.issuer, \"authorization_endpoint\");\n        const target = url.parse(this.issuer.authorization_endpoint, true);\n        target.search = null;\n        target.query = {\n            ...target.query,\n            ...authorizationParams.call(this, params)\n        };\n        return url.format(target);\n    }\n    authorizationPost(params = {}) {\n        if (!isPlainObject(params)) {\n            throw new TypeError(\"params must be a plain object\");\n        }\n        const inputs = authorizationParams.call(this, params);\n        const formInputs = Object.keys(inputs).map((name)=>`<input type=\"hidden\" name=\"${name}\" value=\"${inputs[name]}\"/>`).join(\"\\n\");\n        return `<!DOCTYPE html>\n<head>\n<title>Requesting Authorization</title>\n</head>\n<body onload=\"javascript:document.forms[0].submit()\">\n<form method=\"post\" action=\"${this.issuer.authorization_endpoint}\">\n  ${formInputs}\n</form>\n</body>\n</html>`;\n    }\n    endSessionUrl(params = {}) {\n        assertIssuerConfiguration(this.issuer, \"end_session_endpoint\");\n        const { 0: postLogout , length  } = this.post_logout_redirect_uris || [];\n        const { post_logout_redirect_uri =length === 1 ? postLogout : undefined  } = params;\n        let id_token_hint;\n        ({ id_token_hint , ...params } = params);\n        if (id_token_hint instanceof TokenSet) {\n            if (!id_token_hint.id_token) {\n                throw new TypeError(\"id_token not present in TokenSet\");\n            }\n            id_token_hint = id_token_hint.id_token;\n        }\n        const target = url.parse(this.issuer.end_session_endpoint, true);\n        target.search = null;\n        defaults(target.query, params, {\n            post_logout_redirect_uri,\n            client_id: this.client_id\n        }, {\n            id_token_hint\n        });\n        Object.entries(target.query).forEach(([key, value])=>{\n            if (value === null || value === undefined) {\n                delete target.query[key];\n            }\n        });\n        return url.format(target);\n    }\n    callbackParams(input) {\n        const isIncomingMessage = input instanceof stdhttp.IncomingMessage || input && input.method && input.url;\n        const isString = typeof input === \"string\";\n        if (!isString && !isIncomingMessage) {\n            throw new TypeError(\"#callbackParams only accepts string urls, http.IncomingMessage or a lookalike\");\n        }\n        if (isIncomingMessage) {\n            switch(input.method){\n                case \"GET\":\n                    return pickCb(url.parse(input.url, true).query);\n                case \"POST\":\n                    if (input.body === undefined) {\n                        throw new TypeError(\"incoming message body missing, include a body parser prior to this method call\");\n                    }\n                    switch(typeof input.body){\n                        case \"object\":\n                        case \"string\":\n                            if (Buffer.isBuffer(input.body)) {\n                                return pickCb(querystring.parse(input.body.toString(\"utf-8\")));\n                            }\n                            if (typeof input.body === \"string\") {\n                                return pickCb(querystring.parse(input.body));\n                            }\n                            return pickCb(input.body);\n                        default:\n                            throw new TypeError(\"invalid IncomingMessage body object\");\n                    }\n                default:\n                    throw new TypeError(\"invalid IncomingMessage method\");\n            }\n        } else {\n            return pickCb(url.parse(input, true).query);\n        }\n    }\n    async callback(redirectUri, parameters, checks = {}, { exchangeBody , clientAssertionPayload , DPoP  } = {}) {\n        let params = pickCb(parameters);\n        if (checks.jarm && !(\"response\" in parameters)) {\n            throw new RPError({\n                message: \"expected a JARM response\",\n                checks,\n                params\n            });\n        } else if (\"response\" in parameters) {\n            const decrypted = await this.decryptJARM(params.response);\n            params = await this.validateJARM(decrypted);\n        }\n        if (this.default_max_age && !checks.max_age) {\n            checks.max_age = this.default_max_age;\n        }\n        if (params.state && !checks.state) {\n            throw new TypeError(\"checks.state argument is missing\");\n        }\n        if (!params.state && checks.state) {\n            throw new RPError({\n                message: \"state missing from the response\",\n                checks,\n                params\n            });\n        }\n        if (checks.state !== params.state) {\n            throw new RPError({\n                printf: [\n                    \"state mismatch, expected %s, got: %s\",\n                    checks.state,\n                    params.state\n                ],\n                checks,\n                params\n            });\n        }\n        if (\"iss\" in params) {\n            assertIssuerConfiguration(this.issuer, \"issuer\");\n            if (params.iss !== this.issuer.issuer) {\n                throw new RPError({\n                    printf: [\n                        \"iss mismatch, expected %s, got: %s\",\n                        this.issuer.issuer,\n                        params.iss\n                    ],\n                    params\n                });\n            }\n        } else if (this.issuer.authorization_response_iss_parameter_supported && !(\"id_token\" in params) && !(\"response\" in parameters)) {\n            throw new RPError({\n                message: \"iss missing from the response\",\n                params\n            });\n        }\n        if (params.error) {\n            throw new OPError(params);\n        }\n        const RESPONSE_TYPE_REQUIRED_PARAMS = {\n            code: [\n                \"code\"\n            ],\n            id_token: [\n                \"id_token\"\n            ],\n            token: [\n                \"access_token\",\n                \"token_type\"\n            ]\n        };\n        if (checks.response_type) {\n            for (const type of checks.response_type.split(\" \")){\n                if (type === \"none\") {\n                    if (params.code || params.id_token || params.access_token) {\n                        throw new RPError({\n                            message: 'unexpected params encountered for \"none\" response',\n                            checks,\n                            params\n                        });\n                    }\n                } else {\n                    for (const param of RESPONSE_TYPE_REQUIRED_PARAMS[type]){\n                        if (!params[param]) {\n                            throw new RPError({\n                                message: `${param} missing from response`,\n                                checks,\n                                params\n                            });\n                        }\n                    }\n                }\n            }\n        }\n        if (params.id_token) {\n            const tokenset = new TokenSet(params);\n            await this.decryptIdToken(tokenset);\n            await this.validateIdToken(tokenset, checks.nonce, \"authorization\", checks.max_age, checks.state);\n            if (!params.code) {\n                return tokenset;\n            }\n        }\n        if (params.code) {\n            const tokenset = await this.grant({\n                ...exchangeBody,\n                grant_type: \"authorization_code\",\n                code: params.code,\n                redirect_uri: redirectUri,\n                code_verifier: checks.code_verifier\n            }, {\n                clientAssertionPayload,\n                DPoP\n            });\n            await this.decryptIdToken(tokenset);\n            await this.validateIdToken(tokenset, checks.nonce, \"token\", checks.max_age);\n            if (params.session_state) {\n                tokenset.session_state = params.session_state;\n            }\n            return tokenset;\n        }\n        return new TokenSet(params);\n    }\n    async oauthCallback(redirectUri, parameters, checks = {}, { exchangeBody , clientAssertionPayload , DPoP  } = {}) {\n        let params = pickCb(parameters);\n        if (checks.jarm && !(\"response\" in parameters)) {\n            throw new RPError({\n                message: \"expected a JARM response\",\n                checks,\n                params\n            });\n        } else if (\"response\" in parameters) {\n            const decrypted = await this.decryptJARM(params.response);\n            params = await this.validateJARM(decrypted);\n        }\n        if (params.state && !checks.state) {\n            throw new TypeError(\"checks.state argument is missing\");\n        }\n        if (!params.state && checks.state) {\n            throw new RPError({\n                message: \"state missing from the response\",\n                checks,\n                params\n            });\n        }\n        if (checks.state !== params.state) {\n            throw new RPError({\n                printf: [\n                    \"state mismatch, expected %s, got: %s\",\n                    checks.state,\n                    params.state\n                ],\n                checks,\n                params\n            });\n        }\n        if (\"iss\" in params) {\n            assertIssuerConfiguration(this.issuer, \"issuer\");\n            if (params.iss !== this.issuer.issuer) {\n                throw new RPError({\n                    printf: [\n                        \"iss mismatch, expected %s, got: %s\",\n                        this.issuer.issuer,\n                        params.iss\n                    ],\n                    params\n                });\n            }\n        } else if (this.issuer.authorization_response_iss_parameter_supported && !(\"id_token\" in params) && !(\"response\" in parameters)) {\n            throw new RPError({\n                message: \"iss missing from the response\",\n                params\n            });\n        }\n        if (params.error) {\n            throw new OPError(params);\n        }\n        if (typeof params.id_token === \"string\" && params.id_token.length) {\n            throw new RPError({\n                message: \"id_token detected in the response, you must use client.callback() instead of client.oauthCallback()\",\n                params\n            });\n        }\n        delete params.id_token;\n        const RESPONSE_TYPE_REQUIRED_PARAMS = {\n            code: [\n                \"code\"\n            ],\n            token: [\n                \"access_token\",\n                \"token_type\"\n            ]\n        };\n        if (checks.response_type) {\n            for (const type of checks.response_type.split(\" \")){\n                if (type === \"none\") {\n                    if (params.code || params.id_token || params.access_token) {\n                        throw new RPError({\n                            message: 'unexpected params encountered for \"none\" response',\n                            checks,\n                            params\n                        });\n                    }\n                }\n                if (RESPONSE_TYPE_REQUIRED_PARAMS[type]) {\n                    for (const param of RESPONSE_TYPE_REQUIRED_PARAMS[type]){\n                        if (!params[param]) {\n                            throw new RPError({\n                                message: `${param} missing from response`,\n                                checks,\n                                params\n                            });\n                        }\n                    }\n                }\n            }\n        }\n        if (params.code) {\n            const tokenset = await this.grant({\n                ...exchangeBody,\n                grant_type: \"authorization_code\",\n                code: params.code,\n                redirect_uri: redirectUri,\n                code_verifier: checks.code_verifier\n            }, {\n                clientAssertionPayload,\n                DPoP\n            });\n            if (typeof tokenset.id_token === \"string\" && tokenset.id_token.length) {\n                throw new RPError({\n                    message: \"id_token detected in the response, you must use client.callback() instead of client.oauthCallback()\",\n                    params\n                });\n            }\n            delete tokenset.id_token;\n            return tokenset;\n        }\n        return new TokenSet(params);\n    }\n    async decryptIdToken(token) {\n        if (!this.id_token_encrypted_response_alg) {\n            return token;\n        }\n        let idToken = token;\n        if (idToken instanceof TokenSet) {\n            if (!idToken.id_token) {\n                throw new TypeError(\"id_token not present in TokenSet\");\n            }\n            idToken = idToken.id_token;\n        }\n        const expectedAlg = this.id_token_encrypted_response_alg;\n        const expectedEnc = this.id_token_encrypted_response_enc;\n        const result = await this.decryptJWE(idToken, expectedAlg, expectedEnc);\n        if (token instanceof TokenSet) {\n            token.id_token = result;\n            return token;\n        }\n        return result;\n    }\n    async validateJWTUserinfo(body) {\n        const expectedAlg = this.userinfo_signed_response_alg;\n        return this.validateJWT(body, expectedAlg, []);\n    }\n    async decryptJARM(response) {\n        if (!this.authorization_encrypted_response_alg) {\n            return response;\n        }\n        const expectedAlg = this.authorization_encrypted_response_alg;\n        const expectedEnc = this.authorization_encrypted_response_enc;\n        return this.decryptJWE(response, expectedAlg, expectedEnc);\n    }\n    async decryptJWTUserinfo(body) {\n        if (!this.userinfo_encrypted_response_alg) {\n            return body;\n        }\n        const expectedAlg = this.userinfo_encrypted_response_alg;\n        const expectedEnc = this.userinfo_encrypted_response_enc;\n        return this.decryptJWE(body, expectedAlg, expectedEnc);\n    }\n    async decryptJWE(jwe, expectedAlg, expectedEnc = \"A128CBC-HS256\") {\n        const header = JSON.parse(base64url.decode(jwe.split(\".\")[0]));\n        if (header.alg !== expectedAlg) {\n            throw new RPError({\n                printf: [\n                    \"unexpected JWE alg received, expected %s, got: %s\",\n                    expectedAlg,\n                    header.alg\n                ],\n                jwt: jwe\n            });\n        }\n        if (header.enc !== expectedEnc) {\n            throw new RPError({\n                printf: [\n                    \"unexpected JWE enc received, expected %s, got: %s\",\n                    expectedEnc,\n                    header.enc\n                ],\n                jwt: jwe\n            });\n        }\n        const getPlaintext = (result)=>new TextDecoder().decode(result.plaintext);\n        let plaintext;\n        if (expectedAlg.match(/^(?:RSA|ECDH)/)) {\n            const keystore = await keystores.get(this);\n            for (const { keyObject: key  } of keystore.all({\n                ...jose.decodeProtectedHeader(jwe),\n                use: \"enc\"\n            })){\n                plaintext = await jose.compactDecrypt(jwe, key).then(getPlaintext, ()=>{});\n                if (plaintext) break;\n            }\n        } else {\n            plaintext = await jose.compactDecrypt(jwe, this.secretForAlg(expectedAlg === \"dir\" ? expectedEnc : expectedAlg)).then(getPlaintext, ()=>{});\n        }\n        if (!plaintext) {\n            throw new RPError({\n                message: \"failed to decrypt JWE\",\n                jwt: jwe\n            });\n        }\n        return plaintext;\n    }\n    async validateIdToken(tokenSet, nonce, returnedBy, maxAge, state) {\n        let idToken = tokenSet;\n        const expectedAlg = this.id_token_signed_response_alg;\n        const isTokenSet = idToken instanceof TokenSet;\n        if (isTokenSet) {\n            if (!idToken.id_token) {\n                throw new TypeError(\"id_token not present in TokenSet\");\n            }\n            idToken = idToken.id_token;\n        }\n        idToken = String(idToken);\n        const timestamp = now();\n        const { protected: header , payload , key  } = await this.validateJWT(idToken, expectedAlg);\n        if (typeof maxAge === \"number\" || maxAge !== skipMaxAgeCheck && this.require_auth_time) {\n            if (!payload.auth_time) {\n                throw new RPError({\n                    message: \"missing required JWT property auth_time\",\n                    jwt: idToken\n                });\n            }\n            if (typeof payload.auth_time !== \"number\") {\n                throw new RPError({\n                    message: \"JWT auth_time claim must be a JSON numeric value\",\n                    jwt: idToken\n                });\n            }\n        }\n        if (typeof maxAge === \"number\" && payload.auth_time + maxAge < timestamp - this[CLOCK_TOLERANCE]) {\n            throw new RPError({\n                printf: [\n                    \"too much time has elapsed since the last End-User authentication, max_age %i, auth_time: %i, now %i\",\n                    maxAge,\n                    payload.auth_time,\n                    timestamp - this[CLOCK_TOLERANCE]\n                ],\n                now: timestamp,\n                tolerance: this[CLOCK_TOLERANCE],\n                auth_time: payload.auth_time,\n                jwt: idToken\n            });\n        }\n        if (nonce !== skipNonceCheck && (payload.nonce || nonce !== undefined) && payload.nonce !== nonce) {\n            throw new RPError({\n                printf: [\n                    \"nonce mismatch, expected %s, got: %s\",\n                    nonce,\n                    payload.nonce\n                ],\n                jwt: idToken\n            });\n        }\n        if (returnedBy === \"authorization\") {\n            if (!payload.at_hash && tokenSet.access_token) {\n                throw new RPError({\n                    message: \"missing required property at_hash\",\n                    jwt: idToken\n                });\n            }\n            if (!payload.c_hash && tokenSet.code) {\n                throw new RPError({\n                    message: \"missing required property c_hash\",\n                    jwt: idToken\n                });\n            }\n            if (this.fapi()) {\n                if (!payload.s_hash && (tokenSet.state || state)) {\n                    throw new RPError({\n                        message: \"missing required property s_hash\",\n                        jwt: idToken\n                    });\n                }\n            }\n            if (payload.s_hash) {\n                if (!state) {\n                    throw new TypeError('cannot verify s_hash, \"checks.state\" property not provided');\n                }\n                try {\n                    tokenHash.validate({\n                        claim: \"s_hash\",\n                        source: \"state\"\n                    }, payload.s_hash, state, header.alg, key.jwk && key.jwk.crv);\n                } catch (err) {\n                    throw new RPError({\n                        message: err.message,\n                        jwt: idToken\n                    });\n                }\n            }\n        }\n        if (this.fapi() && payload.iat < timestamp - 3600) {\n            throw new RPError({\n                printf: [\n                    \"JWT issued too far in the past, now %i, iat %i\",\n                    timestamp,\n                    payload.iat\n                ],\n                now: timestamp,\n                tolerance: this[CLOCK_TOLERANCE],\n                iat: payload.iat,\n                jwt: idToken\n            });\n        }\n        if (tokenSet.access_token && payload.at_hash !== undefined) {\n            try {\n                tokenHash.validate({\n                    claim: \"at_hash\",\n                    source: \"access_token\"\n                }, payload.at_hash, tokenSet.access_token, header.alg, key.jwk && key.jwk.crv);\n            } catch (err) {\n                throw new RPError({\n                    message: err.message,\n                    jwt: idToken\n                });\n            }\n        }\n        if (tokenSet.code && payload.c_hash !== undefined) {\n            try {\n                tokenHash.validate({\n                    claim: \"c_hash\",\n                    source: \"code\"\n                }, payload.c_hash, tokenSet.code, header.alg, key.jwk && key.jwk.crv);\n            } catch (err) {\n                throw new RPError({\n                    message: err.message,\n                    jwt: idToken\n                });\n            }\n        }\n        return tokenSet;\n    }\n    async validateJWT(jwt, expectedAlg, required = [\n        \"iss\",\n        \"sub\",\n        \"aud\",\n        \"exp\",\n        \"iat\"\n    ]) {\n        const isSelfIssued = this.issuer.issuer === \"https://self-issued.me\";\n        const timestamp = now();\n        let header;\n        let payload;\n        try {\n            ({ header , payload  } = decodeJWT(jwt, {\n                complete: true\n            }));\n        } catch (err) {\n            throw new RPError({\n                printf: [\n                    \"failed to decode JWT (%s: %s)\",\n                    err.name,\n                    err.message\n                ],\n                jwt\n            });\n        }\n        if (header.alg !== expectedAlg) {\n            throw new RPError({\n                printf: [\n                    \"unexpected JWT alg received, expected %s, got: %s\",\n                    expectedAlg,\n                    header.alg\n                ],\n                jwt\n            });\n        }\n        if (isSelfIssued) {\n            required = [\n                ...required,\n                \"sub_jwk\"\n            ];\n        }\n        required.forEach(verifyPresence.bind(undefined, payload, jwt));\n        if (payload.iss !== undefined) {\n            let expectedIss = this.issuer.issuer;\n            if (this.#aadIssValidation) {\n                expectedIss = this.issuer.issuer.replace(\"{tenantid}\", payload.tid);\n            }\n            if (payload.iss !== expectedIss) {\n                throw new RPError({\n                    printf: [\n                        \"unexpected iss value, expected %s, got: %s\",\n                        expectedIss,\n                        payload.iss\n                    ],\n                    jwt\n                });\n            }\n        }\n        if (payload.iat !== undefined) {\n            if (typeof payload.iat !== \"number\") {\n                throw new RPError({\n                    message: \"JWT iat claim must be a JSON numeric value\",\n                    jwt\n                });\n            }\n        }\n        if (payload.nbf !== undefined) {\n            if (typeof payload.nbf !== \"number\") {\n                throw new RPError({\n                    message: \"JWT nbf claim must be a JSON numeric value\",\n                    jwt\n                });\n            }\n            if (payload.nbf > timestamp + this[CLOCK_TOLERANCE]) {\n                throw new RPError({\n                    printf: [\n                        \"JWT not active yet, now %i, nbf %i\",\n                        timestamp + this[CLOCK_TOLERANCE],\n                        payload.nbf\n                    ],\n                    now: timestamp,\n                    tolerance: this[CLOCK_TOLERANCE],\n                    nbf: payload.nbf,\n                    jwt\n                });\n            }\n        }\n        if (payload.exp !== undefined) {\n            if (typeof payload.exp !== \"number\") {\n                throw new RPError({\n                    message: \"JWT exp claim must be a JSON numeric value\",\n                    jwt\n                });\n            }\n            if (timestamp - this[CLOCK_TOLERANCE] >= payload.exp) {\n                throw new RPError({\n                    printf: [\n                        \"JWT expired, now %i, exp %i\",\n                        timestamp - this[CLOCK_TOLERANCE],\n                        payload.exp\n                    ],\n                    now: timestamp,\n                    tolerance: this[CLOCK_TOLERANCE],\n                    exp: payload.exp,\n                    jwt\n                });\n            }\n        }\n        if (payload.aud !== undefined) {\n            if (Array.isArray(payload.aud)) {\n                if (payload.aud.length > 1 && !payload.azp) {\n                    throw new RPError({\n                        message: \"missing required JWT property azp\",\n                        jwt\n                    });\n                }\n                if (!payload.aud.includes(this.client_id)) {\n                    throw new RPError({\n                        printf: [\n                            \"aud is missing the client_id, expected %s to be included in %j\",\n                            this.client_id,\n                            payload.aud\n                        ],\n                        jwt\n                    });\n                }\n            } else if (payload.aud !== this.client_id) {\n                throw new RPError({\n                    printf: [\n                        \"aud mismatch, expected %s, got: %s\",\n                        this.client_id,\n                        payload.aud\n                    ],\n                    jwt\n                });\n            }\n        }\n        if (payload.azp !== undefined) {\n            let additionalAuthorizedParties = this.#additionalAuthorizedParties;\n            if (typeof additionalAuthorizedParties === \"string\") {\n                additionalAuthorizedParties = [\n                    this.client_id,\n                    additionalAuthorizedParties\n                ];\n            } else if (Array.isArray(additionalAuthorizedParties)) {\n                additionalAuthorizedParties = [\n                    this.client_id,\n                    ...additionalAuthorizedParties\n                ];\n            } else {\n                additionalAuthorizedParties = [\n                    this.client_id\n                ];\n            }\n            if (!additionalAuthorizedParties.includes(payload.azp)) {\n                throw new RPError({\n                    printf: [\n                        \"azp mismatch, got: %s\",\n                        payload.azp\n                    ],\n                    jwt\n                });\n            }\n        }\n        let keys;\n        if (isSelfIssued) {\n            try {\n                assert(isPlainObject(payload.sub_jwk));\n                const key = await jose.importJWK(payload.sub_jwk, header.alg);\n                assert.equal(key.type, \"public\");\n                keys = [\n                    {\n                        keyObject: key\n                    }\n                ];\n            } catch (err) {\n                throw new RPError({\n                    message: \"failed to use sub_jwk claim as an asymmetric JSON Web Key\",\n                    jwt\n                });\n            }\n            if (await jose.calculateJwkThumbprint(payload.sub_jwk) !== payload.sub) {\n                throw new RPError({\n                    message: \"failed to match the subject with sub_jwk\",\n                    jwt\n                });\n            }\n        } else if (header.alg.startsWith(\"HS\")) {\n            keys = [\n                this.secretForAlg(header.alg)\n            ];\n        } else if (header.alg !== \"none\") {\n            keys = await queryKeyStore.call(this.issuer, {\n                ...header,\n                use: \"sig\"\n            });\n        }\n        if (!keys && header.alg === \"none\") {\n            return {\n                protected: header,\n                payload\n            };\n        }\n        for (const key of keys){\n            const verified = await jose.compactVerify(jwt, key instanceof Uint8Array ? key : key.keyObject).catch(()=>{});\n            if (verified) {\n                return {\n                    payload,\n                    protected: verified.protectedHeader,\n                    key\n                };\n            }\n        }\n        throw new RPError({\n            message: \"failed to validate JWT signature\",\n            jwt\n        });\n    }\n    async refresh(refreshToken, { exchangeBody , clientAssertionPayload , DPoP  } = {}) {\n        let token = refreshToken;\n        if (token instanceof TokenSet) {\n            if (!token.refresh_token) {\n                throw new TypeError(\"refresh_token not present in TokenSet\");\n            }\n            token = token.refresh_token;\n        }\n        const tokenset = await this.grant({\n            ...exchangeBody,\n            grant_type: \"refresh_token\",\n            refresh_token: String(token)\n        }, {\n            clientAssertionPayload,\n            DPoP\n        });\n        if (tokenset.id_token) {\n            await this.decryptIdToken(tokenset);\n            await this.validateIdToken(tokenset, skipNonceCheck, \"token\", skipMaxAgeCheck);\n            if (refreshToken instanceof TokenSet && refreshToken.id_token) {\n                const expectedSub = refreshToken.claims().sub;\n                const actualSub = tokenset.claims().sub;\n                if (actualSub !== expectedSub) {\n                    throw new RPError({\n                        printf: [\n                            \"sub mismatch, expected %s, got: %s\",\n                            expectedSub,\n                            actualSub\n                        ],\n                        jwt: tokenset.id_token\n                    });\n                }\n            }\n        }\n        return tokenset;\n    }\n    async requestResource(resourceUrl, accessToken, { method , headers , body , DPoP , tokenType =DPoP ? \"DPoP\" : accessToken instanceof TokenSet ? accessToken.token_type : \"Bearer\"  } = {}, retry) {\n        if (accessToken instanceof TokenSet) {\n            if (!accessToken.access_token) {\n                throw new TypeError(\"access_token not present in TokenSet\");\n            }\n            accessToken = accessToken.access_token;\n        }\n        if (!accessToken) {\n            throw new TypeError(\"no access token provided\");\n        } else if (typeof accessToken !== \"string\") {\n            throw new TypeError(\"invalid access token provided\");\n        }\n        const requestOpts = {\n            headers: {\n                Authorization: authorizationHeaderValue(accessToken, tokenType),\n                ...headers\n            },\n            body\n        };\n        const mTLS = !!this.tls_client_certificate_bound_access_tokens;\n        const response = await request.call(this, {\n            ...requestOpts,\n            responseType: \"buffer\",\n            method,\n            url: resourceUrl\n        }, {\n            accessToken,\n            mTLS,\n            DPoP\n        });\n        const wwwAuthenticate = response.headers[\"www-authenticate\"];\n        if (retry !== retryAttempt && wwwAuthenticate && wwwAuthenticate.toLowerCase().startsWith(\"dpop \") && parseWwwAuthenticate(wwwAuthenticate).error === \"use_dpop_nonce\") {\n            return this.requestResource(resourceUrl, accessToken, {\n                method,\n                headers,\n                body,\n                DPoP,\n                tokenType\n            });\n        }\n        return response;\n    }\n    async userinfo(accessToken, { method =\"GET\" , via =\"header\" , tokenType , params , DPoP  } = {}) {\n        assertIssuerConfiguration(this.issuer, \"userinfo_endpoint\");\n        const options = {\n            tokenType,\n            method: String(method).toUpperCase(),\n            DPoP\n        };\n        if (options.method !== \"GET\" && options.method !== \"POST\") {\n            throw new TypeError(\"#userinfo() method can only be POST or a GET\");\n        }\n        if (via === \"body\" && options.method !== \"POST\") {\n            throw new TypeError(\"can only send body on POST\");\n        }\n        const jwt = !!(this.userinfo_signed_response_alg || this.userinfo_encrypted_response_alg);\n        if (jwt) {\n            options.headers = {\n                Accept: \"application/jwt\"\n            };\n        } else {\n            options.headers = {\n                Accept: \"application/json\"\n            };\n        }\n        const mTLS = !!this.tls_client_certificate_bound_access_tokens;\n        let targetUrl;\n        if (mTLS && this.issuer.mtls_endpoint_aliases) {\n            targetUrl = this.issuer.mtls_endpoint_aliases.userinfo_endpoint;\n        }\n        targetUrl = new url.URL(targetUrl || this.issuer.userinfo_endpoint);\n        if (via === \"body\") {\n            options.headers.Authorization = undefined;\n            options.headers[\"Content-Type\"] = \"application/x-www-form-urlencoded\";\n            options.body = new url.URLSearchParams();\n            options.body.append(\"access_token\", accessToken instanceof TokenSet ? accessToken.access_token : accessToken);\n        }\n        // handle additional parameters, GET via querystring, POST via urlencoded body\n        if (params) {\n            if (options.method === \"GET\") {\n                Object.entries(params).forEach(([key, value])=>{\n                    targetUrl.searchParams.append(key, value);\n                });\n            } else if (options.body) {\n                // POST && via body\n                Object.entries(params).forEach(([key, value])=>{\n                    options.body.append(key, value);\n                });\n            } else {\n                // POST && via header\n                options.body = new url.URLSearchParams();\n                options.headers[\"Content-Type\"] = \"application/x-www-form-urlencoded\";\n                Object.entries(params).forEach(([key, value])=>{\n                    options.body.append(key, value);\n                });\n            }\n        }\n        if (options.body) {\n            options.body = options.body.toString();\n        }\n        const response = await this.requestResource(targetUrl, accessToken, options);\n        let parsed = processResponse(response, {\n            bearer: true\n        });\n        if (jwt) {\n            if (!/^application\\/jwt/.test(response.headers[\"content-type\"])) {\n                throw new RPError({\n                    message: \"expected application/jwt response from the userinfo_endpoint\",\n                    response\n                });\n            }\n            const body = response.body.toString();\n            const userinfo = await this.decryptJWTUserinfo(body);\n            if (!this.userinfo_signed_response_alg) {\n                try {\n                    parsed = JSON.parse(userinfo);\n                    assert(isPlainObject(parsed));\n                } catch (err) {\n                    throw new RPError({\n                        message: \"failed to parse userinfo JWE payload as JSON\",\n                        jwt: userinfo\n                    });\n                }\n            } else {\n                ({ payload: parsed  } = await this.validateJWTUserinfo(userinfo));\n            }\n        } else {\n            try {\n                parsed = JSON.parse(response.body);\n            } catch (err) {\n                Object.defineProperty(err, \"response\", {\n                    value: response\n                });\n                throw err;\n            }\n        }\n        if (accessToken instanceof TokenSet && accessToken.id_token) {\n            const expectedSub = accessToken.claims().sub;\n            if (parsed.sub !== expectedSub) {\n                throw new RPError({\n                    printf: [\n                        \"userinfo sub mismatch, expected %s, got: %s\",\n                        expectedSub,\n                        parsed.sub\n                    ],\n                    body: parsed,\n                    jwt: accessToken.id_token\n                });\n            }\n        }\n        return parsed;\n    }\n    encryptionSecret(len) {\n        const hash = len <= 256 ? \"sha256\" : len <= 384 ? \"sha384\" : len <= 512 ? \"sha512\" : false;\n        if (!hash) {\n            throw new Error(\"unsupported symmetric encryption key derivation\");\n        }\n        return crypto.createHash(hash).update(this.client_secret).digest().slice(0, len / 8);\n    }\n    secretForAlg(alg) {\n        if (!this.client_secret) {\n            throw new TypeError(\"client_secret is required\");\n        }\n        if (/^A(\\d{3})(?:GCM)?KW$/.test(alg)) {\n            return this.encryptionSecret(parseInt(RegExp.$1, 10));\n        }\n        if (/^A(\\d{3})(?:GCM|CBC-HS(\\d{3}))$/.test(alg)) {\n            return this.encryptionSecret(parseInt(RegExp.$2 || RegExp.$1, 10));\n        }\n        return new TextEncoder().encode(this.client_secret);\n    }\n    async grant(body, { clientAssertionPayload , DPoP  } = {}, retry) {\n        assertIssuerConfiguration(this.issuer, \"token_endpoint\");\n        const response = await authenticatedPost.call(this, \"token\", {\n            form: body,\n            responseType: \"json\"\n        }, {\n            clientAssertionPayload,\n            DPoP\n        });\n        let responseBody;\n        try {\n            responseBody = processResponse(response);\n        } catch (err) {\n            if (retry !== retryAttempt && err instanceof OPError && err.error === \"use_dpop_nonce\") {\n                return this.grant(body, {\n                    clientAssertionPayload,\n                    DPoP\n                }, retryAttempt);\n            }\n            throw err;\n        }\n        return new TokenSet(responseBody);\n    }\n    async deviceAuthorization(params = {}, { exchangeBody , clientAssertionPayload , DPoP  } = {}) {\n        assertIssuerConfiguration(this.issuer, \"device_authorization_endpoint\");\n        assertIssuerConfiguration(this.issuer, \"token_endpoint\");\n        const body = authorizationParams.call(this, {\n            client_id: this.client_id,\n            redirect_uri: null,\n            response_type: null,\n            ...params\n        });\n        const response = await authenticatedPost.call(this, \"device_authorization\", {\n            responseType: \"json\",\n            form: body\n        }, {\n            clientAssertionPayload,\n            endpointAuthMethod: \"token\"\n        });\n        const responseBody = processResponse(response);\n        return new DeviceFlowHandle({\n            client: this,\n            exchangeBody,\n            clientAssertionPayload,\n            response: responseBody,\n            maxAge: params.max_age,\n            DPoP\n        });\n    }\n    async revoke(token, hint, { revokeBody , clientAssertionPayload  } = {}) {\n        assertIssuerConfiguration(this.issuer, \"revocation_endpoint\");\n        if (hint !== undefined && typeof hint !== \"string\") {\n            throw new TypeError(\"hint must be a string\");\n        }\n        const form = {\n            ...revokeBody,\n            token\n        };\n        if (hint) {\n            form.token_type_hint = hint;\n        }\n        const response = await authenticatedPost.call(this, \"revocation\", {\n            form\n        }, {\n            clientAssertionPayload\n        });\n        processResponse(response, {\n            body: false\n        });\n    }\n    async introspect(token, hint, { introspectBody , clientAssertionPayload  } = {}) {\n        assertIssuerConfiguration(this.issuer, \"introspection_endpoint\");\n        if (hint !== undefined && typeof hint !== \"string\") {\n            throw new TypeError(\"hint must be a string\");\n        }\n        const form = {\n            ...introspectBody,\n            token\n        };\n        if (hint) {\n            form.token_type_hint = hint;\n        }\n        const response = await authenticatedPost.call(this, \"introspection\", {\n            form,\n            responseType: \"json\"\n        }, {\n            clientAssertionPayload\n        });\n        const responseBody = processResponse(response);\n        return responseBody;\n    }\n    static async register(metadata, options = {}) {\n        const { initialAccessToken , jwks , ...clientOptions } = options;\n        assertIssuerConfiguration(this.issuer, \"registration_endpoint\");\n        if (jwks !== undefined && !(metadata.jwks || metadata.jwks_uri)) {\n            const keystore = await getKeystore.call(this, jwks);\n            metadata.jwks = keystore.toJWKS();\n        }\n        const response = await request.call(this, {\n            headers: {\n                Accept: \"application/json\",\n                ...initialAccessToken ? {\n                    Authorization: authorizationHeaderValue(initialAccessToken)\n                } : undefined\n            },\n            responseType: \"json\",\n            json: metadata,\n            url: this.issuer.registration_endpoint,\n            method: \"POST\"\n        });\n        const responseBody = processResponse(response, {\n            statusCode: 201,\n            bearer: true\n        });\n        return new this(responseBody, jwks, clientOptions);\n    }\n    get metadata() {\n        return clone(Object.fromEntries(this.#metadata.entries()));\n    }\n    static async fromUri(registrationClientUri, registrationAccessToken, jwks, clientOptions) {\n        const response = await request.call(this, {\n            method: \"GET\",\n            url: registrationClientUri,\n            responseType: \"json\",\n            headers: {\n                Authorization: authorizationHeaderValue(registrationAccessToken),\n                Accept: \"application/json\"\n            }\n        });\n        const responseBody = processResponse(response, {\n            bearer: true\n        });\n        return new this(responseBody, jwks, clientOptions);\n    }\n    async requestObject(requestObject = {}, { sign: signingAlgorithm = this.request_object_signing_alg || \"none\" , encrypt: { alg: eKeyManagement = this.request_object_encryption_alg , enc: eContentEncryption = this.request_object_encryption_enc || \"A128CBC-HS256\"  } = {}  } = {}) {\n        if (!isPlainObject(requestObject)) {\n            throw new TypeError(\"requestObject must be a plain object\");\n        }\n        let signed;\n        let key;\n        const unix = now();\n        const header = {\n            alg: signingAlgorithm,\n            typ: \"oauth-authz-req+jwt\"\n        };\n        const payload = JSON.stringify(defaults({}, requestObject, {\n            iss: this.client_id,\n            aud: this.issuer.issuer,\n            client_id: this.client_id,\n            jti: random(),\n            iat: unix,\n            exp: unix + 300,\n            ...this.fapi() ? {\n                nbf: unix\n            } : undefined\n        }));\n        if (signingAlgorithm === \"none\") {\n            signed = [\n                base64url.encode(JSON.stringify(header)),\n                base64url.encode(payload),\n                \"\"\n            ].join(\".\");\n        } else {\n            const symmetric = signingAlgorithm.startsWith(\"HS\");\n            if (symmetric) {\n                key = this.secretForAlg(signingAlgorithm);\n            } else {\n                const keystore = await keystores.get(this);\n                if (!keystore) {\n                    throw new TypeError(`no keystore present for client, cannot sign using alg ${signingAlgorithm}`);\n                }\n                key = keystore.get({\n                    alg: signingAlgorithm,\n                    use: \"sig\"\n                });\n                if (!key) {\n                    throw new TypeError(`no key to sign with found for alg ${signingAlgorithm}`);\n                }\n            }\n            signed = await new jose.CompactSign(new TextEncoder().encode(payload)).setProtectedHeader({\n                ...header,\n                kid: symmetric ? undefined : key.jwk.kid\n            }).sign(symmetric ? key : key.keyObject);\n        }\n        if (!eKeyManagement) {\n            return signed;\n        }\n        const fields = {\n            alg: eKeyManagement,\n            enc: eContentEncryption,\n            cty: \"oauth-authz-req+jwt\"\n        };\n        if (fields.alg.match(/^(RSA|ECDH)/)) {\n            [key] = await queryKeyStore.call(this.issuer, {\n                alg: fields.alg,\n                use: \"enc\"\n            }, {\n                allowMulti: true\n            });\n        } else {\n            key = this.secretForAlg(fields.alg === \"dir\" ? fields.enc : fields.alg);\n        }\n        return new jose.CompactEncrypt(new TextEncoder().encode(signed)).setProtectedHeader({\n            ...fields,\n            kid: key instanceof Uint8Array ? undefined : key.jwk.kid\n        }).encrypt(key instanceof Uint8Array ? key : key.keyObject);\n    }\n    async pushedAuthorizationRequest(params = {}, { clientAssertionPayload  } = {}) {\n        assertIssuerConfiguration(this.issuer, \"pushed_authorization_request_endpoint\");\n        const body = {\n            ...\"request\" in params ? params : authorizationParams.call(this, params),\n            client_id: this.client_id\n        };\n        const response = await authenticatedPost.call(this, \"pushed_authorization_request\", {\n            responseType: \"json\",\n            form: body\n        }, {\n            clientAssertionPayload,\n            endpointAuthMethod: \"token\"\n        });\n        const responseBody = processResponse(response, {\n            statusCode: 201\n        });\n        if (!(\"expires_in\" in responseBody)) {\n            throw new RPError({\n                message: \"expected expires_in in Pushed Authorization Successful Response\",\n                response\n            });\n        }\n        if (typeof responseBody.expires_in !== \"number\") {\n            throw new RPError({\n                message: \"invalid expires_in value in Pushed Authorization Successful Response\",\n                response\n            });\n        }\n        if (!(\"request_uri\" in responseBody)) {\n            throw new RPError({\n                message: \"expected request_uri in Pushed Authorization Successful Response\",\n                response\n            });\n        }\n        if (typeof responseBody.request_uri !== \"string\") {\n            throw new RPError({\n                message: \"invalid request_uri value in Pushed Authorization Successful Response\",\n                response\n            });\n        }\n        return responseBody;\n    }\n    get issuer() {\n        return this.#issuer;\n    }\n    /* istanbul ignore next */ [inspect.custom]() {\n        return `${this.constructor.name} ${inspect(this.metadata, {\n            depth: Infinity,\n            colors: process.stdout.isTTY,\n            compact: false,\n            sorted: true\n        })}`;\n    }\n    fapi() {\n        return this.constructor.name === \"FAPI1Client\";\n    }\n    async validateJARM(response) {\n        const expectedAlg = this.authorization_signed_response_alg;\n        const { payload  } = await this.validateJWT(response, expectedAlg, [\n            \"iss\",\n            \"exp\",\n            \"aud\"\n        ]);\n        return pickCb(payload);\n    }\n}\nconst RSPS = /^(?:RS|PS)(?:256|384|512)$/;\nfunction determineRsaAlgorithm(privateKey, privateKeyInput, valuesSupported) {\n    if (typeof privateKeyInput === \"object\" && typeof privateKeyInput.key === \"object\" && privateKeyInput.key.alg) {\n        return privateKeyInput.key.alg;\n    }\n    if (Array.isArray(valuesSupported)) {\n        let candidates = valuesSupported.filter(RegExp.prototype.test.bind(RSPS));\n        if (privateKey.asymmetricKeyType === \"rsa-pss\") {\n            candidates = candidates.filter((value)=>value.startsWith(\"PS\"));\n        }\n        return [\n            \"PS256\",\n            \"PS384\",\n            \"PS512\",\n            \"RS256\",\n            \"RS384\",\n            \"RS384\"\n        ].find((preferred)=>candidates.includes(preferred));\n    }\n    return \"PS256\";\n}\nconst p256 = Buffer.from([\n    42,\n    134,\n    72,\n    206,\n    61,\n    3,\n    1,\n    7\n]);\nconst p384 = Buffer.from([\n    43,\n    129,\n    4,\n    0,\n    34\n]);\nconst p521 = Buffer.from([\n    43,\n    129,\n    4,\n    0,\n    35\n]);\nconst secp256k1 = Buffer.from([\n    43,\n    129,\n    4,\n    0,\n    10\n]);\nfunction determineEcAlgorithm(privateKey, privateKeyInput) {\n    // If input was a JWK\n    switch(typeof privateKeyInput === \"object\" && typeof privateKeyInput.key === \"object\" && privateKeyInput.key.crv){\n        case \"P-256\":\n            return \"ES256\";\n        case \"secp256k1\":\n            return \"ES256K\";\n        case \"P-384\":\n            return \"ES384\";\n        case \"P-512\":\n            return \"ES512\";\n        default:\n            break;\n    }\n    const buf = privateKey.export({\n        format: \"der\",\n        type: \"pkcs8\"\n    });\n    const i = buf[1] < 128 ? 17 : 18;\n    const len = buf[i];\n    const curveOid = buf.slice(i + 1, i + 1 + len);\n    if (curveOid.equals(p256)) {\n        return \"ES256\";\n    }\n    if (curveOid.equals(p384)) {\n        return \"ES384\";\n    }\n    if (curveOid.equals(p521)) {\n        return \"ES512\";\n    }\n    if (curveOid.equals(secp256k1)) {\n        return \"ES256K\";\n    }\n    throw new TypeError(\"unsupported DPoP private key curve\");\n}\nconst jwkCache = new WeakMap();\nasync function getJwk(privateKey, privateKeyInput) {\n    if (typeof privateKeyInput === \"object\" && typeof privateKeyInput.key === \"object\" && privateKeyInput.key.crv) {\n        return pick(privateKeyInput.key, \"kty\", \"crv\", \"x\", \"y\", \"e\", \"n\");\n    }\n    if (jwkCache.has(privateKeyInput)) {\n        return jwkCache.get(privateKeyInput);\n    }\n    const jwk = pick(await jose.exportJWK(privateKey), \"kty\", \"crv\", \"x\", \"y\", \"e\", \"n\");\n    if (isKeyObject(privateKeyInput)) {\n        jwkCache.set(privateKeyInput, jwk);\n    }\n    return jwk;\n}\n/**\n * @name dpopProof\n * @api private\n */ async function dpopProof(payload, privateKeyInput, accessToken) {\n    if (!isPlainObject(payload)) {\n        throw new TypeError(\"payload must be a plain object\");\n    }\n    let privateKey;\n    if (isKeyObject(privateKeyInput)) {\n        privateKey = privateKeyInput;\n    } else {\n        privateKey = crypto.createPrivateKey(privateKeyInput);\n    }\n    if (privateKey.type !== \"private\") {\n        throw new TypeError('\"DPoP\" option must be a private key');\n    }\n    let alg;\n    switch(privateKey.asymmetricKeyType){\n        case \"ed25519\":\n        case \"ed448\":\n            alg = \"EdDSA\";\n            break;\n        case \"ec\":\n            alg = determineEcAlgorithm(privateKey, privateKeyInput);\n            break;\n        case \"rsa\":\n        case rsaPssParams && \"rsa-pss\":\n            alg = determineRsaAlgorithm(privateKey, privateKeyInput, this.issuer.dpop_signing_alg_values_supported);\n            break;\n        default:\n            throw new TypeError(\"unsupported DPoP private key asymmetric key type\");\n    }\n    if (!alg) {\n        throw new TypeError(\"could not determine DPoP JWS Algorithm\");\n    }\n    return new jose.SignJWT({\n        ath: accessToken ? base64url.encode(crypto.createHash(\"sha256\").update(accessToken).digest()) : undefined,\n        ...payload\n    }).setProtectedHeader({\n        alg,\n        typ: \"dpop+jwt\",\n        jwk: await getJwk(privateKey, privateKeyInput)\n    }).setIssuedAt().setJti(random()).sign(privateKey);\n}\nObject.defineProperty(BaseClient.prototype, \"dpopProof\", {\n    enumerable: true,\n    configurable: true,\n    value (...args) {\n        process.emitWarning(\"The DPoP APIs implements an IETF draft (https://www.ietf.org/archive/id/draft-ietf-oauth-dpop-04.html). Breaking draft implementations are included as minor versions of the openid-client library, therefore, the ~ semver operator should be used and close attention be payed to library changelog as well as the drafts themselves.\", \"DraftWarning\");\n        Object.defineProperty(BaseClient.prototype, \"dpopProof\", {\n            enumerable: true,\n            configurable: true,\n            value: dpopProof\n        });\n        return this.dpopProof(...args);\n    }\n});\nmodule.exports = (issuer, aadIssValidation = false)=>class Client extends BaseClient {\n        constructor(...args){\n            super(issuer, aadIssValidation, ...args);\n        }\n        static get issuer() {\n            return issuer;\n        }\n    };\nmodule.exports.BaseClient = BaseClient;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/openid-client/lib/client.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/openid-client/lib/device_flow_handle.js":
/*!**************************************************************!*\
  !*** ./node_modules/openid-client/lib/device_flow_handle.js ***!
  \**************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nconst { inspect  } = __webpack_require__(/*! util */ \"util\");\nconst { RPError , OPError  } = __webpack_require__(/*! ./errors */ \"(sc_server)/./node_modules/openid-client/lib/errors.js\");\nconst now = __webpack_require__(/*! ./helpers/unix_timestamp */ \"(sc_server)/./node_modules/openid-client/lib/helpers/unix_timestamp.js\");\nclass DeviceFlowHandle {\n    #aborted;\n    #client;\n    #clientAssertionPayload;\n    #DPoP;\n    #exchangeBody;\n    #expires_at;\n    #interval;\n    #maxAge;\n    #response;\n    constructor({ client , exchangeBody , clientAssertionPayload , response , maxAge , DPoP  }){\n        [\n            \"verification_uri\",\n            \"user_code\",\n            \"device_code\"\n        ].forEach((prop)=>{\n            if (typeof response[prop] !== \"string\" || !response[prop]) {\n                throw new RPError(`expected ${prop} string to be returned by Device Authorization Response, got %j`, response[prop]);\n            }\n        });\n        if (!Number.isSafeInteger(response.expires_in)) {\n            throw new RPError(\"expected expires_in number to be returned by Device Authorization Response, got %j\", response.expires_in);\n        }\n        this.#expires_at = now() + response.expires_in;\n        this.#client = client;\n        this.#DPoP = DPoP;\n        this.#maxAge = maxAge;\n        this.#exchangeBody = exchangeBody;\n        this.#clientAssertionPayload = clientAssertionPayload;\n        this.#response = response;\n        this.#interval = response.interval * 1000 || 5000;\n    }\n    abort() {\n        this.#aborted = true;\n    }\n    async poll({ signal  } = {}) {\n        if (signal && signal.aborted || this.#aborted) {\n            throw new RPError(\"polling aborted\");\n        }\n        if (this.expired()) {\n            throw new RPError(\"the device code %j has expired and the device authorization session has concluded\", this.device_code);\n        }\n        await new Promise((resolve)=>setTimeout(resolve, this.#interval));\n        let tokenset;\n        try {\n            tokenset = await this.#client.grant({\n                ...this.#exchangeBody,\n                grant_type: \"urn:ietf:params:oauth:grant-type:device_code\",\n                device_code: this.device_code\n            }, {\n                clientAssertionPayload: this.#clientAssertionPayload,\n                DPoP: this.#DPoP\n            });\n        } catch (err) {\n            switch(err instanceof OPError && err.error){\n                case \"slow_down\":\n                    this.#interval += 5000;\n                case \"authorization_pending\":\n                    return this.poll({\n                        signal\n                    });\n                default:\n                    throw err;\n            }\n        }\n        if (\"id_token\" in tokenset) {\n            await this.#client.decryptIdToken(tokenset);\n            await this.#client.validateIdToken(tokenset, undefined, \"token\", this.#maxAge);\n        }\n        return tokenset;\n    }\n    get device_code() {\n        return this.#response.device_code;\n    }\n    get user_code() {\n        return this.#response.user_code;\n    }\n    get verification_uri() {\n        return this.#response.verification_uri;\n    }\n    get verification_uri_complete() {\n        return this.#response.verification_uri_complete;\n    }\n    get expires_in() {\n        return Math.max.apply(null, [\n            this.#expires_at - now(),\n            0\n        ]);\n    }\n    expired() {\n        return this.expires_in === 0;\n    }\n    /* istanbul ignore next */ [inspect.custom]() {\n        return `${this.constructor.name} ${inspect(this.#response, {\n            depth: Infinity,\n            colors: process.stdout.isTTY,\n            compact: false,\n            sorted: true\n        })}`;\n    }\n}\nmodule.exports = DeviceFlowHandle;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/openid-client/lib/device_flow_handle.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/openid-client/lib/errors.js":
/*!**************************************************!*\
  !*** ./node_modules/openid-client/lib/errors.js ***!
  \**************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nconst { format  } = __webpack_require__(/*! util */ \"util\");\nclass OPError extends Error {\n    constructor({ error_description , error , error_uri , session_state , state , scope  }, response){\n        super(!error_description ? error : `${error} (${error_description})`);\n        Object.assign(this, {\n            error\n        }, error_description && {\n            error_description\n        }, error_uri && {\n            error_uri\n        }, state && {\n            state\n        }, scope && {\n            scope\n        }, session_state && {\n            session_state\n        });\n        if (response) {\n            Object.defineProperty(this, \"response\", {\n                value: response\n            });\n        }\n        this.name = this.constructor.name;\n        Error.captureStackTrace(this, this.constructor);\n    }\n}\nclass RPError extends Error {\n    constructor(...args){\n        if (typeof args[0] === \"string\") {\n            super(format(...args));\n        } else {\n            const { message , printf , response , ...rest } = args[0];\n            if (printf) {\n                super(format(...printf));\n            } else {\n                super(message);\n            }\n            Object.assign(this, rest);\n            if (response) {\n                Object.defineProperty(this, \"response\", {\n                    value: response\n                });\n            }\n        }\n        this.name = this.constructor.name;\n        Error.captureStackTrace(this, this.constructor);\n    }\n}\nmodule.exports = {\n    OPError,\n    RPError\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvb3BlbmlkLWNsaWVudC9saWIvZXJyb3JzLmpzIiwibWFwcGluZ3MiOiI7QUFBQSxNQUFNLEVBQUVBLE9BQU0sRUFBRSxHQUFHQyxtQkFBT0EsQ0FBQztBQUUzQixNQUFNQyxnQkFBZ0JDO0lBQ3BCQyxZQUFZLEVBQUVDLGtCQUFpQixFQUFFQyxNQUFLLEVBQUVDLFVBQVMsRUFBRUMsY0FBYSxFQUFFQyxNQUFLLEVBQUVDLE1BQUssRUFBRSxFQUFFQyxRQUFRLENBQUU7UUFDMUYsS0FBSyxDQUFDLENBQUNOLG9CQUFvQkMsUUFBUSxDQUFDLEVBQUVBLE1BQU0sRUFBRSxFQUFFRCxrQkFBa0IsQ0FBQyxDQUFDO1FBRXBFTyxPQUFPQyxPQUNMLElBQUksRUFDSjtZQUFFUDtRQUFNLEdBQ1JELHFCQUFxQjtZQUFFQTtRQUFrQixHQUN6Q0UsYUFBYTtZQUFFQTtRQUFVLEdBQ3pCRSxTQUFTO1lBQUVBO1FBQU0sR0FDakJDLFNBQVM7WUFBRUE7UUFBTSxHQUNqQkYsaUJBQWlCO1lBQUVBO1FBQWM7UUFHbkMsSUFBSUcsVUFBVTtZQUNaQyxPQUFPRSxlQUFlLElBQUksRUFBRSxZQUFZO2dCQUN0Q0MsT0FBT0o7WUFDVDtRQUNGO1FBRUEsSUFBSSxDQUFDSyxPQUFPLElBQUksQ0FBQ1osWUFBWVk7UUFDN0JiLE1BQU1jLGtCQUFrQixJQUFJLEVBQUUsSUFBSSxDQUFDYjtJQUNyQztBQUNGO0FBRUEsTUFBTWMsZ0JBQWdCZjtJQUNwQkMsWUFBWSxHQUFHZSxJQUFJLENBQUU7UUFDbkIsSUFBSSxPQUFPQSxJQUFJLENBQUMsRUFBRSxLQUFLLFVBQVU7WUFDL0IsS0FBSyxDQUFDbkIsVUFBVW1CO1FBQ2xCLE9BQU87WUFDTCxNQUFNLEVBQUVDLFFBQU8sRUFBRUMsT0FBTSxFQUFFVixTQUFRLEVBQUUsR0FBR1csTUFBTSxHQUFHSCxJQUFJLENBQUMsRUFBRTtZQUN0RCxJQUFJRSxRQUFRO2dCQUNWLEtBQUssQ0FBQ3JCLFVBQVVxQjtZQUNsQixPQUFPO2dCQUNMLEtBQUssQ0FBQ0Q7WUFDUjtZQUNBUixPQUFPQyxPQUFPLElBQUksRUFBRVM7WUFDcEIsSUFBSVgsVUFBVTtnQkFDWkMsT0FBT0UsZUFBZSxJQUFJLEVBQUUsWUFBWTtvQkFDdENDLE9BQU9KO2dCQUNUO1lBQ0Y7UUFDRjtRQUVBLElBQUksQ0FBQ0ssT0FBTyxJQUFJLENBQUNaLFlBQVlZO1FBQzdCYixNQUFNYyxrQkFBa0IsSUFBSSxFQUFFLElBQUksQ0FBQ2I7SUFDckM7QUFDRjtBQUVBbUIsT0FBT0MsVUFBVTtJQUNmdEI7SUFDQWdCO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mdWxsc3RhY2stcm9sZS1iYXNlZC1uZXh0anMtMi8uL25vZGVfbW9kdWxlcy9vcGVuaWQtY2xpZW50L2xpYi9lcnJvcnMuanM/YTc0MSJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCB7IGZvcm1hdCB9ID0gcmVxdWlyZSgndXRpbCcpO1xuXG5jbGFzcyBPUEVycm9yIGV4dGVuZHMgRXJyb3Ige1xuICBjb25zdHJ1Y3Rvcih7IGVycm9yX2Rlc2NyaXB0aW9uLCBlcnJvciwgZXJyb3JfdXJpLCBzZXNzaW9uX3N0YXRlLCBzdGF0ZSwgc2NvcGUgfSwgcmVzcG9uc2UpIHtcbiAgICBzdXBlcighZXJyb3JfZGVzY3JpcHRpb24gPyBlcnJvciA6IGAke2Vycm9yfSAoJHtlcnJvcl9kZXNjcmlwdGlvbn0pYCk7XG5cbiAgICBPYmplY3QuYXNzaWduKFxuICAgICAgdGhpcyxcbiAgICAgIHsgZXJyb3IgfSxcbiAgICAgIGVycm9yX2Rlc2NyaXB0aW9uICYmIHsgZXJyb3JfZGVzY3JpcHRpb24gfSxcbiAgICAgIGVycm9yX3VyaSAmJiB7IGVycm9yX3VyaSB9LFxuICAgICAgc3RhdGUgJiYgeyBzdGF0ZSB9LFxuICAgICAgc2NvcGUgJiYgeyBzY29wZSB9LFxuICAgICAgc2Vzc2lvbl9zdGF0ZSAmJiB7IHNlc3Npb25fc3RhdGUgfSxcbiAgICApO1xuXG4gICAgaWYgKHJlc3BvbnNlKSB7XG4gICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcywgJ3Jlc3BvbnNlJywge1xuICAgICAgICB2YWx1ZTogcmVzcG9uc2UsXG4gICAgICB9KTtcbiAgICB9XG5cbiAgICB0aGlzLm5hbWUgPSB0aGlzLmNvbnN0cnVjdG9yLm5hbWU7XG4gICAgRXJyb3IuY2FwdHVyZVN0YWNrVHJhY2UodGhpcywgdGhpcy5jb25zdHJ1Y3Rvcik7XG4gIH1cbn1cblxuY2xhc3MgUlBFcnJvciBleHRlbmRzIEVycm9yIHtcbiAgY29uc3RydWN0b3IoLi4uYXJncykge1xuICAgIGlmICh0eXBlb2YgYXJnc1swXSA9PT0gJ3N0cmluZycpIHtcbiAgICAgIHN1cGVyKGZvcm1hdCguLi5hcmdzKSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIGNvbnN0IHsgbWVzc2FnZSwgcHJpbnRmLCByZXNwb25zZSwgLi4ucmVzdCB9ID0gYXJnc1swXTtcbiAgICAgIGlmIChwcmludGYpIHtcbiAgICAgICAgc3VwZXIoZm9ybWF0KC4uLnByaW50ZikpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgc3VwZXIobWVzc2FnZSk7XG4gICAgICB9XG4gICAgICBPYmplY3QuYXNzaWduKHRoaXMsIHJlc3QpO1xuICAgICAgaWYgKHJlc3BvbnNlKSB7XG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLCAncmVzcG9uc2UnLCB7XG4gICAgICAgICAgdmFsdWU6IHJlc3BvbnNlLFxuICAgICAgICB9KTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICB0aGlzLm5hbWUgPSB0aGlzLmNvbnN0cnVjdG9yLm5hbWU7XG4gICAgRXJyb3IuY2FwdHVyZVN0YWNrVHJhY2UodGhpcywgdGhpcy5jb25zdHJ1Y3Rvcik7XG4gIH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gIE9QRXJyb3IsXG4gIFJQRXJyb3IsXG59O1xuIl0sIm5hbWVzIjpbImZvcm1hdCIsInJlcXVpcmUiLCJPUEVycm9yIiwiRXJyb3IiLCJjb25zdHJ1Y3RvciIsImVycm9yX2Rlc2NyaXB0aW9uIiwiZXJyb3IiLCJlcnJvcl91cmkiLCJzZXNzaW9uX3N0YXRlIiwic3RhdGUiLCJzY29wZSIsInJlc3BvbnNlIiwiT2JqZWN0IiwiYXNzaWduIiwiZGVmaW5lUHJvcGVydHkiLCJ2YWx1ZSIsIm5hbWUiLCJjYXB0dXJlU3RhY2tUcmFjZSIsIlJQRXJyb3IiLCJhcmdzIiwibWVzc2FnZSIsInByaW50ZiIsInJlc3QiLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/openid-client/lib/errors.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/openid-client/lib/helpers/assert.js":
/*!**********************************************************!*\
  !*** ./node_modules/openid-client/lib/helpers/assert.js ***!
  \**********************************************************/
/***/ ((module) => {

"use strict";
eval("\nfunction assertSigningAlgValuesSupport(endpoint, issuer, properties) {\n    if (!issuer[`${endpoint}_endpoint`]) return;\n    const eam = `${endpoint}_endpoint_auth_method`;\n    const easa = `${endpoint}_endpoint_auth_signing_alg`;\n    const easavs = `${endpoint}_endpoint_auth_signing_alg_values_supported`;\n    if (properties[eam] && properties[eam].endsWith(\"_jwt\") && !properties[easa] && !issuer[easavs]) {\n        throw new TypeError(`${easavs} must be configured on the issuer if ${easa} is not defined on a client`);\n    }\n}\nfunction assertIssuerConfiguration(issuer, endpoint) {\n    if (!issuer[endpoint]) {\n        throw new TypeError(`${endpoint} must be configured on the issuer`);\n    }\n}\nmodule.exports = {\n    assertSigningAlgValuesSupport,\n    assertIssuerConfiguration\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvb3BlbmlkLWNsaWVudC9saWIvaGVscGVycy9hc3NlcnQuanMiLCJtYXBwaW5ncyI6IjtBQUFBLFNBQVNBLDhCQUE4QkMsUUFBUSxFQUFFQyxNQUFNLEVBQUVDLFVBQVU7SUFDakUsSUFBSSxDQUFDRCxNQUFNLENBQUMsQ0FBQyxFQUFFRCxTQUFTLFNBQVMsQ0FBQyxDQUFDLEVBQUU7SUFFckMsTUFBTUcsTUFBTSxDQUFDLEVBQUVILFNBQVMscUJBQXFCLENBQUM7SUFDOUMsTUFBTUksT0FBTyxDQUFDLEVBQUVKLFNBQVMsMEJBQTBCLENBQUM7SUFDcEQsTUFBTUssU0FBUyxDQUFDLEVBQUVMLFNBQVMsMkNBQTJDLENBQUM7SUFFdkUsSUFBSUUsVUFBVSxDQUFDQyxJQUFJLElBQUlELFVBQVUsQ0FBQ0MsSUFBSSxDQUFDRyxTQUFTLFdBQVcsQ0FBQ0osVUFBVSxDQUFDRSxLQUFLLElBQUksQ0FBQ0gsTUFBTSxDQUFDSSxPQUFPLEVBQUU7UUFDL0YsTUFBTSxJQUFJRSxVQUNSLENBQUMsRUFBRUYsT0FBTyxxQ0FBcUMsRUFBRUQsS0FBSywyQkFBMkIsQ0FBQztJQUV0RjtBQUNGO0FBRUEsU0FBU0ksMEJBQTBCUCxNQUFNLEVBQUVELFFBQVE7SUFDakQsSUFBSSxDQUFDQyxNQUFNLENBQUNELFNBQVMsRUFBRTtRQUNyQixNQUFNLElBQUlPLFVBQVUsQ0FBQyxFQUFFUCxTQUFTLGlDQUFpQyxDQUFDO0lBQ3BFO0FBQ0Y7QUFFQVMsT0FBT0MsVUFBVTtJQUNmWDtJQUNBUztBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZnVsbHN0YWNrLXJvbGUtYmFzZWQtbmV4dGpzLTIvLi9ub2RlX21vZHVsZXMvb3BlbmlkLWNsaWVudC9saWIvaGVscGVycy9hc3NlcnQuanM/YWQyMiJdLCJzb3VyY2VzQ29udGVudCI6WyJmdW5jdGlvbiBhc3NlcnRTaWduaW5nQWxnVmFsdWVzU3VwcG9ydChlbmRwb2ludCwgaXNzdWVyLCBwcm9wZXJ0aWVzKSB7XG4gIGlmICghaXNzdWVyW2Ake2VuZHBvaW50fV9lbmRwb2ludGBdKSByZXR1cm47XG5cbiAgY29uc3QgZWFtID0gYCR7ZW5kcG9pbnR9X2VuZHBvaW50X2F1dGhfbWV0aG9kYDtcbiAgY29uc3QgZWFzYSA9IGAke2VuZHBvaW50fV9lbmRwb2ludF9hdXRoX3NpZ25pbmdfYWxnYDtcbiAgY29uc3QgZWFzYXZzID0gYCR7ZW5kcG9pbnR9X2VuZHBvaW50X2F1dGhfc2lnbmluZ19hbGdfdmFsdWVzX3N1cHBvcnRlZGA7XG5cbiAgaWYgKHByb3BlcnRpZXNbZWFtXSAmJiBwcm9wZXJ0aWVzW2VhbV0uZW5kc1dpdGgoJ19qd3QnKSAmJiAhcHJvcGVydGllc1tlYXNhXSAmJiAhaXNzdWVyW2Vhc2F2c10pIHtcbiAgICB0aHJvdyBuZXcgVHlwZUVycm9yKFxuICAgICAgYCR7ZWFzYXZzfSBtdXN0IGJlIGNvbmZpZ3VyZWQgb24gdGhlIGlzc3VlciBpZiAke2Vhc2F9IGlzIG5vdCBkZWZpbmVkIG9uIGEgY2xpZW50YCxcbiAgICApO1xuICB9XG59XG5cbmZ1bmN0aW9uIGFzc2VydElzc3VlckNvbmZpZ3VyYXRpb24oaXNzdWVyLCBlbmRwb2ludCkge1xuICBpZiAoIWlzc3VlcltlbmRwb2ludF0pIHtcbiAgICB0aHJvdyBuZXcgVHlwZUVycm9yKGAke2VuZHBvaW50fSBtdXN0IGJlIGNvbmZpZ3VyZWQgb24gdGhlIGlzc3VlcmApO1xuICB9XG59XG5cbm1vZHVsZS5leHBvcnRzID0ge1xuICBhc3NlcnRTaWduaW5nQWxnVmFsdWVzU3VwcG9ydCxcbiAgYXNzZXJ0SXNzdWVyQ29uZmlndXJhdGlvbixcbn07XG4iXSwibmFtZXMiOlsiYXNzZXJ0U2lnbmluZ0FsZ1ZhbHVlc1N1cHBvcnQiLCJlbmRwb2ludCIsImlzc3VlciIsInByb3BlcnRpZXMiLCJlYW0iLCJlYXNhIiwiZWFzYXZzIiwiZW5kc1dpdGgiLCJUeXBlRXJyb3IiLCJhc3NlcnRJc3N1ZXJDb25maWd1cmF0aW9uIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/openid-client/lib/helpers/assert.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/openid-client/lib/helpers/base64url.js":
/*!*************************************************************!*\
  !*** ./node_modules/openid-client/lib/helpers/base64url.js ***!
  \*************************************************************/
/***/ ((module) => {

"use strict";
eval("\nlet encode;\nif (Buffer.isEncoding(\"base64url\")) {\n    encode = (input, encoding = \"utf8\")=>Buffer.from(input, encoding).toString(\"base64url\");\n} else {\n    const fromBase64 = (base64)=>base64.replace(/=/g, \"\").replace(/\\+/g, \"-\").replace(/\\//g, \"_\");\n    encode = (input, encoding = \"utf8\")=>fromBase64(Buffer.from(input, encoding).toString(\"base64\"));\n}\nconst decode = (input)=>Buffer.from(input, \"base64\");\nmodule.exports.decode = decode;\nmodule.exports.encode = encode;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvb3BlbmlkLWNsaWVudC9saWIvaGVscGVycy9iYXNlNjR1cmwuanMiLCJtYXBwaW5ncyI6IjtBQUFBLElBQUlBO0FBQ0osSUFBSUMsT0FBT0MsV0FBVyxjQUFjO0lBQ2xDRixTQUFTLENBQUNHLE9BQU9DLFdBQVcsTUFBTSxHQUFLSCxPQUFPSSxLQUFLRixPQUFPQyxVQUFVRSxTQUFTO0FBQy9FLE9BQU87SUFDTCxNQUFNQyxhQUFhLENBQUNDLFNBQVdBLE9BQU9DLFFBQVEsTUFBTSxJQUFJQSxRQUFRLE9BQU8sS0FBS0EsUUFBUSxPQUFPO0lBQzNGVCxTQUFTLENBQUNHLE9BQU9DLFdBQVcsTUFBTSxHQUNoQ0csV0FBV04sT0FBT0ksS0FBS0YsT0FBT0MsVUFBVUUsU0FBUztBQUNyRDtBQUVBLE1BQU1JLFNBQVMsQ0FBQ1AsUUFBVUYsT0FBT0ksS0FBS0YsT0FBTztBQUU3Q1EscUJBQXFCRCxHQUFHQTtBQUN4QkMscUJBQXFCWCxHQUFHQSIsInNvdXJjZXMiOlsid2VicGFjazovL2Z1bGxzdGFjay1yb2xlLWJhc2VkLW5leHRqcy0yLy4vbm9kZV9tb2R1bGVzL29wZW5pZC1jbGllbnQvbGliL2hlbHBlcnMvYmFzZTY0dXJsLmpzPzNiNWUiXSwic291cmNlc0NvbnRlbnQiOlsibGV0IGVuY29kZTtcbmlmIChCdWZmZXIuaXNFbmNvZGluZygnYmFzZTY0dXJsJykpIHtcbiAgZW5jb2RlID0gKGlucHV0LCBlbmNvZGluZyA9ICd1dGY4JykgPT4gQnVmZmVyLmZyb20oaW5wdXQsIGVuY29kaW5nKS50b1N0cmluZygnYmFzZTY0dXJsJyk7XG59IGVsc2Uge1xuICBjb25zdCBmcm9tQmFzZTY0ID0gKGJhc2U2NCkgPT4gYmFzZTY0LnJlcGxhY2UoLz0vZywgJycpLnJlcGxhY2UoL1xcKy9nLCAnLScpLnJlcGxhY2UoL1xcLy9nLCAnXycpO1xuICBlbmNvZGUgPSAoaW5wdXQsIGVuY29kaW5nID0gJ3V0ZjgnKSA9PlxuICAgIGZyb21CYXNlNjQoQnVmZmVyLmZyb20oaW5wdXQsIGVuY29kaW5nKS50b1N0cmluZygnYmFzZTY0JykpO1xufVxuXG5jb25zdCBkZWNvZGUgPSAoaW5wdXQpID0+IEJ1ZmZlci5mcm9tKGlucHV0LCAnYmFzZTY0Jyk7XG5cbm1vZHVsZS5leHBvcnRzLmRlY29kZSA9IGRlY29kZTtcbm1vZHVsZS5leHBvcnRzLmVuY29kZSA9IGVuY29kZTtcbiJdLCJuYW1lcyI6WyJlbmNvZGUiLCJCdWZmZXIiLCJpc0VuY29kaW5nIiwiaW5wdXQiLCJlbmNvZGluZyIsImZyb20iLCJ0b1N0cmluZyIsImZyb21CYXNlNjQiLCJiYXNlNjQiLCJyZXBsYWNlIiwiZGVjb2RlIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/openid-client/lib/helpers/base64url.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/openid-client/lib/helpers/client.js":
/*!**********************************************************!*\
  !*** ./node_modules/openid-client/lib/helpers/client.js ***!
  \**********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nconst jose = __webpack_require__(/*! jose */ \"(sc_server)/./node_modules/jose/dist/node/cjs/index.js\");\nconst { RPError  } = __webpack_require__(/*! ../errors */ \"(sc_server)/./node_modules/openid-client/lib/errors.js\");\nconst { assertIssuerConfiguration  } = __webpack_require__(/*! ./assert */ \"(sc_server)/./node_modules/openid-client/lib/helpers/assert.js\");\nconst { random  } = __webpack_require__(/*! ./generators */ \"(sc_server)/./node_modules/openid-client/lib/helpers/generators.js\");\nconst now = __webpack_require__(/*! ./unix_timestamp */ \"(sc_server)/./node_modules/openid-client/lib/helpers/unix_timestamp.js\");\nconst request = __webpack_require__(/*! ./request */ \"(sc_server)/./node_modules/openid-client/lib/helpers/request.js\");\nconst { keystores  } = __webpack_require__(/*! ./weak_cache */ \"(sc_server)/./node_modules/openid-client/lib/helpers/weak_cache.js\");\nconst merge = __webpack_require__(/*! ./merge */ \"(sc_server)/./node_modules/openid-client/lib/helpers/merge.js\");\nconst formUrlEncode = (value)=>encodeURIComponent(value).replace(/%20/g, \"+\");\nasync function clientAssertion(endpoint, payload) {\n    let alg = this[`${endpoint}_endpoint_auth_signing_alg`];\n    if (!alg) {\n        assertIssuerConfiguration(this.issuer, `${endpoint}_endpoint_auth_signing_alg_values_supported`);\n    }\n    if (this[`${endpoint}_endpoint_auth_method`] === \"client_secret_jwt\") {\n        if (!alg) {\n            const supported = this.issuer[`${endpoint}_endpoint_auth_signing_alg_values_supported`];\n            alg = Array.isArray(supported) && supported.find((signAlg)=>/^HS(?:256|384|512)/.test(signAlg));\n        }\n        if (!alg) {\n            throw new RPError(`failed to determine a JWS Algorithm to use for ${this[`${endpoint}_endpoint_auth_method`]} Client Assertion`);\n        }\n        return new jose.CompactSign(Buffer.from(JSON.stringify(payload))).setProtectedHeader({\n            alg\n        }).sign(this.secretForAlg(alg));\n    }\n    const keystore = await keystores.get(this);\n    if (!keystore) {\n        throw new TypeError(\"no client jwks provided for signing a client assertion with\");\n    }\n    if (!alg) {\n        const supported = this.issuer[`${endpoint}_endpoint_auth_signing_alg_values_supported`];\n        alg = Array.isArray(supported) && supported.find((signAlg)=>keystore.get({\n                alg: signAlg,\n                use: \"sig\"\n            }));\n    }\n    if (!alg) {\n        throw new RPError(`failed to determine a JWS Algorithm to use for ${this[`${endpoint}_endpoint_auth_method`]} Client Assertion`);\n    }\n    const key = keystore.get({\n        alg,\n        use: \"sig\"\n    });\n    if (!key) {\n        throw new RPError(`no key found in client jwks to sign a client assertion with using alg ${alg}`);\n    }\n    return new jose.CompactSign(Buffer.from(JSON.stringify(payload))).setProtectedHeader({\n        alg,\n        kid: key.jwk && key.jwk.kid\n    }).sign(key.keyObject);\n}\nasync function authFor(endpoint, { clientAssertionPayload  } = {}) {\n    const authMethod = this[`${endpoint}_endpoint_auth_method`];\n    switch(authMethod){\n        case \"self_signed_tls_client_auth\":\n        case \"tls_client_auth\":\n        case \"none\":\n            return {\n                form: {\n                    client_id: this.client_id\n                }\n            };\n        case \"client_secret_post\":\n            if (!this.client_secret) {\n                throw new TypeError(\"client_secret_post client authentication method requires a client_secret\");\n            }\n            return {\n                form: {\n                    client_id: this.client_id,\n                    client_secret: this.client_secret\n                }\n            };\n        case \"private_key_jwt\":\n        case \"client_secret_jwt\":\n            {\n                const timestamp = now();\n                const audience = [\n                    ...new Set([\n                        this.issuer.issuer,\n                        this.issuer.token_endpoint\n                    ].filter(Boolean))\n                ];\n                const assertion = await clientAssertion.call(this, endpoint, {\n                    iat: timestamp,\n                    exp: timestamp + 60,\n                    jti: random(),\n                    iss: this.client_id,\n                    sub: this.client_id,\n                    aud: audience,\n                    ...clientAssertionPayload\n                });\n                return {\n                    form: {\n                        client_id: this.client_id,\n                        client_assertion: assertion,\n                        client_assertion_type: \"urn:ietf:params:oauth:client-assertion-type:jwt-bearer\"\n                    }\n                };\n            }\n        case \"client_secret_basic\":\n            {\n                // This is correct behaviour, see https://tools.ietf.org/html/rfc6749#section-2.3.1 and the\n                // related appendix. (also https://github.com/panva/node-openid-client/pull/91)\n                // > The client identifier is encoded using the\n                // > \"application/x-www-form-urlencoded\" encoding algorithm per\n                // > Appendix B, and the encoded value is used as the username; the client\n                // > password is encoded using the same algorithm and used as the\n                // > password.\n                if (!this.client_secret) {\n                    throw new TypeError(\"client_secret_basic client authentication method requires a client_secret\");\n                }\n                const encoded = `${formUrlEncode(this.client_id)}:${formUrlEncode(this.client_secret)}`;\n                const value = Buffer.from(encoded).toString(\"base64\");\n                return {\n                    headers: {\n                        Authorization: `Basic ${value}`\n                    }\n                };\n            }\n        default:\n            {\n                throw new TypeError(`missing, or unsupported, ${endpoint}_endpoint_auth_method`);\n            }\n    }\n}\nfunction resolveResponseType() {\n    const { length , 0: value  } = this.response_types;\n    if (length === 1) {\n        return value;\n    }\n    return undefined;\n}\nfunction resolveRedirectUri() {\n    const { length , 0: value  } = this.redirect_uris || [];\n    if (length === 1) {\n        return value;\n    }\n    return undefined;\n}\nasync function authenticatedPost(endpoint, opts, { clientAssertionPayload , endpointAuthMethod =endpoint , DPoP  } = {}) {\n    const auth = await authFor.call(this, endpointAuthMethod, {\n        clientAssertionPayload\n    });\n    const requestOpts = merge(opts, auth);\n    const mTLS = this[`${endpointAuthMethod}_endpoint_auth_method`].includes(\"tls_client_auth\") || endpoint === \"token\" && this.tls_client_certificate_bound_access_tokens;\n    let targetUrl;\n    if (mTLS && this.issuer.mtls_endpoint_aliases) {\n        targetUrl = this.issuer.mtls_endpoint_aliases[`${endpoint}_endpoint`];\n    }\n    targetUrl = targetUrl || this.issuer[`${endpoint}_endpoint`];\n    if (\"form\" in requestOpts) {\n        for (const [key, value] of Object.entries(requestOpts.form)){\n            if (typeof value === \"undefined\") {\n                delete requestOpts.form[key];\n            }\n        }\n    }\n    return request.call(this, {\n        ...requestOpts,\n        method: \"POST\",\n        url: targetUrl,\n        headers: {\n            ...endpoint !== \"revocation\" ? {\n                Accept: \"application/json\"\n            } : undefined,\n            ...requestOpts.headers\n        }\n    }, {\n        mTLS,\n        DPoP\n    });\n}\nmodule.exports = {\n    resolveResponseType,\n    resolveRedirectUri,\n    authFor,\n    authenticatedPost\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/openid-client/lib/helpers/client.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/openid-client/lib/helpers/consts.js":
/*!**********************************************************!*\
  !*** ./node_modules/openid-client/lib/helpers/consts.js ***!
  \**********************************************************/
/***/ ((module) => {

"use strict";
eval("\nconst HTTP_OPTIONS = Symbol();\nconst CLOCK_TOLERANCE = Symbol();\nmodule.exports = {\n    CLOCK_TOLERANCE,\n    HTTP_OPTIONS\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvb3BlbmlkLWNsaWVudC9saWIvaGVscGVycy9jb25zdHMuanMiLCJtYXBwaW5ncyI6IjtBQUFBLE1BQU1BLGVBQWVDO0FBQ3JCLE1BQU1DLGtCQUFrQkQ7QUFFeEJFLE9BQU9DLFVBQVU7SUFDZkY7SUFDQUY7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL2Z1bGxzdGFjay1yb2xlLWJhc2VkLW5leHRqcy0yLy4vbm9kZV9tb2R1bGVzL29wZW5pZC1jbGllbnQvbGliL2hlbHBlcnMvY29uc3RzLmpzP2UwNTMiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgSFRUUF9PUFRJT05TID0gU3ltYm9sKCk7XG5jb25zdCBDTE9DS19UT0xFUkFOQ0UgPSBTeW1ib2woKTtcblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gIENMT0NLX1RPTEVSQU5DRSxcbiAgSFRUUF9PUFRJT05TLFxufTtcbiJdLCJuYW1lcyI6WyJIVFRQX09QVElPTlMiLCJTeW1ib2wiLCJDTE9DS19UT0xFUkFOQ0UiLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/openid-client/lib/helpers/consts.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/openid-client/lib/helpers/decode_jwt.js":
/*!**************************************************************!*\
  !*** ./node_modules/openid-client/lib/helpers/decode_jwt.js ***!
  \**************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nconst base64url = __webpack_require__(/*! ./base64url */ \"(sc_server)/./node_modules/openid-client/lib/helpers/base64url.js\");\nmodule.exports = (token)=>{\n    if (typeof token !== \"string\" || !token) {\n        throw new TypeError(\"JWT must be a string\");\n    }\n    const { 0: header , 1: payload , 2: signature , length  } = token.split(\".\");\n    if (length === 5) {\n        throw new TypeError(\"encrypted JWTs cannot be decoded\");\n    }\n    if (length !== 3) {\n        throw new Error(\"JWTs must have three components\");\n    }\n    try {\n        return {\n            header: JSON.parse(base64url.decode(header)),\n            payload: JSON.parse(base64url.decode(payload)),\n            signature\n        };\n    } catch (err) {\n        throw new Error(\"JWT is malformed\");\n    }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvb3BlbmlkLWNsaWVudC9saWIvaGVscGVycy9kZWNvZGVfand0LmpzIiwibWFwcGluZ3MiOiI7QUFBQSxNQUFNQSxZQUFZQyxtQkFBT0EsQ0FBQztBQUUxQkMsT0FBT0MsVUFBVSxDQUFDQztJQUNoQixJQUFJLE9BQU9BLFVBQVUsWUFBWSxDQUFDQSxPQUFPO1FBQ3ZDLE1BQU0sSUFBSUMsVUFBVTtJQUN0QjtJQUVBLE1BQU0sRUFBRSxHQUFHQyxPQUFNLEVBQUUsR0FBR0MsUUFBTyxFQUFFLEdBQUdDLFVBQVMsRUFBRUMsT0FBTSxFQUFFLEdBQUdMLE1BQU1NLE1BQU07SUFFcEUsSUFBSUQsV0FBVyxHQUFHO1FBQ2hCLE1BQU0sSUFBSUosVUFBVTtJQUN0QjtJQUVBLElBQUlJLFdBQVcsR0FBRztRQUNoQixNQUFNLElBQUlFLE1BQU07SUFDbEI7SUFFQSxJQUFJO1FBQ0YsT0FBTztZQUNMTCxRQUFRTSxLQUFLQyxNQUFNYixVQUFVYyxPQUFPUjtZQUNwQ0MsU0FBU0ssS0FBS0MsTUFBTWIsVUFBVWMsT0FBT1A7WUFDckNDO1FBQ0Y7SUFDRixFQUFFLE9BQU9PLEtBQUs7UUFDWixNQUFNLElBQUlKLE1BQU07SUFDbEI7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL2Z1bGxzdGFjay1yb2xlLWJhc2VkLW5leHRqcy0yLy4vbm9kZV9tb2R1bGVzL29wZW5pZC1jbGllbnQvbGliL2hlbHBlcnMvZGVjb2RlX2p3dC5qcz81NjAzIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGJhc2U2NHVybCA9IHJlcXVpcmUoJy4vYmFzZTY0dXJsJyk7XG5cbm1vZHVsZS5leHBvcnRzID0gKHRva2VuKSA9PiB7XG4gIGlmICh0eXBlb2YgdG9rZW4gIT09ICdzdHJpbmcnIHx8ICF0b2tlbikge1xuICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ0pXVCBtdXN0IGJlIGEgc3RyaW5nJyk7XG4gIH1cblxuICBjb25zdCB7IDA6IGhlYWRlciwgMTogcGF5bG9hZCwgMjogc2lnbmF0dXJlLCBsZW5ndGggfSA9IHRva2VuLnNwbGl0KCcuJyk7XG5cbiAgaWYgKGxlbmd0aCA9PT0gNSkge1xuICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ2VuY3J5cHRlZCBKV1RzIGNhbm5vdCBiZSBkZWNvZGVkJyk7XG4gIH1cblxuICBpZiAobGVuZ3RoICE9PSAzKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdKV1RzIG11c3QgaGF2ZSB0aHJlZSBjb21wb25lbnRzJyk7XG4gIH1cblxuICB0cnkge1xuICAgIHJldHVybiB7XG4gICAgICBoZWFkZXI6IEpTT04ucGFyc2UoYmFzZTY0dXJsLmRlY29kZShoZWFkZXIpKSxcbiAgICAgIHBheWxvYWQ6IEpTT04ucGFyc2UoYmFzZTY0dXJsLmRlY29kZShwYXlsb2FkKSksXG4gICAgICBzaWduYXR1cmUsXG4gICAgfTtcbiAgfSBjYXRjaCAoZXJyKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdKV1QgaXMgbWFsZm9ybWVkJyk7XG4gIH1cbn07XG4iXSwibmFtZXMiOlsiYmFzZTY0dXJsIiwicmVxdWlyZSIsIm1vZHVsZSIsImV4cG9ydHMiLCJ0b2tlbiIsIlR5cGVFcnJvciIsImhlYWRlciIsInBheWxvYWQiLCJzaWduYXR1cmUiLCJsZW5ndGgiLCJzcGxpdCIsIkVycm9yIiwiSlNPTiIsInBhcnNlIiwiZGVjb2RlIiwiZXJyIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/openid-client/lib/helpers/decode_jwt.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/openid-client/lib/helpers/deep_clone.js":
/*!**************************************************************!*\
  !*** ./node_modules/openid-client/lib/helpers/deep_clone.js ***!
  \**************************************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports = globalThis.structuredClone || ((obj)=>JSON.parse(JSON.stringify(obj)));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvb3BlbmlkLWNsaWVudC9saWIvaGVscGVycy9kZWVwX2Nsb25lLmpzIiwibWFwcGluZ3MiOiI7QUFBQUEsT0FBT0MsVUFBVUMsV0FBV0MsbUJBQW9CLEVBQUNDLE1BQVFDLEtBQUtDLE1BQU1ELEtBQUtFLFVBQVVILEtBQUkiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mdWxsc3RhY2stcm9sZS1iYXNlZC1uZXh0anMtMi8uL25vZGVfbW9kdWxlcy9vcGVuaWQtY2xpZW50L2xpYi9oZWxwZXJzL2RlZXBfY2xvbmUuanM/OGU0YiJdLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IGdsb2JhbFRoaXMuc3RydWN0dXJlZENsb25lIHx8ICgob2JqKSA9PiBKU09OLnBhcnNlKEpTT04uc3RyaW5naWZ5KG9iaikpKTtcbiJdLCJuYW1lcyI6WyJtb2R1bGUiLCJleHBvcnRzIiwiZ2xvYmFsVGhpcyIsInN0cnVjdHVyZWRDbG9uZSIsIm9iaiIsIkpTT04iLCJwYXJzZSIsInN0cmluZ2lmeSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/openid-client/lib/helpers/deep_clone.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/openid-client/lib/helpers/defaults.js":
/*!************************************************************!*\
  !*** ./node_modules/openid-client/lib/helpers/defaults.js ***!
  \************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nconst isPlainObject = __webpack_require__(/*! ./is_plain_object */ \"(sc_server)/./node_modules/openid-client/lib/helpers/is_plain_object.js\");\nfunction defaults(deep, target, ...sources) {\n    for (const source of sources){\n        if (!isPlainObject(source)) {\n            continue;\n        }\n        for (const [key, value] of Object.entries(source)){\n            /* istanbul ignore if */ if (key === \"__proto__\" || key === \"constructor\") {\n                continue;\n            }\n            if (typeof target[key] === \"undefined\" && typeof value !== \"undefined\") {\n                target[key] = value;\n            }\n            if (deep && isPlainObject(target[key]) && isPlainObject(value)) {\n                defaults(true, target[key], value);\n            }\n        }\n    }\n    return target;\n}\nmodule.exports = defaults.bind(undefined, false);\nmodule.exports.deep = defaults.bind(undefined, true);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvb3BlbmlkLWNsaWVudC9saWIvaGVscGVycy9kZWZhdWx0cy5qcyIsIm1hcHBpbmdzIjoiO0FBQUEsTUFBTUEsZ0JBQWdCQyxtQkFBT0EsQ0FBQztBQUU5QixTQUFTQyxTQUFTQyxJQUFJLEVBQUVDLE1BQU0sRUFBRSxHQUFHQyxPQUFPO0lBQ3hDLEtBQUssTUFBTUMsVUFBVUQsUUFBUztRQUM1QixJQUFJLENBQUNMLGNBQWNNLFNBQVM7WUFDMUI7UUFDRjtRQUNBLEtBQUssTUFBTSxDQUFDQyxLQUFLQyxNQUFNLElBQUlDLE9BQU9DLFFBQVFKLFFBQVM7WUFDakQsc0JBQXNCLEdBQ3RCLElBQUlDLFFBQVEsZUFBZUEsUUFBUSxlQUFlO2dCQUNoRDtZQUNGO1lBQ0EsSUFBSSxPQUFPSCxNQUFNLENBQUNHLElBQUksS0FBSyxlQUFlLE9BQU9DLFVBQVUsYUFBYTtnQkFDdEVKLE1BQU0sQ0FBQ0csSUFBSSxHQUFHQztZQUNoQjtZQUVBLElBQUlMLFFBQVFILGNBQWNJLE1BQU0sQ0FBQ0csSUFBSSxLQUFLUCxjQUFjUSxRQUFRO2dCQUM5RE4sU0FBUyxNQUFNRSxNQUFNLENBQUNHLElBQUksRUFBRUM7WUFDOUI7UUFDRjtJQUNGO0lBRUEsT0FBT0o7QUFDVDtBQUVBTyxPQUFPQyxVQUFVVixTQUFTVyxLQUFLQyxXQUFXO0FBQzFDSCxtQkFBbUJSLEdBQUdELFNBQVNXLEtBQUtDLFdBQVciLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mdWxsc3RhY2stcm9sZS1iYXNlZC1uZXh0anMtMi8uL25vZGVfbW9kdWxlcy9vcGVuaWQtY2xpZW50L2xpYi9oZWxwZXJzL2RlZmF1bHRzLmpzPzBjYjEiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgaXNQbGFpbk9iamVjdCA9IHJlcXVpcmUoJy4vaXNfcGxhaW5fb2JqZWN0Jyk7XG5cbmZ1bmN0aW9uIGRlZmF1bHRzKGRlZXAsIHRhcmdldCwgLi4uc291cmNlcykge1xuICBmb3IgKGNvbnN0IHNvdXJjZSBvZiBzb3VyY2VzKSB7XG4gICAgaWYgKCFpc1BsYWluT2JqZWN0KHNvdXJjZSkpIHtcbiAgICAgIGNvbnRpbnVlO1xuICAgIH1cbiAgICBmb3IgKGNvbnN0IFtrZXksIHZhbHVlXSBvZiBPYmplY3QuZW50cmllcyhzb3VyY2UpKSB7XG4gICAgICAvKiBpc3RhbmJ1bCBpZ25vcmUgaWYgKi9cbiAgICAgIGlmIChrZXkgPT09ICdfX3Byb3RvX18nIHx8IGtleSA9PT0gJ2NvbnN0cnVjdG9yJykge1xuICAgICAgICBjb250aW51ZTtcbiAgICAgIH1cbiAgICAgIGlmICh0eXBlb2YgdGFyZ2V0W2tleV0gPT09ICd1bmRlZmluZWQnICYmIHR5cGVvZiB2YWx1ZSAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgICAgdGFyZ2V0W2tleV0gPSB2YWx1ZTtcbiAgICAgIH1cblxuICAgICAgaWYgKGRlZXAgJiYgaXNQbGFpbk9iamVjdCh0YXJnZXRba2V5XSkgJiYgaXNQbGFpbk9iamVjdCh2YWx1ZSkpIHtcbiAgICAgICAgZGVmYXVsdHModHJ1ZSwgdGFyZ2V0W2tleV0sIHZhbHVlKTtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICByZXR1cm4gdGFyZ2V0O1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGRlZmF1bHRzLmJpbmQodW5kZWZpbmVkLCBmYWxzZSk7XG5tb2R1bGUuZXhwb3J0cy5kZWVwID0gZGVmYXVsdHMuYmluZCh1bmRlZmluZWQsIHRydWUpO1xuIl0sIm5hbWVzIjpbImlzUGxhaW5PYmplY3QiLCJyZXF1aXJlIiwiZGVmYXVsdHMiLCJkZWVwIiwidGFyZ2V0Iiwic291cmNlcyIsInNvdXJjZSIsImtleSIsInZhbHVlIiwiT2JqZWN0IiwiZW50cmllcyIsIm1vZHVsZSIsImV4cG9ydHMiLCJiaW5kIiwidW5kZWZpbmVkIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/openid-client/lib/helpers/defaults.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/openid-client/lib/helpers/generators.js":
/*!**************************************************************!*\
  !*** ./node_modules/openid-client/lib/helpers/generators.js ***!
  \**************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nconst { createHash , randomBytes  } = __webpack_require__(/*! crypto */ \"crypto\");\nconst base64url = __webpack_require__(/*! ./base64url */ \"(sc_server)/./node_modules/openid-client/lib/helpers/base64url.js\");\nconst random = (bytes = 32)=>base64url.encode(randomBytes(bytes));\nmodule.exports = {\n    random,\n    state: random,\n    nonce: random,\n    codeVerifier: random,\n    codeChallenge: (codeVerifier)=>base64url.encode(createHash(\"sha256\").update(codeVerifier).digest())\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvb3BlbmlkLWNsaWVudC9saWIvaGVscGVycy9nZW5lcmF0b3JzLmpzIiwibWFwcGluZ3MiOiI7QUFBQSxNQUFNLEVBQUVBLFdBQVUsRUFBRUMsWUFBVyxFQUFFLEdBQUdDLG1CQUFPQSxDQUFDO0FBRTVDLE1BQU1DLFlBQVlELG1CQUFPQSxDQUFDO0FBRTFCLE1BQU1FLFNBQVMsQ0FBQ0MsUUFBUSxFQUFFLEdBQUtGLFVBQVVHLE9BQU9MLFlBQVlJO0FBRTVERSxPQUFPQyxVQUFVO0lBQ2ZKO0lBQ0FLLE9BQU9MO0lBQ1BNLE9BQU9OO0lBQ1BPLGNBQWNQO0lBQ2RRLGVBQWUsQ0FBQ0QsZUFDZFIsVUFBVUcsT0FBT04sV0FBVyxVQUFVYSxPQUFPRixjQUFjRztBQUMvRCIsInNvdXJjZXMiOlsid2VicGFjazovL2Z1bGxzdGFjay1yb2xlLWJhc2VkLW5leHRqcy0yLy4vbm9kZV9tb2R1bGVzL29wZW5pZC1jbGllbnQvbGliL2hlbHBlcnMvZ2VuZXJhdG9ycy5qcz84MmY4Il0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IHsgY3JlYXRlSGFzaCwgcmFuZG9tQnl0ZXMgfSA9IHJlcXVpcmUoJ2NyeXB0bycpO1xuXG5jb25zdCBiYXNlNjR1cmwgPSByZXF1aXJlKCcuL2Jhc2U2NHVybCcpO1xuXG5jb25zdCByYW5kb20gPSAoYnl0ZXMgPSAzMikgPT4gYmFzZTY0dXJsLmVuY29kZShyYW5kb21CeXRlcyhieXRlcykpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgcmFuZG9tLFxuICBzdGF0ZTogcmFuZG9tLFxuICBub25jZTogcmFuZG9tLFxuICBjb2RlVmVyaWZpZXI6IHJhbmRvbSxcbiAgY29kZUNoYWxsZW5nZTogKGNvZGVWZXJpZmllcikgPT5cbiAgICBiYXNlNjR1cmwuZW5jb2RlKGNyZWF0ZUhhc2goJ3NoYTI1NicpLnVwZGF0ZShjb2RlVmVyaWZpZXIpLmRpZ2VzdCgpKSxcbn07XG4iXSwibmFtZXMiOlsiY3JlYXRlSGFzaCIsInJhbmRvbUJ5dGVzIiwicmVxdWlyZSIsImJhc2U2NHVybCIsInJhbmRvbSIsImJ5dGVzIiwiZW5jb2RlIiwibW9kdWxlIiwiZXhwb3J0cyIsInN0YXRlIiwibm9uY2UiLCJjb2RlVmVyaWZpZXIiLCJjb2RlQ2hhbGxlbmdlIiwidXBkYXRlIiwiZGlnZXN0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/openid-client/lib/helpers/generators.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/openid-client/lib/helpers/is_key_object.js":
/*!*****************************************************************!*\
  !*** ./node_modules/openid-client/lib/helpers/is_key_object.js ***!
  \*****************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nconst util = __webpack_require__(/*! util */ \"util\");\nconst crypto = __webpack_require__(/*! crypto */ \"crypto\");\nmodule.exports = util.types.isKeyObject || ((obj)=>obj && obj instanceof crypto.KeyObject);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvb3BlbmlkLWNsaWVudC9saWIvaGVscGVycy9pc19rZXlfb2JqZWN0LmpzIiwibWFwcGluZ3MiOiI7QUFBQSxNQUFNQSxPQUFPQyxtQkFBT0EsQ0FBQztBQUNyQixNQUFNQyxTQUFTRCxtQkFBT0EsQ0FBQztBQUV2QkUsT0FBT0MsVUFBVUosS0FBS0ssTUFBTUMsZUFBZ0IsRUFBQ0MsTUFBUUEsT0FBT0EsZUFBZUwsT0FBT00sU0FBUSIsInNvdXJjZXMiOlsid2VicGFjazovL2Z1bGxzdGFjay1yb2xlLWJhc2VkLW5leHRqcy0yLy4vbm9kZV9tb2R1bGVzL29wZW5pZC1jbGllbnQvbGliL2hlbHBlcnMvaXNfa2V5X29iamVjdC5qcz9hMDBiIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IHV0aWwgPSByZXF1aXJlKCd1dGlsJyk7XG5jb25zdCBjcnlwdG8gPSByZXF1aXJlKCdjcnlwdG8nKTtcblxubW9kdWxlLmV4cG9ydHMgPSB1dGlsLnR5cGVzLmlzS2V5T2JqZWN0IHx8ICgob2JqKSA9PiBvYmogJiYgb2JqIGluc3RhbmNlb2YgY3J5cHRvLktleU9iamVjdCk7XG4iXSwibmFtZXMiOlsidXRpbCIsInJlcXVpcmUiLCJjcnlwdG8iLCJtb2R1bGUiLCJleHBvcnRzIiwidHlwZXMiLCJpc0tleU9iamVjdCIsIm9iaiIsIktleU9iamVjdCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/openid-client/lib/helpers/is_key_object.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/openid-client/lib/helpers/is_plain_object.js":
/*!*******************************************************************!*\
  !*** ./node_modules/openid-client/lib/helpers/is_plain_object.js ***!
  \*******************************************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports = (a)=>!!a && a.constructor === Object;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvb3BlbmlkLWNsaWVudC9saWIvaGVscGVycy9pc19wbGFpbl9vYmplY3QuanMiLCJtYXBwaW5ncyI6IjtBQUFBQSxPQUFPQyxVQUFVLENBQUNDLElBQU0sQ0FBQyxDQUFDQSxLQUFLQSxFQUFFQyxnQkFBZ0JDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZnVsbHN0YWNrLXJvbGUtYmFzZWQtbmV4dGpzLTIvLi9ub2RlX21vZHVsZXMvb3BlbmlkLWNsaWVudC9saWIvaGVscGVycy9pc19wbGFpbl9vYmplY3QuanM/ZTNlOCJdLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IChhKSA9PiAhIWEgJiYgYS5jb25zdHJ1Y3RvciA9PT0gT2JqZWN0O1xuIl0sIm5hbWVzIjpbIm1vZHVsZSIsImV4cG9ydHMiLCJhIiwiY29uc3RydWN0b3IiLCJPYmplY3QiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/openid-client/lib/helpers/is_plain_object.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/openid-client/lib/helpers/issuer.js":
/*!**********************************************************!*\
  !*** ./node_modules/openid-client/lib/helpers/issuer.js ***!
  \**********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nconst objectHash = __webpack_require__(/*! object-hash */ \"(sc_server)/./node_modules/openid-client/node_modules/object-hash/index.js\");\nconst LRU = __webpack_require__(/*! lru-cache */ \"(sc_server)/./node_modules/lru-cache/index.js\");\nconst { RPError  } = __webpack_require__(/*! ../errors */ \"(sc_server)/./node_modules/openid-client/lib/errors.js\");\nconst { assertIssuerConfiguration  } = __webpack_require__(/*! ./assert */ \"(sc_server)/./node_modules/openid-client/lib/helpers/assert.js\");\nconst KeyStore = __webpack_require__(/*! ./keystore */ \"(sc_server)/./node_modules/openid-client/lib/helpers/keystore.js\");\nconst { keystores  } = __webpack_require__(/*! ./weak_cache */ \"(sc_server)/./node_modules/openid-client/lib/helpers/weak_cache.js\");\nconst processResponse = __webpack_require__(/*! ./process_response */ \"(sc_server)/./node_modules/openid-client/lib/helpers/process_response.js\");\nconst request = __webpack_require__(/*! ./request */ \"(sc_server)/./node_modules/openid-client/lib/helpers/request.js\");\nconst inFlight = new WeakMap();\nconst caches = new WeakMap();\nconst lrus = (ctx)=>{\n    if (!caches.has(ctx)) {\n        caches.set(ctx, new LRU({\n            max: 100\n        }));\n    }\n    return caches.get(ctx);\n};\nasync function getKeyStore(reload = false) {\n    assertIssuerConfiguration(this, \"jwks_uri\");\n    const keystore = keystores.get(this);\n    const cache = lrus(this);\n    if (reload || !keystore) {\n        if (inFlight.has(this)) {\n            return inFlight.get(this);\n        }\n        cache.reset();\n        inFlight.set(this, (async ()=>{\n            const response = await request.call(this, {\n                method: \"GET\",\n                responseType: \"json\",\n                url: this.jwks_uri,\n                headers: {\n                    Accept: \"application/json, application/jwk-set+json\"\n                }\n            }).finally(()=>{\n                inFlight.delete(this);\n            });\n            const jwks = processResponse(response);\n            const joseKeyStore = KeyStore.fromJWKS(jwks, {\n                onlyPublic: true\n            });\n            cache.set(\"throttle\", true, 60 * 1000);\n            keystores.set(this, joseKeyStore);\n            return joseKeyStore;\n        })());\n        return inFlight.get(this);\n    }\n    return keystore;\n}\nasync function queryKeyStore({ kid , kty , alg , use  }, { allowMulti =false  } = {}) {\n    const cache = lrus(this);\n    const def = {\n        kid,\n        kty,\n        alg,\n        use\n    };\n    const defHash = objectHash(def, {\n        algorithm: \"sha256\",\n        ignoreUnknown: true,\n        unorderedArrays: true,\n        unorderedSets: true\n    });\n    // refresh keystore on every unknown key but also only upto once every minute\n    const freshJwksUri = cache.get(defHash) || cache.get(\"throttle\");\n    const keystore = await getKeyStore.call(this, !freshJwksUri);\n    const keys = keystore.all(def);\n    delete def.use;\n    if (keys.length === 0) {\n        throw new RPError({\n            printf: [\n                \"no valid key found in issuer's jwks_uri for key parameters %j\",\n                def\n            ],\n            jwks: keystore\n        });\n    }\n    if (!allowMulti && keys.length > 1 && !kid) {\n        throw new RPError({\n            printf: [\n                \"multiple matching keys found in issuer's jwks_uri for key parameters %j, kid must be provided in this case\",\n                def\n            ],\n            jwks: keystore\n        });\n    }\n    cache.set(defHash, true);\n    return keys;\n}\nmodule.exports.queryKeyStore = queryKeyStore;\nmodule.exports.keystore = getKeyStore;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvb3BlbmlkLWNsaWVudC9saWIvaGVscGVycy9pc3N1ZXIuanMiLCJtYXBwaW5ncyI6IjtBQUFBLE1BQU1BLGFBQWFDLG1CQUFPQSxDQUFDO0FBQzNCLE1BQU1DLE1BQU1ELG1CQUFPQSxDQUFDO0FBRXBCLE1BQU0sRUFBRUUsUUFBTyxFQUFFLEdBQUdGLG1CQUFPQSxDQUFDO0FBRTVCLE1BQU0sRUFBRUcsMEJBQXlCLEVBQUUsR0FBR0gsbUJBQU9BLENBQUM7QUFDOUMsTUFBTUksV0FBV0osbUJBQU9BLENBQUM7QUFDekIsTUFBTSxFQUFFSyxVQUFTLEVBQUUsR0FBR0wsbUJBQU9BLENBQUM7QUFDOUIsTUFBTU0sa0JBQWtCTixtQkFBT0EsQ0FBQztBQUNoQyxNQUFNTyxVQUFVUCxtQkFBT0EsQ0FBQztBQUV4QixNQUFNUSxXQUFXLElBQUlDO0FBQ3JCLE1BQU1DLFNBQVMsSUFBSUQ7QUFDbkIsTUFBTUUsT0FBTyxDQUFDQztJQUNaLElBQUksQ0FBQ0YsT0FBT0csSUFBSUQsTUFBTTtRQUNwQkYsT0FBT0ksSUFBSUYsS0FBSyxJQUFJWCxJQUFJO1lBQUVjLEtBQUs7UUFBSTtJQUNyQztJQUNBLE9BQU9MLE9BQU9NLElBQUlKO0FBQ3BCO0FBRUEsZUFBZUssWUFBWUMsU0FBUyxLQUFLO0lBQ3ZDZiwwQkFBMEIsSUFBSSxFQUFFO0lBRWhDLE1BQU1nQixXQUFXZCxVQUFVVyxJQUFJLElBQUk7SUFDbkMsTUFBTUksUUFBUVQsS0FBSyxJQUFJO0lBRXZCLElBQUlPLFVBQVUsQ0FBQ0MsVUFBVTtRQUN2QixJQUFJWCxTQUFTSyxJQUFJLElBQUksR0FBRztZQUN0QixPQUFPTCxTQUFTUSxJQUFJLElBQUk7UUFDMUI7UUFDQUksTUFBTUM7UUFDTmIsU0FBU00sSUFDUCxJQUFJLEVBQ0osQ0FBQztZQUNDLE1BQU1RLFdBQVcsTUFBTWYsUUFDcEJnQixLQUFLLElBQUksRUFBRTtnQkFDVkMsUUFBUTtnQkFDUkMsY0FBYztnQkFDZEMsS0FBSyxJQUFJLENBQUNDO2dCQUNWQyxTQUFTO29CQUNQQyxRQUFRO2dCQUNWO1lBQ0YsR0FDQ0MsUUFBUTtnQkFDUHRCLFNBQVN1QixPQUFPLElBQUk7WUFDdEI7WUFDRixNQUFNQyxPQUFPMUIsZ0JBQWdCZ0I7WUFFN0IsTUFBTVcsZUFBZTdCLFNBQVM4QixTQUFTRixNQUFNO2dCQUFFRyxZQUFZO1lBQUs7WUFDaEVmLE1BQU1OLElBQUksWUFBWSxNQUFNLEtBQUs7WUFDakNULFVBQVVTLElBQUksSUFBSSxFQUFFbUI7WUFFcEIsT0FBT0E7UUFDVDtRQUdGLE9BQU96QixTQUFTUSxJQUFJLElBQUk7SUFDMUI7SUFFQSxPQUFPRztBQUNUO0FBRUEsZUFBZWlCLGNBQWMsRUFBRUMsSUFBRyxFQUFFQyxJQUFHLEVBQUVDLElBQUcsRUFBRUMsSUFBRyxFQUFFLEVBQUUsRUFBRUMsWUFBYSxNQUFLLEVBQUUsR0FBRyxDQUFDLENBQUM7SUFDOUUsTUFBTXJCLFFBQVFULEtBQUssSUFBSTtJQUV2QixNQUFNK0IsTUFBTTtRQUNWTDtRQUNBQztRQUNBQztRQUNBQztJQUNGO0lBRUEsTUFBTUcsVUFBVTVDLFdBQVcyQyxLQUFLO1FBQzlCRSxXQUFXO1FBQ1hDLGVBQWU7UUFDZkMsaUJBQWlCO1FBQ2pCQyxlQUFlO0lBQ2pCO0lBRUEsNkVBQTZFO0lBQzdFLE1BQU1DLGVBQWU1QixNQUFNSixJQUFJMkIsWUFBWXZCLE1BQU1KLElBQUk7SUFFckQsTUFBTUcsV0FBVyxNQUFNRixZQUFZTSxLQUFLLElBQUksRUFBRSxDQUFDeUI7SUFDL0MsTUFBTUMsT0FBTzlCLFNBQVMrQixJQUFJUjtJQUUxQixPQUFPQSxJQUFJRjtJQUNYLElBQUlTLEtBQUtFLFdBQVcsR0FBRztRQUNyQixNQUFNLElBQUlqRCxRQUFRO1lBQ2hCa0QsUUFBUTtnQkFBQztnQkFBaUVWO2FBQUk7WUFDOUVWLE1BQU1iO1FBQ1I7SUFDRjtJQUVBLElBQUksQ0FBQ3NCLGNBQWNRLEtBQUtFLFNBQVMsS0FBSyxDQUFDZCxLQUFLO1FBQzFDLE1BQU0sSUFBSW5DLFFBQVE7WUFDaEJrRCxRQUFRO2dCQUNOO2dCQUNBVjthQUNEO1lBQ0RWLE1BQU1iO1FBQ1I7SUFDRjtJQUVBQyxNQUFNTixJQUFJNkIsU0FBUztJQUVuQixPQUFPTTtBQUNUO0FBRUFJLDRCQUE0QmpCLEdBQUdBO0FBQy9CaUIsdUJBQXVCbEMsR0FBR0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mdWxsc3RhY2stcm9sZS1iYXNlZC1uZXh0anMtMi8uL25vZGVfbW9kdWxlcy9vcGVuaWQtY2xpZW50L2xpYi9oZWxwZXJzL2lzc3Vlci5qcz80YTcyIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IG9iamVjdEhhc2ggPSByZXF1aXJlKCdvYmplY3QtaGFzaCcpO1xuY29uc3QgTFJVID0gcmVxdWlyZSgnbHJ1LWNhY2hlJyk7XG5cbmNvbnN0IHsgUlBFcnJvciB9ID0gcmVxdWlyZSgnLi4vZXJyb3JzJyk7XG5cbmNvbnN0IHsgYXNzZXJ0SXNzdWVyQ29uZmlndXJhdGlvbiB9ID0gcmVxdWlyZSgnLi9hc3NlcnQnKTtcbmNvbnN0IEtleVN0b3JlID0gcmVxdWlyZSgnLi9rZXlzdG9yZScpO1xuY29uc3QgeyBrZXlzdG9yZXMgfSA9IHJlcXVpcmUoJy4vd2Vha19jYWNoZScpO1xuY29uc3QgcHJvY2Vzc1Jlc3BvbnNlID0gcmVxdWlyZSgnLi9wcm9jZXNzX3Jlc3BvbnNlJyk7XG5jb25zdCByZXF1ZXN0ID0gcmVxdWlyZSgnLi9yZXF1ZXN0Jyk7XG5cbmNvbnN0IGluRmxpZ2h0ID0gbmV3IFdlYWtNYXAoKTtcbmNvbnN0IGNhY2hlcyA9IG5ldyBXZWFrTWFwKCk7XG5jb25zdCBscnVzID0gKGN0eCkgPT4ge1xuICBpZiAoIWNhY2hlcy5oYXMoY3R4KSkge1xuICAgIGNhY2hlcy5zZXQoY3R4LCBuZXcgTFJVKHsgbWF4OiAxMDAgfSkpO1xuICB9XG4gIHJldHVybiBjYWNoZXMuZ2V0KGN0eCk7XG59O1xuXG5hc3luYyBmdW5jdGlvbiBnZXRLZXlTdG9yZShyZWxvYWQgPSBmYWxzZSkge1xuICBhc3NlcnRJc3N1ZXJDb25maWd1cmF0aW9uKHRoaXMsICdqd2tzX3VyaScpO1xuXG4gIGNvbnN0IGtleXN0b3JlID0ga2V5c3RvcmVzLmdldCh0aGlzKTtcbiAgY29uc3QgY2FjaGUgPSBscnVzKHRoaXMpO1xuXG4gIGlmIChyZWxvYWQgfHwgIWtleXN0b3JlKSB7XG4gICAgaWYgKGluRmxpZ2h0Lmhhcyh0aGlzKSkge1xuICAgICAgcmV0dXJuIGluRmxpZ2h0LmdldCh0aGlzKTtcbiAgICB9XG4gICAgY2FjaGUucmVzZXQoKTtcbiAgICBpbkZsaWdodC5zZXQoXG4gICAgICB0aGlzLFxuICAgICAgKGFzeW5jICgpID0+IHtcbiAgICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCByZXF1ZXN0XG4gICAgICAgICAgLmNhbGwodGhpcywge1xuICAgICAgICAgICAgbWV0aG9kOiAnR0VUJyxcbiAgICAgICAgICAgIHJlc3BvbnNlVHlwZTogJ2pzb24nLFxuICAgICAgICAgICAgdXJsOiB0aGlzLmp3a3NfdXJpLFxuICAgICAgICAgICAgaGVhZGVyczoge1xuICAgICAgICAgICAgICBBY2NlcHQ6ICdhcHBsaWNhdGlvbi9qc29uLCBhcHBsaWNhdGlvbi9qd2stc2V0K2pzb24nLFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICB9KVxuICAgICAgICAgIC5maW5hbGx5KCgpID0+IHtcbiAgICAgICAgICAgIGluRmxpZ2h0LmRlbGV0ZSh0aGlzKTtcbiAgICAgICAgICB9KTtcbiAgICAgICAgY29uc3QgandrcyA9IHByb2Nlc3NSZXNwb25zZShyZXNwb25zZSk7XG5cbiAgICAgICAgY29uc3Qgam9zZUtleVN0b3JlID0gS2V5U3RvcmUuZnJvbUpXS1MoandrcywgeyBvbmx5UHVibGljOiB0cnVlIH0pO1xuICAgICAgICBjYWNoZS5zZXQoJ3Rocm90dGxlJywgdHJ1ZSwgNjAgKiAxMDAwKTtcbiAgICAgICAga2V5c3RvcmVzLnNldCh0aGlzLCBqb3NlS2V5U3RvcmUpO1xuXG4gICAgICAgIHJldHVybiBqb3NlS2V5U3RvcmU7XG4gICAgICB9KSgpLFxuICAgICk7XG5cbiAgICByZXR1cm4gaW5GbGlnaHQuZ2V0KHRoaXMpO1xuICB9XG5cbiAgcmV0dXJuIGtleXN0b3JlO1xufVxuXG5hc3luYyBmdW5jdGlvbiBxdWVyeUtleVN0b3JlKHsga2lkLCBrdHksIGFsZywgdXNlIH0sIHsgYWxsb3dNdWx0aSA9IGZhbHNlIH0gPSB7fSkge1xuICBjb25zdCBjYWNoZSA9IGxydXModGhpcyk7XG5cbiAgY29uc3QgZGVmID0ge1xuICAgIGtpZCxcbiAgICBrdHksXG4gICAgYWxnLFxuICAgIHVzZSxcbiAgfTtcblxuICBjb25zdCBkZWZIYXNoID0gb2JqZWN0SGFzaChkZWYsIHtcbiAgICBhbGdvcml0aG06ICdzaGEyNTYnLFxuICAgIGlnbm9yZVVua25vd246IHRydWUsXG4gICAgdW5vcmRlcmVkQXJyYXlzOiB0cnVlLFxuICAgIHVub3JkZXJlZFNldHM6IHRydWUsXG4gIH0pO1xuXG4gIC8vIHJlZnJlc2gga2V5c3RvcmUgb24gZXZlcnkgdW5rbm93biBrZXkgYnV0IGFsc28gb25seSB1cHRvIG9uY2UgZXZlcnkgbWludXRlXG4gIGNvbnN0IGZyZXNoSndrc1VyaSA9IGNhY2hlLmdldChkZWZIYXNoKSB8fCBjYWNoZS5nZXQoJ3Rocm90dGxlJyk7XG5cbiAgY29uc3Qga2V5c3RvcmUgPSBhd2FpdCBnZXRLZXlTdG9yZS5jYWxsKHRoaXMsICFmcmVzaEp3a3NVcmkpO1xuICBjb25zdCBrZXlzID0ga2V5c3RvcmUuYWxsKGRlZik7XG5cbiAgZGVsZXRlIGRlZi51c2U7XG4gIGlmIChrZXlzLmxlbmd0aCA9PT0gMCkge1xuICAgIHRocm93IG5ldyBSUEVycm9yKHtcbiAgICAgIHByaW50ZjogW1wibm8gdmFsaWQga2V5IGZvdW5kIGluIGlzc3VlcidzIGp3a3NfdXJpIGZvciBrZXkgcGFyYW1ldGVycyAlalwiLCBkZWZdLFxuICAgICAgandrczoga2V5c3RvcmUsXG4gICAgfSk7XG4gIH1cblxuICBpZiAoIWFsbG93TXVsdGkgJiYga2V5cy5sZW5ndGggPiAxICYmICFraWQpIHtcbiAgICB0aHJvdyBuZXcgUlBFcnJvcih7XG4gICAgICBwcmludGY6IFtcbiAgICAgICAgXCJtdWx0aXBsZSBtYXRjaGluZyBrZXlzIGZvdW5kIGluIGlzc3VlcidzIGp3a3NfdXJpIGZvciBrZXkgcGFyYW1ldGVycyAlaiwga2lkIG11c3QgYmUgcHJvdmlkZWQgaW4gdGhpcyBjYXNlXCIsXG4gICAgICAgIGRlZixcbiAgICAgIF0sXG4gICAgICBqd2tzOiBrZXlzdG9yZSxcbiAgICB9KTtcbiAgfVxuXG4gIGNhY2hlLnNldChkZWZIYXNoLCB0cnVlKTtcblxuICByZXR1cm4ga2V5cztcbn1cblxubW9kdWxlLmV4cG9ydHMucXVlcnlLZXlTdG9yZSA9IHF1ZXJ5S2V5U3RvcmU7XG5tb2R1bGUuZXhwb3J0cy5rZXlzdG9yZSA9IGdldEtleVN0b3JlO1xuIl0sIm5hbWVzIjpbIm9iamVjdEhhc2giLCJyZXF1aXJlIiwiTFJVIiwiUlBFcnJvciIsImFzc2VydElzc3VlckNvbmZpZ3VyYXRpb24iLCJLZXlTdG9yZSIsImtleXN0b3JlcyIsInByb2Nlc3NSZXNwb25zZSIsInJlcXVlc3QiLCJpbkZsaWdodCIsIldlYWtNYXAiLCJjYWNoZXMiLCJscnVzIiwiY3R4IiwiaGFzIiwic2V0IiwibWF4IiwiZ2V0IiwiZ2V0S2V5U3RvcmUiLCJyZWxvYWQiLCJrZXlzdG9yZSIsImNhY2hlIiwicmVzZXQiLCJyZXNwb25zZSIsImNhbGwiLCJtZXRob2QiLCJyZXNwb25zZVR5cGUiLCJ1cmwiLCJqd2tzX3VyaSIsImhlYWRlcnMiLCJBY2NlcHQiLCJmaW5hbGx5IiwiZGVsZXRlIiwiandrcyIsImpvc2VLZXlTdG9yZSIsImZyb21KV0tTIiwib25seVB1YmxpYyIsInF1ZXJ5S2V5U3RvcmUiLCJraWQiLCJrdHkiLCJhbGciLCJ1c2UiLCJhbGxvd011bHRpIiwiZGVmIiwiZGVmSGFzaCIsImFsZ29yaXRobSIsImlnbm9yZVVua25vd24iLCJ1bm9yZGVyZWRBcnJheXMiLCJ1bm9yZGVyZWRTZXRzIiwiZnJlc2hKd2tzVXJpIiwia2V5cyIsImFsbCIsImxlbmd0aCIsInByaW50ZiIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/openid-client/lib/helpers/issuer.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/openid-client/lib/helpers/keystore.js":
/*!************************************************************!*\
  !*** ./node_modules/openid-client/lib/helpers/keystore.js ***!
  \************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nconst jose = __webpack_require__(/*! jose */ \"(sc_server)/./node_modules/jose/dist/node/cjs/index.js\");\nconst clone = __webpack_require__(/*! ./deep_clone */ \"(sc_server)/./node_modules/openid-client/lib/helpers/deep_clone.js\");\nconst isPlainObject = __webpack_require__(/*! ./is_plain_object */ \"(sc_server)/./node_modules/openid-client/lib/helpers/is_plain_object.js\");\nconst isKeyObject = __webpack_require__(/*! ./is_key_object */ \"(sc_server)/./node_modules/openid-client/lib/helpers/is_key_object.js\");\nconst internal = Symbol();\nfunction fauxAlg(kty) {\n    switch(kty){\n        case \"RSA\":\n            return \"RSA-OAEP\";\n        case \"EC\":\n            return \"ECDH-ES\";\n        case \"OKP\":\n            return \"ECDH-ES\";\n        case \"oct\":\n            return \"HS256\";\n        default:\n            return undefined;\n    }\n}\nconst keyscore = (key, { alg , use  })=>{\n    let score = 0;\n    if (alg && key.alg) {\n        score++;\n    }\n    if (use && key.use) {\n        score++;\n    }\n    return score;\n};\nfunction getKtyFromAlg(alg) {\n    switch(typeof alg === \"string\" && alg.slice(0, 2)){\n        case \"RS\":\n        case \"PS\":\n            return \"RSA\";\n        case \"ES\":\n            return \"EC\";\n        case \"Ed\":\n            return \"OKP\";\n        default:\n            return undefined;\n    }\n}\nfunction getAlgorithms(use, alg, kty, crv) {\n    // Ed25519, Ed448, and secp256k1 always have \"alg\"\n    // OKP always has use\n    if (alg) {\n        return new Set([\n            alg\n        ]);\n    }\n    switch(kty){\n        case \"EC\":\n            {\n                let algs = [];\n                if (use === \"enc\" || use === undefined) {\n                    algs = algs.concat([\n                        \"ECDH-ES\",\n                        \"ECDH-ES+A128KW\",\n                        \"ECDH-ES+A192KW\",\n                        \"ECDH-ES+A256KW\"\n                    ]);\n                }\n                if (use === \"sig\" || use === undefined) {\n                    algs = algs.concat([\n                        `ES${crv.slice(-3)}`.replace(\"21\", \"12\")\n                    ]);\n                }\n                return new Set(algs);\n            }\n        case \"OKP\":\n            {\n                return new Set([\n                    \"ECDH-ES\",\n                    \"ECDH-ES+A128KW\",\n                    \"ECDH-ES+A192KW\",\n                    \"ECDH-ES+A256KW\"\n                ]);\n            }\n        case \"RSA\":\n            {\n                let algs = [];\n                if (use === \"enc\" || use === undefined) {\n                    algs = algs.concat([\n                        \"RSA-OAEP\",\n                        \"RSA-OAEP-256\",\n                        \"RSA-OAEP-384\",\n                        \"RSA-OAEP-512\",\n                        \"RSA1_5\"\n                    ]);\n                }\n                if (use === \"sig\" || use === undefined) {\n                    algs = algs.concat([\n                        \"PS256\",\n                        \"PS384\",\n                        \"PS512\",\n                        \"RS256\",\n                        \"RS384\",\n                        \"RS512\"\n                    ]);\n                }\n                return new Set(algs);\n            }\n        default:\n            throw new Error(\"unreachable\");\n    }\n}\nmodule.exports = class KeyStore {\n    #keys;\n    constructor(i, keys){\n        if (i !== internal) throw new Error(\"invalid constructor call\");\n        this.#keys = keys;\n    }\n    toJWKS() {\n        return {\n            keys: this.map(({ jwk: { d , p , q , dp , dq , qi , ...jwk }  })=>jwk)\n        };\n    }\n    all({ alg , kid , use  } = {}) {\n        if (!use || !alg) {\n            throw new Error();\n        }\n        const kty = getKtyFromAlg(alg);\n        const search = {\n            alg,\n            use\n        };\n        return this.filter((key)=>{\n            let candidate = true;\n            if (candidate && kty !== undefined && key.jwk.kty !== kty) {\n                candidate = false;\n            }\n            if (candidate && kid !== undefined && key.jwk.kid !== kid) {\n                candidate = false;\n            }\n            if (candidate && use !== undefined && key.jwk.use !== undefined && key.jwk.use !== use) {\n                candidate = false;\n            }\n            if (candidate && key.jwk.alg && key.jwk.alg !== alg) {\n                candidate = false;\n            } else if (!key.algorithms.has(alg)) {\n                candidate = false;\n            }\n            return candidate;\n        }).sort((first, second)=>keyscore(second, search) - keyscore(first, search));\n    }\n    get(...args) {\n        return this.all(...args)[0];\n    }\n    static async fromJWKS(jwks, { onlyPublic =false , onlyPrivate =false  } = {}) {\n        if (!isPlainObject(jwks) || !Array.isArray(jwks.keys) || jwks.keys.some((k)=>!isPlainObject(k) || !(\"kty\" in k))) {\n            throw new TypeError(\"jwks must be a JSON Web Key Set formatted object\");\n        }\n        const keys = [];\n        for (let jwk of jwks.keys){\n            jwk = clone(jwk);\n            const { kty , kid , crv  } = jwk;\n            let { alg , use  } = jwk;\n            if (typeof kty !== \"string\" || !kty) {\n                continue;\n            }\n            if (use !== undefined && use !== \"sig\" && use !== \"enc\") {\n                continue;\n            }\n            if (typeof alg !== \"string\" && alg !== undefined) {\n                continue;\n            }\n            if (typeof kid !== \"string\" && kid !== undefined) {\n                continue;\n            }\n            if (kty === \"EC\" && use === \"sig\") {\n                switch(crv){\n                    case \"P-256\":\n                        alg = \"ES256\";\n                        break;\n                    case \"P-384\":\n                        alg = \"ES384\";\n                        break;\n                    case \"P-521\":\n                        alg = \"ES512\";\n                        break;\n                    default:\n                        break;\n                }\n            }\n            if (crv === \"secp256k1\") {\n                use = \"sig\";\n                alg = \"ES256K\";\n            }\n            if (kty === \"OKP\") {\n                switch(crv){\n                    case \"Ed25519\":\n                    case \"Ed448\":\n                        use = \"sig\";\n                        alg = \"EdDSA\";\n                        break;\n                    case \"X25519\":\n                    case \"X448\":\n                        use = \"enc\";\n                        break;\n                    default:\n                        break;\n                }\n            }\n            if (alg && !use) {\n                switch(true){\n                    case alg.startsWith(\"ECDH\"):\n                        use = \"enc\";\n                        break;\n                    case alg.startsWith(\"RSA\"):\n                        use = \"enc\";\n                        break;\n                    default:\n                        break;\n                }\n            }\n            const keyObject = await jose.importJWK(jwk, alg || fauxAlg(jwk.kty)).catch(()=>{});\n            if (!keyObject) continue;\n            if (keyObject instanceof Uint8Array || keyObject.type === \"secret\") {\n                if (onlyPrivate) {\n                    throw new Error(\"jwks must only contain private keys\");\n                }\n                continue;\n            }\n            if (!isKeyObject(keyObject)) {\n                throw new Error(\"what?!\");\n            }\n            if (onlyPrivate && keyObject.type !== \"private\") {\n                throw new Error(\"jwks must only contain private keys\");\n            }\n            if (onlyPublic && keyObject.type !== \"public\") {\n                continue;\n            }\n            if (kty === \"RSA\" && keyObject.asymmetricKeySize < 2048) {\n                continue;\n            }\n            keys.push({\n                jwk: {\n                    ...jwk,\n                    alg,\n                    use\n                },\n                keyObject,\n                get algorithms () {\n                    Object.defineProperty(this, \"algorithms\", {\n                        value: getAlgorithms(this.jwk.use, this.jwk.alg, this.jwk.kty, this.jwk.crv),\n                        enumerable: true,\n                        configurable: false\n                    });\n                    return this.algorithms;\n                }\n            });\n        }\n        return new this(internal, keys);\n    }\n    filter(...args) {\n        return this.#keys.filter(...args);\n    }\n    find(...args) {\n        return this.#keys.find(...args);\n    }\n    every(...args) {\n        return this.#keys.every(...args);\n    }\n    some(...args) {\n        return this.#keys.some(...args);\n    }\n    map(...args) {\n        return this.#keys.map(...args);\n    }\n    forEach(...args) {\n        return this.#keys.forEach(...args);\n    }\n    reduce(...args) {\n        return this.#keys.reduce(...args);\n    }\n    sort(...args) {\n        return this.#keys.sort(...args);\n    }\n    *[Symbol.iterator]() {\n        for (const key of this.#keys){\n            yield key;\n        }\n    }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/openid-client/lib/helpers/keystore.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/openid-client/lib/helpers/merge.js":
/*!*********************************************************!*\
  !*** ./node_modules/openid-client/lib/helpers/merge.js ***!
  \*********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nconst isPlainObject = __webpack_require__(/*! ./is_plain_object */ \"(sc_server)/./node_modules/openid-client/lib/helpers/is_plain_object.js\");\nfunction merge(target, ...sources) {\n    for (const source of sources){\n        if (!isPlainObject(source)) {\n            continue;\n        }\n        for (const [key, value] of Object.entries(source)){\n            /* istanbul ignore if */ if (key === \"__proto__\" || key === \"constructor\") {\n                continue;\n            }\n            if (isPlainObject(target[key]) && isPlainObject(value)) {\n                target[key] = merge(target[key], value);\n            } else if (typeof value !== \"undefined\") {\n                target[key] = value;\n            }\n        }\n    }\n    return target;\n}\nmodule.exports = merge;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvb3BlbmlkLWNsaWVudC9saWIvaGVscGVycy9tZXJnZS5qcyIsIm1hcHBpbmdzIjoiO0FBQUEsTUFBTUEsZ0JBQWdCQyxtQkFBT0EsQ0FBQztBQUU5QixTQUFTQyxNQUFNQyxNQUFNLEVBQUUsR0FBR0MsT0FBTztJQUMvQixLQUFLLE1BQU1DLFVBQVVELFFBQVM7UUFDNUIsSUFBSSxDQUFDSixjQUFjSyxTQUFTO1lBQzFCO1FBQ0Y7UUFDQSxLQUFLLE1BQU0sQ0FBQ0MsS0FBS0MsTUFBTSxJQUFJQyxPQUFPQyxRQUFRSixRQUFTO1lBQ2pELHNCQUFzQixHQUN0QixJQUFJQyxRQUFRLGVBQWVBLFFBQVEsZUFBZTtnQkFDaEQ7WUFDRjtZQUNBLElBQUlOLGNBQWNHLE1BQU0sQ0FBQ0csSUFBSSxLQUFLTixjQUFjTyxRQUFRO2dCQUN0REosTUFBTSxDQUFDRyxJQUFJLEdBQUdKLE1BQU1DLE1BQU0sQ0FBQ0csSUFBSSxFQUFFQztZQUNuQyxPQUFPLElBQUksT0FBT0EsVUFBVSxhQUFhO2dCQUN2Q0osTUFBTSxDQUFDRyxJQUFJLEdBQUdDO1lBQ2hCO1FBQ0Y7SUFDRjtJQUVBLE9BQU9KO0FBQ1Q7QUFFQU8sT0FBT0MsVUFBVVQiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mdWxsc3RhY2stcm9sZS1iYXNlZC1uZXh0anMtMi8uL25vZGVfbW9kdWxlcy9vcGVuaWQtY2xpZW50L2xpYi9oZWxwZXJzL21lcmdlLmpzP2E1OGYiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgaXNQbGFpbk9iamVjdCA9IHJlcXVpcmUoJy4vaXNfcGxhaW5fb2JqZWN0Jyk7XG5cbmZ1bmN0aW9uIG1lcmdlKHRhcmdldCwgLi4uc291cmNlcykge1xuICBmb3IgKGNvbnN0IHNvdXJjZSBvZiBzb3VyY2VzKSB7XG4gICAgaWYgKCFpc1BsYWluT2JqZWN0KHNvdXJjZSkpIHtcbiAgICAgIGNvbnRpbnVlO1xuICAgIH1cbiAgICBmb3IgKGNvbnN0IFtrZXksIHZhbHVlXSBvZiBPYmplY3QuZW50cmllcyhzb3VyY2UpKSB7XG4gICAgICAvKiBpc3RhbmJ1bCBpZ25vcmUgaWYgKi9cbiAgICAgIGlmIChrZXkgPT09ICdfX3Byb3RvX18nIHx8IGtleSA9PT0gJ2NvbnN0cnVjdG9yJykge1xuICAgICAgICBjb250aW51ZTtcbiAgICAgIH1cbiAgICAgIGlmIChpc1BsYWluT2JqZWN0KHRhcmdldFtrZXldKSAmJiBpc1BsYWluT2JqZWN0KHZhbHVlKSkge1xuICAgICAgICB0YXJnZXRba2V5XSA9IG1lcmdlKHRhcmdldFtrZXldLCB2YWx1ZSk7XG4gICAgICB9IGVsc2UgaWYgKHR5cGVvZiB2YWx1ZSAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgICAgdGFyZ2V0W2tleV0gPSB2YWx1ZTtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICByZXR1cm4gdGFyZ2V0O1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IG1lcmdlO1xuIl0sIm5hbWVzIjpbImlzUGxhaW5PYmplY3QiLCJyZXF1aXJlIiwibWVyZ2UiLCJ0YXJnZXQiLCJzb3VyY2VzIiwic291cmNlIiwia2V5IiwidmFsdWUiLCJPYmplY3QiLCJlbnRyaWVzIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/openid-client/lib/helpers/merge.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/openid-client/lib/helpers/pick.js":
/*!********************************************************!*\
  !*** ./node_modules/openid-client/lib/helpers/pick.js ***!
  \********************************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports = function pick(object, ...paths) {\n    const obj = {};\n    for (const path of paths){\n        if (object[path] !== undefined) {\n            obj[path] = object[path];\n        }\n    }\n    return obj;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvb3BlbmlkLWNsaWVudC9saWIvaGVscGVycy9waWNrLmpzIiwibWFwcGluZ3MiOiI7QUFBQUEsT0FBT0MsVUFBVSxTQUFTQyxLQUFLQyxNQUFNLEVBQUUsR0FBR0MsS0FBSztJQUM3QyxNQUFNQyxNQUFNLENBQUM7SUFDYixLQUFLLE1BQU1DLFFBQVFGLE1BQU87UUFDeEIsSUFBSUQsTUFBTSxDQUFDRyxLQUFLLEtBQUtDLFdBQVc7WUFDOUJGLEdBQUcsQ0FBQ0MsS0FBSyxHQUFHSCxNQUFNLENBQUNHLEtBQUs7UUFDMUI7SUFDRjtJQUNBLE9BQU9EO0FBQ1QiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mdWxsc3RhY2stcm9sZS1iYXNlZC1uZXh0anMtMi8uL25vZGVfbW9kdWxlcy9vcGVuaWQtY2xpZW50L2xpYi9oZWxwZXJzL3BpY2suanM/Njg2NyJdLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIHBpY2sob2JqZWN0LCAuLi5wYXRocykge1xuICBjb25zdCBvYmogPSB7fTtcbiAgZm9yIChjb25zdCBwYXRoIG9mIHBhdGhzKSB7XG4gICAgaWYgKG9iamVjdFtwYXRoXSAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICBvYmpbcGF0aF0gPSBvYmplY3RbcGF0aF07XG4gICAgfVxuICB9XG4gIHJldHVybiBvYmo7XG59O1xuIl0sIm5hbWVzIjpbIm1vZHVsZSIsImV4cG9ydHMiLCJwaWNrIiwib2JqZWN0IiwicGF0aHMiLCJvYmoiLCJwYXRoIiwidW5kZWZpbmVkIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/openid-client/lib/helpers/pick.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/openid-client/lib/helpers/process_response.js":
/*!********************************************************************!*\
  !*** ./node_modules/openid-client/lib/helpers/process_response.js ***!
  \********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nconst { STATUS_CODES  } = __webpack_require__(/*! http */ \"http\");\nconst { format  } = __webpack_require__(/*! util */ \"util\");\nconst { OPError  } = __webpack_require__(/*! ../errors */ \"(sc_server)/./node_modules/openid-client/lib/errors.js\");\nconst parseWwwAuthenticate = __webpack_require__(/*! ./www_authenticate_parser */ \"(sc_server)/./node_modules/openid-client/lib/helpers/www_authenticate_parser.js\");\nconst throwAuthenticateErrors = (response)=>{\n    const params = parseWwwAuthenticate(response.headers[\"www-authenticate\"]);\n    if (params.error) {\n        throw new OPError(params, response);\n    }\n};\nconst isStandardBodyError = (response)=>{\n    let result = false;\n    try {\n        let jsonbody;\n        if (typeof response.body !== \"object\" || Buffer.isBuffer(response.body)) {\n            jsonbody = JSON.parse(response.body);\n        } else {\n            jsonbody = response.body;\n        }\n        result = typeof jsonbody.error === \"string\" && jsonbody.error.length;\n        if (result) Object.defineProperty(response, \"body\", {\n            value: jsonbody,\n            configurable: true\n        });\n    } catch (err) {}\n    return result;\n};\nfunction processResponse(response, { statusCode =200 , body =true , bearer =false  } = {}) {\n    if (response.statusCode !== statusCode) {\n        if (bearer) {\n            throwAuthenticateErrors(response);\n        }\n        if (isStandardBodyError(response)) {\n            throw new OPError(response.body, response);\n        }\n        throw new OPError({\n            error: format(\"expected %i %s, got: %i %s\", statusCode, STATUS_CODES[statusCode], response.statusCode, STATUS_CODES[response.statusCode])\n        }, response);\n    }\n    if (body && !response.body) {\n        throw new OPError({\n            error: format(\"expected %i %s with body but no body was returned\", statusCode, STATUS_CODES[statusCode])\n        }, response);\n    }\n    return response.body;\n}\nmodule.exports = processResponse;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvb3BlbmlkLWNsaWVudC9saWIvaGVscGVycy9wcm9jZXNzX3Jlc3BvbnNlLmpzIiwibWFwcGluZ3MiOiI7QUFBQSxNQUFNLEVBQUVBLGFBQVksRUFBRSxHQUFHQyxtQkFBT0EsQ0FBQztBQUNqQyxNQUFNLEVBQUVDLE9BQU0sRUFBRSxHQUFHRCxtQkFBT0EsQ0FBQztBQUUzQixNQUFNLEVBQUVFLFFBQU8sRUFBRSxHQUFHRixtQkFBT0EsQ0FBQztBQUM1QixNQUFNRyx1QkFBdUJILG1CQUFPQSxDQUFDO0FBRXJDLE1BQU1JLDBCQUEwQixDQUFDQztJQUMvQixNQUFNQyxTQUFTSCxxQkFBcUJFLFNBQVNFLE9BQU8sQ0FBQyxtQkFBbUI7SUFFeEUsSUFBSUQsT0FBT0UsT0FBTztRQUNoQixNQUFNLElBQUlOLFFBQVFJLFFBQVFEO0lBQzVCO0FBQ0Y7QUFFQSxNQUFNSSxzQkFBc0IsQ0FBQ0o7SUFDM0IsSUFBSUssU0FBUztJQUNiLElBQUk7UUFDRixJQUFJQztRQUNKLElBQUksT0FBT04sU0FBU08sU0FBUyxZQUFZQyxPQUFPQyxTQUFTVCxTQUFTTyxPQUFPO1lBQ3ZFRCxXQUFXSSxLQUFLQyxNQUFNWCxTQUFTTztRQUNqQyxPQUFPO1lBQ0xELFdBQVdOLFNBQVNPO1FBQ3RCO1FBQ0FGLFNBQVMsT0FBT0MsU0FBU0gsVUFBVSxZQUFZRyxTQUFTSCxNQUFNUztRQUM5RCxJQUFJUCxRQUFRUSxPQUFPQyxlQUFlZCxVQUFVLFFBQVE7WUFBRWUsT0FBT1Q7WUFBVVUsY0FBYztRQUFLO0lBQzVGLEVBQUUsT0FBT0MsS0FBSyxDQUFDO0lBRWYsT0FBT1o7QUFDVDtBQUVBLFNBQVNhLGdCQUFnQmxCLFFBQVEsRUFBRSxFQUFFbUIsWUFBYSxJQUFHLEVBQUVaLE1BQU8sS0FBSSxFQUFFYSxRQUFTLE1BQUssRUFBRSxHQUFHLENBQUMsQ0FBQztJQUN2RixJQUFJcEIsU0FBU21CLGVBQWVBLFlBQVk7UUFDdEMsSUFBSUMsUUFBUTtZQUNWckIsd0JBQXdCQztRQUMxQjtRQUVBLElBQUlJLG9CQUFvQkosV0FBVztZQUNqQyxNQUFNLElBQUlILFFBQVFHLFNBQVNPLE1BQU1QO1FBQ25DO1FBRUEsTUFBTSxJQUFJSCxRQUNSO1lBQ0VNLE9BQU9QLE9BQ0wsOEJBQ0F1QixZQUNBekIsWUFBWSxDQUFDeUIsV0FBVyxFQUN4Qm5CLFNBQVNtQixZQUNUekIsWUFBWSxDQUFDTSxTQUFTbUIsV0FBVztRQUVyQyxHQUNBbkI7SUFFSjtJQUVBLElBQUlPLFFBQVEsQ0FBQ1AsU0FBU08sTUFBTTtRQUMxQixNQUFNLElBQUlWLFFBQ1I7WUFDRU0sT0FBT1AsT0FDTCxxREFDQXVCLFlBQ0F6QixZQUFZLENBQUN5QixXQUFXO1FBRTVCLEdBQ0FuQjtJQUVKO0lBRUEsT0FBT0EsU0FBU087QUFDbEI7QUFFQWMsT0FBT0MsVUFBVUoiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mdWxsc3RhY2stcm9sZS1iYXNlZC1uZXh0anMtMi8uL25vZGVfbW9kdWxlcy9vcGVuaWQtY2xpZW50L2xpYi9oZWxwZXJzL3Byb2Nlc3NfcmVzcG9uc2UuanM/N2RlNyJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCB7IFNUQVRVU19DT0RFUyB9ID0gcmVxdWlyZSgnaHR0cCcpO1xuY29uc3QgeyBmb3JtYXQgfSA9IHJlcXVpcmUoJ3V0aWwnKTtcblxuY29uc3QgeyBPUEVycm9yIH0gPSByZXF1aXJlKCcuLi9lcnJvcnMnKTtcbmNvbnN0IHBhcnNlV3d3QXV0aGVudGljYXRlID0gcmVxdWlyZSgnLi93d3dfYXV0aGVudGljYXRlX3BhcnNlcicpO1xuXG5jb25zdCB0aHJvd0F1dGhlbnRpY2F0ZUVycm9ycyA9IChyZXNwb25zZSkgPT4ge1xuICBjb25zdCBwYXJhbXMgPSBwYXJzZVd3d0F1dGhlbnRpY2F0ZShyZXNwb25zZS5oZWFkZXJzWyd3d3ctYXV0aGVudGljYXRlJ10pO1xuXG4gIGlmIChwYXJhbXMuZXJyb3IpIHtcbiAgICB0aHJvdyBuZXcgT1BFcnJvcihwYXJhbXMsIHJlc3BvbnNlKTtcbiAgfVxufTtcblxuY29uc3QgaXNTdGFuZGFyZEJvZHlFcnJvciA9IChyZXNwb25zZSkgPT4ge1xuICBsZXQgcmVzdWx0ID0gZmFsc2U7XG4gIHRyeSB7XG4gICAgbGV0IGpzb25ib2R5O1xuICAgIGlmICh0eXBlb2YgcmVzcG9uc2UuYm9keSAhPT0gJ29iamVjdCcgfHwgQnVmZmVyLmlzQnVmZmVyKHJlc3BvbnNlLmJvZHkpKSB7XG4gICAgICBqc29uYm9keSA9IEpTT04ucGFyc2UocmVzcG9uc2UuYm9keSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIGpzb25ib2R5ID0gcmVzcG9uc2UuYm9keTtcbiAgICB9XG4gICAgcmVzdWx0ID0gdHlwZW9mIGpzb25ib2R5LmVycm9yID09PSAnc3RyaW5nJyAmJiBqc29uYm9keS5lcnJvci5sZW5ndGg7XG4gICAgaWYgKHJlc3VsdCkgT2JqZWN0LmRlZmluZVByb3BlcnR5KHJlc3BvbnNlLCAnYm9keScsIHsgdmFsdWU6IGpzb25ib2R5LCBjb25maWd1cmFibGU6IHRydWUgfSk7XG4gIH0gY2F0Y2ggKGVycikge31cblxuICByZXR1cm4gcmVzdWx0O1xufTtcblxuZnVuY3Rpb24gcHJvY2Vzc1Jlc3BvbnNlKHJlc3BvbnNlLCB7IHN0YXR1c0NvZGUgPSAyMDAsIGJvZHkgPSB0cnVlLCBiZWFyZXIgPSBmYWxzZSB9ID0ge30pIHtcbiAgaWYgKHJlc3BvbnNlLnN0YXR1c0NvZGUgIT09IHN0YXR1c0NvZGUpIHtcbiAgICBpZiAoYmVhcmVyKSB7XG4gICAgICB0aHJvd0F1dGhlbnRpY2F0ZUVycm9ycyhyZXNwb25zZSk7XG4gICAgfVxuXG4gICAgaWYgKGlzU3RhbmRhcmRCb2R5RXJyb3IocmVzcG9uc2UpKSB7XG4gICAgICB0aHJvdyBuZXcgT1BFcnJvcihyZXNwb25zZS5ib2R5LCByZXNwb25zZSk7XG4gICAgfVxuXG4gICAgdGhyb3cgbmV3IE9QRXJyb3IoXG4gICAgICB7XG4gICAgICAgIGVycm9yOiBmb3JtYXQoXG4gICAgICAgICAgJ2V4cGVjdGVkICVpICVzLCBnb3Q6ICVpICVzJyxcbiAgICAgICAgICBzdGF0dXNDb2RlLFxuICAgICAgICAgIFNUQVRVU19DT0RFU1tzdGF0dXNDb2RlXSxcbiAgICAgICAgICByZXNwb25zZS5zdGF0dXNDb2RlLFxuICAgICAgICAgIFNUQVRVU19DT0RFU1tyZXNwb25zZS5zdGF0dXNDb2RlXSxcbiAgICAgICAgKSxcbiAgICAgIH0sXG4gICAgICByZXNwb25zZSxcbiAgICApO1xuICB9XG5cbiAgaWYgKGJvZHkgJiYgIXJlc3BvbnNlLmJvZHkpIHtcbiAgICB0aHJvdyBuZXcgT1BFcnJvcihcbiAgICAgIHtcbiAgICAgICAgZXJyb3I6IGZvcm1hdChcbiAgICAgICAgICAnZXhwZWN0ZWQgJWkgJXMgd2l0aCBib2R5IGJ1dCBubyBib2R5IHdhcyByZXR1cm5lZCcsXG4gICAgICAgICAgc3RhdHVzQ29kZSxcbiAgICAgICAgICBTVEFUVVNfQ09ERVNbc3RhdHVzQ29kZV0sXG4gICAgICAgICksXG4gICAgICB9LFxuICAgICAgcmVzcG9uc2UsXG4gICAgKTtcbiAgfVxuXG4gIHJldHVybiByZXNwb25zZS5ib2R5O1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHByb2Nlc3NSZXNwb25zZTtcbiJdLCJuYW1lcyI6WyJTVEFUVVNfQ09ERVMiLCJyZXF1aXJlIiwiZm9ybWF0IiwiT1BFcnJvciIsInBhcnNlV3d3QXV0aGVudGljYXRlIiwidGhyb3dBdXRoZW50aWNhdGVFcnJvcnMiLCJyZXNwb25zZSIsInBhcmFtcyIsImhlYWRlcnMiLCJlcnJvciIsImlzU3RhbmRhcmRCb2R5RXJyb3IiLCJyZXN1bHQiLCJqc29uYm9keSIsImJvZHkiLCJCdWZmZXIiLCJpc0J1ZmZlciIsIkpTT04iLCJwYXJzZSIsImxlbmd0aCIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwidmFsdWUiLCJjb25maWd1cmFibGUiLCJlcnIiLCJwcm9jZXNzUmVzcG9uc2UiLCJzdGF0dXNDb2RlIiwiYmVhcmVyIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/openid-client/lib/helpers/process_response.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/openid-client/lib/helpers/request.js":
/*!***********************************************************!*\
  !*** ./node_modules/openid-client/lib/helpers/request.js ***!
  \***********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nconst assert = __webpack_require__(/*! assert */ \"assert\");\nconst querystring = __webpack_require__(/*! querystring */ \"querystring\");\nconst http = __webpack_require__(/*! http */ \"http\");\nconst https = __webpack_require__(/*! https */ \"https\");\nconst { once  } = __webpack_require__(/*! events */ \"events\");\nconst { URL  } = __webpack_require__(/*! url */ \"url\");\nconst LRU = __webpack_require__(/*! lru-cache */ \"(sc_server)/./node_modules/lru-cache/index.js\");\nconst pkg = __webpack_require__(/*! ../../package.json */ \"(sc_server)/./node_modules/openid-client/package.json\");\nconst { RPError  } = __webpack_require__(/*! ../errors */ \"(sc_server)/./node_modules/openid-client/lib/errors.js\");\nconst pick = __webpack_require__(/*! ./pick */ \"(sc_server)/./node_modules/openid-client/lib/helpers/pick.js\");\nconst { deep: defaultsDeep  } = __webpack_require__(/*! ./defaults */ \"(sc_server)/./node_modules/openid-client/lib/helpers/defaults.js\");\nconst { HTTP_OPTIONS  } = __webpack_require__(/*! ./consts */ \"(sc_server)/./node_modules/openid-client/lib/helpers/consts.js\");\nlet DEFAULT_HTTP_OPTIONS;\nconst NQCHAR = /^[\\x21\\x23-\\x5B\\x5D-\\x7E]+$/;\nconst allowed = [\n    \"agent\",\n    \"ca\",\n    \"cert\",\n    \"crl\",\n    \"headers\",\n    \"key\",\n    \"lookup\",\n    \"passphrase\",\n    \"pfx\",\n    \"timeout\"\n];\nconst setDefaults = (props, options)=>{\n    DEFAULT_HTTP_OPTIONS = defaultsDeep({}, props.length ? pick(options, ...props) : options, DEFAULT_HTTP_OPTIONS);\n};\nsetDefaults([], {\n    headers: {\n        \"User-Agent\": `${pkg.name}/${pkg.version} (${pkg.homepage})`\n    },\n    timeout: 3500\n});\nfunction send(req, body, contentType) {\n    if (contentType) {\n        req.removeHeader(\"content-type\");\n        req.setHeader(\"content-type\", contentType);\n    }\n    if (body) {\n        req.removeHeader(\"content-length\");\n        req.setHeader(\"content-length\", Buffer.byteLength(body));\n        req.write(body);\n    }\n    req.end();\n}\nconst nonces = new LRU({\n    max: 100\n});\nmodule.exports = async function request(options, { accessToken , mTLS =false , DPoP  } = {}) {\n    let url;\n    try {\n        url = new URL(options.url);\n        delete options.url;\n        assert(/^(https?:)$/.test(url.protocol));\n    } catch (err) {\n        throw new TypeError(\"only valid absolute URLs can be requested\");\n    }\n    const optsFn = this[HTTP_OPTIONS];\n    let opts = options;\n    const nonceKey = `${url.origin}${url.pathname}`;\n    if (DPoP && \"dpopProof\" in this) {\n        opts.headers = opts.headers || {};\n        opts.headers.DPoP = await this.dpopProof({\n            htu: `${url.origin}${url.pathname}`,\n            htm: options.method,\n            nonce: nonces.get(nonceKey)\n        }, DPoP, accessToken);\n    }\n    let userOptions;\n    if (optsFn) {\n        userOptions = pick(optsFn.call(this, url, defaultsDeep({}, opts, DEFAULT_HTTP_OPTIONS)), ...allowed);\n    }\n    opts = defaultsDeep({}, userOptions, opts, DEFAULT_HTTP_OPTIONS);\n    if (mTLS && !opts.pfx && !(opts.key && opts.cert)) {\n        throw new TypeError(\"mutual-TLS certificate and key not set\");\n    }\n    if (opts.searchParams) {\n        for (const [key, value] of Object.entries(opts.searchParams)){\n            url.searchParams.delete(key);\n            url.searchParams.set(key, value);\n        }\n    }\n    let responseType;\n    let form;\n    let json;\n    let body;\n    ({ form , responseType , json , body , ...opts } = opts);\n    for (const [key, value] of Object.entries(opts.headers || {})){\n        if (value === undefined) {\n            delete opts.headers[key];\n        }\n    }\n    let response;\n    const req = (url.protocol === \"https:\" ? https.request : http.request)(url.href, opts);\n    return (async ()=>{\n        if (json) {\n            send(req, JSON.stringify(json), \"application/json\");\n        } else if (form) {\n            send(req, querystring.stringify(form), \"application/x-www-form-urlencoded\");\n        } else if (body) {\n            send(req, body);\n        } else {\n            send(req);\n        }\n        [response] = await Promise.race([\n            once(req, \"response\"),\n            once(req, \"timeout\")\n        ]);\n        // timeout reached\n        if (!response) {\n            req.destroy();\n            throw new RPError(`outgoing request timed out after ${opts.timeout}ms`);\n        }\n        const parts = [];\n        for await (const part of response){\n            parts.push(part);\n        }\n        if (parts.length) {\n            switch(responseType){\n                case \"json\":\n                    {\n                        Object.defineProperty(response, \"body\", {\n                            get () {\n                                let value = Buffer.concat(parts);\n                                try {\n                                    value = JSON.parse(value);\n                                } catch (err) {\n                                    Object.defineProperty(err, \"response\", {\n                                        value: response\n                                    });\n                                    throw err;\n                                } finally{\n                                    Object.defineProperty(response, \"body\", {\n                                        value,\n                                        configurable: true\n                                    });\n                                }\n                                return value;\n                            },\n                            configurable: true\n                        });\n                        break;\n                    }\n                case undefined:\n                case \"buffer\":\n                    {\n                        Object.defineProperty(response, \"body\", {\n                            get () {\n                                const value = Buffer.concat(parts);\n                                Object.defineProperty(response, \"body\", {\n                                    value,\n                                    configurable: true\n                                });\n                                return value;\n                            },\n                            configurable: true\n                        });\n                        break;\n                    }\n                default:\n                    throw new TypeError(\"unsupported responseType request option\");\n            }\n        }\n        return response;\n    })().catch((err)=>{\n        if (response) Object.defineProperty(err, \"response\", {\n            value: response\n        });\n        throw err;\n    }).finally(()=>{\n        const dpopNonce = response && response.headers[\"dpop-nonce\"];\n        if (dpopNonce && NQCHAR.test(dpopNonce)) {\n            nonces.set(nonceKey, dpopNonce);\n        }\n    });\n};\nmodule.exports.setDefaults = setDefaults.bind(undefined, allowed);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/openid-client/lib/helpers/request.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/openid-client/lib/helpers/unix_timestamp.js":
/*!******************************************************************!*\
  !*** ./node_modules/openid-client/lib/helpers/unix_timestamp.js ***!
  \******************************************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports = ()=>Math.floor(Date.now() / 1000);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvb3BlbmlkLWNsaWVudC9saWIvaGVscGVycy91bml4X3RpbWVzdGFtcC5qcyIsIm1hcHBpbmdzIjoiO0FBQUFBLE9BQU9DLFVBQVUsSUFBTUMsS0FBS0MsTUFBTUMsS0FBS0MsUUFBUSIsInNvdXJjZXMiOlsid2VicGFjazovL2Z1bGxzdGFjay1yb2xlLWJhc2VkLW5leHRqcy0yLy4vbm9kZV9tb2R1bGVzL29wZW5pZC1jbGllbnQvbGliL2hlbHBlcnMvdW5peF90aW1lc3RhbXAuanM/NGU3ZiJdLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9ICgpID0+IE1hdGguZmxvb3IoRGF0ZS5ub3coKSAvIDEwMDApO1xuIl0sIm5hbWVzIjpbIm1vZHVsZSIsImV4cG9ydHMiLCJNYXRoIiwiZmxvb3IiLCJEYXRlIiwibm93Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/openid-client/lib/helpers/unix_timestamp.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/openid-client/lib/helpers/weak_cache.js":
/*!**************************************************************!*\
  !*** ./node_modules/openid-client/lib/helpers/weak_cache.js ***!
  \**************************************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports.keystores = new WeakMap();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvb3BlbmlkLWNsaWVudC9saWIvaGVscGVycy93ZWFrX2NhY2hlLmpzIiwibWFwcGluZ3MiOiI7QUFBQUEsd0JBQXdCRSxHQUFHLElBQUlDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZnVsbHN0YWNrLXJvbGUtYmFzZWQtbmV4dGpzLTIvLi9ub2RlX21vZHVsZXMvb3BlbmlkLWNsaWVudC9saWIvaGVscGVycy93ZWFrX2NhY2hlLmpzP2M5MzAiXSwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMua2V5c3RvcmVzID0gbmV3IFdlYWtNYXAoKTtcbiJdLCJuYW1lcyI6WyJtb2R1bGUiLCJleHBvcnRzIiwia2V5c3RvcmVzIiwiV2Vha01hcCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/openid-client/lib/helpers/weak_cache.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/openid-client/lib/helpers/webfinger_normalize.js":
/*!***********************************************************************!*\
  !*** ./node_modules/openid-client/lib/helpers/webfinger_normalize.js ***!
  \***********************************************************************/
/***/ ((module) => {

"use strict";
eval("// Credit: https://github.com/rohe/pyoidc/blob/master/src/oic/utils/webfinger.py\n// -- Normalization --\n// A string of any other type is interpreted as a URI either the form of scheme\n// \"://\" authority path-abempty [ \"?\" query ] [ \"#\" fragment ] or authority\n// path-abempty [ \"?\" query ] [ \"#\" fragment ] per RFC 3986 [RFC3986] and is\n// normalized according to the following rules:\n//\n// If the user input Identifier does not have an RFC 3986 [RFC3986] scheme\n// portion, the string is interpreted as [userinfo \"@\"] host [\":\" port]\n// path-abempty [ \"?\" query ] [ \"#\" fragment ] per RFC 3986 [RFC3986].\n// If the userinfo component is present and all of the path component, query\n// component, and port component are empty, the acct scheme is assumed. In this\n// case, the normalized URI is formed by prefixing acct: to the string as the\n// scheme. Per the 'acct' URI Scheme [I‑D.ietf‑appsawg‑acct‑uri], if there is an\n// at-sign character ('@') in the userinfo component, it needs to be\n// percent-encoded as described in RFC 3986 [RFC3986].\n// For all other inputs without a scheme portion, the https scheme is assumed,\n// and the normalized URI is formed by prefixing https:// to the string as the\n// scheme.\n// If the resulting URI contains a fragment portion, it MUST be stripped off\n// together with the fragment delimiter character \"#\".\n// The WebFinger [I‑D.ietf‑appsawg‑webfinger] Resource in this case is the\n// resulting URI, and the WebFinger Host is the authority component.\n//\n// Note: Since the definition of authority in RFC 3986 [RFC3986] is\n// [ userinfo \"@\" ] host [ \":\" port ], it is legal to have a user input\n// identifier like userinfo@host:port, e.g., alice@example.com:8080.\n\nconst PORT = /^\\d+$/;\nfunction hasScheme(input) {\n    if (input.includes(\"://\")) return true;\n    const authority = input.replace(/(\\/|\\?)/g, \"#\").split(\"#\")[0];\n    if (authority.includes(\":\")) {\n        const index = authority.indexOf(\":\");\n        const hostOrPort = authority.slice(index + 1);\n        if (!PORT.test(hostOrPort)) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction acctSchemeAssumed(input) {\n    if (!input.includes(\"@\")) return false;\n    const parts = input.split(\"@\");\n    const host = parts[parts.length - 1];\n    return !(host.includes(\":\") || host.includes(\"/\") || host.includes(\"?\"));\n}\nfunction normalize(input) {\n    if (typeof input !== \"string\") {\n        throw new TypeError(\"input must be a string\");\n    }\n    let output;\n    if (hasScheme(input)) {\n        output = input;\n    } else if (acctSchemeAssumed(input)) {\n        output = `acct:${input}`;\n    } else {\n        output = `https://${input}`;\n    }\n    return output.split(\"#\")[0];\n}\nmodule.exports = normalize;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvb3BlbmlkLWNsaWVudC9saWIvaGVscGVycy93ZWJmaW5nZXJfbm9ybWFsaXplLmpzIiwibWFwcGluZ3MiOiJBQUFBLGdGQUFnRjtBQUVoRixzQkFBc0I7QUFDdEIsK0VBQStFO0FBQy9FLDJFQUEyRTtBQUMzRSw0RUFBNEU7QUFDNUUsK0NBQStDO0FBQy9DLEVBQUU7QUFDRiwwRUFBMEU7QUFDMUUsdUVBQXVFO0FBQ3ZFLHNFQUFzRTtBQUN0RSw0RUFBNEU7QUFDNUUsK0VBQStFO0FBQy9FLDZFQUE2RTtBQUM3RSxnRkFBZ0Y7QUFDaEYsb0VBQW9FO0FBQ3BFLHNEQUFzRDtBQUN0RCw4RUFBOEU7QUFDOUUsOEVBQThFO0FBQzlFLFVBQVU7QUFDViw0RUFBNEU7QUFDNUUsc0RBQXNEO0FBQ3RELDBFQUEwRTtBQUMxRSxvRUFBb0U7QUFDcEUsRUFBRTtBQUNGLG1FQUFtRTtBQUNuRSx1RUFBdUU7QUFDdkUsb0VBQW9FOztBQUVwRSxNQUFNQSxPQUFPO0FBRWIsU0FBU0MsVUFBVUMsS0FBSztJQUN0QixJQUFJQSxNQUFNQyxTQUFTLFFBQVEsT0FBTztJQUVsQyxNQUFNQyxZQUFZRixNQUFNRyxRQUFRLFlBQVksS0FBS0MsTUFBTSxJQUFJLENBQUMsRUFBRTtJQUM5RCxJQUFJRixVQUFVRCxTQUFTLE1BQU07UUFDM0IsTUFBTUksUUFBUUgsVUFBVUksUUFBUTtRQUNoQyxNQUFNQyxhQUFhTCxVQUFVTSxNQUFNSCxRQUFRO1FBQzNDLElBQUksQ0FBQ1AsS0FBS1csS0FBS0YsYUFBYTtZQUMxQixPQUFPO1FBQ1Q7SUFDRjtJQUVBLE9BQU87QUFDVDtBQUVBLFNBQVNHLGtCQUFrQlYsS0FBSztJQUM5QixJQUFJLENBQUNBLE1BQU1DLFNBQVMsTUFBTSxPQUFPO0lBQ2pDLE1BQU1VLFFBQVFYLE1BQU1JLE1BQU07SUFDMUIsTUFBTVEsT0FBT0QsS0FBSyxDQUFDQSxNQUFNRSxTQUFTLEVBQUU7SUFDcEMsT0FBTyxDQUFFRCxDQUFBQSxLQUFLWCxTQUFTLFFBQVFXLEtBQUtYLFNBQVMsUUFBUVcsS0FBS1gsU0FBUyxJQUFHO0FBQ3hFO0FBRUEsU0FBU2EsVUFBVWQsS0FBSztJQUN0QixJQUFJLE9BQU9BLFVBQVUsVUFBVTtRQUM3QixNQUFNLElBQUllLFVBQVU7SUFDdEI7SUFFQSxJQUFJQztJQUNKLElBQUlqQixVQUFVQyxRQUFRO1FBQ3BCZ0IsU0FBU2hCO0lBQ1gsT0FBTyxJQUFJVSxrQkFBa0JWLFFBQVE7UUFDbkNnQixTQUFTLENBQUMsS0FBSyxFQUFFaEIsTUFBTSxDQUFDO0lBQzFCLE9BQU87UUFDTGdCLFNBQVMsQ0FBQyxRQUFRLEVBQUVoQixNQUFNLENBQUM7SUFDN0I7SUFFQSxPQUFPZ0IsT0FBT1osTUFBTSxJQUFJLENBQUMsRUFBRTtBQUM3QjtBQUVBYSxPQUFPQyxVQUFVSiIsInNvdXJjZXMiOlsid2VicGFjazovL2Z1bGxzdGFjay1yb2xlLWJhc2VkLW5leHRqcy0yLy4vbm9kZV9tb2R1bGVzL29wZW5pZC1jbGllbnQvbGliL2hlbHBlcnMvd2ViZmluZ2VyX25vcm1hbGl6ZS5qcz8zNjZmIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENyZWRpdDogaHR0cHM6Ly9naXRodWIuY29tL3JvaGUvcHlvaWRjL2Jsb2IvbWFzdGVyL3NyYy9vaWMvdXRpbHMvd2ViZmluZ2VyLnB5XG5cbi8vIC0tIE5vcm1hbGl6YXRpb24gLS1cbi8vIEEgc3RyaW5nIG9mIGFueSBvdGhlciB0eXBlIGlzIGludGVycHJldGVkIGFzIGEgVVJJIGVpdGhlciB0aGUgZm9ybSBvZiBzY2hlbWVcbi8vIFwiOi8vXCIgYXV0aG9yaXR5IHBhdGgtYWJlbXB0eSBbIFwiP1wiIHF1ZXJ5IF0gWyBcIiNcIiBmcmFnbWVudCBdIG9yIGF1dGhvcml0eVxuLy8gcGF0aC1hYmVtcHR5IFsgXCI/XCIgcXVlcnkgXSBbIFwiI1wiIGZyYWdtZW50IF0gcGVyIFJGQyAzOTg2IFtSRkMzOTg2XSBhbmQgaXNcbi8vIG5vcm1hbGl6ZWQgYWNjb3JkaW5nIHRvIHRoZSBmb2xsb3dpbmcgcnVsZXM6XG4vL1xuLy8gSWYgdGhlIHVzZXIgaW5wdXQgSWRlbnRpZmllciBkb2VzIG5vdCBoYXZlIGFuIFJGQyAzOTg2IFtSRkMzOTg2XSBzY2hlbWVcbi8vIHBvcnRpb24sIHRoZSBzdHJpbmcgaXMgaW50ZXJwcmV0ZWQgYXMgW3VzZXJpbmZvIFwiQFwiXSBob3N0IFtcIjpcIiBwb3J0XVxuLy8gcGF0aC1hYmVtcHR5IFsgXCI/XCIgcXVlcnkgXSBbIFwiI1wiIGZyYWdtZW50IF0gcGVyIFJGQyAzOTg2IFtSRkMzOTg2XS5cbi8vIElmIHRoZSB1c2VyaW5mbyBjb21wb25lbnQgaXMgcHJlc2VudCBhbmQgYWxsIG9mIHRoZSBwYXRoIGNvbXBvbmVudCwgcXVlcnlcbi8vIGNvbXBvbmVudCwgYW5kIHBvcnQgY29tcG9uZW50IGFyZSBlbXB0eSwgdGhlIGFjY3Qgc2NoZW1lIGlzIGFzc3VtZWQuIEluIHRoaXNcbi8vIGNhc2UsIHRoZSBub3JtYWxpemVkIFVSSSBpcyBmb3JtZWQgYnkgcHJlZml4aW5nIGFjY3Q6IHRvIHRoZSBzdHJpbmcgYXMgdGhlXG4vLyBzY2hlbWUuIFBlciB0aGUgJ2FjY3QnIFVSSSBTY2hlbWUgW0nigJFELmlldGbigJFhcHBzYXdn4oCRYWNjdOKAkXVyaV0sIGlmIHRoZXJlIGlzIGFuXG4vLyBhdC1zaWduIGNoYXJhY3RlciAoJ0AnKSBpbiB0aGUgdXNlcmluZm8gY29tcG9uZW50LCBpdCBuZWVkcyB0byBiZVxuLy8gcGVyY2VudC1lbmNvZGVkIGFzIGRlc2NyaWJlZCBpbiBSRkMgMzk4NiBbUkZDMzk4Nl0uXG4vLyBGb3IgYWxsIG90aGVyIGlucHV0cyB3aXRob3V0IGEgc2NoZW1lIHBvcnRpb24sIHRoZSBodHRwcyBzY2hlbWUgaXMgYXNzdW1lZCxcbi8vIGFuZCB0aGUgbm9ybWFsaXplZCBVUkkgaXMgZm9ybWVkIGJ5IHByZWZpeGluZyBodHRwczovLyB0byB0aGUgc3RyaW5nIGFzIHRoZVxuLy8gc2NoZW1lLlxuLy8gSWYgdGhlIHJlc3VsdGluZyBVUkkgY29udGFpbnMgYSBmcmFnbWVudCBwb3J0aW9uLCBpdCBNVVNUIGJlIHN0cmlwcGVkIG9mZlxuLy8gdG9nZXRoZXIgd2l0aCB0aGUgZnJhZ21lbnQgZGVsaW1pdGVyIGNoYXJhY3RlciBcIiNcIi5cbi8vIFRoZSBXZWJGaW5nZXIgW0nigJFELmlldGbigJFhcHBzYXdn4oCRd2ViZmluZ2VyXSBSZXNvdXJjZSBpbiB0aGlzIGNhc2UgaXMgdGhlXG4vLyByZXN1bHRpbmcgVVJJLCBhbmQgdGhlIFdlYkZpbmdlciBIb3N0IGlzIHRoZSBhdXRob3JpdHkgY29tcG9uZW50LlxuLy9cbi8vIE5vdGU6IFNpbmNlIHRoZSBkZWZpbml0aW9uIG9mIGF1dGhvcml0eSBpbiBSRkMgMzk4NiBbUkZDMzk4Nl0gaXNcbi8vIFsgdXNlcmluZm8gXCJAXCIgXSBob3N0IFsgXCI6XCIgcG9ydCBdLCBpdCBpcyBsZWdhbCB0byBoYXZlIGEgdXNlciBpbnB1dFxuLy8gaWRlbnRpZmllciBsaWtlIHVzZXJpbmZvQGhvc3Q6cG9ydCwgZS5nLiwgYWxpY2VAZXhhbXBsZS5jb206ODA4MC5cblxuY29uc3QgUE9SVCA9IC9eXFxkKyQvO1xuXG5mdW5jdGlvbiBoYXNTY2hlbWUoaW5wdXQpIHtcbiAgaWYgKGlucHV0LmluY2x1ZGVzKCc6Ly8nKSkgcmV0dXJuIHRydWU7XG5cbiAgY29uc3QgYXV0aG9yaXR5ID0gaW5wdXQucmVwbGFjZSgvKFxcL3xcXD8pL2csICcjJykuc3BsaXQoJyMnKVswXTtcbiAgaWYgKGF1dGhvcml0eS5pbmNsdWRlcygnOicpKSB7XG4gICAgY29uc3QgaW5kZXggPSBhdXRob3JpdHkuaW5kZXhPZignOicpO1xuICAgIGNvbnN0IGhvc3RPclBvcnQgPSBhdXRob3JpdHkuc2xpY2UoaW5kZXggKyAxKTtcbiAgICBpZiAoIVBPUlQudGVzdChob3N0T3JQb3J0KSkge1xuICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIGZhbHNlO1xufVxuXG5mdW5jdGlvbiBhY2N0U2NoZW1lQXNzdW1lZChpbnB1dCkge1xuICBpZiAoIWlucHV0LmluY2x1ZGVzKCdAJykpIHJldHVybiBmYWxzZTtcbiAgY29uc3QgcGFydHMgPSBpbnB1dC5zcGxpdCgnQCcpO1xuICBjb25zdCBob3N0ID0gcGFydHNbcGFydHMubGVuZ3RoIC0gMV07XG4gIHJldHVybiAhKGhvc3QuaW5jbHVkZXMoJzonKSB8fCBob3N0LmluY2x1ZGVzKCcvJykgfHwgaG9zdC5pbmNsdWRlcygnPycpKTtcbn1cblxuZnVuY3Rpb24gbm9ybWFsaXplKGlucHV0KSB7XG4gIGlmICh0eXBlb2YgaW5wdXQgIT09ICdzdHJpbmcnKSB7XG4gICAgdGhyb3cgbmV3IFR5cGVFcnJvcignaW5wdXQgbXVzdCBiZSBhIHN0cmluZycpO1xuICB9XG5cbiAgbGV0IG91dHB1dDtcbiAgaWYgKGhhc1NjaGVtZShpbnB1dCkpIHtcbiAgICBvdXRwdXQgPSBpbnB1dDtcbiAgfSBlbHNlIGlmIChhY2N0U2NoZW1lQXNzdW1lZChpbnB1dCkpIHtcbiAgICBvdXRwdXQgPSBgYWNjdDoke2lucHV0fWA7XG4gIH0gZWxzZSB7XG4gICAgb3V0cHV0ID0gYGh0dHBzOi8vJHtpbnB1dH1gO1xuICB9XG5cbiAgcmV0dXJuIG91dHB1dC5zcGxpdCgnIycpWzBdO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IG5vcm1hbGl6ZTtcbiJdLCJuYW1lcyI6WyJQT1JUIiwiaGFzU2NoZW1lIiwiaW5wdXQiLCJpbmNsdWRlcyIsImF1dGhvcml0eSIsInJlcGxhY2UiLCJzcGxpdCIsImluZGV4IiwiaW5kZXhPZiIsImhvc3RPclBvcnQiLCJzbGljZSIsInRlc3QiLCJhY2N0U2NoZW1lQXNzdW1lZCIsInBhcnRzIiwiaG9zdCIsImxlbmd0aCIsIm5vcm1hbGl6ZSIsIlR5cGVFcnJvciIsIm91dHB1dCIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/openid-client/lib/helpers/webfinger_normalize.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/openid-client/lib/helpers/www_authenticate_parser.js":
/*!***************************************************************************!*\
  !*** ./node_modules/openid-client/lib/helpers/www_authenticate_parser.js ***!
  \***************************************************************************/
/***/ ((module) => {

"use strict";
eval("\nconst REGEXP = /(\\w+)=(\"[^\"]*\")/g;\nmodule.exports = (wwwAuthenticate)=>{\n    const params = {};\n    try {\n        while(REGEXP.exec(wwwAuthenticate) !== null){\n            if (RegExp.$1 && RegExp.$2) {\n                params[RegExp.$1] = RegExp.$2.slice(1, -1);\n            }\n        }\n    } catch (err) {}\n    return params;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvb3BlbmlkLWNsaWVudC9saWIvaGVscGVycy93d3dfYXV0aGVudGljYXRlX3BhcnNlci5qcyIsIm1hcHBpbmdzIjoiO0FBQUEsTUFBTUEsU0FBUztBQUVmQyxPQUFPQyxVQUFVLENBQUNDO0lBQ2hCLE1BQU1DLFNBQVMsQ0FBQztJQUNoQixJQUFJO1FBQ0YsTUFBT0osT0FBT0ssS0FBS0YscUJBQXFCLEtBQU07WUFDNUMsSUFBSUcsT0FBT0MsTUFBTUQsT0FBT0UsSUFBSTtnQkFDMUJKLE1BQU0sQ0FBQ0UsT0FBT0MsR0FBRyxHQUFHRCxPQUFPRSxHQUFHQyxNQUFNLEdBQUcsQ0FBQztZQUMxQztRQUNGO0lBQ0YsRUFBRSxPQUFPQyxLQUFLLENBQUM7SUFFZixPQUFPTjtBQUNUIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZnVsbHN0YWNrLXJvbGUtYmFzZWQtbmV4dGpzLTIvLi9ub2RlX21vZHVsZXMvb3BlbmlkLWNsaWVudC9saWIvaGVscGVycy93d3dfYXV0aGVudGljYXRlX3BhcnNlci5qcz9mMDBkIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IFJFR0VYUCA9IC8oXFx3Kyk9KFwiW15cIl0qXCIpL2c7XG5cbm1vZHVsZS5leHBvcnRzID0gKHd3d0F1dGhlbnRpY2F0ZSkgPT4ge1xuICBjb25zdCBwYXJhbXMgPSB7fTtcbiAgdHJ5IHtcbiAgICB3aGlsZSAoUkVHRVhQLmV4ZWMod3d3QXV0aGVudGljYXRlKSAhPT0gbnVsbCkge1xuICAgICAgaWYgKFJlZ0V4cC4kMSAmJiBSZWdFeHAuJDIpIHtcbiAgICAgICAgcGFyYW1zW1JlZ0V4cC4kMV0gPSBSZWdFeHAuJDIuc2xpY2UoMSwgLTEpO1xuICAgICAgfVxuICAgIH1cbiAgfSBjYXRjaCAoZXJyKSB7fVxuXG4gIHJldHVybiBwYXJhbXM7XG59O1xuIl0sIm5hbWVzIjpbIlJFR0VYUCIsIm1vZHVsZSIsImV4cG9ydHMiLCJ3d3dBdXRoZW50aWNhdGUiLCJwYXJhbXMiLCJleGVjIiwiUmVnRXhwIiwiJDEiLCIkMiIsInNsaWNlIiwiZXJyIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/openid-client/lib/helpers/www_authenticate_parser.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/openid-client/lib/index.js":
/*!*************************************************!*\
  !*** ./node_modules/openid-client/lib/index.js ***!
  \*************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nconst Issuer = __webpack_require__(/*! ./issuer */ \"(sc_server)/./node_modules/openid-client/lib/issuer.js\");\nconst { OPError , RPError  } = __webpack_require__(/*! ./errors */ \"(sc_server)/./node_modules/openid-client/lib/errors.js\");\nconst Strategy = __webpack_require__(/*! ./passport_strategy */ \"(sc_server)/./node_modules/openid-client/lib/passport_strategy.js\");\nconst TokenSet = __webpack_require__(/*! ./token_set */ \"(sc_server)/./node_modules/openid-client/lib/token_set.js\");\nconst { CLOCK_TOLERANCE , HTTP_OPTIONS  } = __webpack_require__(/*! ./helpers/consts */ \"(sc_server)/./node_modules/openid-client/lib/helpers/consts.js\");\nconst generators = __webpack_require__(/*! ./helpers/generators */ \"(sc_server)/./node_modules/openid-client/lib/helpers/generators.js\");\nconst { setDefaults  } = __webpack_require__(/*! ./helpers/request */ \"(sc_server)/./node_modules/openid-client/lib/helpers/request.js\");\nmodule.exports = {\n    Issuer,\n    Strategy,\n    TokenSet,\n    errors: {\n        OPError,\n        RPError\n    },\n    custom: {\n        setHttpOptionsDefaults: setDefaults,\n        http_options: HTTP_OPTIONS,\n        clock_tolerance: CLOCK_TOLERANCE\n    },\n    generators\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvb3BlbmlkLWNsaWVudC9saWIvaW5kZXguanMiLCJtYXBwaW5ncyI6IjtBQUFBLE1BQU1BLFNBQVNDLG1CQUFPQSxDQUFDO0FBQ3ZCLE1BQU0sRUFBRUMsUUFBTyxFQUFFQyxRQUFPLEVBQUUsR0FBR0YsbUJBQU9BLENBQUM7QUFDckMsTUFBTUcsV0FBV0gsbUJBQU9BLENBQUM7QUFDekIsTUFBTUksV0FBV0osbUJBQU9BLENBQUM7QUFDekIsTUFBTSxFQUFFSyxnQkFBZSxFQUFFQyxhQUFZLEVBQUUsR0FBR04sbUJBQU9BLENBQUM7QUFDbEQsTUFBTU8sYUFBYVAsbUJBQU9BLENBQUM7QUFDM0IsTUFBTSxFQUFFUSxZQUFXLEVBQUUsR0FBR1IsbUJBQU9BLENBQUM7QUFFaENTLE9BQU9DLFVBQVU7SUFDZlg7SUFDQUk7SUFDQUM7SUFDQU8sUUFBUTtRQUNOVjtRQUNBQztJQUNGO0lBQ0FVLFFBQVE7UUFDTkMsd0JBQXdCTDtRQUN4Qk0sY0FBY1I7UUFDZFMsaUJBQWlCVjtJQUNuQjtJQUNBRTtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZnVsbHN0YWNrLXJvbGUtYmFzZWQtbmV4dGpzLTIvLi9ub2RlX21vZHVsZXMvb3BlbmlkLWNsaWVudC9saWIvaW5kZXguanM/Y2Y5MSJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBJc3N1ZXIgPSByZXF1aXJlKCcuL2lzc3VlcicpO1xuY29uc3QgeyBPUEVycm9yLCBSUEVycm9yIH0gPSByZXF1aXJlKCcuL2Vycm9ycycpO1xuY29uc3QgU3RyYXRlZ3kgPSByZXF1aXJlKCcuL3Bhc3Nwb3J0X3N0cmF0ZWd5Jyk7XG5jb25zdCBUb2tlblNldCA9IHJlcXVpcmUoJy4vdG9rZW5fc2V0Jyk7XG5jb25zdCB7IENMT0NLX1RPTEVSQU5DRSwgSFRUUF9PUFRJT05TIH0gPSByZXF1aXJlKCcuL2hlbHBlcnMvY29uc3RzJyk7XG5jb25zdCBnZW5lcmF0b3JzID0gcmVxdWlyZSgnLi9oZWxwZXJzL2dlbmVyYXRvcnMnKTtcbmNvbnN0IHsgc2V0RGVmYXVsdHMgfSA9IHJlcXVpcmUoJy4vaGVscGVycy9yZXF1ZXN0Jyk7XG5cbm1vZHVsZS5leHBvcnRzID0ge1xuICBJc3N1ZXIsXG4gIFN0cmF0ZWd5LFxuICBUb2tlblNldCxcbiAgZXJyb3JzOiB7XG4gICAgT1BFcnJvcixcbiAgICBSUEVycm9yLFxuICB9LFxuICBjdXN0b206IHtcbiAgICBzZXRIdHRwT3B0aW9uc0RlZmF1bHRzOiBzZXREZWZhdWx0cyxcbiAgICBodHRwX29wdGlvbnM6IEhUVFBfT1BUSU9OUyxcbiAgICBjbG9ja190b2xlcmFuY2U6IENMT0NLX1RPTEVSQU5DRSxcbiAgfSxcbiAgZ2VuZXJhdG9ycyxcbn07XG4iXSwibmFtZXMiOlsiSXNzdWVyIiwicmVxdWlyZSIsIk9QRXJyb3IiLCJSUEVycm9yIiwiU3RyYXRlZ3kiLCJUb2tlblNldCIsIkNMT0NLX1RPTEVSQU5DRSIsIkhUVFBfT1BUSU9OUyIsImdlbmVyYXRvcnMiLCJzZXREZWZhdWx0cyIsIm1vZHVsZSIsImV4cG9ydHMiLCJlcnJvcnMiLCJjdXN0b20iLCJzZXRIdHRwT3B0aW9uc0RlZmF1bHRzIiwiaHR0cF9vcHRpb25zIiwiY2xvY2tfdG9sZXJhbmNlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/openid-client/lib/index.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/openid-client/lib/issuer.js":
/*!**************************************************!*\
  !*** ./node_modules/openid-client/lib/issuer.js ***!
  \**************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nconst { inspect  } = __webpack_require__(/*! util */ \"util\");\nconst url = __webpack_require__(/*! url */ \"url\");\nconst { RPError  } = __webpack_require__(/*! ./errors */ \"(sc_server)/./node_modules/openid-client/lib/errors.js\");\nconst getClient = __webpack_require__(/*! ./client */ \"(sc_server)/./node_modules/openid-client/lib/client.js\");\nconst registry = __webpack_require__(/*! ./issuer_registry */ \"(sc_server)/./node_modules/openid-client/lib/issuer_registry.js\");\nconst processResponse = __webpack_require__(/*! ./helpers/process_response */ \"(sc_server)/./node_modules/openid-client/lib/helpers/process_response.js\");\nconst webfingerNormalize = __webpack_require__(/*! ./helpers/webfinger_normalize */ \"(sc_server)/./node_modules/openid-client/lib/helpers/webfinger_normalize.js\");\nconst request = __webpack_require__(/*! ./helpers/request */ \"(sc_server)/./node_modules/openid-client/lib/helpers/request.js\");\nconst clone = __webpack_require__(/*! ./helpers/deep_clone */ \"(sc_server)/./node_modules/openid-client/lib/helpers/deep_clone.js\");\nconst { keystore  } = __webpack_require__(/*! ./helpers/issuer */ \"(sc_server)/./node_modules/openid-client/lib/helpers/issuer.js\");\nconst AAD_MULTITENANT_DISCOVERY = [\n    \"https://login.microsoftonline.com/common/.well-known/openid-configuration\",\n    \"https://login.microsoftonline.com/common/v2.0/.well-known/openid-configuration\",\n    \"https://login.microsoftonline.com/organizations/v2.0/.well-known/openid-configuration\",\n    \"https://login.microsoftonline.com/consumers/v2.0/.well-known/openid-configuration\"\n];\nconst AAD_MULTITENANT = Symbol();\nconst ISSUER_DEFAULTS = {\n    claim_types_supported: [\n        \"normal\"\n    ],\n    claims_parameter_supported: false,\n    grant_types_supported: [\n        \"authorization_code\",\n        \"implicit\"\n    ],\n    request_parameter_supported: false,\n    request_uri_parameter_supported: true,\n    require_request_uri_registration: false,\n    response_modes_supported: [\n        \"query\",\n        \"fragment\"\n    ],\n    token_endpoint_auth_methods_supported: [\n        \"client_secret_basic\"\n    ]\n};\nclass Issuer {\n    #metadata;\n    constructor(meta = {}){\n        const aadIssValidation = meta[AAD_MULTITENANT];\n        delete meta[AAD_MULTITENANT];\n        [\n            \"introspection\",\n            \"revocation\"\n        ].forEach((endpoint)=>{\n            // if intro/revocation endpoint auth specific meta is missing use the token ones if they\n            // are defined\n            if (meta[`${endpoint}_endpoint`] && meta[`${endpoint}_endpoint_auth_methods_supported`] === undefined && meta[`${endpoint}_endpoint_auth_signing_alg_values_supported`] === undefined) {\n                if (meta.token_endpoint_auth_methods_supported) {\n                    meta[`${endpoint}_endpoint_auth_methods_supported`] = meta.token_endpoint_auth_methods_supported;\n                }\n                if (meta.token_endpoint_auth_signing_alg_values_supported) {\n                    meta[`${endpoint}_endpoint_auth_signing_alg_values_supported`] = meta.token_endpoint_auth_signing_alg_values_supported;\n                }\n            }\n        });\n        this.#metadata = new Map();\n        Object.entries(meta).forEach(([key, value])=>{\n            this.#metadata.set(key, value);\n            if (!this[key]) {\n                Object.defineProperty(this, key, {\n                    get () {\n                        return this.#metadata.get(key);\n                    },\n                    enumerable: true\n                });\n            }\n        });\n        registry.set(this.issuer, this);\n        const Client = getClient(this, aadIssValidation);\n        Object.defineProperties(this, {\n            Client: {\n                value: Client,\n                enumerable: true\n            },\n            FAPI1Client: {\n                value: class FAPI1Client extends Client {\n                },\n                enumerable: true\n            }\n        });\n    }\n    get metadata() {\n        return clone(Object.fromEntries(this.#metadata.entries()));\n    }\n    static async webfinger(input) {\n        const resource = webfingerNormalize(input);\n        const { host  } = url.parse(resource);\n        const webfingerUrl = `https://${host}/.well-known/webfinger`;\n        const response = await request.call(this, {\n            method: \"GET\",\n            url: webfingerUrl,\n            responseType: \"json\",\n            searchParams: {\n                resource,\n                rel: \"http://openid.net/specs/connect/1.0/issuer\"\n            },\n            headers: {\n                Accept: \"application/json\"\n            }\n        });\n        const body = processResponse(response);\n        const location = Array.isArray(body.links) && body.links.find((link)=>typeof link === \"object\" && link.rel === \"http://openid.net/specs/connect/1.0/issuer\" && link.href);\n        if (!location) {\n            throw new RPError({\n                message: \"no issuer found in webfinger response\",\n                body\n            });\n        }\n        if (typeof location.href !== \"string\" || !location.href.startsWith(\"https://\")) {\n            throw new RPError({\n                printf: [\n                    \"invalid issuer location %s\",\n                    location.href\n                ],\n                body\n            });\n        }\n        const expectedIssuer = location.href;\n        if (registry.has(expectedIssuer)) {\n            return registry.get(expectedIssuer);\n        }\n        const issuer = await this.discover(expectedIssuer);\n        if (issuer.issuer !== expectedIssuer) {\n            registry.del(issuer.issuer);\n            throw new RPError(\"discovered issuer mismatch, expected %s, got: %s\", expectedIssuer, issuer.issuer);\n        }\n        return issuer;\n    }\n    static async discover(uri) {\n        const parsed = url.parse(uri);\n        if (parsed.pathname.includes(\"/.well-known/\")) {\n            const response = await request.call(this, {\n                method: \"GET\",\n                responseType: \"json\",\n                url: uri,\n                headers: {\n                    Accept: \"application/json\"\n                }\n            });\n            const body = processResponse(response);\n            return new Issuer({\n                ...ISSUER_DEFAULTS,\n                ...body,\n                [AAD_MULTITENANT]: !!AAD_MULTITENANT_DISCOVERY.find((discoveryURL)=>uri.startsWith(discoveryURL))\n            });\n        }\n        let pathname;\n        if (parsed.pathname.endsWith(\"/\")) {\n            pathname = `${parsed.pathname}.well-known/openid-configuration`;\n        } else {\n            pathname = `${parsed.pathname}/.well-known/openid-configuration`;\n        }\n        const wellKnownUri = url.format({\n            ...parsed,\n            pathname\n        });\n        const response = await request.call(this, {\n            method: \"GET\",\n            responseType: \"json\",\n            url: wellKnownUri,\n            headers: {\n                Accept: \"application/json\"\n            }\n        });\n        const body = processResponse(response);\n        return new Issuer({\n            ...ISSUER_DEFAULTS,\n            ...body,\n            [AAD_MULTITENANT]: !!AAD_MULTITENANT_DISCOVERY.find((discoveryURL)=>wellKnownUri.startsWith(discoveryURL))\n        });\n    }\n    async reloadJwksUri() {\n        await keystore.call(this, true);\n    }\n    /* istanbul ignore next */ [inspect.custom]() {\n        return `${this.constructor.name} ${inspect(this.metadata, {\n            depth: Infinity,\n            colors: process.stdout.isTTY,\n            compact: false,\n            sorted: true\n        })}`;\n    }\n}\nmodule.exports = Issuer;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/openid-client/lib/issuer.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/openid-client/lib/issuer_registry.js":
/*!***********************************************************!*\
  !*** ./node_modules/openid-client/lib/issuer_registry.js ***!
  \***********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nconst LRU = __webpack_require__(/*! lru-cache */ \"(sc_server)/./node_modules/lru-cache/index.js\");\nmodule.exports = new LRU({\n    max: 100\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvb3BlbmlkLWNsaWVudC9saWIvaXNzdWVyX3JlZ2lzdHJ5LmpzIiwibWFwcGluZ3MiOiI7QUFBQSxNQUFNQSxNQUFNQyxtQkFBT0EsQ0FBQztBQUVwQkMsT0FBT0MsVUFBVSxJQUFJSCxJQUFJO0lBQUVJLEtBQUs7QUFBSSIsInNvdXJjZXMiOlsid2VicGFjazovL2Z1bGxzdGFjay1yb2xlLWJhc2VkLW5leHRqcy0yLy4vbm9kZV9tb2R1bGVzL29wZW5pZC1jbGllbnQvbGliL2lzc3Vlcl9yZWdpc3RyeS5qcz9iMDZkIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IExSVSA9IHJlcXVpcmUoJ2xydS1jYWNoZScpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IG5ldyBMUlUoeyBtYXg6IDEwMCB9KTtcbiJdLCJuYW1lcyI6WyJMUlUiLCJyZXF1aXJlIiwibW9kdWxlIiwiZXhwb3J0cyIsIm1heCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/openid-client/lib/issuer_registry.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/openid-client/lib/passport_strategy.js":
/*!*************************************************************!*\
  !*** ./node_modules/openid-client/lib/passport_strategy.js ***!
  \*************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nconst url = __webpack_require__(/*! url */ \"url\");\nconst { format  } = __webpack_require__(/*! util */ \"util\");\nconst cloneDeep = __webpack_require__(/*! ./helpers/deep_clone */ \"(sc_server)/./node_modules/openid-client/lib/helpers/deep_clone.js\");\nconst { RPError , OPError  } = __webpack_require__(/*! ./errors */ \"(sc_server)/./node_modules/openid-client/lib/errors.js\");\nconst { BaseClient  } = __webpack_require__(/*! ./client */ \"(sc_server)/./node_modules/openid-client/lib/client.js\");\nconst { random , codeChallenge  } = __webpack_require__(/*! ./helpers/generators */ \"(sc_server)/./node_modules/openid-client/lib/helpers/generators.js\");\nconst pick = __webpack_require__(/*! ./helpers/pick */ \"(sc_server)/./node_modules/openid-client/lib/helpers/pick.js\");\nconst { resolveResponseType , resolveRedirectUri  } = __webpack_require__(/*! ./helpers/client */ \"(sc_server)/./node_modules/openid-client/lib/helpers/client.js\");\nfunction verified(err, user, info = {}) {\n    if (err) {\n        this.error(err);\n    } else if (!user) {\n        this.fail(info);\n    } else {\n        this.success(user, info);\n    }\n}\nfunction OpenIDConnectStrategy({ client , params ={} , passReqToCallback =false , sessionKey , usePKCE =true , extras ={}  } = {}, verify) {\n    if (!(client instanceof BaseClient)) {\n        throw new TypeError(\"client must be an instance of openid-client Client\");\n    }\n    if (typeof verify !== \"function\") {\n        throw new TypeError(\"verify callback must be a function\");\n    }\n    if (!client.issuer || !client.issuer.issuer) {\n        throw new TypeError(\"client must have an issuer with an identifier\");\n    }\n    this._client = client;\n    this._issuer = client.issuer;\n    this._verify = verify;\n    this._passReqToCallback = passReqToCallback;\n    this._usePKCE = usePKCE;\n    this._key = sessionKey || `oidc:${url.parse(this._issuer.issuer).hostname}`;\n    this._params = cloneDeep(params);\n    // state and nonce are handled in authenticate()\n    delete this._params.state;\n    delete this._params.nonce;\n    this._extras = cloneDeep(extras);\n    if (!this._params.response_type) this._params.response_type = resolveResponseType.call(client);\n    if (!this._params.redirect_uri) this._params.redirect_uri = resolveRedirectUri.call(client);\n    if (!this._params.scope) this._params.scope = \"openid\";\n    if (this._usePKCE === true) {\n        const supportedMethods = Array.isArray(this._issuer.code_challenge_methods_supported) ? this._issuer.code_challenge_methods_supported : false;\n        if (supportedMethods && supportedMethods.includes(\"S256\")) {\n            this._usePKCE = \"S256\";\n        } else if (supportedMethods && supportedMethods.includes(\"plain\")) {\n            this._usePKCE = \"plain\";\n        } else if (supportedMethods) {\n            throw new TypeError(\"neither code_challenge_method supported by the client is supported by the issuer\");\n        } else {\n            this._usePKCE = \"S256\";\n        }\n    } else if (typeof this._usePKCE === \"string\" && ![\n        \"plain\",\n        \"S256\"\n    ].includes(this._usePKCE)) {\n        throw new TypeError(`${this._usePKCE} is not valid/implemented PKCE code_challenge_method`);\n    }\n    this.name = url.parse(client.issuer.issuer).hostname;\n}\nOpenIDConnectStrategy.prototype.authenticate = function authenticate(req, options) {\n    (async ()=>{\n        const client = this._client;\n        if (!req.session) {\n            throw new TypeError(\"authentication requires session support\");\n        }\n        const reqParams = client.callbackParams(req);\n        const sessionKey = this._key;\n        const { 0: parameter , length  } = Object.keys(reqParams);\n        /**\n     * Start authentication request if this has no authorization response parameters or\n     * this might a login initiated from a third party as per\n     * https://openid.net/specs/openid-connect-core-1_0.html#ThirdPartyInitiatedLogin.\n     */ if (length === 0 || length === 1 && parameter === \"iss\") {\n            // provide options object with extra authentication parameters\n            const params = {\n                state: random(),\n                ...this._params,\n                ...options\n            };\n            if (!params.nonce && params.response_type.includes(\"id_token\")) {\n                params.nonce = random();\n            }\n            req.session[sessionKey] = pick(params, \"nonce\", \"state\", \"max_age\", \"response_type\");\n            if (this._usePKCE && params.response_type.includes(\"code\")) {\n                const verifier = random();\n                req.session[sessionKey].code_verifier = verifier;\n                switch(this._usePKCE){\n                    case \"S256\":\n                        params.code_challenge = codeChallenge(verifier);\n                        params.code_challenge_method = \"S256\";\n                        break;\n                    case \"plain\":\n                        params.code_challenge = verifier;\n                        break;\n                }\n            }\n            this.redirect(client.authorizationUrl(params));\n            return;\n        }\n        /* end authentication request */ /* start authentication response */ const session = req.session[sessionKey];\n        if (Object.keys(session || {}).length === 0) {\n            throw new Error(format('did not find expected authorization request details in session, req.session[\"%s\"] is %j', sessionKey, session));\n        }\n        const { state , nonce , max_age: maxAge , code_verifier: codeVerifier , response_type: responseType  } = session;\n        try {\n            delete req.session[sessionKey];\n        } catch (err) {}\n        const opts = {\n            redirect_uri: this._params.redirect_uri,\n            ...options\n        };\n        const checks = {\n            state,\n            nonce,\n            max_age: maxAge,\n            code_verifier: codeVerifier,\n            response_type: responseType\n        };\n        const tokenset = await client.callback(opts.redirect_uri, reqParams, checks, this._extras);\n        const passReq = this._passReqToCallback;\n        const loadUserinfo = this._verify.length > (passReq ? 3 : 2) && client.issuer.userinfo_endpoint;\n        const args = [\n            tokenset,\n            verified.bind(this)\n        ];\n        if (loadUserinfo) {\n            if (!tokenset.access_token) {\n                throw new RPError({\n                    message: \"expected access_token to be returned when asking for userinfo in verify callback\",\n                    tokenset\n                });\n            }\n            const userinfo = await client.userinfo(tokenset);\n            args.splice(1, 0, userinfo);\n        }\n        if (passReq) {\n            args.unshift(req);\n        }\n        this._verify(...args);\n    /* end authentication response */ })().catch((error)=>{\n        if (error instanceof OPError && error.error !== \"server_error\" && !error.error.startsWith(\"invalid\") || error instanceof RPError) {\n            this.fail(error);\n        } else {\n            this.error(error);\n        }\n    });\n};\nmodule.exports = OpenIDConnectStrategy;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvb3BlbmlkLWNsaWVudC9saWIvcGFzc3BvcnRfc3RyYXRlZ3kuanMiLCJtYXBwaW5ncyI6IjtBQUFBLE1BQU1BLE1BQU1DLG1CQUFPQSxDQUFDO0FBQ3BCLE1BQU0sRUFBRUMsT0FBTSxFQUFFLEdBQUdELG1CQUFPQSxDQUFDO0FBRTNCLE1BQU1FLFlBQVlGLG1CQUFPQSxDQUFDO0FBQzFCLE1BQU0sRUFBRUcsUUFBTyxFQUFFQyxRQUFPLEVBQUUsR0FBR0osbUJBQU9BLENBQUM7QUFDckMsTUFBTSxFQUFFSyxXQUFVLEVBQUUsR0FBR0wsbUJBQU9BLENBQUM7QUFDL0IsTUFBTSxFQUFFTSxPQUFNLEVBQUVDLGNBQWEsRUFBRSxHQUFHUCxtQkFBT0EsQ0FBQztBQUMxQyxNQUFNUSxPQUFPUixtQkFBT0EsQ0FBQztBQUNyQixNQUFNLEVBQUVTLG9CQUFtQixFQUFFQyxtQkFBa0IsRUFBRSxHQUFHVixtQkFBT0EsQ0FBQztBQUU1RCxTQUFTVyxTQUFTQyxHQUFHLEVBQUVDLElBQUksRUFBRUMsT0FBTyxDQUFDLENBQUM7SUFDcEMsSUFBSUYsS0FBSztRQUNQLElBQUksQ0FBQ0csTUFBTUg7SUFDYixPQUFPLElBQUksQ0FBQ0MsTUFBTTtRQUNoQixJQUFJLENBQUNHLEtBQUtGO0lBQ1osT0FBTztRQUNMLElBQUksQ0FBQ0csUUFBUUosTUFBTUM7SUFDckI7QUFDRjtBQUVBLFNBQVNJLHNCQUNQLEVBQUVDLE9BQU0sRUFBRUMsUUFBUyxDQUFDLEVBQUMsRUFBRUMsbUJBQW9CLE1BQUssRUFBRUMsV0FBVSxFQUFFQyxTQUFVLEtBQUksRUFBRUMsUUFBUyxDQUFDLEVBQUMsRUFBRSxHQUFHLENBQUMsQ0FBQyxFQUNoR0MsTUFBTTtJQUVOLElBQUksQ0FBRU4sQ0FBQUEsa0JBQWtCZCxVQUFTLEdBQUk7UUFDbkMsTUFBTSxJQUFJcUIsVUFBVTtJQUN0QjtJQUVBLElBQUksT0FBT0QsV0FBVyxZQUFZO1FBQ2hDLE1BQU0sSUFBSUMsVUFBVTtJQUN0QjtJQUVBLElBQUksQ0FBQ1AsT0FBT1EsVUFBVSxDQUFDUixPQUFPUSxPQUFPQSxRQUFRO1FBQzNDLE1BQU0sSUFBSUQsVUFBVTtJQUN0QjtJQUVBLElBQUksQ0FBQ0UsVUFBVVQ7SUFDZixJQUFJLENBQUNVLFVBQVVWLE9BQU9RO0lBQ3RCLElBQUksQ0FBQ0csVUFBVUw7SUFDZixJQUFJLENBQUNNLHFCQUFxQlY7SUFDMUIsSUFBSSxDQUFDVyxXQUFXVDtJQUNoQixJQUFJLENBQUNVLE9BQU9YLGNBQWMsQ0FBQyxLQUFLLEVBQUV2QixJQUFJbUMsTUFBTSxJQUFJLENBQUNMLFFBQVFGLFFBQVFRLFNBQVMsQ0FBQztJQUMzRSxJQUFJLENBQUNDLFVBQVVsQyxVQUFVa0I7SUFFekIsZ0RBQWdEO0lBQ2hELE9BQU8sSUFBSSxDQUFDZ0IsUUFBUUM7SUFDcEIsT0FBTyxJQUFJLENBQUNELFFBQVFFO0lBRXBCLElBQUksQ0FBQ0MsVUFBVXJDLFVBQVVzQjtJQUV6QixJQUFJLENBQUMsSUFBSSxDQUFDWSxRQUFRSSxlQUFlLElBQUksQ0FBQ0osUUFBUUksZ0JBQWdCL0Isb0JBQW9CZ0MsS0FBS3RCO0lBQ3ZGLElBQUksQ0FBQyxJQUFJLENBQUNpQixRQUFRTSxjQUFjLElBQUksQ0FBQ04sUUFBUU0sZUFBZWhDLG1CQUFtQitCLEtBQUt0QjtJQUNwRixJQUFJLENBQUMsSUFBSSxDQUFDaUIsUUFBUU8sT0FBTyxJQUFJLENBQUNQLFFBQVFPLFFBQVE7SUFFOUMsSUFBSSxJQUFJLENBQUNYLGFBQWEsTUFBTTtRQUMxQixNQUFNWSxtQkFBbUJDLE1BQU1DLFFBQVEsSUFBSSxDQUFDakIsUUFBUWtCLG9DQUNoRCxJQUFJLENBQUNsQixRQUFRa0IsbUNBQ2I7UUFFSixJQUFJSCxvQkFBb0JBLGlCQUFpQkksU0FBUyxTQUFTO1lBQ3pELElBQUksQ0FBQ2hCLFdBQVc7UUFDbEIsT0FBTyxJQUFJWSxvQkFBb0JBLGlCQUFpQkksU0FBUyxVQUFVO1lBQ2pFLElBQUksQ0FBQ2hCLFdBQVc7UUFDbEIsT0FBTyxJQUFJWSxrQkFBa0I7WUFDM0IsTUFBTSxJQUFJbEIsVUFDUjtRQUVKLE9BQU87WUFDTCxJQUFJLENBQUNNLFdBQVc7UUFDbEI7SUFDRixPQUFPLElBQUksT0FBTyxJQUFJLENBQUNBLGFBQWEsWUFBWSxDQUFDO1FBQUM7UUFBUztLQUFPLENBQUNnQixTQUFTLElBQUksQ0FBQ2hCLFdBQVc7UUFDMUYsTUFBTSxJQUFJTixVQUFVLENBQUMsRUFBRSxJQUFJLENBQUNNLFNBQVMsb0RBQW9ELENBQUM7SUFDNUY7SUFFQSxJQUFJLENBQUNpQixPQUFPbEQsSUFBSW1DLE1BQU1mLE9BQU9RLE9BQU9BLFFBQVFRO0FBQzlDO0FBRUFqQixzQkFBc0JnQyxVQUFVQyxlQUFlLFNBQVNBLGFBQWFDLEdBQUcsRUFBRUMsT0FBTztJQUM5RTtRQUNDLE1BQU1sQyxTQUFTLElBQUksQ0FBQ1M7UUFDcEIsSUFBSSxDQUFDd0IsSUFBSUUsU0FBUztZQUNoQixNQUFNLElBQUk1QixVQUFVO1FBQ3RCO1FBQ0EsTUFBTTZCLFlBQVlwQyxPQUFPcUMsZUFBZUo7UUFDeEMsTUFBTTlCLGFBQWEsSUFBSSxDQUFDVztRQUV4QixNQUFNLEVBQUUsR0FBR3dCLFVBQVMsRUFBRUMsT0FBTSxFQUFFLEdBQUdDLE9BQU9DLEtBQUtMO1FBRTdDOzs7O0tBSUMsR0FDRCxJQUFJRyxXQUFXLEtBQU1BLFdBQVcsS0FBS0QsY0FBYyxPQUFRO1lBQ3pELDhEQUE4RDtZQUM5RCxNQUFNckMsU0FBUztnQkFDYmlCLE9BQU8vQjtnQkFDUCxHQUFHLElBQUksQ0FBQzhCLE9BQU87Z0JBQ2YsR0FBR2lCLE9BQU87WUFDWjtZQUVBLElBQUksQ0FBQ2pDLE9BQU9rQixTQUFTbEIsT0FBT29CLGNBQWNRLFNBQVMsYUFBYTtnQkFDOUQ1QixPQUFPa0IsUUFBUWhDO1lBQ2pCO1lBRUE4QyxJQUFJRSxPQUFPLENBQUNoQyxXQUFXLEdBQUdkLEtBQUtZLFFBQVEsU0FBUyxTQUFTLFdBQVc7WUFFcEUsSUFBSSxJQUFJLENBQUNZLFlBQVlaLE9BQU9vQixjQUFjUSxTQUFTLFNBQVM7Z0JBQzFELE1BQU1hLFdBQVd2RDtnQkFDakI4QyxJQUFJRSxPQUFPLENBQUNoQyxXQUFXLENBQUN3QyxnQkFBZ0JEO2dCQUV4QyxPQUFRLElBQUksQ0FBQzdCO29CQUNYLEtBQUs7d0JBQ0haLE9BQU8yQyxpQkFBaUJ4RCxjQUFjc0Q7d0JBQ3RDekMsT0FBTzRDLHdCQUF3Qjt3QkFDL0I7b0JBQ0YsS0FBSzt3QkFDSDVDLE9BQU8yQyxpQkFBaUJGO3dCQUN4QjtnQkFDSjtZQUNGO1lBRUEsSUFBSSxDQUFDSSxTQUFTOUMsT0FBTytDLGlCQUFpQjlDO1lBQ3RDO1FBQ0Y7UUFDQSw4QkFBOEIsR0FFOUIsaUNBQWlDLEdBRWpDLE1BQU1rQyxVQUFVRixJQUFJRSxPQUFPLENBQUNoQyxXQUFXO1FBQ3ZDLElBQUlxQyxPQUFPQyxLQUFLTixXQUFXLENBQUMsR0FBR0ksV0FBVyxHQUFHO1lBQzNDLE1BQU0sSUFBSVMsTUFDUmxFLE9BQ0UsMkZBQ0FxQixZQUNBZ0M7UUFHTjtRQUVBLE1BQU0sRUFDSmpCLE1BQUssRUFDTEMsTUFBSyxFQUNMOEIsU0FBU0MsT0FBTSxFQUNmUCxlQUFlUSxhQUFZLEVBQzNCOUIsZUFBZStCLGFBQVksRUFDNUIsR0FBR2pCO1FBRUosSUFBSTtZQUNGLE9BQU9GLElBQUlFLE9BQU8sQ0FBQ2hDLFdBQVc7UUFDaEMsRUFBRSxPQUFPVixLQUFLLENBQUM7UUFFZixNQUFNNEQsT0FBTztZQUNYOUIsY0FBYyxJQUFJLENBQUNOLFFBQVFNO1lBQzNCLEdBQUdXLE9BQU87UUFDWjtRQUVBLE1BQU1vQixTQUFTO1lBQ2JwQztZQUNBQztZQUNBOEIsU0FBU0M7WUFDVFAsZUFBZVE7WUFDZjlCLGVBQWUrQjtRQUNqQjtRQUVBLE1BQU1HLFdBQVcsTUFBTXZELE9BQU93RCxTQUFTSCxLQUFLOUIsY0FBY2EsV0FBV2tCLFFBQVEsSUFBSSxDQUFDbEM7UUFFbEYsTUFBTXFDLFVBQVUsSUFBSSxDQUFDN0M7UUFDckIsTUFBTThDLGVBQWUsSUFBSSxDQUFDL0MsUUFBUTRCLFNBQVVrQixDQUFBQSxVQUFVLElBQUksTUFBTXpELE9BQU9RLE9BQU9tRDtRQUU5RSxNQUFNQyxPQUFPO1lBQUNMO1lBQVUvRCxTQUFTcUUsS0FBSyxJQUFJO1NBQUU7UUFFNUMsSUFBSUgsY0FBYztZQUNoQixJQUFJLENBQUNILFNBQVNPLGNBQWM7Z0JBQzFCLE1BQU0sSUFBSTlFLFFBQVE7b0JBQ2hCK0UsU0FDRTtvQkFDRlI7Z0JBQ0Y7WUFDRjtZQUNBLE1BQU1TLFdBQVcsTUFBTWhFLE9BQU9nRSxTQUFTVDtZQUN2Q0ssS0FBS0ssT0FBTyxHQUFHLEdBQUdEO1FBQ3BCO1FBRUEsSUFBSVAsU0FBUztZQUNYRyxLQUFLTSxRQUFRakM7UUFDZjtRQUVBLElBQUksQ0FBQ3RCLFdBQVdpRDtJQUNoQiwrQkFBK0IsR0FDakMsS0FBS08sTUFBTSxDQUFDdkU7UUFDVixJQUNFLGlCQUFrQlgsV0FDaEJXLE1BQU1BLFVBQVUsa0JBQ2hCLENBQUNBLE1BQU1BLE1BQU13RSxXQUFXLGNBQzFCeEUsaUJBQWlCWixTQUNqQjtZQUNBLElBQUksQ0FBQ2EsS0FBS0Q7UUFDWixPQUFPO1lBQ0wsSUFBSSxDQUFDQSxNQUFNQTtRQUNiO0lBQ0Y7QUFDRjtBQUVBeUUsT0FBT0MsVUFBVXZFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZnVsbHN0YWNrLXJvbGUtYmFzZWQtbmV4dGpzLTIvLi9ub2RlX21vZHVsZXMvb3BlbmlkLWNsaWVudC9saWIvcGFzc3BvcnRfc3RyYXRlZ3kuanM/MmFmOCJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCB1cmwgPSByZXF1aXJlKCd1cmwnKTtcbmNvbnN0IHsgZm9ybWF0IH0gPSByZXF1aXJlKCd1dGlsJyk7XG5cbmNvbnN0IGNsb25lRGVlcCA9IHJlcXVpcmUoJy4vaGVscGVycy9kZWVwX2Nsb25lJyk7XG5jb25zdCB7IFJQRXJyb3IsIE9QRXJyb3IgfSA9IHJlcXVpcmUoJy4vZXJyb3JzJyk7XG5jb25zdCB7IEJhc2VDbGllbnQgfSA9IHJlcXVpcmUoJy4vY2xpZW50Jyk7XG5jb25zdCB7IHJhbmRvbSwgY29kZUNoYWxsZW5nZSB9ID0gcmVxdWlyZSgnLi9oZWxwZXJzL2dlbmVyYXRvcnMnKTtcbmNvbnN0IHBpY2sgPSByZXF1aXJlKCcuL2hlbHBlcnMvcGljaycpO1xuY29uc3QgeyByZXNvbHZlUmVzcG9uc2VUeXBlLCByZXNvbHZlUmVkaXJlY3RVcmkgfSA9IHJlcXVpcmUoJy4vaGVscGVycy9jbGllbnQnKTtcblxuZnVuY3Rpb24gdmVyaWZpZWQoZXJyLCB1c2VyLCBpbmZvID0ge30pIHtcbiAgaWYgKGVycikge1xuICAgIHRoaXMuZXJyb3IoZXJyKTtcbiAgfSBlbHNlIGlmICghdXNlcikge1xuICAgIHRoaXMuZmFpbChpbmZvKTtcbiAgfSBlbHNlIHtcbiAgICB0aGlzLnN1Y2Nlc3ModXNlciwgaW5mbyk7XG4gIH1cbn1cblxuZnVuY3Rpb24gT3BlbklEQ29ubmVjdFN0cmF0ZWd5KFxuICB7IGNsaWVudCwgcGFyYW1zID0ge30sIHBhc3NSZXFUb0NhbGxiYWNrID0gZmFsc2UsIHNlc3Npb25LZXksIHVzZVBLQ0UgPSB0cnVlLCBleHRyYXMgPSB7fSB9ID0ge30sXG4gIHZlcmlmeSxcbikge1xuICBpZiAoIShjbGllbnQgaW5zdGFuY2VvZiBCYXNlQ2xpZW50KSkge1xuICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ2NsaWVudCBtdXN0IGJlIGFuIGluc3RhbmNlIG9mIG9wZW5pZC1jbGllbnQgQ2xpZW50Jyk7XG4gIH1cblxuICBpZiAodHlwZW9mIHZlcmlmeSAhPT0gJ2Z1bmN0aW9uJykge1xuICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ3ZlcmlmeSBjYWxsYmFjayBtdXN0IGJlIGEgZnVuY3Rpb24nKTtcbiAgfVxuXG4gIGlmICghY2xpZW50Lmlzc3VlciB8fCAhY2xpZW50Lmlzc3Vlci5pc3N1ZXIpIHtcbiAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdjbGllbnQgbXVzdCBoYXZlIGFuIGlzc3VlciB3aXRoIGFuIGlkZW50aWZpZXInKTtcbiAgfVxuXG4gIHRoaXMuX2NsaWVudCA9IGNsaWVudDtcbiAgdGhpcy5faXNzdWVyID0gY2xpZW50Lmlzc3VlcjtcbiAgdGhpcy5fdmVyaWZ5ID0gdmVyaWZ5O1xuICB0aGlzLl9wYXNzUmVxVG9DYWxsYmFjayA9IHBhc3NSZXFUb0NhbGxiYWNrO1xuICB0aGlzLl91c2VQS0NFID0gdXNlUEtDRTtcbiAgdGhpcy5fa2V5ID0gc2Vzc2lvbktleSB8fCBgb2lkYzoke3VybC5wYXJzZSh0aGlzLl9pc3N1ZXIuaXNzdWVyKS5ob3N0bmFtZX1gO1xuICB0aGlzLl9wYXJhbXMgPSBjbG9uZURlZXAocGFyYW1zKTtcblxuICAvLyBzdGF0ZSBhbmQgbm9uY2UgYXJlIGhhbmRsZWQgaW4gYXV0aGVudGljYXRlKClcbiAgZGVsZXRlIHRoaXMuX3BhcmFtcy5zdGF0ZTtcbiAgZGVsZXRlIHRoaXMuX3BhcmFtcy5ub25jZTtcblxuICB0aGlzLl9leHRyYXMgPSBjbG9uZURlZXAoZXh0cmFzKTtcblxuICBpZiAoIXRoaXMuX3BhcmFtcy5yZXNwb25zZV90eXBlKSB0aGlzLl9wYXJhbXMucmVzcG9uc2VfdHlwZSA9IHJlc29sdmVSZXNwb25zZVR5cGUuY2FsbChjbGllbnQpO1xuICBpZiAoIXRoaXMuX3BhcmFtcy5yZWRpcmVjdF91cmkpIHRoaXMuX3BhcmFtcy5yZWRpcmVjdF91cmkgPSByZXNvbHZlUmVkaXJlY3RVcmkuY2FsbChjbGllbnQpO1xuICBpZiAoIXRoaXMuX3BhcmFtcy5zY29wZSkgdGhpcy5fcGFyYW1zLnNjb3BlID0gJ29wZW5pZCc7XG5cbiAgaWYgKHRoaXMuX3VzZVBLQ0UgPT09IHRydWUpIHtcbiAgICBjb25zdCBzdXBwb3J0ZWRNZXRob2RzID0gQXJyYXkuaXNBcnJheSh0aGlzLl9pc3N1ZXIuY29kZV9jaGFsbGVuZ2VfbWV0aG9kc19zdXBwb3J0ZWQpXG4gICAgICA/IHRoaXMuX2lzc3Vlci5jb2RlX2NoYWxsZW5nZV9tZXRob2RzX3N1cHBvcnRlZFxuICAgICAgOiBmYWxzZTtcblxuICAgIGlmIChzdXBwb3J0ZWRNZXRob2RzICYmIHN1cHBvcnRlZE1ldGhvZHMuaW5jbHVkZXMoJ1MyNTYnKSkge1xuICAgICAgdGhpcy5fdXNlUEtDRSA9ICdTMjU2JztcbiAgICB9IGVsc2UgaWYgKHN1cHBvcnRlZE1ldGhvZHMgJiYgc3VwcG9ydGVkTWV0aG9kcy5pbmNsdWRlcygncGxhaW4nKSkge1xuICAgICAgdGhpcy5fdXNlUEtDRSA9ICdwbGFpbic7XG4gICAgfSBlbHNlIGlmIChzdXBwb3J0ZWRNZXRob2RzKSB7XG4gICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKFxuICAgICAgICAnbmVpdGhlciBjb2RlX2NoYWxsZW5nZV9tZXRob2Qgc3VwcG9ydGVkIGJ5IHRoZSBjbGllbnQgaXMgc3VwcG9ydGVkIGJ5IHRoZSBpc3N1ZXInLFxuICAgICAgKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy5fdXNlUEtDRSA9ICdTMjU2JztcbiAgICB9XG4gIH0gZWxzZSBpZiAodHlwZW9mIHRoaXMuX3VzZVBLQ0UgPT09ICdzdHJpbmcnICYmICFbJ3BsYWluJywgJ1MyNTYnXS5pbmNsdWRlcyh0aGlzLl91c2VQS0NFKSkge1xuICAgIHRocm93IG5ldyBUeXBlRXJyb3IoYCR7dGhpcy5fdXNlUEtDRX0gaXMgbm90IHZhbGlkL2ltcGxlbWVudGVkIFBLQ0UgY29kZV9jaGFsbGVuZ2VfbWV0aG9kYCk7XG4gIH1cblxuICB0aGlzLm5hbWUgPSB1cmwucGFyc2UoY2xpZW50Lmlzc3Vlci5pc3N1ZXIpLmhvc3RuYW1lO1xufVxuXG5PcGVuSURDb25uZWN0U3RyYXRlZ3kucHJvdG90eXBlLmF1dGhlbnRpY2F0ZSA9IGZ1bmN0aW9uIGF1dGhlbnRpY2F0ZShyZXEsIG9wdGlvbnMpIHtcbiAgKGFzeW5jICgpID0+IHtcbiAgICBjb25zdCBjbGllbnQgPSB0aGlzLl9jbGllbnQ7XG4gICAgaWYgKCFyZXEuc2Vzc2lvbikge1xuICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcignYXV0aGVudGljYXRpb24gcmVxdWlyZXMgc2Vzc2lvbiBzdXBwb3J0Jyk7XG4gICAgfVxuICAgIGNvbnN0IHJlcVBhcmFtcyA9IGNsaWVudC5jYWxsYmFja1BhcmFtcyhyZXEpO1xuICAgIGNvbnN0IHNlc3Npb25LZXkgPSB0aGlzLl9rZXk7XG5cbiAgICBjb25zdCB7IDA6IHBhcmFtZXRlciwgbGVuZ3RoIH0gPSBPYmplY3Qua2V5cyhyZXFQYXJhbXMpO1xuXG4gICAgLyoqXG4gICAgICogU3RhcnQgYXV0aGVudGljYXRpb24gcmVxdWVzdCBpZiB0aGlzIGhhcyBubyBhdXRob3JpemF0aW9uIHJlc3BvbnNlIHBhcmFtZXRlcnMgb3JcbiAgICAgKiB0aGlzIG1pZ2h0IGEgbG9naW4gaW5pdGlhdGVkIGZyb20gYSB0aGlyZCBwYXJ0eSBhcyBwZXJcbiAgICAgKiBodHRwczovL29wZW5pZC5uZXQvc3BlY3Mvb3BlbmlkLWNvbm5lY3QtY29yZS0xXzAuaHRtbCNUaGlyZFBhcnR5SW5pdGlhdGVkTG9naW4uXG4gICAgICovXG4gICAgaWYgKGxlbmd0aCA9PT0gMCB8fCAobGVuZ3RoID09PSAxICYmIHBhcmFtZXRlciA9PT0gJ2lzcycpKSB7XG4gICAgICAvLyBwcm92aWRlIG9wdGlvbnMgb2JqZWN0IHdpdGggZXh0cmEgYXV0aGVudGljYXRpb24gcGFyYW1ldGVyc1xuICAgICAgY29uc3QgcGFyYW1zID0ge1xuICAgICAgICBzdGF0ZTogcmFuZG9tKCksXG4gICAgICAgIC4uLnRoaXMuX3BhcmFtcyxcbiAgICAgICAgLi4ub3B0aW9ucyxcbiAgICAgIH07XG5cbiAgICAgIGlmICghcGFyYW1zLm5vbmNlICYmIHBhcmFtcy5yZXNwb25zZV90eXBlLmluY2x1ZGVzKCdpZF90b2tlbicpKSB7XG4gICAgICAgIHBhcmFtcy5ub25jZSA9IHJhbmRvbSgpO1xuICAgICAgfVxuXG4gICAgICByZXEuc2Vzc2lvbltzZXNzaW9uS2V5XSA9IHBpY2socGFyYW1zLCAnbm9uY2UnLCAnc3RhdGUnLCAnbWF4X2FnZScsICdyZXNwb25zZV90eXBlJyk7XG5cbiAgICAgIGlmICh0aGlzLl91c2VQS0NFICYmIHBhcmFtcy5yZXNwb25zZV90eXBlLmluY2x1ZGVzKCdjb2RlJykpIHtcbiAgICAgICAgY29uc3QgdmVyaWZpZXIgPSByYW5kb20oKTtcbiAgICAgICAgcmVxLnNlc3Npb25bc2Vzc2lvbktleV0uY29kZV92ZXJpZmllciA9IHZlcmlmaWVyO1xuXG4gICAgICAgIHN3aXRjaCAodGhpcy5fdXNlUEtDRSkge1xuICAgICAgICAgIGNhc2UgJ1MyNTYnOlxuICAgICAgICAgICAgcGFyYW1zLmNvZGVfY2hhbGxlbmdlID0gY29kZUNoYWxsZW5nZSh2ZXJpZmllcik7XG4gICAgICAgICAgICBwYXJhbXMuY29kZV9jaGFsbGVuZ2VfbWV0aG9kID0gJ1MyNTYnO1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgY2FzZSAncGxhaW4nOlxuICAgICAgICAgICAgcGFyYW1zLmNvZGVfY2hhbGxlbmdlID0gdmVyaWZpZXI7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICB0aGlzLnJlZGlyZWN0KGNsaWVudC5hdXRob3JpemF0aW9uVXJsKHBhcmFtcykpO1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICAvKiBlbmQgYXV0aGVudGljYXRpb24gcmVxdWVzdCAqL1xuXG4gICAgLyogc3RhcnQgYXV0aGVudGljYXRpb24gcmVzcG9uc2UgKi9cblxuICAgIGNvbnN0IHNlc3Npb24gPSByZXEuc2Vzc2lvbltzZXNzaW9uS2V5XTtcbiAgICBpZiAoT2JqZWN0LmtleXMoc2Vzc2lvbiB8fCB7fSkubGVuZ3RoID09PSAwKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoXG4gICAgICAgIGZvcm1hdChcbiAgICAgICAgICAnZGlkIG5vdCBmaW5kIGV4cGVjdGVkIGF1dGhvcml6YXRpb24gcmVxdWVzdCBkZXRhaWxzIGluIHNlc3Npb24sIHJlcS5zZXNzaW9uW1wiJXNcIl0gaXMgJWonLFxuICAgICAgICAgIHNlc3Npb25LZXksXG4gICAgICAgICAgc2Vzc2lvbixcbiAgICAgICAgKSxcbiAgICAgICk7XG4gICAgfVxuXG4gICAgY29uc3Qge1xuICAgICAgc3RhdGUsXG4gICAgICBub25jZSxcbiAgICAgIG1heF9hZ2U6IG1heEFnZSxcbiAgICAgIGNvZGVfdmVyaWZpZXI6IGNvZGVWZXJpZmllcixcbiAgICAgIHJlc3BvbnNlX3R5cGU6IHJlc3BvbnNlVHlwZSxcbiAgICB9ID0gc2Vzc2lvbjtcblxuICAgIHRyeSB7XG4gICAgICBkZWxldGUgcmVxLnNlc3Npb25bc2Vzc2lvbktleV07XG4gICAgfSBjYXRjaCAoZXJyKSB7fVxuXG4gICAgY29uc3Qgb3B0cyA9IHtcbiAgICAgIHJlZGlyZWN0X3VyaTogdGhpcy5fcGFyYW1zLnJlZGlyZWN0X3VyaSxcbiAgICAgIC4uLm9wdGlvbnMsXG4gICAgfTtcblxuICAgIGNvbnN0IGNoZWNrcyA9IHtcbiAgICAgIHN0YXRlLFxuICAgICAgbm9uY2UsXG4gICAgICBtYXhfYWdlOiBtYXhBZ2UsXG4gICAgICBjb2RlX3ZlcmlmaWVyOiBjb2RlVmVyaWZpZXIsXG4gICAgICByZXNwb25zZV90eXBlOiByZXNwb25zZVR5cGUsXG4gICAgfTtcblxuICAgIGNvbnN0IHRva2Vuc2V0ID0gYXdhaXQgY2xpZW50LmNhbGxiYWNrKG9wdHMucmVkaXJlY3RfdXJpLCByZXFQYXJhbXMsIGNoZWNrcywgdGhpcy5fZXh0cmFzKTtcblxuICAgIGNvbnN0IHBhc3NSZXEgPSB0aGlzLl9wYXNzUmVxVG9DYWxsYmFjaztcbiAgICBjb25zdCBsb2FkVXNlcmluZm8gPSB0aGlzLl92ZXJpZnkubGVuZ3RoID4gKHBhc3NSZXEgPyAzIDogMikgJiYgY2xpZW50Lmlzc3Vlci51c2VyaW5mb19lbmRwb2ludDtcblxuICAgIGNvbnN0IGFyZ3MgPSBbdG9rZW5zZXQsIHZlcmlmaWVkLmJpbmQodGhpcyldO1xuXG4gICAgaWYgKGxvYWRVc2VyaW5mbykge1xuICAgICAgaWYgKCF0b2tlbnNldC5hY2Nlc3NfdG9rZW4pIHtcbiAgICAgICAgdGhyb3cgbmV3IFJQRXJyb3Ioe1xuICAgICAgICAgIG1lc3NhZ2U6XG4gICAgICAgICAgICAnZXhwZWN0ZWQgYWNjZXNzX3Rva2VuIHRvIGJlIHJldHVybmVkIHdoZW4gYXNraW5nIGZvciB1c2VyaW5mbyBpbiB2ZXJpZnkgY2FsbGJhY2snLFxuICAgICAgICAgIHRva2Vuc2V0LFxuICAgICAgICB9KTtcbiAgICAgIH1cbiAgICAgIGNvbnN0IHVzZXJpbmZvID0gYXdhaXQgY2xpZW50LnVzZXJpbmZvKHRva2Vuc2V0KTtcbiAgICAgIGFyZ3Muc3BsaWNlKDEsIDAsIHVzZXJpbmZvKTtcbiAgICB9XG5cbiAgICBpZiAocGFzc1JlcSkge1xuICAgICAgYXJncy51bnNoaWZ0KHJlcSk7XG4gICAgfVxuXG4gICAgdGhpcy5fdmVyaWZ5KC4uLmFyZ3MpO1xuICAgIC8qIGVuZCBhdXRoZW50aWNhdGlvbiByZXNwb25zZSAqL1xuICB9KSgpLmNhdGNoKChlcnJvcikgPT4ge1xuICAgIGlmIChcbiAgICAgIChlcnJvciBpbnN0YW5jZW9mIE9QRXJyb3IgJiZcbiAgICAgICAgZXJyb3IuZXJyb3IgIT09ICdzZXJ2ZXJfZXJyb3InICYmXG4gICAgICAgICFlcnJvci5lcnJvci5zdGFydHNXaXRoKCdpbnZhbGlkJykpIHx8XG4gICAgICBlcnJvciBpbnN0YW5jZW9mIFJQRXJyb3JcbiAgICApIHtcbiAgICAgIHRoaXMuZmFpbChlcnJvcik7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMuZXJyb3IoZXJyb3IpO1xuICAgIH1cbiAgfSk7XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IE9wZW5JRENvbm5lY3RTdHJhdGVneTtcbiJdLCJuYW1lcyI6WyJ1cmwiLCJyZXF1aXJlIiwiZm9ybWF0IiwiY2xvbmVEZWVwIiwiUlBFcnJvciIsIk9QRXJyb3IiLCJCYXNlQ2xpZW50IiwicmFuZG9tIiwiY29kZUNoYWxsZW5nZSIsInBpY2siLCJyZXNvbHZlUmVzcG9uc2VUeXBlIiwicmVzb2x2ZVJlZGlyZWN0VXJpIiwidmVyaWZpZWQiLCJlcnIiLCJ1c2VyIiwiaW5mbyIsImVycm9yIiwiZmFpbCIsInN1Y2Nlc3MiLCJPcGVuSURDb25uZWN0U3RyYXRlZ3kiLCJjbGllbnQiLCJwYXJhbXMiLCJwYXNzUmVxVG9DYWxsYmFjayIsInNlc3Npb25LZXkiLCJ1c2VQS0NFIiwiZXh0cmFzIiwidmVyaWZ5IiwiVHlwZUVycm9yIiwiaXNzdWVyIiwiX2NsaWVudCIsIl9pc3N1ZXIiLCJfdmVyaWZ5IiwiX3Bhc3NSZXFUb0NhbGxiYWNrIiwiX3VzZVBLQ0UiLCJfa2V5IiwicGFyc2UiLCJob3N0bmFtZSIsIl9wYXJhbXMiLCJzdGF0ZSIsIm5vbmNlIiwiX2V4dHJhcyIsInJlc3BvbnNlX3R5cGUiLCJjYWxsIiwicmVkaXJlY3RfdXJpIiwic2NvcGUiLCJzdXBwb3J0ZWRNZXRob2RzIiwiQXJyYXkiLCJpc0FycmF5IiwiY29kZV9jaGFsbGVuZ2VfbWV0aG9kc19zdXBwb3J0ZWQiLCJpbmNsdWRlcyIsIm5hbWUiLCJwcm90b3R5cGUiLCJhdXRoZW50aWNhdGUiLCJyZXEiLCJvcHRpb25zIiwic2Vzc2lvbiIsInJlcVBhcmFtcyIsImNhbGxiYWNrUGFyYW1zIiwicGFyYW1ldGVyIiwibGVuZ3RoIiwiT2JqZWN0Iiwia2V5cyIsInZlcmlmaWVyIiwiY29kZV92ZXJpZmllciIsImNvZGVfY2hhbGxlbmdlIiwiY29kZV9jaGFsbGVuZ2VfbWV0aG9kIiwicmVkaXJlY3QiLCJhdXRob3JpemF0aW9uVXJsIiwiRXJyb3IiLCJtYXhfYWdlIiwibWF4QWdlIiwiY29kZVZlcmlmaWVyIiwicmVzcG9uc2VUeXBlIiwib3B0cyIsImNoZWNrcyIsInRva2Vuc2V0IiwiY2FsbGJhY2siLCJwYXNzUmVxIiwibG9hZFVzZXJpbmZvIiwidXNlcmluZm9fZW5kcG9pbnQiLCJhcmdzIiwiYmluZCIsImFjY2Vzc190b2tlbiIsIm1lc3NhZ2UiLCJ1c2VyaW5mbyIsInNwbGljZSIsInVuc2hpZnQiLCJjYXRjaCIsInN0YXJ0c1dpdGgiLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/openid-client/lib/passport_strategy.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/openid-client/lib/token_set.js":
/*!*****************************************************!*\
  !*** ./node_modules/openid-client/lib/token_set.js ***!
  \*****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nconst base64url = __webpack_require__(/*! ./helpers/base64url */ \"(sc_server)/./node_modules/openid-client/lib/helpers/base64url.js\");\nconst now = __webpack_require__(/*! ./helpers/unix_timestamp */ \"(sc_server)/./node_modules/openid-client/lib/helpers/unix_timestamp.js\");\nclass TokenSet {\n    constructor(values){\n        Object.assign(this, values);\n        const { constructor , ...properties } = Object.getOwnPropertyDescriptors(this.constructor.prototype);\n        Object.defineProperties(this, properties);\n    }\n    set expires_in(value) {\n        this.expires_at = now() + Number(value);\n    }\n    get expires_in() {\n        return Math.max.apply(null, [\n            this.expires_at - now(),\n            0\n        ]);\n    }\n    expired() {\n        return this.expires_in === 0;\n    }\n    claims() {\n        if (!this.id_token) {\n            throw new TypeError(\"id_token not present in TokenSet\");\n        }\n        return JSON.parse(base64url.decode(this.id_token.split(\".\")[1]));\n    }\n}\nmodule.exports = TokenSet;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvb3BlbmlkLWNsaWVudC9saWIvdG9rZW5fc2V0LmpzIiwibWFwcGluZ3MiOiI7QUFBQSxNQUFNQSxZQUFZQyxtQkFBT0EsQ0FBQztBQUMxQixNQUFNQyxNQUFNRCxtQkFBT0EsQ0FBQztBQUVwQixNQUFNRTtJQUNKQyxZQUFZQyxNQUFNLENBQUU7UUFDbEJDLE9BQU9DLE9BQU8sSUFBSSxFQUFFRjtRQUNwQixNQUFNLEVBQUVELFlBQVcsRUFBRSxHQUFHSSxZQUFZLEdBQUdGLE9BQU9HLDBCQUM1QyxJQUFJLENBQUNMLFlBQVlNO1FBR25CSixPQUFPSyxpQkFBaUIsSUFBSSxFQUFFSDtJQUNoQztJQUVBLElBQUlJLFdBQVdDLEtBQUssRUFBRTtRQUNwQixJQUFJLENBQUNDLGFBQWFaLFFBQVFhLE9BQU9GO0lBQ25DO0lBRUEsSUFBSUQsYUFBYTtRQUNmLE9BQU9JLEtBQUtDLElBQUlDLE1BQU0sTUFBTTtZQUFDLElBQUksQ0FBQ0osYUFBYVo7WUFBTztTQUFFO0lBQzFEO0lBRUFpQixVQUFVO1FBQ1IsT0FBTyxJQUFJLENBQUNQLGVBQWU7SUFDN0I7SUFFQVEsU0FBUztRQUNQLElBQUksQ0FBQyxJQUFJLENBQUNDLFVBQVU7WUFDbEIsTUFBTSxJQUFJQyxVQUFVO1FBQ3RCO1FBRUEsT0FBT0MsS0FBS0MsTUFBTXhCLFVBQVV5QixPQUFPLElBQUksQ0FBQ0osU0FBU0ssTUFBTSxJQUFJLENBQUMsRUFBRTtJQUNoRTtBQUNGO0FBRUFDLE9BQU9DLFVBQVV6QiIsInNvdXJjZXMiOlsid2VicGFjazovL2Z1bGxzdGFjay1yb2xlLWJhc2VkLW5leHRqcy0yLy4vbm9kZV9tb2R1bGVzL29wZW5pZC1jbGllbnQvbGliL3Rva2VuX3NldC5qcz8yODNiIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGJhc2U2NHVybCA9IHJlcXVpcmUoJy4vaGVscGVycy9iYXNlNjR1cmwnKTtcbmNvbnN0IG5vdyA9IHJlcXVpcmUoJy4vaGVscGVycy91bml4X3RpbWVzdGFtcCcpO1xuXG5jbGFzcyBUb2tlblNldCB7XG4gIGNvbnN0cnVjdG9yKHZhbHVlcykge1xuICAgIE9iamVjdC5hc3NpZ24odGhpcywgdmFsdWVzKTtcbiAgICBjb25zdCB7IGNvbnN0cnVjdG9yLCAuLi5wcm9wZXJ0aWVzIH0gPSBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycyhcbiAgICAgIHRoaXMuY29uc3RydWN0b3IucHJvdG90eXBlLFxuICAgICk7XG5cbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydGllcyh0aGlzLCBwcm9wZXJ0aWVzKTtcbiAgfVxuXG4gIHNldCBleHBpcmVzX2luKHZhbHVlKSB7XG4gICAgdGhpcy5leHBpcmVzX2F0ID0gbm93KCkgKyBOdW1iZXIodmFsdWUpO1xuICB9XG5cbiAgZ2V0IGV4cGlyZXNfaW4oKSB7XG4gICAgcmV0dXJuIE1hdGgubWF4LmFwcGx5KG51bGwsIFt0aGlzLmV4cGlyZXNfYXQgLSBub3coKSwgMF0pO1xuICB9XG5cbiAgZXhwaXJlZCgpIHtcbiAgICByZXR1cm4gdGhpcy5leHBpcmVzX2luID09PSAwO1xuICB9XG5cbiAgY2xhaW1zKCkge1xuICAgIGlmICghdGhpcy5pZF90b2tlbikge1xuICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcignaWRfdG9rZW4gbm90IHByZXNlbnQgaW4gVG9rZW5TZXQnKTtcbiAgICB9XG5cbiAgICByZXR1cm4gSlNPTi5wYXJzZShiYXNlNjR1cmwuZGVjb2RlKHRoaXMuaWRfdG9rZW4uc3BsaXQoJy4nKVsxXSkpO1xuICB9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gVG9rZW5TZXQ7XG4iXSwibmFtZXMiOlsiYmFzZTY0dXJsIiwicmVxdWlyZSIsIm5vdyIsIlRva2VuU2V0IiwiY29uc3RydWN0b3IiLCJ2YWx1ZXMiLCJPYmplY3QiLCJhc3NpZ24iLCJwcm9wZXJ0aWVzIiwiZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycyIsInByb3RvdHlwZSIsImRlZmluZVByb3BlcnRpZXMiLCJleHBpcmVzX2luIiwidmFsdWUiLCJleHBpcmVzX2F0IiwiTnVtYmVyIiwiTWF0aCIsIm1heCIsImFwcGx5IiwiZXhwaXJlZCIsImNsYWltcyIsImlkX3Rva2VuIiwiVHlwZUVycm9yIiwiSlNPTiIsInBhcnNlIiwiZGVjb2RlIiwic3BsaXQiLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/openid-client/lib/token_set.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/openid-client/node_modules/object-hash/index.js":
/*!**********************************************************************!*\
  !*** ./node_modules/openid-client/node_modules/object-hash/index.js ***!
  \**********************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
eval("\nvar crypto = __webpack_require__(/*! crypto */ \"crypto\");\n/**\n * Exported function\n *\n * Options:\n *\n *  - `algorithm` hash algo to be used by this instance: *'sha1', 'md5'\n *  - `excludeValues` {true|*false} hash object keys, values ignored\n *  - `encoding` hash encoding, supports 'buffer', '*hex', 'binary', 'base64'\n *  - `ignoreUnknown` {true|*false} ignore unknown object types\n *  - `replacer` optional function that replaces values before hashing\n *  - `respectFunctionProperties` {*true|false} consider function properties when hashing\n *  - `respectFunctionNames` {*true|false} consider 'name' property of functions for hashing\n *  - `respectType` {*true|false} Respect special properties (prototype, constructor)\n *    when hashing to distinguish between types\n *  - `unorderedArrays` {true|*false} Sort all arrays before hashing\n *  - `unorderedSets` {*true|false} Sort `Set` and `Map` instances before hashing\n *  * = default\n *\n * @param {object} object value to hash\n * @param {object} options hashing options\n * @return {string} hash value\n * @api public\n */ exports = module.exports = objectHash;\nfunction objectHash(object, options) {\n    options = applyDefaults(object, options);\n    return hash(object, options);\n}\n/**\n * Exported sugar methods\n *\n * @param {object} object value to hash\n * @return {string} hash value\n * @api public\n */ exports.sha1 = function(object) {\n    return objectHash(object);\n};\nexports.keys = function(object) {\n    return objectHash(object, {\n        excludeValues: true,\n        algorithm: \"sha1\",\n        encoding: \"hex\"\n    });\n};\nexports.MD5 = function(object) {\n    return objectHash(object, {\n        algorithm: \"md5\",\n        encoding: \"hex\"\n    });\n};\nexports.keysMD5 = function(object) {\n    return objectHash(object, {\n        algorithm: \"md5\",\n        encoding: \"hex\",\n        excludeValues: true\n    });\n};\n// Internals\nvar hashes = crypto.getHashes ? crypto.getHashes().slice() : [\n    \"sha1\",\n    \"md5\"\n];\nhashes.push(\"passthrough\");\nvar encodings = [\n    \"buffer\",\n    \"hex\",\n    \"binary\",\n    \"base64\"\n];\nfunction applyDefaults(object, sourceOptions) {\n    sourceOptions = sourceOptions || {};\n    // create a copy rather than mutating\n    var options = {};\n    options.algorithm = sourceOptions.algorithm || \"sha1\";\n    options.encoding = sourceOptions.encoding || \"hex\";\n    options.excludeValues = sourceOptions.excludeValues ? true : false;\n    options.algorithm = options.algorithm.toLowerCase();\n    options.encoding = options.encoding.toLowerCase();\n    options.ignoreUnknown = sourceOptions.ignoreUnknown !== true ? false : true; // default to false\n    options.respectType = sourceOptions.respectType === false ? false : true; // default to true\n    options.respectFunctionNames = sourceOptions.respectFunctionNames === false ? false : true;\n    options.respectFunctionProperties = sourceOptions.respectFunctionProperties === false ? false : true;\n    options.unorderedArrays = sourceOptions.unorderedArrays !== true ? false : true; // default to false\n    options.unorderedSets = sourceOptions.unorderedSets === false ? false : true; // default to false\n    options.unorderedObjects = sourceOptions.unorderedObjects === false ? false : true; // default to true\n    options.replacer = sourceOptions.replacer || undefined;\n    options.excludeKeys = sourceOptions.excludeKeys || undefined;\n    if (typeof object === \"undefined\") {\n        throw new Error(\"Object argument required.\");\n    }\n    // if there is a case-insensitive match in the hashes list, accept it\n    // (i.e. SHA256 for sha256)\n    for(var i = 0; i < hashes.length; ++i){\n        if (hashes[i].toLowerCase() === options.algorithm.toLowerCase()) {\n            options.algorithm = hashes[i];\n        }\n    }\n    if (hashes.indexOf(options.algorithm) === -1) {\n        throw new Error('Algorithm \"' + options.algorithm + '\"  not supported. ' + \"supported values: \" + hashes.join(\", \"));\n    }\n    if (encodings.indexOf(options.encoding) === -1 && options.algorithm !== \"passthrough\") {\n        throw new Error('Encoding \"' + options.encoding + '\"  not supported. ' + \"supported values: \" + encodings.join(\", \"));\n    }\n    return options;\n}\n/** Check if the given function is a native function */ function isNativeFunction(f) {\n    if (typeof f !== \"function\") {\n        return false;\n    }\n    var exp = /^function\\s+\\w*\\s*\\(\\s*\\)\\s*{\\s+\\[native code\\]\\s+}$/i;\n    return exp.exec(Function.prototype.toString.call(f)) != null;\n}\nfunction hash(object, options) {\n    var hashingStream;\n    if (options.algorithm !== \"passthrough\") {\n        hashingStream = crypto.createHash(options.algorithm);\n    } else {\n        hashingStream = new PassThrough();\n    }\n    if (typeof hashingStream.write === \"undefined\") {\n        hashingStream.write = hashingStream.update;\n        hashingStream.end = hashingStream.update;\n    }\n    var hasher = typeHasher(options, hashingStream);\n    hasher.dispatch(object);\n    if (!hashingStream.update) {\n        hashingStream.end(\"\");\n    }\n    if (hashingStream.digest) {\n        return hashingStream.digest(options.encoding === \"buffer\" ? undefined : options.encoding);\n    }\n    var buf = hashingStream.read();\n    if (options.encoding === \"buffer\") {\n        return buf;\n    }\n    return buf.toString(options.encoding);\n}\n/**\n * Expose streaming API\n *\n * @param {object} object  Value to serialize\n * @param {object} options  Options, as for hash()\n * @param {object} stream  A stream to write the serializiation to\n * @api public\n */ exports.writeToStream = function(object, options, stream) {\n    if (typeof stream === \"undefined\") {\n        stream = options;\n        options = {};\n    }\n    options = applyDefaults(object, options);\n    return typeHasher(options, stream).dispatch(object);\n};\nfunction typeHasher(options, writeTo, context) {\n    context = context || [];\n    var write = function(str) {\n        if (writeTo.update) {\n            return writeTo.update(str, \"utf8\");\n        } else {\n            return writeTo.write(str, \"utf8\");\n        }\n    };\n    return {\n        dispatch: function(value) {\n            if (options.replacer) {\n                value = options.replacer(value);\n            }\n            var type = typeof value;\n            if (value === null) {\n                type = \"null\";\n            }\n            //console.log(\"[DEBUG] Dispatch: \", value, \"->\", type, \" -> \", \"_\" + type);\n            return this[\"_\" + type](value);\n        },\n        _object: function(object) {\n            var pattern = /\\[object (.*)\\]/i;\n            var objString = Object.prototype.toString.call(object);\n            var objType = pattern.exec(objString);\n            if (!objType) {\n                objType = \"unknown:[\" + objString + \"]\";\n            } else {\n                objType = objType[1]; // take only the class name\n            }\n            objType = objType.toLowerCase();\n            var objectNumber = null;\n            if ((objectNumber = context.indexOf(object)) >= 0) {\n                return this.dispatch(\"[CIRCULAR:\" + objectNumber + \"]\");\n            } else {\n                context.push(object);\n            }\n            if (typeof Buffer !== \"undefined\" && Buffer.isBuffer && Buffer.isBuffer(object)) {\n                write(\"buffer:\");\n                return write(object);\n            }\n            if (objType !== \"object\" && objType !== \"function\" && objType !== \"asyncfunction\") {\n                if (this[\"_\" + objType]) {\n                    this[\"_\" + objType](object);\n                } else if (options.ignoreUnknown) {\n                    return write(\"[\" + objType + \"]\");\n                } else {\n                    throw new Error('Unknown object type \"' + objType + '\"');\n                }\n            } else {\n                var keys = Object.keys(object);\n                if (options.unorderedObjects) {\n                    keys = keys.sort();\n                }\n                // Make sure to incorporate special properties, so\n                // Types with different prototypes will produce\n                // a different hash and objects derived from\n                // different functions (`new Foo`, `new Bar`) will\n                // produce different hashes.\n                // We never do this for native functions since some\n                // seem to break because of that.\n                if (options.respectType !== false && !isNativeFunction(object)) {\n                    keys.splice(0, 0, \"prototype\", \"__proto__\", \"constructor\");\n                }\n                if (options.excludeKeys) {\n                    keys = keys.filter(function(key) {\n                        return !options.excludeKeys(key);\n                    });\n                }\n                write(\"object:\" + keys.length + \":\");\n                var self = this;\n                return keys.forEach(function(key) {\n                    self.dispatch(key);\n                    write(\":\");\n                    if (!options.excludeValues) {\n                        self.dispatch(object[key]);\n                    }\n                    write(\",\");\n                });\n            }\n        },\n        _array: function(arr, unordered) {\n            unordered = typeof unordered !== \"undefined\" ? unordered : options.unorderedArrays !== false; // default to options.unorderedArrays\n            var self = this;\n            write(\"array:\" + arr.length + \":\");\n            if (!unordered || arr.length <= 1) {\n                return arr.forEach(function(entry) {\n                    return self.dispatch(entry);\n                });\n            }\n            // the unordered case is a little more complicated:\n            // since there is no canonical ordering on objects,\n            // i.e. {a:1} < {a:2} and {a:1} > {a:2} are both false,\n            // we first serialize each entry using a PassThrough stream\n            // before sorting.\n            // also: we can’t use the same context array for all entries\n            // since the order of hashing should *not* matter. instead,\n            // we keep track of the additions to a copy of the context array\n            // and add all of them to the global context array when we’re done\n            var contextAdditions = [];\n            var entries = arr.map(function(entry) {\n                var strm = new PassThrough();\n                var localContext = context.slice(); // make copy\n                var hasher = typeHasher(options, strm, localContext);\n                hasher.dispatch(entry);\n                // take only what was added to localContext and append it to contextAdditions\n                contextAdditions = contextAdditions.concat(localContext.slice(context.length));\n                return strm.read().toString();\n            });\n            context = context.concat(contextAdditions);\n            entries.sort();\n            return this._array(entries, false);\n        },\n        _date: function(date) {\n            return write(\"date:\" + date.toJSON());\n        },\n        _symbol: function(sym) {\n            return write(\"symbol:\" + sym.toString());\n        },\n        _error: function(err) {\n            return write(\"error:\" + err.toString());\n        },\n        _boolean: function(bool) {\n            return write(\"bool:\" + bool.toString());\n        },\n        _string: function(string) {\n            write(\"string:\" + string.length + \":\");\n            write(string.toString());\n        },\n        _function: function(fn) {\n            write(\"fn:\");\n            if (isNativeFunction(fn)) {\n                this.dispatch(\"[native]\");\n            } else {\n                this.dispatch(fn.toString());\n            }\n            if (options.respectFunctionNames !== false) {\n                // Make sure we can still distinguish native functions\n                // by their name, otherwise String and Function will\n                // have the same hash\n                this.dispatch(\"function-name:\" + String(fn.name));\n            }\n            if (options.respectFunctionProperties) {\n                this._object(fn);\n            }\n        },\n        _number: function(number) {\n            return write(\"number:\" + number.toString());\n        },\n        _xml: function(xml) {\n            return write(\"xml:\" + xml.toString());\n        },\n        _null: function() {\n            return write(\"Null\");\n        },\n        _undefined: function() {\n            return write(\"Undefined\");\n        },\n        _regexp: function(regex) {\n            return write(\"regex:\" + regex.toString());\n        },\n        _uint8array: function(arr) {\n            write(\"uint8array:\");\n            return this.dispatch(Array.prototype.slice.call(arr));\n        },\n        _uint8clampedarray: function(arr) {\n            write(\"uint8clampedarray:\");\n            return this.dispatch(Array.prototype.slice.call(arr));\n        },\n        _int8array: function(arr) {\n            write(\"uint8array:\");\n            return this.dispatch(Array.prototype.slice.call(arr));\n        },\n        _uint16array: function(arr) {\n            write(\"uint16array:\");\n            return this.dispatch(Array.prototype.slice.call(arr));\n        },\n        _int16array: function(arr) {\n            write(\"uint16array:\");\n            return this.dispatch(Array.prototype.slice.call(arr));\n        },\n        _uint32array: function(arr) {\n            write(\"uint32array:\");\n            return this.dispatch(Array.prototype.slice.call(arr));\n        },\n        _int32array: function(arr) {\n            write(\"uint32array:\");\n            return this.dispatch(Array.prototype.slice.call(arr));\n        },\n        _float32array: function(arr) {\n            write(\"float32array:\");\n            return this.dispatch(Array.prototype.slice.call(arr));\n        },\n        _float64array: function(arr) {\n            write(\"float64array:\");\n            return this.dispatch(Array.prototype.slice.call(arr));\n        },\n        _arraybuffer: function(arr) {\n            write(\"arraybuffer:\");\n            return this.dispatch(new Uint8Array(arr));\n        },\n        _url: function(url) {\n            return write(\"url:\" + url.toString(), \"utf8\");\n        },\n        _map: function(map) {\n            write(\"map:\");\n            var arr = Array.from(map);\n            return this._array(arr, options.unorderedSets !== false);\n        },\n        _set: function(set) {\n            write(\"set:\");\n            var arr = Array.from(set);\n            return this._array(arr, options.unorderedSets !== false);\n        },\n        _file: function(file) {\n            write(\"file:\");\n            return this.dispatch([\n                file.name,\n                file.size,\n                file.type,\n                file.lastModfied\n            ]);\n        },\n        _blob: function() {\n            if (options.ignoreUnknown) {\n                return write(\"[blob]\");\n            }\n            throw Error(\"Hashing Blob objects is currently not supported\\n\" + \"(see https://github.com/puleos/object-hash/issues/26)\\n\" + 'Use \"options.replacer\" or \"options.ignoreUnknown\"\\n');\n        },\n        _domwindow: function() {\n            return write(\"domwindow\");\n        },\n        _bigint: function(number) {\n            return write(\"bigint:\" + number.toString());\n        },\n        /* Node.js standard native objects */ _process: function() {\n            return write(\"process\");\n        },\n        _timer: function() {\n            return write(\"timer\");\n        },\n        _pipe: function() {\n            return write(\"pipe\");\n        },\n        _tcp: function() {\n            return write(\"tcp\");\n        },\n        _udp: function() {\n            return write(\"udp\");\n        },\n        _tty: function() {\n            return write(\"tty\");\n        },\n        _statwatcher: function() {\n            return write(\"statwatcher\");\n        },\n        _securecontext: function() {\n            return write(\"securecontext\");\n        },\n        _connection: function() {\n            return write(\"connection\");\n        },\n        _zlib: function() {\n            return write(\"zlib\");\n        },\n        _context: function() {\n            return write(\"context\");\n        },\n        _nodescript: function() {\n            return write(\"nodescript\");\n        },\n        _httpparser: function() {\n            return write(\"httpparser\");\n        },\n        _dataview: function() {\n            return write(\"dataview\");\n        },\n        _signal: function() {\n            return write(\"signal\");\n        },\n        _fsevent: function() {\n            return write(\"fsevent\");\n        },\n        _tlswrap: function() {\n            return write(\"tlswrap\");\n        }\n    };\n}\n// Mini-implementation of stream.PassThrough\n// We are far from having need for the full implementation, and we can\n// make assumptions like \"many writes, then only one final read\"\n// and we can ignore encoding specifics\nfunction PassThrough() {\n    return {\n        buf: \"\",\n        write: function(b) {\n            this.buf += b;\n        },\n        end: function(b) {\n            this.buf += b;\n        },\n        read: function() {\n            return this.buf;\n        }\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/openid-client/node_modules/object-hash/index.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/preact-render-to-string/dist/commonjs.js":
/*!***************************************************************!*\
  !*** ./node_modules/preact-render-to-string/dist/commonjs.js ***!
  \***************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("!function(e, t) {\n     true ? t(exports, __webpack_require__(/*! preact */ \"(sc_server)/./node_modules/preact/dist/preact.js\")) : 0;\n}(this, function(e, t) {\n    var n = /acit|ex(?:s|g|n|p|$)|rph|grid|ows|mnc|ntw|ine[ch]|zoo|^ord|^--/i, r = /^(area|base|br|col|embed|hr|img|input|link|meta|param|source|track|wbr)$/, o = /[\\s\\n\\\\/='\"\\0<>]/, i = /^xlink:?./, s = /[\"&<]/;\n    function a(e) {\n        if (!1 === s.test(e += \"\")) return e;\n        for(var t = 0, n = 0, r = \"\", o = \"\"; n < e.length; n++){\n            switch(e.charCodeAt(n)){\n                case 34:\n                    o = \"&quot;\";\n                    break;\n                case 38:\n                    o = \"&amp;\";\n                    break;\n                case 60:\n                    o = \"&lt;\";\n                    break;\n                default:\n                    continue;\n            }\n            n !== t && (r += e.slice(t, n)), r += o, t = n + 1;\n        }\n        return n !== t && (r += e.slice(t, n)), r;\n    }\n    var l = function(e, t) {\n        return String(e).replace(/(\\n+)/g, \"$1\" + (t || \"\t\"));\n    }, f = function(e, t, n) {\n        return String(e).length > (t || 40) || !n && -1 !== String(e).indexOf(\"\\n\") || -1 !== String(e).indexOf(\"<\");\n    }, u = {}, p = /([A-Z])/g;\n    function c(e) {\n        var t = \"\";\n        for(var r in e){\n            var o = e[r];\n            null != o && \"\" !== o && (t && (t += \" \"), t += \"-\" == r[0] ? r : u[r] || (u[r] = r.replace(p, \"-$1\").toLowerCase()), t = \"number\" == typeof o && !1 === n.test(r) ? t + \": \" + o + \"px;\" : t + \": \" + o + \";\");\n        }\n        return t || void 0;\n    }\n    function _(e, t) {\n        return Array.isArray(t) ? t.reduce(_, e) : null != t && !1 !== t && e.push(t), e;\n    }\n    function d() {\n        this.__d = !0;\n    }\n    function v(e, t) {\n        return {\n            __v: e,\n            context: t,\n            props: e.props,\n            setState: d,\n            forceUpdate: d,\n            __d: !0,\n            __h: []\n        };\n    }\n    function g(e, t) {\n        var n = e.contextType, r = n && t[n.__c];\n        return null != n ? r ? r.props.value : n.__ : t;\n    }\n    var h = [];\n    function y(e, n, s, u, p, d) {\n        if (null == e || \"boolean\" == typeof e) return \"\";\n        if (\"object\" != typeof e) return \"function\" == typeof e ? \"\" : a(e);\n        var m = s.pretty, b = m && \"string\" == typeof m ? m : \"\t\";\n        if (Array.isArray(e)) {\n            for(var x = \"\", k = 0; k < e.length; k++)m && k > 0 && (x += \"\\n\"), x += y(e[k], n, s, u, p, d);\n            return x;\n        }\n        if (void 0 !== e.constructor) return \"\";\n        var S, w = e.type, C = e.props, O = !1;\n        if (\"function\" == typeof w) {\n            if (O = !0, !s.shallow || !u && !1 !== s.renderRootComponent) {\n                if (w === t.Fragment) {\n                    var j = [];\n                    return _(j, e.props.children), y(j, n, s, !1 !== s.shallowHighOrder, p, d);\n                }\n                var F, A = e.__c = v(e, n);\n                t.options.__b && t.options.__b(e);\n                var T = t.options.__r;\n                if (w.prototype && \"function\" == typeof w.prototype.render) {\n                    var H = g(w, n);\n                    (A = e.__c = new w(C, H)).__v = e, A._dirty = A.__d = !0, A.props = C, null == A.state && (A.state = {}), null == A._nextState && null == A.__s && (A._nextState = A.__s = A.state), A.context = H, w.getDerivedStateFromProps ? A.state = Object.assign({}, A.state, w.getDerivedStateFromProps(A.props, A.state)) : A.componentWillMount && (A.componentWillMount(), A.state = A._nextState !== A.state ? A._nextState : A.__s !== A.state ? A.__s : A.state), T && T(e), F = A.render(A.props, A.state, A.context);\n                } else for(var M = g(w, n), L = 0; A.__d && L++ < 25;)A.__d = !1, T && T(e), F = w.call(e.__c, C, M);\n                return A.getChildContext && (n = Object.assign({}, n, A.getChildContext())), t.options.diffed && t.options.diffed(e), y(F, n, s, !1 !== s.shallowHighOrder, p, d);\n            }\n            w = (S = w).displayName || S !== Function && S.name || function(e) {\n                var t = (Function.prototype.toString.call(e).match(/^\\s*function\\s+([^( ]+)/) || \"\")[1];\n                if (!t) {\n                    for(var n = -1, r = h.length; r--;)if (h[r] === e) {\n                        n = r;\n                        break;\n                    }\n                    n < 0 && (n = h.push(e) - 1), t = \"UnnamedComponent\" + n;\n                }\n                return t;\n            }(S);\n        }\n        var E, $, D = \"<\" + w;\n        if (C) {\n            var N = Object.keys(C);\n            s && !0 === s.sortAttributes && N.sort();\n            for(var P = 0; P < N.length; P++){\n                var R = N[P], W = C[R];\n                if (\"children\" !== R) {\n                    if (!o.test(R) && (s && s.allAttributes || \"key\" !== R && \"ref\" !== R && \"__self\" !== R && \"__source\" !== R)) {\n                        if (\"defaultValue\" === R) R = \"value\";\n                        else if (\"defaultChecked\" === R) R = \"checked\";\n                        else if (\"defaultSelected\" === R) R = \"selected\";\n                        else if (\"className\" === R) {\n                            if (void 0 !== C.class) continue;\n                            R = \"class\";\n                        } else p && i.test(R) && (R = R.toLowerCase().replace(/^xlink:?/, \"xlink:\"));\n                        if (\"htmlFor\" === R) {\n                            if (C.for) continue;\n                            R = \"for\";\n                        }\n                        \"style\" === R && W && \"object\" == typeof W && (W = c(W)), \"a\" === R[0] && \"r\" === R[1] && \"boolean\" == typeof W && (W = String(W));\n                        var q = s.attributeHook && s.attributeHook(R, W, n, s, O);\n                        if (q || \"\" === q) D += q;\n                        else if (\"dangerouslySetInnerHTML\" === R) $ = W && W.__html;\n                        else if (\"textarea\" === w && \"value\" === R) E = W;\n                        else if ((W || 0 === W || \"\" === W) && \"function\" != typeof W) {\n                            if (!(!0 !== W && \"\" !== W || (W = R, s && s.xml))) {\n                                D = D + \" \" + R;\n                                continue;\n                            }\n                            if (\"value\" === R) {\n                                if (\"select\" === w) {\n                                    d = W;\n                                    continue;\n                                }\n                                \"option\" === w && d == W && void 0 === C.selected && (D += \" selected\");\n                            }\n                            D = D + \" \" + R + '=\"' + a(W) + '\"';\n                        }\n                    }\n                } else E = W;\n            }\n        }\n        if (m) {\n            var I = D.replace(/\\n\\s*/, \" \");\n            I === D || ~I.indexOf(\"\\n\") ? m && ~D.indexOf(\"\\n\") && (D += \"\\n\") : D = I;\n        }\n        if (D += \">\", o.test(w)) throw new Error(w + \" is not a valid HTML tag name in \" + D);\n        var U, V = r.test(w) || s.voidElements && s.voidElements.test(w), z = [];\n        if ($) m && f($) && ($ = \"\\n\" + b + l($, b)), D += $;\n        else if (null != E && _(U = [], E).length) {\n            for(var Z = m && ~D.indexOf(\"\\n\"), B = !1, G = 0; G < U.length; G++){\n                var J = U[G];\n                if (null != J && !1 !== J) {\n                    var K = y(J, n, s, !0, \"svg\" === w || \"foreignObject\" !== w && p, d);\n                    if (m && !Z && f(K) && (Z = !0), K) if (m) {\n                        var Q = K.length > 0 && \"<\" != K[0];\n                        B && Q ? z[z.length - 1] += K : z.push(K), B = Q;\n                    } else z.push(K);\n                }\n            }\n            if (m && Z) for(var X = z.length; X--;)z[X] = \"\\n\" + b + l(z[X], b);\n        }\n        if (z.length || $) D += z.join(\"\");\n        else if (s && s.xml) return D.substring(0, D.length - 1) + \" />\";\n        return !V || U || $ ? (m && ~D.indexOf(\"\\n\") && (D += \"\\n\"), D = D + \"</\" + w + \">\") : D = D.replace(/>$/, \" />\"), D;\n    }\n    var m = {\n        shallow: !0\n    };\n    k.render = k;\n    var b = function(e, t) {\n        return k(e, t, m);\n    }, x = [];\n    function k(e, n, r) {\n        n = n || {};\n        var o = t.options.__s;\n        t.options.__s = !0;\n        var i, s = t.h(t.Fragment, null);\n        return s.__k = [\n            e\n        ], i = r && (r.pretty || r.voidElements || r.sortAttributes || r.shallow || r.allAttributes || r.xml || r.attributeHook) ? y(e, n, r) : F(e, n, !1, void 0, s), t.options.__c && t.options.__c(e, x), t.options.__s = o, x.length = 0, i;\n    }\n    function S(e) {\n        return null == e || \"boolean\" == typeof e ? null : \"string\" == typeof e || \"number\" == typeof e || \"bigint\" == typeof e ? t.h(null, null, e) : e;\n    }\n    function w(e, t) {\n        return \"className\" === e ? \"class\" : \"htmlFor\" === e ? \"for\" : \"defaultValue\" === e ? \"value\" : \"defaultChecked\" === e ? \"checked\" : \"defaultSelected\" === e ? \"selected\" : t && i.test(e) ? e.toLowerCase().replace(/^xlink:?/, \"xlink:\") : e;\n    }\n    function C(e, t) {\n        return \"style\" === e && null != t && \"object\" == typeof t ? c(t) : \"a\" === e[0] && \"r\" === e[1] && \"boolean\" == typeof t ? String(t) : t;\n    }\n    var O = Array.isArray, j = Object.assign;\n    function F(e, n, i, s, l) {\n        if (null == e || !0 === e || !1 === e || \"\" === e) return \"\";\n        if (\"object\" != typeof e) return \"function\" == typeof e ? \"\" : a(e);\n        if (O(e)) {\n            var f = \"\";\n            l.__k = e;\n            for(var u = 0; u < e.length; u++)f += F(e[u], n, i, s, l), e[u] = S(e[u]);\n            return f;\n        }\n        if (void 0 !== e.constructor) return \"\";\n        e.__ = l, t.options.__b && t.options.__b(e);\n        var p = e.type, c = e.props;\n        if (\"function\" == typeof p) {\n            var _;\n            if (p === t.Fragment) _ = c.children;\n            else {\n                _ = p.prototype && \"function\" == typeof p.prototype.render ? function(e, n) {\n                    var r = e.type, o = g(r, n), i = new r(e.props, o);\n                    e.__c = i, i.__v = e, i.__d = !0, i.props = e.props, null == i.state && (i.state = {}), null == i.__s && (i.__s = i.state), i.context = o, r.getDerivedStateFromProps ? i.state = j({}, i.state, r.getDerivedStateFromProps(i.props, i.state)) : i.componentWillMount && (i.componentWillMount(), i.state = i.__s !== i.state ? i.__s : i.state);\n                    var s = t.options.__r;\n                    return s && s(e), i.render(i.props, i.state, i.context);\n                }(e, n) : function(e, n) {\n                    var r, o = v(e, n), i = g(e.type, n);\n                    e.__c = o;\n                    for(var s = t.options.__r, a = 0; o.__d && a++ < 25;)o.__d = !1, s && s(e), r = e.type.call(o, e.props, i);\n                    return r;\n                }(e, n);\n                var d = e.__c;\n                d.getChildContext && (n = j({}, n, d.getChildContext()));\n            }\n            var h = F(_ = null != _ && _.type === t.Fragment && null == _.key ? _.props.children : _, n, i, s, e);\n            return t.options.diffed && t.options.diffed(e), e.__ = void 0, t.options.unmount && t.options.unmount(e), h;\n        }\n        var y, m, b = \"<\";\n        if (b += p, c) for(var x in y = c.children, c){\n            var k = c[x];\n            if (!(\"key\" === x || \"ref\" === x || \"__self\" === x || \"__source\" === x || \"children\" === x || \"className\" === x && \"class\" in c || \"htmlFor\" === x && \"for\" in c || o.test(x))) {\n                if (k = C(x = w(x, i), k), \"dangerouslySetInnerHTML\" === x) m = k && k.__html;\n                else if (\"textarea\" === p && \"value\" === x) y = k;\n                else if ((k || 0 === k || \"\" === k) && \"function\" != typeof k) {\n                    if (!0 === k || \"\" === k) {\n                        k = x, b = b + \" \" + x;\n                        continue;\n                    }\n                    if (\"value\" === x) {\n                        if (\"select\" === p) {\n                            s = k;\n                            continue;\n                        }\n                        \"option\" !== p || s != k || \"selected\" in c || (b += \" selected\");\n                    }\n                    b = b + \" \" + x + '=\"' + a(k) + '\"';\n                }\n            }\n        }\n        var A = b;\n        if (b += \">\", o.test(p)) throw new Error(p + \" is not a valid HTML tag name in \" + b);\n        var T = \"\", H = !1;\n        if (m) T += m, H = !0;\n        else if (\"string\" == typeof y) T += a(y), H = !0;\n        else if (O(y)) {\n            e.__k = y;\n            for(var M = 0; M < y.length; M++){\n                var L = y[M];\n                if (y[M] = S(L), null != L && !1 !== L) {\n                    var E = F(L, n, \"svg\" === p || \"foreignObject\" !== p && i, s, e);\n                    E && (T += E, H = !0);\n                }\n            }\n        } else if (null != y && !1 !== y && !0 !== y) {\n            e.__k = [\n                S(y)\n            ];\n            var $ = F(y, n, \"svg\" === p || \"foreignObject\" !== p && i, s, e);\n            $ && (T += $, H = !0);\n        }\n        if (t.options.diffed && t.options.diffed(e), e.__ = void 0, t.options.unmount && t.options.unmount(e), H) b += T;\n        else if (r.test(p)) return A + \" />\";\n        return b + \"</\" + p + \">\";\n    }\n    k.shallowRender = b, e.default = k, e.render = k, e.renderToStaticMarkup = k, e.renderToString = k, e.shallowRender = b;\n}); //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/preact-render-to-string/dist/commonjs.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/preact-render-to-string/dist/index.js":
/*!************************************************************!*\
  !*** ./node_modules/preact-render-to-string/dist/index.js ***!
  \************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nmodule.exports = __webpack_require__(/*! ./commonjs */ \"(sc_server)/./node_modules/preact-render-to-string/dist/commonjs.js\")[\"default\"];\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvcHJlYWN0LXJlbmRlci10by1zdHJpbmcvZGlzdC9pbmRleC5qcyIsIm1hcHBpbmdzIjoiO0FBQUFBLHdJQUE4Q0ciLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mdWxsc3RhY2stcm9sZS1iYXNlZC1uZXh0anMtMi8uL25vZGVfbW9kdWxlcy9wcmVhY3QtcmVuZGVyLXRvLXN0cmluZy9kaXN0L2luZGV4LmpzP2JjODciXSwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2NvbW1vbmpzJykuZGVmYXVsdDsiXSwibmFtZXMiOlsibW9kdWxlIiwiZXhwb3J0cyIsInJlcXVpcmUiLCJkZWZhdWx0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/preact-render-to-string/dist/index.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/preact/dist/preact.js":
/*!********************************************!*\
  !*** ./node_modules/preact/dist/preact.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("var n, l, u, t, i, o, r, f, e, c = {}, s = [], p = /acit|ex(?:s|g|n|p|$)|rph|grid|ows|mnc|ntw|ine[ch]|zoo|^ord|itera/i, a = Array.isArray;\nfunction v(n, l) {\n    for(var u in l)n[u] = l[u];\n    return n;\n}\nfunction h(n) {\n    var l = n.parentNode;\n    l && l.removeChild(n);\n}\nfunction y(l, u, t) {\n    var i, o, r, f = {};\n    for(r in u)\"key\" == r ? i = u[r] : \"ref\" == r ? o = u[r] : f[r] = u[r];\n    if (arguments.length > 2 && (f.children = arguments.length > 3 ? n.call(arguments, 2) : t), \"function\" == typeof l && null != l.defaultProps) for(r in l.defaultProps)void 0 === f[r] && (f[r] = l.defaultProps[r]);\n    return d(l, f, i, o, null);\n}\nfunction d(n, t, i, o, r) {\n    var f = {\n        type: n,\n        props: t,\n        key: i,\n        ref: o,\n        __k: null,\n        __: null,\n        __b: 0,\n        __e: null,\n        __d: void 0,\n        __c: null,\n        __h: null,\n        constructor: void 0,\n        __v: null == r ? ++u : r\n    };\n    return null == r && null != l.vnode && l.vnode(f), f;\n}\nfunction _(n) {\n    return n.children;\n}\nfunction k(n, l) {\n    this.props = n, this.context = l;\n}\nfunction x(n, l) {\n    if (null == l) return n.__ ? x(n.__, n.__.__k.indexOf(n) + 1) : null;\n    for(var u; l < n.__k.length; l++)if (null != (u = n.__k[l]) && null != u.__e) return u.__e;\n    return \"function\" == typeof n.type ? x(n) : null;\n}\nfunction b(n) {\n    var l, u;\n    if (null != (n = n.__) && null != n.__c) {\n        for(n.__e = n.__c.base = null, l = 0; l < n.__k.length; l++)if (null != (u = n.__k[l]) && null != u.__e) {\n            n.__e = n.__c.base = u.__e;\n            break;\n        }\n        return b(n);\n    }\n}\nfunction g(n) {\n    (!n.__d && (n.__d = !0) && i.push(n) && !m.__r++ || o !== l.debounceRendering) && ((o = l.debounceRendering) || r)(m);\n}\nfunction m() {\n    var n, l, u, t, o, r, e, c;\n    for(i.sort(f); n = i.shift();)n.__d && (l = i.length, t = void 0, o = void 0, e = (r = (u = n).__v).__e, (c = u.__P) && (t = [], (o = v({}, r)).__v = r.__v + 1, j(c, r, o, u.__n, void 0 !== c.ownerSVGElement, null != r.__h ? [\n        e\n    ] : null, t, null == e ? x(r) : e, r.__h), z(t, r), r.__e != e && b(r)), i.length > l && i.sort(f));\n    m.__r = 0;\n}\nfunction w(n, l, u, t, i, o, r, f, e, p) {\n    var v, h, y, k, b, g, m, w = t && t.__k || s, $ = w.length;\n    for(u.__k = [], v = 0; v < l.length; v++)if (null != (k = u.__k[v] = null == (k = l[v]) || \"boolean\" == typeof k || \"function\" == typeof k ? null : \"string\" == typeof k || \"number\" == typeof k || \"bigint\" == typeof k ? d(null, k, null, null, k) : a(k) ? d(_, {\n        children: k\n    }, null, null, null) : k.__b > 0 ? d(k.type, k.props, k.key, k.ref ? k.ref : null, k.__v) : k)) {\n        if (k.__ = u, k.__b = u.__b + 1, null === (y = w[v]) || y && k.key == y.key && k.type === y.type) w[v] = void 0;\n        else for(h = 0; h < $; h++){\n            if ((y = w[h]) && k.key == y.key && k.type === y.type) {\n                w[h] = void 0;\n                break;\n            }\n            y = null;\n        }\n        j(n, k, y = y || c, i, o, r, f, e, p), b = k.__e, (h = k.ref) && y.ref != h && (m || (m = []), y.ref && m.push(y.ref, null, k), m.push(h, k.__c || b, k)), null != b ? (null == g && (g = b), \"function\" == typeof k.type && k.__k === y.__k ? k.__d = e = P(k, e, n) : e = C(n, k, y, w, b, e), \"function\" == typeof u.type && (u.__d = e)) : e && y.__e == e && e.parentNode != n && (e = x(y));\n    }\n    for(u.__e = g, v = $; v--;)null != w[v] && (\"function\" == typeof u.type && null != w[v].__e && w[v].__e == u.__d && (u.__d = S(t).nextSibling), N(w[v], w[v]));\n    if (m) for(v = 0; v < m.length; v++)M(m[v], m[++v], m[++v]);\n}\nfunction P(n, l, u) {\n    for(var t, i = n.__k, o = 0; i && o < i.length; o++)(t = i[o]) && (t.__ = n, l = \"function\" == typeof t.type ? P(t, l, u) : C(u, t, t, i, t.__e, l));\n    return l;\n}\nfunction C(n, l, u, t, i, o) {\n    var r, f, e;\n    if (void 0 !== l.__d) r = l.__d, l.__d = void 0;\n    else if (null == u || i != o || null == i.parentNode) n: if (null == o || o.parentNode !== n) n.appendChild(i), r = null;\n    else {\n        for(f = o, e = 0; (f = f.nextSibling) && e < t.length; e += 1)if (f == i) break n;\n        n.insertBefore(i, o), r = o;\n    }\n    return void 0 !== r ? r : i.nextSibling;\n}\nfunction S(n) {\n    var l, u, t;\n    if (null == n.type || \"string\" == typeof n.type) return n.__e;\n    if (n.__k) {\n        for(l = n.__k.length - 1; l >= 0; l--)if ((u = n.__k[l]) && (t = S(u))) return t;\n    }\n    return null;\n}\nfunction $(n, l, u, t, i) {\n    var o;\n    for(o in u)\"children\" === o || \"key\" === o || o in l || H(n, o, null, u[o], t);\n    for(o in l)i && \"function\" != typeof l[o] || \"children\" === o || \"key\" === o || \"value\" === o || \"checked\" === o || u[o] === l[o] || H(n, o, l[o], u[o], t);\n}\nfunction A(n, l, u) {\n    \"-\" === l[0] ? n.setProperty(l, null == u ? \"\" : u) : n[l] = null == u ? \"\" : \"number\" != typeof u || p.test(l) ? u : u + \"px\";\n}\nfunction H(n, l, u, t, i) {\n    var o;\n    n: if (\"style\" === l) if (\"string\" == typeof u) n.style.cssText = u;\n    else {\n        if (\"string\" == typeof t && (n.style.cssText = t = \"\"), t) for(l in t)u && l in u || A(n.style, l, \"\");\n        if (u) for(l in u)t && u[l] === t[l] || A(n.style, l, u[l]);\n    }\n    else if (\"o\" === l[0] && \"n\" === l[1]) o = l !== (l = l.replace(/Capture$/, \"\")), l = l.toLowerCase() in n ? l.toLowerCase().slice(2) : l.slice(2), n.l || (n.l = {}), n.l[l + o] = u, u ? t || n.addEventListener(l, o ? T : I, o) : n.removeEventListener(l, o ? T : I, o);\n    else if (\"dangerouslySetInnerHTML\" !== l) {\n        if (i) l = l.replace(/xlink(H|:h)/, \"h\").replace(/sName$/, \"s\");\n        else if (\"width\" !== l && \"height\" !== l && \"href\" !== l && \"list\" !== l && \"form\" !== l && \"tabIndex\" !== l && \"download\" !== l && \"rowSpan\" !== l && \"colSpan\" !== l && l in n) try {\n            n[l] = null == u ? \"\" : u;\n            break n;\n        } catch (n) {}\n        \"function\" == typeof u || (null == u || !1 === u && \"-\" !== l[4] ? n.removeAttribute(l) : n.setAttribute(l, u));\n    }\n}\nfunction I(n) {\n    return this.l[n.type + !1](l.event ? l.event(n) : n);\n}\nfunction T(n) {\n    return this.l[n.type + !0](l.event ? l.event(n) : n);\n}\nfunction j(n, u, t, i, o, r, f, e, c) {\n    var s, p, h, y, d, x, b, g, m, P, C, S, $, A, H, I = u.type;\n    if (void 0 !== u.constructor) return null;\n    null != t.__h && (c = t.__h, e = u.__e = t.__e, u.__h = null, r = [\n        e\n    ]), (s = l.__b) && s(u);\n    try {\n        n: if (\"function\" == typeof I) {\n            if (g = u.props, m = (s = I.contextType) && i[s.__c], P = s ? m ? m.props.value : s.__ : i, t.__c ? b = (p = u.__c = t.__c).__ = p.__E : (\"prototype\" in I && I.prototype.render ? u.__c = p = new I(g, P) : (u.__c = p = new k(g, P), p.constructor = I, p.render = O), m && m.sub(p), p.props = g, p.state || (p.state = {}), p.context = P, p.__n = i, h = p.__d = !0, p.__h = [], p._sb = []), null == p.__s && (p.__s = p.state), null != I.getDerivedStateFromProps && (p.__s == p.state && (p.__s = v({}, p.__s)), v(p.__s, I.getDerivedStateFromProps(g, p.__s))), y = p.props, d = p.state, p.__v = u, h) null == I.getDerivedStateFromProps && null != p.componentWillMount && p.componentWillMount(), null != p.componentDidMount && p.__h.push(p.componentDidMount);\n            else {\n                if (null == I.getDerivedStateFromProps && g !== y && null != p.componentWillReceiveProps && p.componentWillReceiveProps(g, P), !p.__e && null != p.shouldComponentUpdate && !1 === p.shouldComponentUpdate(g, p.__s, P) || u.__v === t.__v) {\n                    for(u.__v !== t.__v && (p.props = g, p.state = p.__s, p.__d = !1), p.__e = !1, u.__e = t.__e, u.__k = t.__k, u.__k.forEach(function(n) {\n                        n && (n.__ = u);\n                    }), C = 0; C < p._sb.length; C++)p.__h.push(p._sb[C]);\n                    p._sb = [], p.__h.length && f.push(p);\n                    break n;\n                }\n                null != p.componentWillUpdate && p.componentWillUpdate(g, p.__s, P), null != p.componentDidUpdate && p.__h.push(function() {\n                    p.componentDidUpdate(y, d, x);\n                });\n            }\n            if (p.context = P, p.props = g, p.__P = n, S = l.__r, $ = 0, \"prototype\" in I && I.prototype.render) {\n                for(p.state = p.__s, p.__d = !1, S && S(u), s = p.render(p.props, p.state, p.context), A = 0; A < p._sb.length; A++)p.__h.push(p._sb[A]);\n                p._sb = [];\n            } else do {\n                p.__d = !1, S && S(u), s = p.render(p.props, p.state, p.context), p.state = p.__s;\n            }while (p.__d && ++$ < 25);\n            p.state = p.__s, null != p.getChildContext && (i = v(v({}, i), p.getChildContext())), h || null == p.getSnapshotBeforeUpdate || (x = p.getSnapshotBeforeUpdate(y, d)), w(n, a(H = null != s && s.type === _ && null == s.key ? s.props.children : s) ? H : [\n                H\n            ], u, t, i, o, r, f, e, c), p.base = u.__e, u.__h = null, p.__h.length && f.push(p), b && (p.__E = p.__ = null), p.__e = !1;\n        } else null == r && u.__v === t.__v ? (u.__k = t.__k, u.__e = t.__e) : u.__e = L(t.__e, u, t, i, o, r, f, c);\n        (s = l.diffed) && s(u);\n    } catch (n) {\n        u.__v = null, (c || null != r) && (u.__e = e, u.__h = !!c, r[r.indexOf(e)] = null), l.__e(n, u, t);\n    }\n}\nfunction z(n, u) {\n    l.__c && l.__c(u, n), n.some(function(u) {\n        try {\n            n = u.__h, u.__h = [], n.some(function(n) {\n                n.call(u);\n            });\n        } catch (n) {\n            l.__e(n, u.__v);\n        }\n    });\n}\nfunction L(l, u, t, i, o, r, f, e) {\n    var s, p, v, y = t.props, d = u.props, _ = u.type, k = 0;\n    if (\"svg\" === _ && (o = !0), null != r) {\n        for(; k < r.length; k++)if ((s = r[k]) && \"setAttribute\" in s == !!_ && (_ ? s.localName === _ : 3 === s.nodeType)) {\n            l = s, r[k] = null;\n            break;\n        }\n    }\n    if (null == l) {\n        if (null === _) return document.createTextNode(d);\n        l = o ? document.createElementNS(\"http://www.w3.org/2000/svg\", _) : document.createElement(_, d.is && d), r = null, e = !1;\n    }\n    if (null === _) y === d || e && l.data === d || (l.data = d);\n    else {\n        if (r = r && n.call(l.childNodes), p = (y = t.props || c).dangerouslySetInnerHTML, v = d.dangerouslySetInnerHTML, !e) {\n            if (null != r) for(y = {}, k = 0; k < l.attributes.length; k++)y[l.attributes[k].name] = l.attributes[k].value;\n            (v || p) && (v && (p && v.__html == p.__html || v.__html === l.innerHTML) || (l.innerHTML = v && v.__html || \"\"));\n        }\n        if ($(l, d, y, o, e), v) u.__k = [];\n        else if (w(l, a(k = u.props.children) ? k : [\n            k\n        ], u, t, i, o && \"foreignObject\" !== _, r, f, r ? r[0] : t.__k && x(t, 0), e), null != r) for(k = r.length; k--;)null != r[k] && h(r[k]);\n        e || (\"value\" in d && void 0 !== (k = d.value) && (k !== l.value || \"progress\" === _ && !k || \"option\" === _ && k !== y.value) && H(l, \"value\", k, y.value, !1), \"checked\" in d && void 0 !== (k = d.checked) && k !== l.checked && H(l, \"checked\", k, y.checked, !1));\n    }\n    return l;\n}\nfunction M(n, u, t) {\n    try {\n        \"function\" == typeof n ? n(u) : n.current = u;\n    } catch (n) {\n        l.__e(n, t);\n    }\n}\nfunction N(n, u, t) {\n    var i, o;\n    if (l.unmount && l.unmount(n), (i = n.ref) && (i.current && i.current !== n.__e || M(i, null, u)), null != (i = n.__c)) {\n        if (i.componentWillUnmount) try {\n            i.componentWillUnmount();\n        } catch (n) {\n            l.__e(n, u);\n        }\n        i.base = i.__P = null, n.__c = void 0;\n    }\n    if (i = n.__k) for(o = 0; o < i.length; o++)i[o] && N(i[o], u, t || \"function\" != typeof n.type);\n    t || null == n.__e || h(n.__e), n.__ = n.__e = n.__d = void 0;\n}\nfunction O(n, l, u) {\n    return this.constructor(n, u);\n}\nfunction q(u, t, i) {\n    var o, r, f;\n    l.__ && l.__(u, t), r = (o = \"function\" == typeof i) ? null : i && i.__k || t.__k, f = [], j(t, u = (!o && i || t).__k = y(_, null, [\n        u\n    ]), r || c, c, void 0 !== t.ownerSVGElement, !o && i ? [\n        i\n    ] : r ? null : t.firstChild ? n.call(t.childNodes) : null, f, !o && i ? i : r ? r.__e : t.firstChild, o), z(f, u);\n}\nn = s.slice, l = {\n    __e: function(n, l, u, t) {\n        for(var i, o, r; l = l.__;)if ((i = l.__c) && !i.__) try {\n            if ((o = i.constructor) && null != o.getDerivedStateFromError && (i.setState(o.getDerivedStateFromError(n)), r = i.__d), null != i.componentDidCatch && (i.componentDidCatch(n, t || {}), r = i.__d), r) return i.__E = i;\n        } catch (l) {\n            n = l;\n        }\n        throw n;\n    }\n}, u = 0, t = function(n) {\n    return null != n && void 0 === n.constructor;\n}, k.prototype.setState = function(n, l) {\n    var u;\n    u = null != this.__s && this.__s !== this.state ? this.__s : this.__s = v({}, this.state), \"function\" == typeof n && (n = n(v({}, u), this.props)), n && v(u, n), null != n && this.__v && (l && this._sb.push(l), g(this));\n}, k.prototype.forceUpdate = function(n) {\n    this.__v && (this.__e = !0, n && this.__h.push(n), g(this));\n}, k.prototype.render = _, i = [], r = \"function\" == typeof Promise ? Promise.prototype.then.bind(Promise.resolve()) : setTimeout, f = function(n, l) {\n    return n.__v.__b - l.__v.__b;\n}, m.__r = 0, e = 0, exports.Component = k, exports.Fragment = _, exports.cloneElement = function(l, u, t) {\n    var i, o, r, f, e = v({}, l.props);\n    for(r in l.type && l.type.defaultProps && (f = l.type.defaultProps), u)\"key\" == r ? i = u[r] : \"ref\" == r ? o = u[r] : e[r] = void 0 === u[r] && void 0 !== f ? f[r] : u[r];\n    return arguments.length > 2 && (e.children = arguments.length > 3 ? n.call(arguments, 2) : t), d(l.type, e, i || l.key, o || l.ref, null);\n}, exports.createContext = function(n, l) {\n    var u = {\n        __c: l = \"__cC\" + e++,\n        __: n,\n        Consumer: function(n, l) {\n            return n.children(l);\n        },\n        Provider: function(n) {\n            var u, t;\n            return this.getChildContext || (u = [], (t = {})[l] = this, this.getChildContext = function() {\n                return t;\n            }, this.shouldComponentUpdate = function(n) {\n                this.props.value !== n.value && u.some(function(n) {\n                    n.__e = !0, g(n);\n                });\n            }, this.sub = function(n) {\n                u.push(n);\n                var l = n.componentWillUnmount;\n                n.componentWillUnmount = function() {\n                    u.splice(u.indexOf(n), 1), l && l.call(n);\n                };\n            }), n.children;\n        }\n    };\n    return u.Provider.__ = u.Consumer.contextType = u;\n}, exports.createElement = y, exports.createRef = function() {\n    return {\n        current: null\n    };\n}, exports.h = y, exports.hydrate = function n(l, u) {\n    q(l, u, n);\n}, exports.isValidElement = t, exports.options = l, exports.render = q, exports.toChildArray = function n(l, u) {\n    return u = u || [], null == l || \"boolean\" == typeof l || (a(l) ? l.some(function(l) {\n        n(l, u);\n    }) : u.push(l)), u;\n}; //# sourceMappingURL=preact.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/preact/dist/preact.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/uuid/dist/esm-node/index.js":
/*!**************************************************!*\
  !*** ./node_modules/uuid/dist/esm-node/index.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   NIL: () => (/* reexport safe */ _nil_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"]),\n/* harmony export */   parse: () => (/* reexport safe */ _parse_js__WEBPACK_IMPORTED_MODULE_8__[\"default\"]),\n/* harmony export */   stringify: () => (/* reexport safe */ _stringify_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"]),\n/* harmony export */   v1: () => (/* reexport safe */ _v1_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]),\n/* harmony export */   v3: () => (/* reexport safe */ _v3_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]),\n/* harmony export */   v4: () => (/* reexport safe */ _v4_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"]),\n/* harmony export */   v5: () => (/* reexport safe */ _v5_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"]),\n/* harmony export */   validate: () => (/* reexport safe */ _validate_js__WEBPACK_IMPORTED_MODULE_6__[\"default\"]),\n/* harmony export */   version: () => (/* reexport safe */ _version_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"])\n/* harmony export */ });\n/* harmony import */ var _v1_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./v1.js */ \"(sc_server)/./node_modules/uuid/dist/esm-node/v1.js\");\n/* harmony import */ var _v3_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./v3.js */ \"(sc_server)/./node_modules/uuid/dist/esm-node/v3.js\");\n/* harmony import */ var _v4_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./v4.js */ \"(sc_server)/./node_modules/uuid/dist/esm-node/v4.js\");\n/* harmony import */ var _v5_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./v5.js */ \"(sc_server)/./node_modules/uuid/dist/esm-node/v5.js\");\n/* harmony import */ var _nil_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./nil.js */ \"(sc_server)/./node_modules/uuid/dist/esm-node/nil.js\");\n/* harmony import */ var _version_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./version.js */ \"(sc_server)/./node_modules/uuid/dist/esm-node/version.js\");\n/* harmony import */ var _validate_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./validate.js */ \"(sc_server)/./node_modules/uuid/dist/esm-node/validate.js\");\n/* harmony import */ var _stringify_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./stringify.js */ \"(sc_server)/./node_modules/uuid/dist/esm-node/stringify.js\");\n/* harmony import */ var _parse_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./parse.js */ \"(sc_server)/./node_modules/uuid/dist/esm-node/parse.js\");\n\n\n\n\n\n\n\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvdXVpZC9kaXN0L2VzbS1ub2RlL2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUF3QztBQUNBO0FBQ0E7QUFDQTtBQUNFO0FBQ1E7QUFDRTtBQUNFO0FBQ1IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mdWxsc3RhY2stcm9sZS1iYXNlZC1uZXh0anMtMi8uL25vZGVfbW9kdWxlcy91dWlkL2Rpc3QvZXNtLW5vZGUvaW5kZXguanM/NTY5NyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgeyBkZWZhdWx0IGFzIHYxIH0gZnJvbSAnLi92MS5qcyc7XG5leHBvcnQgeyBkZWZhdWx0IGFzIHYzIH0gZnJvbSAnLi92My5qcyc7XG5leHBvcnQgeyBkZWZhdWx0IGFzIHY0IH0gZnJvbSAnLi92NC5qcyc7XG5leHBvcnQgeyBkZWZhdWx0IGFzIHY1IH0gZnJvbSAnLi92NS5qcyc7XG5leHBvcnQgeyBkZWZhdWx0IGFzIE5JTCB9IGZyb20gJy4vbmlsLmpzJztcbmV4cG9ydCB7IGRlZmF1bHQgYXMgdmVyc2lvbiB9IGZyb20gJy4vdmVyc2lvbi5qcyc7XG5leHBvcnQgeyBkZWZhdWx0IGFzIHZhbGlkYXRlIH0gZnJvbSAnLi92YWxpZGF0ZS5qcyc7XG5leHBvcnQgeyBkZWZhdWx0IGFzIHN0cmluZ2lmeSB9IGZyb20gJy4vc3RyaW5naWZ5LmpzJztcbmV4cG9ydCB7IGRlZmF1bHQgYXMgcGFyc2UgfSBmcm9tICcuL3BhcnNlLmpzJzsiXSwibmFtZXMiOlsiZGVmYXVsdCIsInYxIiwidjMiLCJ2NCIsInY1IiwiTklMIiwidmVyc2lvbiIsInZhbGlkYXRlIiwic3RyaW5naWZ5IiwicGFyc2UiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/uuid/dist/esm-node/index.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/uuid/dist/esm-node/md5.js":
/*!************************************************!*\
  !*** ./node_modules/uuid/dist/esm-node/md5.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var crypto__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! crypto */ \"crypto\");\n/* harmony import */ var crypto__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(crypto__WEBPACK_IMPORTED_MODULE_0__);\n\nfunction md5(bytes) {\n    if (Array.isArray(bytes)) {\n        bytes = Buffer.from(bytes);\n    } else if (typeof bytes === \"string\") {\n        bytes = Buffer.from(bytes, \"utf8\");\n    }\n    return crypto__WEBPACK_IMPORTED_MODULE_0___default().createHash(\"md5\").update(bytes).digest();\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (md5);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvdXVpZC9kaXN0L2VzbS1ub2RlL21kNS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBNEI7QUFFNUIsU0FBU0MsSUFBSUMsS0FBSztJQUNoQixJQUFJQyxNQUFNQyxRQUFRRixRQUFRO1FBQ3hCQSxRQUFRRyxPQUFPQyxLQUFLSjtJQUN0QixPQUFPLElBQUksT0FBT0EsVUFBVSxVQUFVO1FBQ3BDQSxRQUFRRyxPQUFPQyxLQUFLSixPQUFPO0lBQzdCO0lBRUEsT0FBT0Ysd0RBQWlCTyxDQUFDLE9BQU9DLE9BQU9OLE9BQU9PO0FBQ2hEO0FBRUEsaUVBQWVSLEdBQUdBLEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mdWxsc3RhY2stcm9sZS1iYXNlZC1uZXh0anMtMi8uL25vZGVfbW9kdWxlcy91dWlkL2Rpc3QvZXNtLW5vZGUvbWQ1LmpzP2UyM2UiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGNyeXB0byBmcm9tICdjcnlwdG8nO1xuXG5mdW5jdGlvbiBtZDUoYnl0ZXMpIHtcbiAgaWYgKEFycmF5LmlzQXJyYXkoYnl0ZXMpKSB7XG4gICAgYnl0ZXMgPSBCdWZmZXIuZnJvbShieXRlcyk7XG4gIH0gZWxzZSBpZiAodHlwZW9mIGJ5dGVzID09PSAnc3RyaW5nJykge1xuICAgIGJ5dGVzID0gQnVmZmVyLmZyb20oYnl0ZXMsICd1dGY4Jyk7XG4gIH1cblxuICByZXR1cm4gY3J5cHRvLmNyZWF0ZUhhc2goJ21kNScpLnVwZGF0ZShieXRlcykuZGlnZXN0KCk7XG59XG5cbmV4cG9ydCBkZWZhdWx0IG1kNTsiXSwibmFtZXMiOlsiY3J5cHRvIiwibWQ1IiwiYnl0ZXMiLCJBcnJheSIsImlzQXJyYXkiLCJCdWZmZXIiLCJmcm9tIiwiY3JlYXRlSGFzaCIsInVwZGF0ZSIsImRpZ2VzdCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/uuid/dist/esm-node/md5.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/uuid/dist/esm-node/nil.js":
/*!************************************************!*\
  !*** ./node_modules/uuid/dist/esm-node/nil.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (\"00000000-0000-0000-0000-000000000000\");\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvdXVpZC9kaXN0L2VzbS1ub2RlL25pbC5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUEsaUVBQWUsd0NBQXVDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZnVsbHN0YWNrLXJvbGUtYmFzZWQtbmV4dGpzLTIvLi9ub2RlX21vZHVsZXMvdXVpZC9kaXN0L2VzbS1ub2RlL25pbC5qcz81ZGUxIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0ICcwMDAwMDAwMC0wMDAwLTAwMDAtMDAwMC0wMDAwMDAwMDAwMDAnOyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/uuid/dist/esm-node/nil.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/uuid/dist/esm-node/parse.js":
/*!**************************************************!*\
  !*** ./node_modules/uuid/dist/esm-node/parse.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _validate_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./validate.js */ \"(sc_server)/./node_modules/uuid/dist/esm-node/validate.js\");\n\nfunction parse(uuid) {\n    if (!(0,_validate_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(uuid)) {\n        throw TypeError(\"Invalid UUID\");\n    }\n    let v;\n    const arr = new Uint8Array(16); // Parse ########-....-....-....-............\n    arr[0] = (v = parseInt(uuid.slice(0, 8), 16)) >>> 24;\n    arr[1] = v >>> 16 & 0xff;\n    arr[2] = v >>> 8 & 0xff;\n    arr[3] = v & 0xff; // Parse ........-####-....-....-............\n    arr[4] = (v = parseInt(uuid.slice(9, 13), 16)) >>> 8;\n    arr[5] = v & 0xff; // Parse ........-....-####-....-............\n    arr[6] = (v = parseInt(uuid.slice(14, 18), 16)) >>> 8;\n    arr[7] = v & 0xff; // Parse ........-....-....-####-............\n    arr[8] = (v = parseInt(uuid.slice(19, 23), 16)) >>> 8;\n    arr[9] = v & 0xff; // Parse ........-....-....-....-############\n    // (Use \"/\" to avoid 32-bit truncation when bit-shifting high-order bytes)\n    arr[10] = (v = parseInt(uuid.slice(24, 36), 16)) / 0x10000000000 & 0xff;\n    arr[11] = v / 0x100000000 & 0xff;\n    arr[12] = v >>> 24 & 0xff;\n    arr[13] = v >>> 16 & 0xff;\n    arr[14] = v >>> 8 & 0xff;\n    arr[15] = v & 0xff;\n    return arr;\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (parse);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvdXVpZC9kaXN0L2VzbS1ub2RlL3BhcnNlLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQXFDO0FBRXJDLFNBQVNDLE1BQU1DLElBQUk7SUFDakIsSUFBSSxDQUFDRix3REFBUUEsQ0FBQ0UsT0FBTztRQUNuQixNQUFNQyxVQUFVO0lBQ2xCO0lBRUEsSUFBSUM7SUFDSixNQUFNQyxNQUFNLElBQUlDLFdBQVcsS0FBSyw2Q0FBNkM7SUFFN0VELEdBQUcsQ0FBQyxFQUFFLEdBQUcsQ0FBQ0QsSUFBSUcsU0FBU0wsS0FBS00sTUFBTSxHQUFHLElBQUksR0FBRSxNQUFPO0lBQ2xESCxHQUFHLENBQUMsRUFBRSxHQUFHRCxNQUFNLEtBQUs7SUFDcEJDLEdBQUcsQ0FBQyxFQUFFLEdBQUdELE1BQU0sSUFBSTtJQUNuQkMsR0FBRyxDQUFDLEVBQUUsR0FBR0QsSUFBSSxNQUFNLDZDQUE2QztJQUVoRUMsR0FBRyxDQUFDLEVBQUUsR0FBRyxDQUFDRCxJQUFJRyxTQUFTTCxLQUFLTSxNQUFNLEdBQUcsS0FBSyxHQUFFLE1BQU87SUFDbkRILEdBQUcsQ0FBQyxFQUFFLEdBQUdELElBQUksTUFBTSw2Q0FBNkM7SUFFaEVDLEdBQUcsQ0FBQyxFQUFFLEdBQUcsQ0FBQ0QsSUFBSUcsU0FBU0wsS0FBS00sTUFBTSxJQUFJLEtBQUssR0FBRSxNQUFPO0lBQ3BESCxHQUFHLENBQUMsRUFBRSxHQUFHRCxJQUFJLE1BQU0sNkNBQTZDO0lBRWhFQyxHQUFHLENBQUMsRUFBRSxHQUFHLENBQUNELElBQUlHLFNBQVNMLEtBQUtNLE1BQU0sSUFBSSxLQUFLLEdBQUUsTUFBTztJQUNwREgsR0FBRyxDQUFDLEVBQUUsR0FBR0QsSUFBSSxNQUFNLDZDQUE2QztJQUNoRSwwRUFBMEU7SUFFMUVDLEdBQUcsQ0FBQyxHQUFHLEdBQUcsQ0FBQ0QsSUFBSUcsU0FBU0wsS0FBS00sTUFBTSxJQUFJLEtBQUssR0FBRSxJQUFLLGdCQUFnQjtJQUNuRUgsR0FBRyxDQUFDLEdBQUcsR0FBR0QsSUFBSSxjQUFjO0lBQzVCQyxHQUFHLENBQUMsR0FBRyxHQUFHRCxNQUFNLEtBQUs7SUFDckJDLEdBQUcsQ0FBQyxHQUFHLEdBQUdELE1BQU0sS0FBSztJQUNyQkMsR0FBRyxDQUFDLEdBQUcsR0FBR0QsTUFBTSxJQUFJO0lBQ3BCQyxHQUFHLENBQUMsR0FBRyxHQUFHRCxJQUFJO0lBQ2QsT0FBT0M7QUFDVDtBQUVBLGlFQUFlSixLQUFLQSxFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZnVsbHN0YWNrLXJvbGUtYmFzZWQtbmV4dGpzLTIvLi9ub2RlX21vZHVsZXMvdXVpZC9kaXN0L2VzbS1ub2RlL3BhcnNlLmpzP2JlYTEiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHZhbGlkYXRlIGZyb20gJy4vdmFsaWRhdGUuanMnO1xuXG5mdW5jdGlvbiBwYXJzZSh1dWlkKSB7XG4gIGlmICghdmFsaWRhdGUodXVpZCkpIHtcbiAgICB0aHJvdyBUeXBlRXJyb3IoJ0ludmFsaWQgVVVJRCcpO1xuICB9XG5cbiAgbGV0IHY7XG4gIGNvbnN0IGFyciA9IG5ldyBVaW50OEFycmF5KDE2KTsgLy8gUGFyc2UgIyMjIyMjIyMtLi4uLi0uLi4uLS4uLi4tLi4uLi4uLi4uLi4uXG5cbiAgYXJyWzBdID0gKHYgPSBwYXJzZUludCh1dWlkLnNsaWNlKDAsIDgpLCAxNikpID4+PiAyNDtcbiAgYXJyWzFdID0gdiA+Pj4gMTYgJiAweGZmO1xuICBhcnJbMl0gPSB2ID4+PiA4ICYgMHhmZjtcbiAgYXJyWzNdID0gdiAmIDB4ZmY7IC8vIFBhcnNlIC4uLi4uLi4uLSMjIyMtLi4uLi0uLi4uLS4uLi4uLi4uLi4uLlxuXG4gIGFycls0XSA9ICh2ID0gcGFyc2VJbnQodXVpZC5zbGljZSg5LCAxMyksIDE2KSkgPj4+IDg7XG4gIGFycls1XSA9IHYgJiAweGZmOyAvLyBQYXJzZSAuLi4uLi4uLi0uLi4uLSMjIyMtLi4uLi0uLi4uLi4uLi4uLi5cblxuICBhcnJbNl0gPSAodiA9IHBhcnNlSW50KHV1aWQuc2xpY2UoMTQsIDE4KSwgMTYpKSA+Pj4gODtcbiAgYXJyWzddID0gdiAmIDB4ZmY7IC8vIFBhcnNlIC4uLi4uLi4uLS4uLi4tLi4uLi0jIyMjLS4uLi4uLi4uLi4uLlxuXG4gIGFycls4XSA9ICh2ID0gcGFyc2VJbnQodXVpZC5zbGljZSgxOSwgMjMpLCAxNikpID4+PiA4O1xuICBhcnJbOV0gPSB2ICYgMHhmZjsgLy8gUGFyc2UgLi4uLi4uLi4tLi4uLi0uLi4uLS4uLi4tIyMjIyMjIyMjIyMjXG4gIC8vIChVc2UgXCIvXCIgdG8gYXZvaWQgMzItYml0IHRydW5jYXRpb24gd2hlbiBiaXQtc2hpZnRpbmcgaGlnaC1vcmRlciBieXRlcylcblxuICBhcnJbMTBdID0gKHYgPSBwYXJzZUludCh1dWlkLnNsaWNlKDI0LCAzNiksIDE2KSkgLyAweDEwMDAwMDAwMDAwICYgMHhmZjtcbiAgYXJyWzExXSA9IHYgLyAweDEwMDAwMDAwMCAmIDB4ZmY7XG4gIGFyclsxMl0gPSB2ID4+PiAyNCAmIDB4ZmY7XG4gIGFyclsxM10gPSB2ID4+PiAxNiAmIDB4ZmY7XG4gIGFyclsxNF0gPSB2ID4+PiA4ICYgMHhmZjtcbiAgYXJyWzE1XSA9IHYgJiAweGZmO1xuICByZXR1cm4gYXJyO1xufVxuXG5leHBvcnQgZGVmYXVsdCBwYXJzZTsiXSwibmFtZXMiOlsidmFsaWRhdGUiLCJwYXJzZSIsInV1aWQiLCJUeXBlRXJyb3IiLCJ2IiwiYXJyIiwiVWludDhBcnJheSIsInBhcnNlSW50Iiwic2xpY2UiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/uuid/dist/esm-node/parse.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/uuid/dist/esm-node/regex.js":
/*!**************************************************!*\
  !*** ./node_modules/uuid/dist/esm-node/regex.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (/^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvdXVpZC9kaXN0L2VzbS1ub2RlL3JlZ2V4LmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSxpRUFBZSxxSEFBcUgsRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL2Z1bGxzdGFjay1yb2xlLWJhc2VkLW5leHRqcy0yLy4vbm9kZV9tb2R1bGVzL3V1aWQvZGlzdC9lc20tbm9kZS9yZWdleC5qcz9iZjFlIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IC9eKD86WzAtOWEtZl17OH0tWzAtOWEtZl17NH0tWzEtNV1bMC05YS1mXXszfS1bODlhYl1bMC05YS1mXXszfS1bMC05YS1mXXsxMn18MDAwMDAwMDAtMDAwMC0wMDAwLTAwMDAtMDAwMDAwMDAwMDAwKSQvaTsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/uuid/dist/esm-node/regex.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/uuid/dist/esm-node/rng.js":
/*!************************************************!*\
  !*** ./node_modules/uuid/dist/esm-node/rng.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ rng)\n/* harmony export */ });\n/* harmony import */ var crypto__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! crypto */ \"crypto\");\n/* harmony import */ var crypto__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(crypto__WEBPACK_IMPORTED_MODULE_0__);\n\nconst rnds8Pool = new Uint8Array(256); // # of random values to pre-allocate\nlet poolPtr = rnds8Pool.length;\nfunction rng() {\n    if (poolPtr > rnds8Pool.length - 16) {\n        crypto__WEBPACK_IMPORTED_MODULE_0___default().randomFillSync(rnds8Pool);\n        poolPtr = 0;\n    }\n    return rnds8Pool.slice(poolPtr, poolPtr += 16);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvdXVpZC9kaXN0L2VzbS1ub2RlL3JuZy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBNEI7QUFDNUIsTUFBTUMsWUFBWSxJQUFJQyxXQUFXLE1BQU0scUNBQXFDO0FBRTVFLElBQUlDLFVBQVVGLFVBQVVHO0FBQ1QsU0FBU0M7SUFDdEIsSUFBSUYsVUFBVUYsVUFBVUcsU0FBUyxJQUFJO1FBQ25DSiw0REFBcUJNLENBQUNMO1FBQ3RCRSxVQUFVO0lBQ1o7SUFFQSxPQUFPRixVQUFVTSxNQUFNSixTQUFTQSxXQUFXO0FBQzdDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZnVsbHN0YWNrLXJvbGUtYmFzZWQtbmV4dGpzLTIvLi9ub2RlX21vZHVsZXMvdXVpZC9kaXN0L2VzbS1ub2RlL3JuZy5qcz9iN2MwIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBjcnlwdG8gZnJvbSAnY3J5cHRvJztcbmNvbnN0IHJuZHM4UG9vbCA9IG5ldyBVaW50OEFycmF5KDI1Nik7IC8vICMgb2YgcmFuZG9tIHZhbHVlcyB0byBwcmUtYWxsb2NhdGVcblxubGV0IHBvb2xQdHIgPSBybmRzOFBvb2wubGVuZ3RoO1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gcm5nKCkge1xuICBpZiAocG9vbFB0ciA+IHJuZHM4UG9vbC5sZW5ndGggLSAxNikge1xuICAgIGNyeXB0by5yYW5kb21GaWxsU3luYyhybmRzOFBvb2wpO1xuICAgIHBvb2xQdHIgPSAwO1xuICB9XG5cbiAgcmV0dXJuIHJuZHM4UG9vbC5zbGljZShwb29sUHRyLCBwb29sUHRyICs9IDE2KTtcbn0iXSwibmFtZXMiOlsiY3J5cHRvIiwicm5kczhQb29sIiwiVWludDhBcnJheSIsInBvb2xQdHIiLCJsZW5ndGgiLCJybmciLCJyYW5kb21GaWxsU3luYyIsInNsaWNlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/uuid/dist/esm-node/rng.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/uuid/dist/esm-node/sha1.js":
/*!*************************************************!*\
  !*** ./node_modules/uuid/dist/esm-node/sha1.js ***!
  \*************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var crypto__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! crypto */ \"crypto\");\n/* harmony import */ var crypto__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(crypto__WEBPACK_IMPORTED_MODULE_0__);\n\nfunction sha1(bytes) {\n    if (Array.isArray(bytes)) {\n        bytes = Buffer.from(bytes);\n    } else if (typeof bytes === \"string\") {\n        bytes = Buffer.from(bytes, \"utf8\");\n    }\n    return crypto__WEBPACK_IMPORTED_MODULE_0___default().createHash(\"sha1\").update(bytes).digest();\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (sha1);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvdXVpZC9kaXN0L2VzbS1ub2RlL3NoYTEuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQTRCO0FBRTVCLFNBQVNDLEtBQUtDLEtBQUs7SUFDakIsSUFBSUMsTUFBTUMsUUFBUUYsUUFBUTtRQUN4QkEsUUFBUUcsT0FBT0MsS0FBS0o7SUFDdEIsT0FBTyxJQUFJLE9BQU9BLFVBQVUsVUFBVTtRQUNwQ0EsUUFBUUcsT0FBT0MsS0FBS0osT0FBTztJQUM3QjtJQUVBLE9BQU9GLHdEQUFpQk8sQ0FBQyxRQUFRQyxPQUFPTixPQUFPTztBQUNqRDtBQUVBLGlFQUFlUixJQUFJQSxFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZnVsbHN0YWNrLXJvbGUtYmFzZWQtbmV4dGpzLTIvLi9ub2RlX21vZHVsZXMvdXVpZC9kaXN0L2VzbS1ub2RlL3NoYTEuanM/MzgwNCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgY3J5cHRvIGZyb20gJ2NyeXB0byc7XG5cbmZ1bmN0aW9uIHNoYTEoYnl0ZXMpIHtcbiAgaWYgKEFycmF5LmlzQXJyYXkoYnl0ZXMpKSB7XG4gICAgYnl0ZXMgPSBCdWZmZXIuZnJvbShieXRlcyk7XG4gIH0gZWxzZSBpZiAodHlwZW9mIGJ5dGVzID09PSAnc3RyaW5nJykge1xuICAgIGJ5dGVzID0gQnVmZmVyLmZyb20oYnl0ZXMsICd1dGY4Jyk7XG4gIH1cblxuICByZXR1cm4gY3J5cHRvLmNyZWF0ZUhhc2goJ3NoYTEnKS51cGRhdGUoYnl0ZXMpLmRpZ2VzdCgpO1xufVxuXG5leHBvcnQgZGVmYXVsdCBzaGExOyJdLCJuYW1lcyI6WyJjcnlwdG8iLCJzaGExIiwiYnl0ZXMiLCJBcnJheSIsImlzQXJyYXkiLCJCdWZmZXIiLCJmcm9tIiwiY3JlYXRlSGFzaCIsInVwZGF0ZSIsImRpZ2VzdCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/uuid/dist/esm-node/sha1.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/uuid/dist/esm-node/stringify.js":
/*!******************************************************!*\
  !*** ./node_modules/uuid/dist/esm-node/stringify.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _validate_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./validate.js */ \"(sc_server)/./node_modules/uuid/dist/esm-node/validate.js\");\n\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */ const byteToHex = [];\nfor(let i = 0; i < 256; ++i){\n    byteToHex.push((i + 0x100).toString(16).substr(1));\n}\nfunction stringify(arr, offset = 0) {\n    // Note: Be careful editing this code!  It's been tuned for performance\n    // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n    const uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + \"-\" + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + \"-\" + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + \"-\" + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + \"-\" + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n    // of the following:\n    // - One or more input array values don't map to a hex octet (leading to\n    // \"undefined\" in the uuid)\n    // - Invalid input values for the RFC `version` or `variant` fields\n    if (!(0,_validate_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(uuid)) {\n        throw TypeError(\"Stringified UUID is invalid\");\n    }\n    return uuid;\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (stringify);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvdXVpZC9kaXN0L2VzbS1ub2RlL3N0cmluZ2lmeS5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFxQztBQUNyQzs7O0NBR0MsR0FFRCxNQUFNQyxZQUFZLEVBQUU7QUFFcEIsSUFBSyxJQUFJQyxJQUFJLEdBQUdBLElBQUksS0FBSyxFQUFFQSxFQUFHO0lBQzVCRCxVQUFVRSxLQUFLLENBQUNELElBQUksS0FBSSxFQUFHRSxTQUFTLElBQUlDLE9BQU87QUFDakQ7QUFFQSxTQUFTQyxVQUFVQyxHQUFHLEVBQUVDLFNBQVMsQ0FBQztJQUNoQyx1RUFBdUU7SUFDdkUsb0ZBQW9GO0lBQ3BGLE1BQU1DLE9BQU8sQ0FBQ1IsU0FBUyxDQUFDTSxHQUFHLENBQUNDLFNBQVMsRUFBRSxDQUFDLEdBQUdQLFNBQVMsQ0FBQ00sR0FBRyxDQUFDQyxTQUFTLEVBQUUsQ0FBQyxHQUFHUCxTQUFTLENBQUNNLEdBQUcsQ0FBQ0MsU0FBUyxFQUFFLENBQUMsR0FBR1AsU0FBUyxDQUFDTSxHQUFHLENBQUNDLFNBQVMsRUFBRSxDQUFDLEdBQUcsTUFBTVAsU0FBUyxDQUFDTSxHQUFHLENBQUNDLFNBQVMsRUFBRSxDQUFDLEdBQUdQLFNBQVMsQ0FBQ00sR0FBRyxDQUFDQyxTQUFTLEVBQUUsQ0FBQyxHQUFHLE1BQU1QLFNBQVMsQ0FBQ00sR0FBRyxDQUFDQyxTQUFTLEVBQUUsQ0FBQyxHQUFHUCxTQUFTLENBQUNNLEdBQUcsQ0FBQ0MsU0FBUyxFQUFFLENBQUMsR0FBRyxNQUFNUCxTQUFTLENBQUNNLEdBQUcsQ0FBQ0MsU0FBUyxFQUFFLENBQUMsR0FBR1AsU0FBUyxDQUFDTSxHQUFHLENBQUNDLFNBQVMsRUFBRSxDQUFDLEdBQUcsTUFBTVAsU0FBUyxDQUFDTSxHQUFHLENBQUNDLFNBQVMsR0FBRyxDQUFDLEdBQUdQLFNBQVMsQ0FBQ00sR0FBRyxDQUFDQyxTQUFTLEdBQUcsQ0FBQyxHQUFHUCxTQUFTLENBQUNNLEdBQUcsQ0FBQ0MsU0FBUyxHQUFHLENBQUMsR0FBR1AsU0FBUyxDQUFDTSxHQUFHLENBQUNDLFNBQVMsR0FBRyxDQUFDLEdBQUdQLFNBQVMsQ0FBQ00sR0FBRyxDQUFDQyxTQUFTLEdBQUcsQ0FBQyxHQUFHUCxTQUFTLENBQUNNLEdBQUcsQ0FBQ0MsU0FBUyxHQUFHLENBQUMsRUFBRUUsZUFBZSw0RUFBNEU7SUFDdGxCLG9CQUFvQjtJQUNwQix3RUFBd0U7SUFDeEUsMkJBQTJCO0lBQzNCLG1FQUFtRTtJQUVuRSxJQUFJLENBQUNWLHdEQUFRQSxDQUFDUyxPQUFPO1FBQ25CLE1BQU1FLFVBQVU7SUFDbEI7SUFFQSxPQUFPRjtBQUNUO0FBRUEsaUVBQWVILFNBQVNBLEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mdWxsc3RhY2stcm9sZS1iYXNlZC1uZXh0anMtMi8uL25vZGVfbW9kdWxlcy91dWlkL2Rpc3QvZXNtLW5vZGUvc3RyaW5naWZ5LmpzPzU2YTkiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHZhbGlkYXRlIGZyb20gJy4vdmFsaWRhdGUuanMnO1xuLyoqXG4gKiBDb252ZXJ0IGFycmF5IG9mIDE2IGJ5dGUgdmFsdWVzIHRvIFVVSUQgc3RyaW5nIGZvcm1hdCBvZiB0aGUgZm9ybTpcbiAqIFhYWFhYWFhYLVhYWFgtWFhYWC1YWFhYLVhYWFhYWFhYWFhYWFxuICovXG5cbmNvbnN0IGJ5dGVUb0hleCA9IFtdO1xuXG5mb3IgKGxldCBpID0gMDsgaSA8IDI1NjsgKytpKSB7XG4gIGJ5dGVUb0hleC5wdXNoKChpICsgMHgxMDApLnRvU3RyaW5nKDE2KS5zdWJzdHIoMSkpO1xufVxuXG5mdW5jdGlvbiBzdHJpbmdpZnkoYXJyLCBvZmZzZXQgPSAwKSB7XG4gIC8vIE5vdGU6IEJlIGNhcmVmdWwgZWRpdGluZyB0aGlzIGNvZGUhICBJdCdzIGJlZW4gdHVuZWQgZm9yIHBlcmZvcm1hbmNlXG4gIC8vIGFuZCB3b3JrcyBpbiB3YXlzIHlvdSBtYXkgbm90IGV4cGVjdC4gU2VlIGh0dHBzOi8vZ2l0aHViLmNvbS91dWlkanMvdXVpZC9wdWxsLzQzNFxuICBjb25zdCB1dWlkID0gKGJ5dGVUb0hleFthcnJbb2Zmc2V0ICsgMF1dICsgYnl0ZVRvSGV4W2FycltvZmZzZXQgKyAxXV0gKyBieXRlVG9IZXhbYXJyW29mZnNldCArIDJdXSArIGJ5dGVUb0hleFthcnJbb2Zmc2V0ICsgM11dICsgJy0nICsgYnl0ZVRvSGV4W2FycltvZmZzZXQgKyA0XV0gKyBieXRlVG9IZXhbYXJyW29mZnNldCArIDVdXSArICctJyArIGJ5dGVUb0hleFthcnJbb2Zmc2V0ICsgNl1dICsgYnl0ZVRvSGV4W2FycltvZmZzZXQgKyA3XV0gKyAnLScgKyBieXRlVG9IZXhbYXJyW29mZnNldCArIDhdXSArIGJ5dGVUb0hleFthcnJbb2Zmc2V0ICsgOV1dICsgJy0nICsgYnl0ZVRvSGV4W2FycltvZmZzZXQgKyAxMF1dICsgYnl0ZVRvSGV4W2FycltvZmZzZXQgKyAxMV1dICsgYnl0ZVRvSGV4W2FycltvZmZzZXQgKyAxMl1dICsgYnl0ZVRvSGV4W2FycltvZmZzZXQgKyAxM11dICsgYnl0ZVRvSGV4W2FycltvZmZzZXQgKyAxNF1dICsgYnl0ZVRvSGV4W2FycltvZmZzZXQgKyAxNV1dKS50b0xvd2VyQ2FzZSgpOyAvLyBDb25zaXN0ZW5jeSBjaGVjayBmb3IgdmFsaWQgVVVJRC4gIElmIHRoaXMgdGhyb3dzLCBpdCdzIGxpa2VseSBkdWUgdG8gb25lXG4gIC8vIG9mIHRoZSBmb2xsb3dpbmc6XG4gIC8vIC0gT25lIG9yIG1vcmUgaW5wdXQgYXJyYXkgdmFsdWVzIGRvbid0IG1hcCB0byBhIGhleCBvY3RldCAobGVhZGluZyB0b1xuICAvLyBcInVuZGVmaW5lZFwiIGluIHRoZSB1dWlkKVxuICAvLyAtIEludmFsaWQgaW5wdXQgdmFsdWVzIGZvciB0aGUgUkZDIGB2ZXJzaW9uYCBvciBgdmFyaWFudGAgZmllbGRzXG5cbiAgaWYgKCF2YWxpZGF0ZSh1dWlkKSkge1xuICAgIHRocm93IFR5cGVFcnJvcignU3RyaW5naWZpZWQgVVVJRCBpcyBpbnZhbGlkJyk7XG4gIH1cblxuICByZXR1cm4gdXVpZDtcbn1cblxuZXhwb3J0IGRlZmF1bHQgc3RyaW5naWZ5OyJdLCJuYW1lcyI6WyJ2YWxpZGF0ZSIsImJ5dGVUb0hleCIsImkiLCJwdXNoIiwidG9TdHJpbmciLCJzdWJzdHIiLCJzdHJpbmdpZnkiLCJhcnIiLCJvZmZzZXQiLCJ1dWlkIiwidG9Mb3dlckNhc2UiLCJUeXBlRXJyb3IiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/uuid/dist/esm-node/stringify.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/uuid/dist/esm-node/v1.js":
/*!***********************************************!*\
  !*** ./node_modules/uuid/dist/esm-node/v1.js ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _rng_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./rng.js */ \"(sc_server)/./node_modules/uuid/dist/esm-node/rng.js\");\n/* harmony import */ var _stringify_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./stringify.js */ \"(sc_server)/./node_modules/uuid/dist/esm-node/stringify.js\");\n\n // **`v1()` - Generate time-based UUID**\n//\n// Inspired by https://github.com/LiosK/UUID.js\n// and http://docs.python.org/library/uuid.html\nlet _nodeId;\nlet _clockseq; // Previous uuid creation time\nlet _lastMSecs = 0;\nlet _lastNSecs = 0; // See https://github.com/uuidjs/uuid for API details\nfunction v1(options, buf, offset) {\n    let i = buf && offset || 0;\n    const b = buf || new Array(16);\n    options = options || {};\n    let node = options.node || _nodeId;\n    let clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq; // node and clockseq need to be initialized to random values if they're not\n    // specified.  We do this lazily to minimize issues related to insufficient\n    // system entropy.  See #189\n    if (node == null || clockseq == null) {\n        const seedBytes = options.random || (options.rng || _rng_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])();\n        if (node == null) {\n            // Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)\n            node = _nodeId = [\n                seedBytes[0] | 0x01,\n                seedBytes[1],\n                seedBytes[2],\n                seedBytes[3],\n                seedBytes[4],\n                seedBytes[5]\n            ];\n        }\n        if (clockseq == null) {\n            // Per 4.2.2, randomize (14 bit) clockseq\n            clockseq = _clockseq = (seedBytes[6] << 8 | seedBytes[7]) & 0x3fff;\n        }\n    } // UUID timestamps are 100 nano-second units since the Gregorian epoch,\n    // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so\n    // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'\n    // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.\n    let msecs = options.msecs !== undefined ? options.msecs : Date.now(); // Per 4.2.1.2, use count of uuid's generated during the current clock\n    // cycle to simulate higher resolution clock\n    let nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1; // Time since last uuid creation (in msecs)\n    const dt = msecs - _lastMSecs + (nsecs - _lastNSecs) / 10000; // Per 4.2.1.2, Bump clockseq on clock regression\n    if (dt < 0 && options.clockseq === undefined) {\n        clockseq = clockseq + 1 & 0x3fff;\n    } // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new\n    // time interval\n    if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {\n        nsecs = 0;\n    } // Per 4.2.1.2 Throw error if too many uuids are requested\n    if (nsecs >= 10000) {\n        throw new Error(\"uuid.v1(): Can't create more than 10M uuids/sec\");\n    }\n    _lastMSecs = msecs;\n    _lastNSecs = nsecs;\n    _clockseq = clockseq; // Per 4.1.4 - Convert from unix epoch to Gregorian epoch\n    msecs += 12219292800000; // `time_low`\n    const tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;\n    b[i++] = tl >>> 24 & 0xff;\n    b[i++] = tl >>> 16 & 0xff;\n    b[i++] = tl >>> 8 & 0xff;\n    b[i++] = tl & 0xff; // `time_mid`\n    const tmh = msecs / 0x100000000 * 10000 & 0xfffffff;\n    b[i++] = tmh >>> 8 & 0xff;\n    b[i++] = tmh & 0xff; // `time_high_and_version`\n    b[i++] = tmh >>> 24 & 0xf | 0x10; // include version\n    b[i++] = tmh >>> 16 & 0xff; // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)\n    b[i++] = clockseq >>> 8 | 0x80; // `clock_seq_low`\n    b[i++] = clockseq & 0xff; // `node`\n    for(let n = 0; n < 6; ++n){\n        b[i + n] = node[n];\n    }\n    return buf || (0,_stringify_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(b);\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (v1);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvdXVpZC9kaXN0L2VzbS1ub2RlL3YxLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUEyQjtBQUNZLENBQUMsd0NBQXdDO0FBQ2hGLEVBQUU7QUFDRiwrQ0FBK0M7QUFDL0MsK0NBQStDO0FBRS9DLElBQUlFO0FBRUosSUFBSUMsV0FBVyw4QkFBOEI7QUFHN0MsSUFBSUMsYUFBYTtBQUNqQixJQUFJQyxhQUFhLEdBQUcscURBQXFEO0FBRXpFLFNBQVNDLEdBQUdDLE9BQU8sRUFBRUMsR0FBRyxFQUFFQyxNQUFNO0lBQzlCLElBQUlDLElBQUlGLE9BQU9DLFVBQVU7SUFDekIsTUFBTUUsSUFBSUgsT0FBTyxJQUFJSSxNQUFNO0lBQzNCTCxVQUFVQSxXQUFXLENBQUM7SUFDdEIsSUFBSU0sT0FBT04sUUFBUU0sUUFBUVg7SUFDM0IsSUFBSVksV0FBV1AsUUFBUU8sYUFBYUMsWUFBWVIsUUFBUU8sV0FBV1gsV0FBVywyRUFBMkU7SUFDekosMkVBQTJFO0lBQzNFLDRCQUE0QjtJQUU1QixJQUFJVSxRQUFRLFFBQVFDLFlBQVksTUFBTTtRQUNwQyxNQUFNRSxZQUFZVCxRQUFRVSxVQUFVLENBQUNWLFFBQVFQLE9BQU9BLCtDQUFFO1FBRXRELElBQUlhLFFBQVEsTUFBTTtZQUNoQiwyRUFBMkU7WUFDM0VBLE9BQU9YLFVBQVU7Z0JBQUNjLFNBQVMsQ0FBQyxFQUFFLEdBQUc7Z0JBQU1BLFNBQVMsQ0FBQyxFQUFFO2dCQUFFQSxTQUFTLENBQUMsRUFBRTtnQkFBRUEsU0FBUyxDQUFDLEVBQUU7Z0JBQUVBLFNBQVMsQ0FBQyxFQUFFO2dCQUFFQSxTQUFTLENBQUMsRUFBRTthQUFDO1FBQzlHO1FBRUEsSUFBSUYsWUFBWSxNQUFNO1lBQ3BCLHlDQUF5QztZQUN6Q0EsV0FBV1gsWUFBWSxDQUFDYSxTQUFTLENBQUMsRUFBRSxJQUFJLElBQUlBLFNBQVMsQ0FBQyxFQUFFLElBQUk7UUFDOUQ7SUFDRixFQUFFLHVFQUF1RTtJQUN6RSxvRUFBb0U7SUFDcEUsMkVBQTJFO0lBQzNFLDBFQUEwRTtJQUcxRSxJQUFJRSxRQUFRWCxRQUFRVyxVQUFVSCxZQUFZUixRQUFRVyxRQUFRQyxLQUFLQyxPQUFPLHNFQUFzRTtJQUM1SSw0Q0FBNEM7SUFFNUMsSUFBSUMsUUFBUWQsUUFBUWMsVUFBVU4sWUFBWVIsUUFBUWMsUUFBUWhCLGFBQWEsR0FBRywyQ0FBMkM7SUFFckgsTUFBTWlCLEtBQUtKLFFBQVFkLGFBQWEsQ0FBQ2lCLFFBQVFoQixVQUFTLElBQUssT0FBTyxpREFBaUQ7SUFFL0csSUFBSWlCLEtBQUssS0FBS2YsUUFBUU8sYUFBYUMsV0FBVztRQUM1Q0QsV0FBV0EsV0FBVyxJQUFJO0lBQzVCLEVBQUUsMEVBQTBFO0lBQzVFLGdCQUFnQjtJQUdoQixJQUFJLENBQUNRLEtBQUssS0FBS0osUUFBUWQsVUFBUyxLQUFNRyxRQUFRYyxVQUFVTixXQUFXO1FBQ2pFTSxRQUFRO0lBQ1YsRUFBRSwwREFBMEQ7SUFHNUQsSUFBSUEsU0FBUyxPQUFPO1FBQ2xCLE1BQU0sSUFBSUUsTUFBTTtJQUNsQjtJQUVBbkIsYUFBYWM7SUFDYmIsYUFBYWdCO0lBQ2JsQixZQUFZVyxVQUFVLHlEQUF5RDtJQUUvRUksU0FBUyxnQkFBZ0IsYUFBYTtJQUV0QyxNQUFNTSxLQUFLLENBQUMsQ0FBQ04sUUFBUSxTQUFRLElBQUssUUFBUUcsS0FBSSxJQUFLO0lBQ25EVixDQUFDLENBQUNELElBQUksR0FBR2MsT0FBTyxLQUFLO0lBQ3JCYixDQUFDLENBQUNELElBQUksR0FBR2MsT0FBTyxLQUFLO0lBQ3JCYixDQUFDLENBQUNELElBQUksR0FBR2MsT0FBTyxJQUFJO0lBQ3BCYixDQUFDLENBQUNELElBQUksR0FBR2MsS0FBSyxNQUFNLGFBQWE7SUFFakMsTUFBTUMsTUFBTVAsUUFBUSxjQUFjLFFBQVE7SUFDMUNQLENBQUMsQ0FBQ0QsSUFBSSxHQUFHZSxRQUFRLElBQUk7SUFDckJkLENBQUMsQ0FBQ0QsSUFBSSxHQUFHZSxNQUFNLE1BQU0sMEJBQTBCO0lBRS9DZCxDQUFDLENBQUNELElBQUksR0FBR2UsUUFBUSxLQUFLLE1BQU0sTUFBTSxrQkFBa0I7SUFFcERkLENBQUMsQ0FBQ0QsSUFBSSxHQUFHZSxRQUFRLEtBQUssTUFBTSw0REFBNEQ7SUFFeEZkLENBQUMsQ0FBQ0QsSUFBSSxHQUFHSSxhQUFhLElBQUksTUFBTSxrQkFBa0I7SUFFbERILENBQUMsQ0FBQ0QsSUFBSSxHQUFHSSxXQUFXLE1BQU0sU0FBUztJQUVuQyxJQUFLLElBQUlZLElBQUksR0FBR0EsSUFBSSxHQUFHLEVBQUVBLEVBQUc7UUFDMUJmLENBQUMsQ0FBQ0QsSUFBSWdCLEVBQUUsR0FBR2IsSUFBSSxDQUFDYSxFQUFFO0lBQ3BCO0lBRUEsT0FBT2xCLE9BQU9QLHlEQUFTQSxDQUFDVTtBQUMxQjtBQUVBLGlFQUFlTCxFQUFFQSxFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZnVsbHN0YWNrLXJvbGUtYmFzZWQtbmV4dGpzLTIvLi9ub2RlX21vZHVsZXMvdXVpZC9kaXN0L2VzbS1ub2RlL3YxLmpzP2U3ZDkiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHJuZyBmcm9tICcuL3JuZy5qcyc7XG5pbXBvcnQgc3RyaW5naWZ5IGZyb20gJy4vc3RyaW5naWZ5LmpzJzsgLy8gKipgdjEoKWAgLSBHZW5lcmF0ZSB0aW1lLWJhc2VkIFVVSUQqKlxuLy9cbi8vIEluc3BpcmVkIGJ5IGh0dHBzOi8vZ2l0aHViLmNvbS9MaW9zSy9VVUlELmpzXG4vLyBhbmQgaHR0cDovL2RvY3MucHl0aG9uLm9yZy9saWJyYXJ5L3V1aWQuaHRtbFxuXG5sZXQgX25vZGVJZDtcblxubGV0IF9jbG9ja3NlcTsgLy8gUHJldmlvdXMgdXVpZCBjcmVhdGlvbiB0aW1lXG5cblxubGV0IF9sYXN0TVNlY3MgPSAwO1xubGV0IF9sYXN0TlNlY3MgPSAwOyAvLyBTZWUgaHR0cHM6Ly9naXRodWIuY29tL3V1aWRqcy91dWlkIGZvciBBUEkgZGV0YWlsc1xuXG5mdW5jdGlvbiB2MShvcHRpb25zLCBidWYsIG9mZnNldCkge1xuICBsZXQgaSA9IGJ1ZiAmJiBvZmZzZXQgfHwgMDtcbiAgY29uc3QgYiA9IGJ1ZiB8fCBuZXcgQXJyYXkoMTYpO1xuICBvcHRpb25zID0gb3B0aW9ucyB8fCB7fTtcbiAgbGV0IG5vZGUgPSBvcHRpb25zLm5vZGUgfHwgX25vZGVJZDtcbiAgbGV0IGNsb2Nrc2VxID0gb3B0aW9ucy5jbG9ja3NlcSAhPT0gdW5kZWZpbmVkID8gb3B0aW9ucy5jbG9ja3NlcSA6IF9jbG9ja3NlcTsgLy8gbm9kZSBhbmQgY2xvY2tzZXEgbmVlZCB0byBiZSBpbml0aWFsaXplZCB0byByYW5kb20gdmFsdWVzIGlmIHRoZXkncmUgbm90XG4gIC8vIHNwZWNpZmllZC4gIFdlIGRvIHRoaXMgbGF6aWx5IHRvIG1pbmltaXplIGlzc3VlcyByZWxhdGVkIHRvIGluc3VmZmljaWVudFxuICAvLyBzeXN0ZW0gZW50cm9weS4gIFNlZSAjMTg5XG5cbiAgaWYgKG5vZGUgPT0gbnVsbCB8fCBjbG9ja3NlcSA9PSBudWxsKSB7XG4gICAgY29uc3Qgc2VlZEJ5dGVzID0gb3B0aW9ucy5yYW5kb20gfHwgKG9wdGlvbnMucm5nIHx8IHJuZykoKTtcblxuICAgIGlmIChub2RlID09IG51bGwpIHtcbiAgICAgIC8vIFBlciA0LjUsIGNyZWF0ZSBhbmQgNDgtYml0IG5vZGUgaWQsICg0NyByYW5kb20gYml0cyArIG11bHRpY2FzdCBiaXQgPSAxKVxuICAgICAgbm9kZSA9IF9ub2RlSWQgPSBbc2VlZEJ5dGVzWzBdIHwgMHgwMSwgc2VlZEJ5dGVzWzFdLCBzZWVkQnl0ZXNbMl0sIHNlZWRCeXRlc1szXSwgc2VlZEJ5dGVzWzRdLCBzZWVkQnl0ZXNbNV1dO1xuICAgIH1cblxuICAgIGlmIChjbG9ja3NlcSA9PSBudWxsKSB7XG4gICAgICAvLyBQZXIgNC4yLjIsIHJhbmRvbWl6ZSAoMTQgYml0KSBjbG9ja3NlcVxuICAgICAgY2xvY2tzZXEgPSBfY2xvY2tzZXEgPSAoc2VlZEJ5dGVzWzZdIDw8IDggfCBzZWVkQnl0ZXNbN10pICYgMHgzZmZmO1xuICAgIH1cbiAgfSAvLyBVVUlEIHRpbWVzdGFtcHMgYXJlIDEwMCBuYW5vLXNlY29uZCB1bml0cyBzaW5jZSB0aGUgR3JlZ29yaWFuIGVwb2NoLFxuICAvLyAoMTU4Mi0xMC0xNSAwMDowMCkuICBKU051bWJlcnMgYXJlbid0IHByZWNpc2UgZW5vdWdoIGZvciB0aGlzLCBzb1xuICAvLyB0aW1lIGlzIGhhbmRsZWQgaW50ZXJuYWxseSBhcyAnbXNlY3MnIChpbnRlZ2VyIG1pbGxpc2Vjb25kcykgYW5kICduc2VjcydcbiAgLy8gKDEwMC1uYW5vc2Vjb25kcyBvZmZzZXQgZnJvbSBtc2Vjcykgc2luY2UgdW5peCBlcG9jaCwgMTk3MC0wMS0wMSAwMDowMC5cblxuXG4gIGxldCBtc2VjcyA9IG9wdGlvbnMubXNlY3MgIT09IHVuZGVmaW5lZCA/IG9wdGlvbnMubXNlY3MgOiBEYXRlLm5vdygpOyAvLyBQZXIgNC4yLjEuMiwgdXNlIGNvdW50IG9mIHV1aWQncyBnZW5lcmF0ZWQgZHVyaW5nIHRoZSBjdXJyZW50IGNsb2NrXG4gIC8vIGN5Y2xlIHRvIHNpbXVsYXRlIGhpZ2hlciByZXNvbHV0aW9uIGNsb2NrXG5cbiAgbGV0IG5zZWNzID0gb3B0aW9ucy5uc2VjcyAhPT0gdW5kZWZpbmVkID8gb3B0aW9ucy5uc2VjcyA6IF9sYXN0TlNlY3MgKyAxOyAvLyBUaW1lIHNpbmNlIGxhc3QgdXVpZCBjcmVhdGlvbiAoaW4gbXNlY3MpXG5cbiAgY29uc3QgZHQgPSBtc2VjcyAtIF9sYXN0TVNlY3MgKyAobnNlY3MgLSBfbGFzdE5TZWNzKSAvIDEwMDAwOyAvLyBQZXIgNC4yLjEuMiwgQnVtcCBjbG9ja3NlcSBvbiBjbG9jayByZWdyZXNzaW9uXG5cbiAgaWYgKGR0IDwgMCAmJiBvcHRpb25zLmNsb2Nrc2VxID09PSB1bmRlZmluZWQpIHtcbiAgICBjbG9ja3NlcSA9IGNsb2Nrc2VxICsgMSAmIDB4M2ZmZjtcbiAgfSAvLyBSZXNldCBuc2VjcyBpZiBjbG9jayByZWdyZXNzZXMgKG5ldyBjbG9ja3NlcSkgb3Igd2UndmUgbW92ZWQgb250byBhIG5ld1xuICAvLyB0aW1lIGludGVydmFsXG5cblxuICBpZiAoKGR0IDwgMCB8fCBtc2VjcyA+IF9sYXN0TVNlY3MpICYmIG9wdGlvbnMubnNlY3MgPT09IHVuZGVmaW5lZCkge1xuICAgIG5zZWNzID0gMDtcbiAgfSAvLyBQZXIgNC4yLjEuMiBUaHJvdyBlcnJvciBpZiB0b28gbWFueSB1dWlkcyBhcmUgcmVxdWVzdGVkXG5cblxuICBpZiAobnNlY3MgPj0gMTAwMDApIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoXCJ1dWlkLnYxKCk6IENhbid0IGNyZWF0ZSBtb3JlIHRoYW4gMTBNIHV1aWRzL3NlY1wiKTtcbiAgfVxuXG4gIF9sYXN0TVNlY3MgPSBtc2VjcztcbiAgX2xhc3ROU2VjcyA9IG5zZWNzO1xuICBfY2xvY2tzZXEgPSBjbG9ja3NlcTsgLy8gUGVyIDQuMS40IC0gQ29udmVydCBmcm9tIHVuaXggZXBvY2ggdG8gR3JlZ29yaWFuIGVwb2NoXG5cbiAgbXNlY3MgKz0gMTIyMTkyOTI4MDAwMDA7IC8vIGB0aW1lX2xvd2BcblxuICBjb25zdCB0bCA9ICgobXNlY3MgJiAweGZmZmZmZmYpICogMTAwMDAgKyBuc2VjcykgJSAweDEwMDAwMDAwMDtcbiAgYltpKytdID0gdGwgPj4+IDI0ICYgMHhmZjtcbiAgYltpKytdID0gdGwgPj4+IDE2ICYgMHhmZjtcbiAgYltpKytdID0gdGwgPj4+IDggJiAweGZmO1xuICBiW2krK10gPSB0bCAmIDB4ZmY7IC8vIGB0aW1lX21pZGBcblxuICBjb25zdCB0bWggPSBtc2VjcyAvIDB4MTAwMDAwMDAwICogMTAwMDAgJiAweGZmZmZmZmY7XG4gIGJbaSsrXSA9IHRtaCA+Pj4gOCAmIDB4ZmY7XG4gIGJbaSsrXSA9IHRtaCAmIDB4ZmY7IC8vIGB0aW1lX2hpZ2hfYW5kX3ZlcnNpb25gXG5cbiAgYltpKytdID0gdG1oID4+PiAyNCAmIDB4ZiB8IDB4MTA7IC8vIGluY2x1ZGUgdmVyc2lvblxuXG4gIGJbaSsrXSA9IHRtaCA+Pj4gMTYgJiAweGZmOyAvLyBgY2xvY2tfc2VxX2hpX2FuZF9yZXNlcnZlZGAgKFBlciA0LjIuMiAtIGluY2x1ZGUgdmFyaWFudClcblxuICBiW2krK10gPSBjbG9ja3NlcSA+Pj4gOCB8IDB4ODA7IC8vIGBjbG9ja19zZXFfbG93YFxuXG4gIGJbaSsrXSA9IGNsb2Nrc2VxICYgMHhmZjsgLy8gYG5vZGVgXG5cbiAgZm9yIChsZXQgbiA9IDA7IG4gPCA2OyArK24pIHtcbiAgICBiW2kgKyBuXSA9IG5vZGVbbl07XG4gIH1cblxuICByZXR1cm4gYnVmIHx8IHN0cmluZ2lmeShiKTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgdjE7Il0sIm5hbWVzIjpbInJuZyIsInN0cmluZ2lmeSIsIl9ub2RlSWQiLCJfY2xvY2tzZXEiLCJfbGFzdE1TZWNzIiwiX2xhc3ROU2VjcyIsInYxIiwib3B0aW9ucyIsImJ1ZiIsIm9mZnNldCIsImkiLCJiIiwiQXJyYXkiLCJub2RlIiwiY2xvY2tzZXEiLCJ1bmRlZmluZWQiLCJzZWVkQnl0ZXMiLCJyYW5kb20iLCJtc2VjcyIsIkRhdGUiLCJub3ciLCJuc2VjcyIsImR0IiwiRXJyb3IiLCJ0bCIsInRtaCIsIm4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/uuid/dist/esm-node/v1.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/uuid/dist/esm-node/v3.js":
/*!***********************************************!*\
  !*** ./node_modules/uuid/dist/esm-node/v3.js ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _v35_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./v35.js */ \"(sc_server)/./node_modules/uuid/dist/esm-node/v35.js\");\n/* harmony import */ var _md5_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./md5.js */ \"(sc_server)/./node_modules/uuid/dist/esm-node/md5.js\");\n\n\nconst v3 = (0,_v35_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\"v3\", 0x30, _md5_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]);\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (v3);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvdXVpZC9kaXN0L2VzbS1ub2RlL3YzLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUEyQjtBQUNBO0FBQzNCLE1BQU1FLEtBQUtGLG1EQUFHQSxDQUFDLE1BQU0sTUFBTUMsK0NBQUdBO0FBQzlCLGlFQUFlQyxFQUFFQSxFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZnVsbHN0YWNrLXJvbGUtYmFzZWQtbmV4dGpzLTIvLi9ub2RlX21vZHVsZXMvdXVpZC9kaXN0L2VzbS1ub2RlL3YzLmpzPzA0ZDYiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHYzNSBmcm9tICcuL3YzNS5qcyc7XG5pbXBvcnQgbWQ1IGZyb20gJy4vbWQ1LmpzJztcbmNvbnN0IHYzID0gdjM1KCd2MycsIDB4MzAsIG1kNSk7XG5leHBvcnQgZGVmYXVsdCB2MzsiXSwibmFtZXMiOlsidjM1IiwibWQ1IiwidjMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/uuid/dist/esm-node/v3.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/uuid/dist/esm-node/v35.js":
/*!************************************************!*\
  !*** ./node_modules/uuid/dist/esm-node/v35.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DNS: () => (/* binding */ DNS),\n/* harmony export */   URL: () => (/* binding */ URL),\n/* harmony export */   \"default\": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _stringify_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./stringify.js */ \"(sc_server)/./node_modules/uuid/dist/esm-node/stringify.js\");\n/* harmony import */ var _parse_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./parse.js */ \"(sc_server)/./node_modules/uuid/dist/esm-node/parse.js\");\n\n\nfunction stringToBytes(str) {\n    str = unescape(encodeURIComponent(str)); // UTF8 escape\n    const bytes = [];\n    for(let i = 0; i < str.length; ++i){\n        bytes.push(str.charCodeAt(i));\n    }\n    return bytes;\n}\nconst DNS = \"6ba7b810-9dad-11d1-80b4-00c04fd430c8\";\nconst URL = \"6ba7b811-9dad-11d1-80b4-00c04fd430c8\";\n/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(name, version, hashfunc) {\n    function generateUUID(value, namespace, buf, offset) {\n        if (typeof value === \"string\") {\n            value = stringToBytes(value);\n        }\n        if (typeof namespace === \"string\") {\n            namespace = (0,_parse_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(namespace);\n        }\n        if (namespace.length !== 16) {\n            throw TypeError(\"Namespace must be array-like (16 iterable integer values, 0-255)\");\n        } // Compute hash of namespace and value, Per 4.3\n        // Future: Use spread syntax when supported on all platforms, e.g. `bytes =\n        // hashfunc([...namespace, ... value])`\n        let bytes = new Uint8Array(16 + value.length);\n        bytes.set(namespace);\n        bytes.set(value, namespace.length);\n        bytes = hashfunc(bytes);\n        bytes[6] = bytes[6] & 0x0f | version;\n        bytes[8] = bytes[8] & 0x3f | 0x80;\n        if (buf) {\n            offset = offset || 0;\n            for(let i = 0; i < 16; ++i){\n                buf[offset + i] = bytes[i];\n            }\n            return buf;\n        }\n        return (0,_stringify_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(bytes);\n    } // Function#name is not settable on some platforms (#270)\n    try {\n        generateUUID.name = name; // eslint-disable-next-line no-empty\n    } catch (err) {} // For CommonJS default export support\n    generateUUID.DNS = DNS;\n    generateUUID.URL = URL;\n    return generateUUID;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvdXVpZC9kaXN0L2VzbS1ub2RlL3YzNS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUF1QztBQUNSO0FBRS9CLFNBQVNFLGNBQWNDLEdBQUc7SUFDeEJBLE1BQU1DLFNBQVNDLG1CQUFtQkYsT0FBTyxjQUFjO0lBRXZELE1BQU1HLFFBQVEsRUFBRTtJQUVoQixJQUFLLElBQUlDLElBQUksR0FBR0EsSUFBSUosSUFBSUssUUFBUSxFQUFFRCxFQUFHO1FBQ25DRCxNQUFNRyxLQUFLTixJQUFJTyxXQUFXSDtJQUM1QjtJQUVBLE9BQU9EO0FBQ1Q7QUFFTyxNQUFNSyxNQUFNLHVDQUF1QztBQUNuRCxNQUFNQyxNQUFNLHVDQUF1QztBQUMxRCw2QkFBZSxvQ0FBVUMsSUFBSSxFQUFFQyxPQUFPLEVBQUVDLFFBQVE7SUFDOUMsU0FBU0MsYUFBYUMsS0FBSyxFQUFFQyxTQUFTLEVBQUVDLEdBQUcsRUFBRUMsTUFBTTtRQUNqRCxJQUFJLE9BQU9ILFVBQVUsVUFBVTtZQUM3QkEsUUFBUWYsY0FBY2U7UUFDeEI7UUFFQSxJQUFJLE9BQU9DLGNBQWMsVUFBVTtZQUNqQ0EsWUFBWWpCLHFEQUFLQSxDQUFDaUI7UUFDcEI7UUFFQSxJQUFJQSxVQUFVVixXQUFXLElBQUk7WUFDM0IsTUFBTWEsVUFBVTtRQUNsQixFQUFFLCtDQUErQztRQUNqRCwyRUFBMkU7UUFDM0UsdUNBQXVDO1FBR3ZDLElBQUlmLFFBQVEsSUFBSWdCLFdBQVcsS0FBS0wsTUFBTVQ7UUFDdENGLE1BQU1pQixJQUFJTDtRQUNWWixNQUFNaUIsSUFBSU4sT0FBT0MsVUFBVVY7UUFDM0JGLFFBQVFTLFNBQVNUO1FBQ2pCQSxLQUFLLENBQUMsRUFBRSxHQUFHQSxLQUFLLENBQUMsRUFBRSxHQUFHLE9BQU9RO1FBQzdCUixLQUFLLENBQUMsRUFBRSxHQUFHQSxLQUFLLENBQUMsRUFBRSxHQUFHLE9BQU87UUFFN0IsSUFBSWEsS0FBSztZQUNQQyxTQUFTQSxVQUFVO1lBRW5CLElBQUssSUFBSWIsSUFBSSxHQUFHQSxJQUFJLElBQUksRUFBRUEsRUFBRztnQkFDM0JZLEdBQUcsQ0FBQ0MsU0FBU2IsRUFBRSxHQUFHRCxLQUFLLENBQUNDLEVBQUU7WUFDNUI7WUFFQSxPQUFPWTtRQUNUO1FBRUEsT0FBT25CLHlEQUFTQSxDQUFDTTtJQUNuQixFQUFFLHlEQUF5RDtJQUczRCxJQUFJO1FBQ0ZVLGFBQWFILE9BQU9BLE1BQU0sb0NBQW9DO0lBQ2hFLEVBQUUsT0FBT1csS0FBSyxDQUFDLEVBQUUsc0NBQXNDO0lBR3ZEUixhQUFhTCxNQUFNQTtJQUNuQkssYUFBYUosTUFBTUE7SUFDbkIsT0FBT0k7QUFDVCIsInNvdXJjZXMiOlsid2VicGFjazovL2Z1bGxzdGFjay1yb2xlLWJhc2VkLW5leHRqcy0yLy4vbm9kZV9tb2R1bGVzL3V1aWQvZGlzdC9lc20tbm9kZS92MzUuanM/NzI4ZSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgc3RyaW5naWZ5IGZyb20gJy4vc3RyaW5naWZ5LmpzJztcbmltcG9ydCBwYXJzZSBmcm9tICcuL3BhcnNlLmpzJztcblxuZnVuY3Rpb24gc3RyaW5nVG9CeXRlcyhzdHIpIHtcbiAgc3RyID0gdW5lc2NhcGUoZW5jb2RlVVJJQ29tcG9uZW50KHN0cikpOyAvLyBVVEY4IGVzY2FwZVxuXG4gIGNvbnN0IGJ5dGVzID0gW107XG5cbiAgZm9yIChsZXQgaSA9IDA7IGkgPCBzdHIubGVuZ3RoOyArK2kpIHtcbiAgICBieXRlcy5wdXNoKHN0ci5jaGFyQ29kZUF0KGkpKTtcbiAgfVxuXG4gIHJldHVybiBieXRlcztcbn1cblxuZXhwb3J0IGNvbnN0IEROUyA9ICc2YmE3YjgxMC05ZGFkLTExZDEtODBiNC0wMGMwNGZkNDMwYzgnO1xuZXhwb3J0IGNvbnN0IFVSTCA9ICc2YmE3YjgxMS05ZGFkLTExZDEtODBiNC0wMGMwNGZkNDMwYzgnO1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gKG5hbWUsIHZlcnNpb24sIGhhc2hmdW5jKSB7XG4gIGZ1bmN0aW9uIGdlbmVyYXRlVVVJRCh2YWx1ZSwgbmFtZXNwYWNlLCBidWYsIG9mZnNldCkge1xuICAgIGlmICh0eXBlb2YgdmFsdWUgPT09ICdzdHJpbmcnKSB7XG4gICAgICB2YWx1ZSA9IHN0cmluZ1RvQnl0ZXModmFsdWUpO1xuICAgIH1cblxuICAgIGlmICh0eXBlb2YgbmFtZXNwYWNlID09PSAnc3RyaW5nJykge1xuICAgICAgbmFtZXNwYWNlID0gcGFyc2UobmFtZXNwYWNlKTtcbiAgICB9XG5cbiAgICBpZiAobmFtZXNwYWNlLmxlbmd0aCAhPT0gMTYpIHtcbiAgICAgIHRocm93IFR5cGVFcnJvcignTmFtZXNwYWNlIG11c3QgYmUgYXJyYXktbGlrZSAoMTYgaXRlcmFibGUgaW50ZWdlciB2YWx1ZXMsIDAtMjU1KScpO1xuICAgIH0gLy8gQ29tcHV0ZSBoYXNoIG9mIG5hbWVzcGFjZSBhbmQgdmFsdWUsIFBlciA0LjNcbiAgICAvLyBGdXR1cmU6IFVzZSBzcHJlYWQgc3ludGF4IHdoZW4gc3VwcG9ydGVkIG9uIGFsbCBwbGF0Zm9ybXMsIGUuZy4gYGJ5dGVzID1cbiAgICAvLyBoYXNoZnVuYyhbLi4ubmFtZXNwYWNlLCAuLi4gdmFsdWVdKWBcblxuXG4gICAgbGV0IGJ5dGVzID0gbmV3IFVpbnQ4QXJyYXkoMTYgKyB2YWx1ZS5sZW5ndGgpO1xuICAgIGJ5dGVzLnNldChuYW1lc3BhY2UpO1xuICAgIGJ5dGVzLnNldCh2YWx1ZSwgbmFtZXNwYWNlLmxlbmd0aCk7XG4gICAgYnl0ZXMgPSBoYXNoZnVuYyhieXRlcyk7XG4gICAgYnl0ZXNbNl0gPSBieXRlc1s2XSAmIDB4MGYgfCB2ZXJzaW9uO1xuICAgIGJ5dGVzWzhdID0gYnl0ZXNbOF0gJiAweDNmIHwgMHg4MDtcblxuICAgIGlmIChidWYpIHtcbiAgICAgIG9mZnNldCA9IG9mZnNldCB8fCAwO1xuXG4gICAgICBmb3IgKGxldCBpID0gMDsgaSA8IDE2OyArK2kpIHtcbiAgICAgICAgYnVmW29mZnNldCArIGldID0gYnl0ZXNbaV07XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBidWY7XG4gICAgfVxuXG4gICAgcmV0dXJuIHN0cmluZ2lmeShieXRlcyk7XG4gIH0gLy8gRnVuY3Rpb24jbmFtZSBpcyBub3Qgc2V0dGFibGUgb24gc29tZSBwbGF0Zm9ybXMgKCMyNzApXG5cblxuICB0cnkge1xuICAgIGdlbmVyYXRlVVVJRC5uYW1lID0gbmFtZTsgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLWVtcHR5XG4gIH0gY2F0Y2ggKGVycikge30gLy8gRm9yIENvbW1vbkpTIGRlZmF1bHQgZXhwb3J0IHN1cHBvcnRcblxuXG4gIGdlbmVyYXRlVVVJRC5ETlMgPSBETlM7XG4gIGdlbmVyYXRlVVVJRC5VUkwgPSBVUkw7XG4gIHJldHVybiBnZW5lcmF0ZVVVSUQ7XG59Il0sIm5hbWVzIjpbInN0cmluZ2lmeSIsInBhcnNlIiwic3RyaW5nVG9CeXRlcyIsInN0ciIsInVuZXNjYXBlIiwiZW5jb2RlVVJJQ29tcG9uZW50IiwiYnl0ZXMiLCJpIiwibGVuZ3RoIiwicHVzaCIsImNoYXJDb2RlQXQiLCJETlMiLCJVUkwiLCJuYW1lIiwidmVyc2lvbiIsImhhc2hmdW5jIiwiZ2VuZXJhdGVVVUlEIiwidmFsdWUiLCJuYW1lc3BhY2UiLCJidWYiLCJvZmZzZXQiLCJUeXBlRXJyb3IiLCJVaW50OEFycmF5Iiwic2V0IiwiZXJyIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/uuid/dist/esm-node/v35.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/uuid/dist/esm-node/v4.js":
/*!***********************************************!*\
  !*** ./node_modules/uuid/dist/esm-node/v4.js ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _rng_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./rng.js */ \"(sc_server)/./node_modules/uuid/dist/esm-node/rng.js\");\n/* harmony import */ var _stringify_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./stringify.js */ \"(sc_server)/./node_modules/uuid/dist/esm-node/stringify.js\");\n\n\nfunction v4(options, buf, offset) {\n    options = options || {};\n    const rnds = options.random || (options.rng || _rng_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n    rnds[6] = rnds[6] & 0x0f | 0x40;\n    rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n    if (buf) {\n        offset = offset || 0;\n        for(let i = 0; i < 16; ++i){\n            buf[offset + i] = rnds[i];\n        }\n        return buf;\n    }\n    return (0,_stringify_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(rnds);\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (v4);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvdXVpZC9kaXN0L2VzbS1ub2RlL3Y0LmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUEyQjtBQUNZO0FBRXZDLFNBQVNFLEdBQUdDLE9BQU8sRUFBRUMsR0FBRyxFQUFFQyxNQUFNO0lBQzlCRixVQUFVQSxXQUFXLENBQUM7SUFDdEIsTUFBTUcsT0FBT0gsUUFBUUksVUFBVSxDQUFDSixRQUFRSCxPQUFPQSwrQ0FBRSxLQUFNLGdFQUFnRTtJQUV2SE0sSUFBSSxDQUFDLEVBQUUsR0FBR0EsSUFBSSxDQUFDLEVBQUUsR0FBRyxPQUFPO0lBQzNCQSxJQUFJLENBQUMsRUFBRSxHQUFHQSxJQUFJLENBQUMsRUFBRSxHQUFHLE9BQU8sTUFBTSxvQ0FBb0M7SUFFckUsSUFBSUYsS0FBSztRQUNQQyxTQUFTQSxVQUFVO1FBRW5CLElBQUssSUFBSUcsSUFBSSxHQUFHQSxJQUFJLElBQUksRUFBRUEsRUFBRztZQUMzQkosR0FBRyxDQUFDQyxTQUFTRyxFQUFFLEdBQUdGLElBQUksQ0FBQ0UsRUFBRTtRQUMzQjtRQUVBLE9BQU9KO0lBQ1Q7SUFFQSxPQUFPSCx5REFBU0EsQ0FBQ0s7QUFDbkI7QUFFQSxpRUFBZUosRUFBRUEsRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL2Z1bGxzdGFjay1yb2xlLWJhc2VkLW5leHRqcy0yLy4vbm9kZV9tb2R1bGVzL3V1aWQvZGlzdC9lc20tbm9kZS92NC5qcz8yYjdiIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBybmcgZnJvbSAnLi9ybmcuanMnO1xuaW1wb3J0IHN0cmluZ2lmeSBmcm9tICcuL3N0cmluZ2lmeS5qcyc7XG5cbmZ1bmN0aW9uIHY0KG9wdGlvbnMsIGJ1Ziwgb2Zmc2V0KSB7XG4gIG9wdGlvbnMgPSBvcHRpb25zIHx8IHt9O1xuICBjb25zdCBybmRzID0gb3B0aW9ucy5yYW5kb20gfHwgKG9wdGlvbnMucm5nIHx8IHJuZykoKTsgLy8gUGVyIDQuNCwgc2V0IGJpdHMgZm9yIHZlcnNpb24gYW5kIGBjbG9ja19zZXFfaGlfYW5kX3Jlc2VydmVkYFxuXG4gIHJuZHNbNl0gPSBybmRzWzZdICYgMHgwZiB8IDB4NDA7XG4gIHJuZHNbOF0gPSBybmRzWzhdICYgMHgzZiB8IDB4ODA7IC8vIENvcHkgYnl0ZXMgdG8gYnVmZmVyLCBpZiBwcm92aWRlZFxuXG4gIGlmIChidWYpIHtcbiAgICBvZmZzZXQgPSBvZmZzZXQgfHwgMDtcblxuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgMTY7ICsraSkge1xuICAgICAgYnVmW29mZnNldCArIGldID0gcm5kc1tpXTtcbiAgICB9XG5cbiAgICByZXR1cm4gYnVmO1xuICB9XG5cbiAgcmV0dXJuIHN0cmluZ2lmeShybmRzKTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgdjQ7Il0sIm5hbWVzIjpbInJuZyIsInN0cmluZ2lmeSIsInY0Iiwib3B0aW9ucyIsImJ1ZiIsIm9mZnNldCIsInJuZHMiLCJyYW5kb20iLCJpIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/uuid/dist/esm-node/v4.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/uuid/dist/esm-node/v5.js":
/*!***********************************************!*\
  !*** ./node_modules/uuid/dist/esm-node/v5.js ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _v35_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./v35.js */ \"(sc_server)/./node_modules/uuid/dist/esm-node/v35.js\");\n/* harmony import */ var _sha1_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./sha1.js */ \"(sc_server)/./node_modules/uuid/dist/esm-node/sha1.js\");\n\n\nconst v5 = (0,_v35_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\"v5\", 0x50, _sha1_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]);\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (v5);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvdXVpZC9kaXN0L2VzbS1ub2RlL3Y1LmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUEyQjtBQUNFO0FBQzdCLE1BQU1FLEtBQUtGLG1EQUFHQSxDQUFDLE1BQU0sTUFBTUMsZ0RBQUlBO0FBQy9CLGlFQUFlQyxFQUFFQSxFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZnVsbHN0YWNrLXJvbGUtYmFzZWQtbmV4dGpzLTIvLi9ub2RlX21vZHVsZXMvdXVpZC9kaXN0L2VzbS1ub2RlL3Y1LmpzP2VkMzAiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHYzNSBmcm9tICcuL3YzNS5qcyc7XG5pbXBvcnQgc2hhMSBmcm9tICcuL3NoYTEuanMnO1xuY29uc3QgdjUgPSB2MzUoJ3Y1JywgMHg1MCwgc2hhMSk7XG5leHBvcnQgZGVmYXVsdCB2NTsiXSwibmFtZXMiOlsidjM1Iiwic2hhMSIsInY1Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/uuid/dist/esm-node/v5.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/uuid/dist/esm-node/validate.js":
/*!*****************************************************!*\
  !*** ./node_modules/uuid/dist/esm-node/validate.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _regex_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./regex.js */ \"(sc_server)/./node_modules/uuid/dist/esm-node/regex.js\");\n\nfunction validate(uuid) {\n    return typeof uuid === \"string\" && _regex_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].test(uuid);\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (validate);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvdXVpZC9kaXN0L2VzbS1ub2RlL3ZhbGlkYXRlLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQStCO0FBRS9CLFNBQVNDLFNBQVNDLElBQUk7SUFDcEIsT0FBTyxPQUFPQSxTQUFTLFlBQVlGLGlEQUFLQSxDQUFDRyxLQUFLRDtBQUNoRDtBQUVBLGlFQUFlRCxRQUFRQSxFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZnVsbHN0YWNrLXJvbGUtYmFzZWQtbmV4dGpzLTIvLi9ub2RlX21vZHVsZXMvdXVpZC9kaXN0L2VzbS1ub2RlL3ZhbGlkYXRlLmpzPzMxNmIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJFR0VYIGZyb20gJy4vcmVnZXguanMnO1xuXG5mdW5jdGlvbiB2YWxpZGF0ZSh1dWlkKSB7XG4gIHJldHVybiB0eXBlb2YgdXVpZCA9PT0gJ3N0cmluZycgJiYgUkVHRVgudGVzdCh1dWlkKTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgdmFsaWRhdGU7Il0sIm5hbWVzIjpbIlJFR0VYIiwidmFsaWRhdGUiLCJ1dWlkIiwidGVzdCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/uuid/dist/esm-node/validate.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/uuid/dist/esm-node/version.js":
/*!****************************************************!*\
  !*** ./node_modules/uuid/dist/esm-node/version.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _validate_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./validate.js */ \"(sc_server)/./node_modules/uuid/dist/esm-node/validate.js\");\n\nfunction version(uuid) {\n    if (!(0,_validate_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(uuid)) {\n        throw TypeError(\"Invalid UUID\");\n    }\n    return parseInt(uuid.substr(14, 1), 16);\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (version);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvdXVpZC9kaXN0L2VzbS1ub2RlL3ZlcnNpb24uanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBcUM7QUFFckMsU0FBU0MsUUFBUUMsSUFBSTtJQUNuQixJQUFJLENBQUNGLHdEQUFRQSxDQUFDRSxPQUFPO1FBQ25CLE1BQU1DLFVBQVU7SUFDbEI7SUFFQSxPQUFPQyxTQUFTRixLQUFLRyxPQUFPLElBQUksSUFBSTtBQUN0QztBQUVBLGlFQUFlSixPQUFPQSxFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZnVsbHN0YWNrLXJvbGUtYmFzZWQtbmV4dGpzLTIvLi9ub2RlX21vZHVsZXMvdXVpZC9kaXN0L2VzbS1ub2RlL3ZlcnNpb24uanM/YmUyYyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgdmFsaWRhdGUgZnJvbSAnLi92YWxpZGF0ZS5qcyc7XG5cbmZ1bmN0aW9uIHZlcnNpb24odXVpZCkge1xuICBpZiAoIXZhbGlkYXRlKHV1aWQpKSB7XG4gICAgdGhyb3cgVHlwZUVycm9yKCdJbnZhbGlkIFVVSUQnKTtcbiAgfVxuXG4gIHJldHVybiBwYXJzZUludCh1dWlkLnN1YnN0cigxNCwgMSksIDE2KTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgdmVyc2lvbjsiXSwibmFtZXMiOlsidmFsaWRhdGUiLCJ2ZXJzaW9uIiwidXVpZCIsIlR5cGVFcnJvciIsInBhcnNlSW50Iiwic3Vic3RyIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/uuid/dist/esm-node/version.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/yallist/iterator.js":
/*!******************************************!*\
  !*** ./node_modules/yallist/iterator.js ***!
  \******************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports = function(Yallist) {\n    Yallist.prototype[Symbol.iterator] = function*() {\n        for(let walker = this.head; walker; walker = walker.next){\n            yield walker.value;\n        }\n    };\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMveWFsbGlzdC9pdGVyYXRvci5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBQSxPQUFPQyxVQUFVLFNBQVVDLE9BQU87SUFDaENBLFFBQVFDLFNBQVMsQ0FBQ0MsT0FBT0MsU0FBUyxHQUFHO1FBQ25DLElBQUssSUFBSUMsU0FBUyxJQUFJLENBQUNDLE1BQU1ELFFBQVFBLFNBQVNBLE9BQU9FLEtBQU07WUFDekQsTUFBTUYsT0FBT0c7UUFDZjtJQUNGO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mdWxsc3RhY2stcm9sZS1iYXNlZC1uZXh0anMtMi8uL25vZGVfbW9kdWxlcy95YWxsaXN0L2l0ZXJhdG9yLmpzPzZmZWIiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChZYWxsaXN0KSB7XG4gIFlhbGxpc3QucHJvdG90eXBlW1N5bWJvbC5pdGVyYXRvcl0gPSBmdW5jdGlvbiogKCkge1xuICAgIGZvciAobGV0IHdhbGtlciA9IHRoaXMuaGVhZDsgd2Fsa2VyOyB3YWxrZXIgPSB3YWxrZXIubmV4dCkge1xuICAgICAgeWllbGQgd2Fsa2VyLnZhbHVlXG4gICAgfVxuICB9XG59XG4iXSwibmFtZXMiOlsibW9kdWxlIiwiZXhwb3J0cyIsIllhbGxpc3QiLCJwcm90b3R5cGUiLCJTeW1ib2wiLCJpdGVyYXRvciIsIndhbGtlciIsImhlYWQiLCJuZXh0IiwidmFsdWUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/yallist/iterator.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/yallist/yallist.js":
/*!*****************************************!*\
  !*** ./node_modules/yallist/yallist.js ***!
  \*****************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nmodule.exports = Yallist;\nYallist.Node = Node;\nYallist.create = Yallist;\nfunction Yallist(list) {\n    var self = this;\n    if (!(self instanceof Yallist)) {\n        self = new Yallist();\n    }\n    self.tail = null;\n    self.head = null;\n    self.length = 0;\n    if (list && typeof list.forEach === \"function\") {\n        list.forEach(function(item) {\n            self.push(item);\n        });\n    } else if (arguments.length > 0) {\n        for(var i = 0, l = arguments.length; i < l; i++){\n            self.push(arguments[i]);\n        }\n    }\n    return self;\n}\nYallist.prototype.removeNode = function(node) {\n    if (node.list !== this) {\n        throw new Error(\"removing node which does not belong to this list\");\n    }\n    var next = node.next;\n    var prev = node.prev;\n    if (next) {\n        next.prev = prev;\n    }\n    if (prev) {\n        prev.next = next;\n    }\n    if (node === this.head) {\n        this.head = next;\n    }\n    if (node === this.tail) {\n        this.tail = prev;\n    }\n    node.list.length--;\n    node.next = null;\n    node.prev = null;\n    node.list = null;\n    return next;\n};\nYallist.prototype.unshiftNode = function(node) {\n    if (node === this.head) {\n        return;\n    }\n    if (node.list) {\n        node.list.removeNode(node);\n    }\n    var head = this.head;\n    node.list = this;\n    node.next = head;\n    if (head) {\n        head.prev = node;\n    }\n    this.head = node;\n    if (!this.tail) {\n        this.tail = node;\n    }\n    this.length++;\n};\nYallist.prototype.pushNode = function(node) {\n    if (node === this.tail) {\n        return;\n    }\n    if (node.list) {\n        node.list.removeNode(node);\n    }\n    var tail = this.tail;\n    node.list = this;\n    node.prev = tail;\n    if (tail) {\n        tail.next = node;\n    }\n    this.tail = node;\n    if (!this.head) {\n        this.head = node;\n    }\n    this.length++;\n};\nYallist.prototype.push = function() {\n    for(var i = 0, l = arguments.length; i < l; i++){\n        push(this, arguments[i]);\n    }\n    return this.length;\n};\nYallist.prototype.unshift = function() {\n    for(var i = 0, l = arguments.length; i < l; i++){\n        unshift(this, arguments[i]);\n    }\n    return this.length;\n};\nYallist.prototype.pop = function() {\n    if (!this.tail) {\n        return undefined;\n    }\n    var res = this.tail.value;\n    this.tail = this.tail.prev;\n    if (this.tail) {\n        this.tail.next = null;\n    } else {\n        this.head = null;\n    }\n    this.length--;\n    return res;\n};\nYallist.prototype.shift = function() {\n    if (!this.head) {\n        return undefined;\n    }\n    var res = this.head.value;\n    this.head = this.head.next;\n    if (this.head) {\n        this.head.prev = null;\n    } else {\n        this.tail = null;\n    }\n    this.length--;\n    return res;\n};\nYallist.prototype.forEach = function(fn, thisp) {\n    thisp = thisp || this;\n    for(var walker = this.head, i = 0; walker !== null; i++){\n        fn.call(thisp, walker.value, i, this);\n        walker = walker.next;\n    }\n};\nYallist.prototype.forEachReverse = function(fn, thisp) {\n    thisp = thisp || this;\n    for(var walker = this.tail, i = this.length - 1; walker !== null; i--){\n        fn.call(thisp, walker.value, i, this);\n        walker = walker.prev;\n    }\n};\nYallist.prototype.get = function(n) {\n    for(var i = 0, walker = this.head; walker !== null && i < n; i++){\n        // abort out of the list early if we hit a cycle\n        walker = walker.next;\n    }\n    if (i === n && walker !== null) {\n        return walker.value;\n    }\n};\nYallist.prototype.getReverse = function(n) {\n    for(var i = 0, walker = this.tail; walker !== null && i < n; i++){\n        // abort out of the list early if we hit a cycle\n        walker = walker.prev;\n    }\n    if (i === n && walker !== null) {\n        return walker.value;\n    }\n};\nYallist.prototype.map = function(fn, thisp) {\n    thisp = thisp || this;\n    var res = new Yallist();\n    for(var walker = this.head; walker !== null;){\n        res.push(fn.call(thisp, walker.value, this));\n        walker = walker.next;\n    }\n    return res;\n};\nYallist.prototype.mapReverse = function(fn, thisp) {\n    thisp = thisp || this;\n    var res = new Yallist();\n    for(var walker = this.tail; walker !== null;){\n        res.push(fn.call(thisp, walker.value, this));\n        walker = walker.prev;\n    }\n    return res;\n};\nYallist.prototype.reduce = function(fn, initial) {\n    var acc;\n    var walker = this.head;\n    if (arguments.length > 1) {\n        acc = initial;\n    } else if (this.head) {\n        walker = this.head.next;\n        acc = this.head.value;\n    } else {\n        throw new TypeError(\"Reduce of empty list with no initial value\");\n    }\n    for(var i = 0; walker !== null; i++){\n        acc = fn(acc, walker.value, i);\n        walker = walker.next;\n    }\n    return acc;\n};\nYallist.prototype.reduceReverse = function(fn, initial) {\n    var acc;\n    var walker = this.tail;\n    if (arguments.length > 1) {\n        acc = initial;\n    } else if (this.tail) {\n        walker = this.tail.prev;\n        acc = this.tail.value;\n    } else {\n        throw new TypeError(\"Reduce of empty list with no initial value\");\n    }\n    for(var i = this.length - 1; walker !== null; i--){\n        acc = fn(acc, walker.value, i);\n        walker = walker.prev;\n    }\n    return acc;\n};\nYallist.prototype.toArray = function() {\n    var arr = new Array(this.length);\n    for(var i = 0, walker = this.head; walker !== null; i++){\n        arr[i] = walker.value;\n        walker = walker.next;\n    }\n    return arr;\n};\nYallist.prototype.toArrayReverse = function() {\n    var arr = new Array(this.length);\n    for(var i = 0, walker = this.tail; walker !== null; i++){\n        arr[i] = walker.value;\n        walker = walker.prev;\n    }\n    return arr;\n};\nYallist.prototype.slice = function(from, to) {\n    to = to || this.length;\n    if (to < 0) {\n        to += this.length;\n    }\n    from = from || 0;\n    if (from < 0) {\n        from += this.length;\n    }\n    var ret = new Yallist();\n    if (to < from || to < 0) {\n        return ret;\n    }\n    if (from < 0) {\n        from = 0;\n    }\n    if (to > this.length) {\n        to = this.length;\n    }\n    for(var i = 0, walker = this.head; walker !== null && i < from; i++){\n        walker = walker.next;\n    }\n    for(; walker !== null && i < to; i++, walker = walker.next){\n        ret.push(walker.value);\n    }\n    return ret;\n};\nYallist.prototype.sliceReverse = function(from, to) {\n    to = to || this.length;\n    if (to < 0) {\n        to += this.length;\n    }\n    from = from || 0;\n    if (from < 0) {\n        from += this.length;\n    }\n    var ret = new Yallist();\n    if (to < from || to < 0) {\n        return ret;\n    }\n    if (from < 0) {\n        from = 0;\n    }\n    if (to > this.length) {\n        to = this.length;\n    }\n    for(var i = this.length, walker = this.tail; walker !== null && i > to; i--){\n        walker = walker.prev;\n    }\n    for(; walker !== null && i > from; i--, walker = walker.prev){\n        ret.push(walker.value);\n    }\n    return ret;\n};\nYallist.prototype.splice = function(start, deleteCount, ...nodes) {\n    if (start > this.length) {\n        start = this.length - 1;\n    }\n    if (start < 0) {\n        start = this.length + start;\n    }\n    for(var i = 0, walker = this.head; walker !== null && i < start; i++){\n        walker = walker.next;\n    }\n    var ret = [];\n    for(var i = 0; walker && i < deleteCount; i++){\n        ret.push(walker.value);\n        walker = this.removeNode(walker);\n    }\n    if (walker === null) {\n        walker = this.tail;\n    }\n    if (walker !== this.head && walker !== this.tail) {\n        walker = walker.prev;\n    }\n    for(var i = 0; i < nodes.length; i++){\n        walker = insert(this, walker, nodes[i]);\n    }\n    return ret;\n};\nYallist.prototype.reverse = function() {\n    var head = this.head;\n    var tail = this.tail;\n    for(var walker = head; walker !== null; walker = walker.prev){\n        var p = walker.prev;\n        walker.prev = walker.next;\n        walker.next = p;\n    }\n    this.head = tail;\n    this.tail = head;\n    return this;\n};\nfunction insert(self, node, value) {\n    var inserted = node === self.head ? new Node(value, null, node, self) : new Node(value, node, node.next, self);\n    if (inserted.next === null) {\n        self.tail = inserted;\n    }\n    if (inserted.prev === null) {\n        self.head = inserted;\n    }\n    self.length++;\n    return inserted;\n}\nfunction push(self, item) {\n    self.tail = new Node(item, self.tail, null, self);\n    if (!self.head) {\n        self.head = self.tail;\n    }\n    self.length++;\n}\nfunction unshift(self, item) {\n    self.head = new Node(item, null, self.head, self);\n    if (!self.tail) {\n        self.tail = self.head;\n    }\n    self.length++;\n}\nfunction Node(value, prev, next, list) {\n    if (!(this instanceof Node)) {\n        return new Node(value, prev, next, list);\n    }\n    this.list = list;\n    this.value = value;\n    if (prev) {\n        prev.next = this;\n        this.prev = prev;\n    } else {\n        this.prev = null;\n    }\n    if (next) {\n        next.prev = this;\n        this.next = next;\n    } else {\n        this.next = null;\n    }\n}\ntry {\n    // add if support for Symbol.iterator is present\n    __webpack_require__(/*! ./iterator.js */ \"(sc_server)/./node_modules/yallist/iterator.js\")(Yallist);\n} catch (er) {}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/yallist/yallist.js\n");

/***/ }),

/***/ "(sc_shared)/./node_modules/next/dist/client/components/action-async-storage.js":
/*!**************************************************************************!*\
  !*** ./node_modules/next/dist/client/components/action-async-storage.js ***!
  \**************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nObject.defineProperty(exports, \"actionAsyncStorage\", ({\n    enumerable: true,\n    get: function() {\n        return actionAsyncStorage;\n    }\n}));\nconst _asynclocalstorage = __webpack_require__(/*! ./async-local-storage */ \"(sc_shared)/./node_modules/next/dist/client/components/async-local-storage.js\");\nconst actionAsyncStorage = (0, _asynclocalstorage.createAsyncLocalStorage)();\nif ((typeof exports.default === \"function\" || typeof exports.default === \"object\" && exports.default !== null) && typeof exports.default.__esModule === \"undefined\") {\n    Object.defineProperty(exports.default, \"__esModule\", {\n        value: true\n    });\n    Object.assign(exports.default, exports);\n    module.exports = exports.default;\n} //# sourceMappingURL=action-async-storage.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NoYXJlZCkvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NsaWVudC9jb21wb25lbnRzL2FjdGlvbi1hc3luYy1zdG9yYWdlLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2JBLDhDQUE2QztJQUN6Q0csT0FBTztBQUNYLENBQUMsRUFBQztBQUNGSCxzREFBcUQ7SUFDakRJLFlBQVk7SUFDWkMsS0FBSztRQUNELE9BQU9DO0lBQ1g7QUFDSixDQUFDLEVBQUM7QUFDRixNQUFNQyxxQkFBcUJDLG1CQUFPQSxDQUFDLDRHQUF1QjtBQUMxRCxNQUFNRixxQkFBcUIsQ0FBQyxHQUFHQyxtQkFBbUJFLHVCQUFzQjtBQUV4RSxJQUFJLENBQUMsT0FBT1AsUUFBUVEsWUFBWSxjQUFlLE9BQU9SLFFBQVFRLFlBQVksWUFBWVIsUUFBUVEsWUFBWSxJQUFJLEtBQU0sT0FBT1IsUUFBUVEsUUFBUUMsZUFBZSxhQUFhO0lBQ3JLWCxPQUFPQyxlQUFlQyxRQUFRUSxTQUFTLGNBQWM7UUFBRVAsT0FBTztJQUFLO0lBQ25FSCxPQUFPWSxPQUFPVixRQUFRUSxTQUFTUjtJQUMvQlcsT0FBT1gsVUFBVUEsUUFBUVE7QUFDM0IsRUFFQSxnREFBZ0QiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mdWxsc3RhY2stcm9sZS1iYXNlZC1uZXh0anMtMi8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY2xpZW50L2NvbXBvbmVudHMvYWN0aW9uLWFzeW5jLXN0b3JhZ2UuanM/MTkwMyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICAgIHZhbHVlOiB0cnVlXG59KTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcImFjdGlvbkFzeW5jU3RvcmFnZVwiLCB7XG4gICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICBnZXQ6IGZ1bmN0aW9uKCkge1xuICAgICAgICByZXR1cm4gYWN0aW9uQXN5bmNTdG9yYWdlO1xuICAgIH1cbn0pO1xuY29uc3QgX2FzeW5jbG9jYWxzdG9yYWdlID0gcmVxdWlyZShcIi4vYXN5bmMtbG9jYWwtc3RvcmFnZVwiKTtcbmNvbnN0IGFjdGlvbkFzeW5jU3RvcmFnZSA9ICgwLCBfYXN5bmNsb2NhbHN0b3JhZ2UuY3JlYXRlQXN5bmNMb2NhbFN0b3JhZ2UpKCk7XG5cbmlmICgodHlwZW9mIGV4cG9ydHMuZGVmYXVsdCA9PT0gJ2Z1bmN0aW9uJyB8fCAodHlwZW9mIGV4cG9ydHMuZGVmYXVsdCA9PT0gJ29iamVjdCcgJiYgZXhwb3J0cy5kZWZhdWx0ICE9PSBudWxsKSkgJiYgdHlwZW9mIGV4cG9ydHMuZGVmYXVsdC5fX2VzTW9kdWxlID09PSAndW5kZWZpbmVkJykge1xuICBPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cy5kZWZhdWx0LCAnX19lc01vZHVsZScsIHsgdmFsdWU6IHRydWUgfSk7XG4gIE9iamVjdC5hc3NpZ24oZXhwb3J0cy5kZWZhdWx0LCBleHBvcnRzKTtcbiAgbW9kdWxlLmV4cG9ydHMgPSBleHBvcnRzLmRlZmF1bHQ7XG59XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWFjdGlvbi1hc3luYy1zdG9yYWdlLmpzLm1hcCJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsImVudW1lcmFibGUiLCJnZXQiLCJhY3Rpb25Bc3luY1N0b3JhZ2UiLCJfYXN5bmNsb2NhbHN0b3JhZ2UiLCJyZXF1aXJlIiwiY3JlYXRlQXN5bmNMb2NhbFN0b3JhZ2UiLCJkZWZhdWx0IiwiX19lc01vZHVsZSIsImFzc2lnbiIsIm1vZHVsZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(sc_shared)/./node_modules/next/dist/client/components/action-async-storage.js\n");

/***/ }),

/***/ "(sc_shared)/./node_modules/next/dist/client/components/async-local-storage.js":
/*!*************************************************************************!*\
  !*** ./node_modules/next/dist/client/components/async-local-storage.js ***!
  \*************************************************************************/
/***/ ((module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nObject.defineProperty(exports, \"createAsyncLocalStorage\", ({\n    enumerable: true,\n    get: function() {\n        return createAsyncLocalStorage;\n    }\n}));\nclass FakeAsyncLocalStorage {\n    disable() {\n        throw new Error(\"Invariant: AsyncLocalStorage accessed in runtime where it is not available\");\n    }\n    getStore() {\n        // This fake implementation of AsyncLocalStorage always returns `undefined`.\n        return undefined;\n    }\n    run() {\n        throw new Error(\"Invariant: AsyncLocalStorage accessed in runtime where it is not available\");\n    }\n    exit() {\n        throw new Error(\"Invariant: AsyncLocalStorage accessed in runtime where it is not available\");\n    }\n    enterWith() {\n        throw new Error(\"Invariant: AsyncLocalStorage accessed in runtime where it is not available\");\n    }\n}\nfunction createAsyncLocalStorage() {\n    if (globalThis.AsyncLocalStorage) {\n        return new globalThis.AsyncLocalStorage();\n    }\n    return new FakeAsyncLocalStorage();\n}\nif ((typeof exports.default === \"function\" || typeof exports.default === \"object\" && exports.default !== null) && typeof exports.default.__esModule === \"undefined\") {\n    Object.defineProperty(exports.default, \"__esModule\", {\n        value: true\n    });\n    Object.assign(exports.default, exports);\n    module.exports = exports.default;\n} //# sourceMappingURL=async-local-storage.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NoYXJlZCkvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NsaWVudC9jb21wb25lbnRzL2FzeW5jLWxvY2FsLXN0b3JhZ2UuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYkEsOENBQTZDO0lBQ3pDRyxPQUFPO0FBQ1gsQ0FBQyxFQUFDO0FBQ0ZILDJEQUEwRDtJQUN0REksWUFBWTtJQUNaQyxLQUFLO1FBQ0QsT0FBT0M7SUFDWDtBQUNKLENBQUMsRUFBQztBQUNGLE1BQU1DO0lBQ0ZDLFVBQVU7UUFDTixNQUFNLElBQUlDLE1BQU07SUFDcEI7SUFDQUMsV0FBVztRQUNQLDRFQUE0RTtRQUM1RSxPQUFPQztJQUNYO0lBQ0FDLE1BQU07UUFDRixNQUFNLElBQUlILE1BQU07SUFDcEI7SUFDQUksT0FBTztRQUNILE1BQU0sSUFBSUosTUFBTTtJQUNwQjtJQUNBSyxZQUFZO1FBQ1IsTUFBTSxJQUFJTCxNQUFNO0lBQ3BCO0FBQ0o7QUFDQSxTQUFTSDtJQUNMLElBQUlTLFdBQVdDLG1CQUFtQjtRQUM5QixPQUFPLElBQUlELFdBQVdDO0lBQzFCO0lBQ0EsT0FBTyxJQUFJVDtBQUNmO0FBRUEsSUFBSSxDQUFDLE9BQU9MLFFBQVFlLFlBQVksY0FBZSxPQUFPZixRQUFRZSxZQUFZLFlBQVlmLFFBQVFlLFlBQVksSUFBSSxLQUFNLE9BQU9mLFFBQVFlLFFBQVFDLGVBQWUsYUFBYTtJQUNyS2xCLE9BQU9DLGVBQWVDLFFBQVFlLFNBQVMsY0FBYztRQUFFZCxPQUFPO0lBQUs7SUFDbkVILE9BQU9tQixPQUFPakIsUUFBUWUsU0FBU2Y7SUFDL0JrQixPQUFPbEIsVUFBVUEsUUFBUWU7QUFDM0IsRUFFQSwrQ0FBK0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mdWxsc3RhY2stcm9sZS1iYXNlZC1uZXh0anMtMi8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY2xpZW50L2NvbXBvbmVudHMvYXN5bmMtbG9jYWwtc3RvcmFnZS5qcz9hZjQzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gICAgdmFsdWU6IHRydWVcbn0pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiY3JlYXRlQXN5bmNMb2NhbFN0b3JhZ2VcIiwge1xuICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgZ2V0OiBmdW5jdGlvbigpIHtcbiAgICAgICAgcmV0dXJuIGNyZWF0ZUFzeW5jTG9jYWxTdG9yYWdlO1xuICAgIH1cbn0pO1xuY2xhc3MgRmFrZUFzeW5jTG9jYWxTdG9yYWdlIHtcbiAgICBkaXNhYmxlKCkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJJbnZhcmlhbnQ6IEFzeW5jTG9jYWxTdG9yYWdlIGFjY2Vzc2VkIGluIHJ1bnRpbWUgd2hlcmUgaXQgaXMgbm90IGF2YWlsYWJsZVwiKTtcbiAgICB9XG4gICAgZ2V0U3RvcmUoKSB7XG4gICAgICAgIC8vIFRoaXMgZmFrZSBpbXBsZW1lbnRhdGlvbiBvZiBBc3luY0xvY2FsU3RvcmFnZSBhbHdheXMgcmV0dXJucyBgdW5kZWZpbmVkYC5cbiAgICAgICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgICB9XG4gICAgcnVuKCkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJJbnZhcmlhbnQ6IEFzeW5jTG9jYWxTdG9yYWdlIGFjY2Vzc2VkIGluIHJ1bnRpbWUgd2hlcmUgaXQgaXMgbm90IGF2YWlsYWJsZVwiKTtcbiAgICB9XG4gICAgZXhpdCgpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiSW52YXJpYW50OiBBc3luY0xvY2FsU3RvcmFnZSBhY2Nlc3NlZCBpbiBydW50aW1lIHdoZXJlIGl0IGlzIG5vdCBhdmFpbGFibGVcIik7XG4gICAgfVxuICAgIGVudGVyV2l0aCgpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiSW52YXJpYW50OiBBc3luY0xvY2FsU3RvcmFnZSBhY2Nlc3NlZCBpbiBydW50aW1lIHdoZXJlIGl0IGlzIG5vdCBhdmFpbGFibGVcIik7XG4gICAgfVxufVxuZnVuY3Rpb24gY3JlYXRlQXN5bmNMb2NhbFN0b3JhZ2UoKSB7XG4gICAgaWYgKGdsb2JhbFRoaXMuQXN5bmNMb2NhbFN0b3JhZ2UpIHtcbiAgICAgICAgcmV0dXJuIG5ldyBnbG9iYWxUaGlzLkFzeW5jTG9jYWxTdG9yYWdlKCk7XG4gICAgfVxuICAgIHJldHVybiBuZXcgRmFrZUFzeW5jTG9jYWxTdG9yYWdlKCk7XG59XG5cbmlmICgodHlwZW9mIGV4cG9ydHMuZGVmYXVsdCA9PT0gJ2Z1bmN0aW9uJyB8fCAodHlwZW9mIGV4cG9ydHMuZGVmYXVsdCA9PT0gJ29iamVjdCcgJiYgZXhwb3J0cy5kZWZhdWx0ICE9PSBudWxsKSkgJiYgdHlwZW9mIGV4cG9ydHMuZGVmYXVsdC5fX2VzTW9kdWxlID09PSAndW5kZWZpbmVkJykge1xuICBPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cy5kZWZhdWx0LCAnX19lc01vZHVsZScsIHsgdmFsdWU6IHRydWUgfSk7XG4gIE9iamVjdC5hc3NpZ24oZXhwb3J0cy5kZWZhdWx0LCBleHBvcnRzKTtcbiAgbW9kdWxlLmV4cG9ydHMgPSBleHBvcnRzLmRlZmF1bHQ7XG59XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWFzeW5jLWxvY2FsLXN0b3JhZ2UuanMubWFwIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiZW51bWVyYWJsZSIsImdldCIsImNyZWF0ZUFzeW5jTG9jYWxTdG9yYWdlIiwiRmFrZUFzeW5jTG9jYWxTdG9yYWdlIiwiZGlzYWJsZSIsIkVycm9yIiwiZ2V0U3RvcmUiLCJ1bmRlZmluZWQiLCJydW4iLCJleGl0IiwiZW50ZXJXaXRoIiwiZ2xvYmFsVGhpcyIsIkFzeW5jTG9jYWxTdG9yYWdlIiwiZGVmYXVsdCIsIl9fZXNNb2R1bGUiLCJhc3NpZ24iLCJtb2R1bGUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(sc_shared)/./node_modules/next/dist/client/components/async-local-storage.js\n");

/***/ }),

/***/ "(sc_shared)/./node_modules/next/dist/client/components/request-async-storage.js":
/*!***************************************************************************!*\
  !*** ./node_modules/next/dist/client/components/request-async-storage.js ***!
  \***************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nObject.defineProperty(exports, \"requestAsyncStorage\", ({\n    enumerable: true,\n    get: function() {\n        return requestAsyncStorage;\n    }\n}));\nconst _asynclocalstorage = __webpack_require__(/*! ./async-local-storage */ \"(sc_shared)/./node_modules/next/dist/client/components/async-local-storage.js\");\nconst requestAsyncStorage = (0, _asynclocalstorage.createAsyncLocalStorage)();\nif ((typeof exports.default === \"function\" || typeof exports.default === \"object\" && exports.default !== null) && typeof exports.default.__esModule === \"undefined\") {\n    Object.defineProperty(exports.default, \"__esModule\", {\n        value: true\n    });\n    Object.assign(exports.default, exports);\n    module.exports = exports.default;\n} //# sourceMappingURL=request-async-storage.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NoYXJlZCkvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NsaWVudC9jb21wb25lbnRzL3JlcXVlc3QtYXN5bmMtc3RvcmFnZS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFDekNHLE9BQU87QUFDWCxDQUFDLEVBQUM7QUFDRkgsdURBQXNEO0lBQ2xESSxZQUFZO0lBQ1pDLEtBQUs7UUFDRCxPQUFPQztJQUNYO0FBQ0osQ0FBQyxFQUFDO0FBQ0YsTUFBTUMscUJBQXFCQyxtQkFBT0EsQ0FBQyw0R0FBdUI7QUFDMUQsTUFBTUYsc0JBQXNCLENBQUMsR0FBR0MsbUJBQW1CRSx1QkFBc0I7QUFFekUsSUFBSSxDQUFDLE9BQU9QLFFBQVFRLFlBQVksY0FBZSxPQUFPUixRQUFRUSxZQUFZLFlBQVlSLFFBQVFRLFlBQVksSUFBSSxLQUFNLE9BQU9SLFFBQVFRLFFBQVFDLGVBQWUsYUFBYTtJQUNyS1gsT0FBT0MsZUFBZUMsUUFBUVEsU0FBUyxjQUFjO1FBQUVQLE9BQU87SUFBSztJQUNuRUgsT0FBT1ksT0FBT1YsUUFBUVEsU0FBU1I7SUFDL0JXLE9BQU9YLFVBQVVBLFFBQVFRO0FBQzNCLEVBRUEsaURBQWlEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZnVsbHN0YWNrLXJvbGUtYmFzZWQtbmV4dGpzLTIvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NsaWVudC9jb21wb25lbnRzL3JlcXVlc3QtYXN5bmMtc3RvcmFnZS5qcz8zMzlkIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gICAgdmFsdWU6IHRydWVcbn0pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwicmVxdWVzdEFzeW5jU3RvcmFnZVwiLCB7XG4gICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICBnZXQ6IGZ1bmN0aW9uKCkge1xuICAgICAgICByZXR1cm4gcmVxdWVzdEFzeW5jU3RvcmFnZTtcbiAgICB9XG59KTtcbmNvbnN0IF9hc3luY2xvY2Fsc3RvcmFnZSA9IHJlcXVpcmUoXCIuL2FzeW5jLWxvY2FsLXN0b3JhZ2VcIik7XG5jb25zdCByZXF1ZXN0QXN5bmNTdG9yYWdlID0gKDAsIF9hc3luY2xvY2Fsc3RvcmFnZS5jcmVhdGVBc3luY0xvY2FsU3RvcmFnZSkoKTtcblxuaWYgKCh0eXBlb2YgZXhwb3J0cy5kZWZhdWx0ID09PSAnZnVuY3Rpb24nIHx8ICh0eXBlb2YgZXhwb3J0cy5kZWZhdWx0ID09PSAnb2JqZWN0JyAmJiBleHBvcnRzLmRlZmF1bHQgIT09IG51bGwpKSAmJiB0eXBlb2YgZXhwb3J0cy5kZWZhdWx0Ll9fZXNNb2R1bGUgPT09ICd1bmRlZmluZWQnKSB7XG4gIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLmRlZmF1bHQsICdfX2VzTW9kdWxlJywgeyB2YWx1ZTogdHJ1ZSB9KTtcbiAgT2JqZWN0LmFzc2lnbihleHBvcnRzLmRlZmF1bHQsIGV4cG9ydHMpO1xuICBtb2R1bGUuZXhwb3J0cyA9IGV4cG9ydHMuZGVmYXVsdDtcbn1cblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cmVxdWVzdC1hc3luYy1zdG9yYWdlLmpzLm1hcCJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsImVudW1lcmFibGUiLCJnZXQiLCJyZXF1ZXN0QXN5bmNTdG9yYWdlIiwiX2FzeW5jbG9jYWxzdG9yYWdlIiwicmVxdWlyZSIsImNyZWF0ZUFzeW5jTG9jYWxTdG9yYWdlIiwiZGVmYXVsdCIsIl9fZXNNb2R1bGUiLCJhc3NpZ24iLCJtb2R1bGUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(sc_shared)/./node_modules/next/dist/client/components/request-async-storage.js\n");

/***/ }),

/***/ "(sc_shared)/./node_modules/next/dist/client/components/static-generation-async-storage.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/next/dist/client/components/static-generation-async-storage.js ***!
  \*************************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nObject.defineProperty(exports, \"staticGenerationAsyncStorage\", ({\n    enumerable: true,\n    get: function() {\n        return staticGenerationAsyncStorage;\n    }\n}));\nconst _asynclocalstorage = __webpack_require__(/*! ./async-local-storage */ \"(sc_shared)/./node_modules/next/dist/client/components/async-local-storage.js\");\nconst staticGenerationAsyncStorage = (0, _asynclocalstorage.createAsyncLocalStorage)();\nif ((typeof exports.default === \"function\" || typeof exports.default === \"object\" && exports.default !== null) && typeof exports.default.__esModule === \"undefined\") {\n    Object.defineProperty(exports.default, \"__esModule\", {\n        value: true\n    });\n    Object.assign(exports.default, exports);\n    module.exports = exports.default;\n} //# sourceMappingURL=static-generation-async-storage.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NoYXJlZCkvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NsaWVudC9jb21wb25lbnRzL3N0YXRpYy1nZW5lcmF0aW9uLWFzeW5jLXN0b3JhZ2UuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYkEsOENBQTZDO0lBQ3pDRyxPQUFPO0FBQ1gsQ0FBQyxFQUFDO0FBQ0ZILGdFQUErRDtJQUMzREksWUFBWTtJQUNaQyxLQUFLO1FBQ0QsT0FBT0M7SUFDWDtBQUNKLENBQUMsRUFBQztBQUNGLE1BQU1DLHFCQUFxQkMsbUJBQU9BLENBQUMsNEdBQXVCO0FBQzFELE1BQU1GLCtCQUErQixDQUFDLEdBQUdDLG1CQUFtQkUsdUJBQXNCO0FBRWxGLElBQUksQ0FBQyxPQUFPUCxRQUFRUSxZQUFZLGNBQWUsT0FBT1IsUUFBUVEsWUFBWSxZQUFZUixRQUFRUSxZQUFZLElBQUksS0FBTSxPQUFPUixRQUFRUSxRQUFRQyxlQUFlLGFBQWE7SUFDcktYLE9BQU9DLGVBQWVDLFFBQVFRLFNBQVMsY0FBYztRQUFFUCxPQUFPO0lBQUs7SUFDbkVILE9BQU9ZLE9BQU9WLFFBQVFRLFNBQVNSO0lBQy9CVyxPQUFPWCxVQUFVQSxRQUFRUTtBQUMzQixFQUVBLDJEQUEyRCIsInNvdXJjZXMiOlsid2VicGFjazovL2Z1bGxzdGFjay1yb2xlLWJhc2VkLW5leHRqcy0yLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9jbGllbnQvY29tcG9uZW50cy9zdGF0aWMtZ2VuZXJhdGlvbi1hc3luYy1zdG9yYWdlLmpzPzJiMjgiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgICB2YWx1ZTogdHJ1ZVxufSk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJzdGF0aWNHZW5lcmF0aW9uQXN5bmNTdG9yYWdlXCIsIHtcbiAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgIGdldDogZnVuY3Rpb24oKSB7XG4gICAgICAgIHJldHVybiBzdGF0aWNHZW5lcmF0aW9uQXN5bmNTdG9yYWdlO1xuICAgIH1cbn0pO1xuY29uc3QgX2FzeW5jbG9jYWxzdG9yYWdlID0gcmVxdWlyZShcIi4vYXN5bmMtbG9jYWwtc3RvcmFnZVwiKTtcbmNvbnN0IHN0YXRpY0dlbmVyYXRpb25Bc3luY1N0b3JhZ2UgPSAoMCwgX2FzeW5jbG9jYWxzdG9yYWdlLmNyZWF0ZUFzeW5jTG9jYWxTdG9yYWdlKSgpO1xuXG5pZiAoKHR5cGVvZiBleHBvcnRzLmRlZmF1bHQgPT09ICdmdW5jdGlvbicgfHwgKHR5cGVvZiBleHBvcnRzLmRlZmF1bHQgPT09ICdvYmplY3QnICYmIGV4cG9ydHMuZGVmYXVsdCAhPT0gbnVsbCkpICYmIHR5cGVvZiBleHBvcnRzLmRlZmF1bHQuX19lc01vZHVsZSA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMuZGVmYXVsdCwgJ19fZXNNb2R1bGUnLCB7IHZhbHVlOiB0cnVlIH0pO1xuICBPYmplY3QuYXNzaWduKGV4cG9ydHMuZGVmYXVsdCwgZXhwb3J0cyk7XG4gIG1vZHVsZS5leHBvcnRzID0gZXhwb3J0cy5kZWZhdWx0O1xufVxuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1zdGF0aWMtZ2VuZXJhdGlvbi1hc3luYy1zdG9yYWdlLmpzLm1hcCJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsImVudW1lcmFibGUiLCJnZXQiLCJzdGF0aWNHZW5lcmF0aW9uQXN5bmNTdG9yYWdlIiwiX2FzeW5jbG9jYWxzdG9yYWdlIiwicmVxdWlyZSIsImNyZWF0ZUFzeW5jTG9jYWxTdG9yYWdlIiwiZGVmYXVsdCIsIl9fZXNNb2R1bGUiLCJhc3NpZ24iLCJtb2R1bGUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(sc_shared)/./node_modules/next/dist/client/components/static-generation-async-storage.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/@babel/runtime/helpers/assertThisInitialized.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/assertThisInitialized.js ***!
  \**********************************************************************/
/***/ ((module) => {

"use strict";
eval("\nfunction _assertThisInitialized(self) {\n    if (self === void 0) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }\n    return self;\n}\nmodule.exports = _assertThisInitialized, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQuanMiLCJtYXBwaW5ncyI6IjtBQUFBLFNBQVNBLHVCQUF1QkMsSUFBSTtJQUNsQyxJQUFJQSxTQUFTLEtBQUssR0FBRztRQUNuQixNQUFNLElBQUlDLGVBQWU7SUFDM0I7SUFDQSxPQUFPRDtBQUNUO0FBQ0FFLE9BQU9DLFVBQVVKLHdCQUF3QkcseUJBQXlCRSxHQUFHLE1BQU1GLHlCQUF5QixHQUFHQSxPQUFPQyIsInNvdXJjZXMiOlsid2VicGFjazovL2Z1bGxzdGFjay1yb2xlLWJhc2VkLW5leHRqcy0yLy4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvYXNzZXJ0VGhpc0luaXRpYWxpemVkLmpzPzIwMTUiXSwic291cmNlc0NvbnRlbnQiOlsiZnVuY3Rpb24gX2Fzc2VydFRoaXNJbml0aWFsaXplZChzZWxmKSB7XG4gIGlmIChzZWxmID09PSB2b2lkIDApIHtcbiAgICB0aHJvdyBuZXcgUmVmZXJlbmNlRXJyb3IoXCJ0aGlzIGhhc24ndCBiZWVuIGluaXRpYWxpc2VkIC0gc3VwZXIoKSBoYXNuJ3QgYmVlbiBjYWxsZWRcIik7XG4gIH1cbiAgcmV0dXJuIHNlbGY7XG59XG5tb2R1bGUuZXhwb3J0cyA9IF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQsIG1vZHVsZS5leHBvcnRzLl9fZXNNb2R1bGUgPSB0cnVlLCBtb2R1bGUuZXhwb3J0c1tcImRlZmF1bHRcIl0gPSBtb2R1bGUuZXhwb3J0czsiXSwibmFtZXMiOlsiX2Fzc2VydFRoaXNJbml0aWFsaXplZCIsInNlbGYiLCJSZWZlcmVuY2VFcnJvciIsIm1vZHVsZSIsImV4cG9ydHMiLCJfX2VzTW9kdWxlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/@babel/runtime/helpers/assertThisInitialized.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/@babel/runtime/helpers/asyncToGenerator.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/asyncToGenerator.js ***!
  \*****************************************************************/
/***/ ((module) => {

"use strict";
eval("\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n    try {\n        var info = gen[key](arg);\n        var value = info.value;\n    } catch (error) {\n        reject(error);\n        return;\n    }\n    if (info.done) {\n        resolve(value);\n    } else {\n        Promise.resolve(value).then(_next, _throw);\n    }\n}\nfunction _asyncToGenerator(fn) {\n    return function() {\n        var self = this, args = arguments;\n        return new Promise(function(resolve, reject) {\n            var gen = fn.apply(self, args);\n            function _next(value) {\n                asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n            }\n            function _throw(err) {\n                asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n            }\n            _next(undefined);\n        });\n    };\n}\nmodule.exports = _asyncToGenerator, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9hc3luY1RvR2VuZXJhdG9yLmpzIiwibWFwcGluZ3MiOiI7QUFBQSxTQUFTQSxtQkFBbUJDLEdBQUcsRUFBRUMsT0FBTyxFQUFFQyxNQUFNLEVBQUVDLEtBQUssRUFBRUMsTUFBTSxFQUFFQyxHQUFHLEVBQUVDLEdBQUc7SUFDdkUsSUFBSTtRQUNGLElBQUlDLE9BQU9QLEdBQUcsQ0FBQ0ssSUFBSSxDQUFDQztRQUNwQixJQUFJRSxRQUFRRCxLQUFLQztJQUNuQixFQUFFLE9BQU9DLE9BQU87UUFDZFAsT0FBT087UUFDUDtJQUNGO0lBQ0EsSUFBSUYsS0FBS0csTUFBTTtRQUNiVCxRQUFRTztJQUNWLE9BQU87UUFDTEcsUUFBUVYsUUFBUU8sT0FBT0ksS0FBS1QsT0FBT0M7SUFDckM7QUFDRjtBQUNBLFNBQVNTLGtCQUFrQkMsRUFBRTtJQUMzQixPQUFPO1FBQ0wsSUFBSUMsT0FBTyxJQUFJLEVBQ2JDLE9BQU9DO1FBQ1QsT0FBTyxJQUFJTixRQUFRLFNBQVVWLE9BQU8sRUFBRUMsTUFBTTtZQUMxQyxJQUFJRixNQUFNYyxHQUFHSSxNQUFNSCxNQUFNQztZQUN6QixTQUFTYixNQUFNSyxLQUFLO2dCQUNsQlQsbUJBQW1CQyxLQUFLQyxTQUFTQyxRQUFRQyxPQUFPQyxRQUFRLFFBQVFJO1lBQ2xFO1lBQ0EsU0FBU0osT0FBT2UsR0FBRztnQkFDakJwQixtQkFBbUJDLEtBQUtDLFNBQVNDLFFBQVFDLE9BQU9DLFFBQVEsU0FBU2U7WUFDbkU7WUFDQWhCLE1BQU1pQjtRQUNSO0lBQ0Y7QUFDRjtBQUNBQyxPQUFPQyxVQUFVVCxtQkFBbUJRLHlCQUF5QkUsR0FBRyxNQUFNRix5QkFBeUIsR0FBR0EsT0FBT0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mdWxsc3RhY2stcm9sZS1iYXNlZC1uZXh0anMtMi8uL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2FzeW5jVG9HZW5lcmF0b3IuanM/ZDMxMiJdLCJzb3VyY2VzQ29udGVudCI6WyJmdW5jdGlvbiBhc3luY0dlbmVyYXRvclN0ZXAoZ2VuLCByZXNvbHZlLCByZWplY3QsIF9uZXh0LCBfdGhyb3csIGtleSwgYXJnKSB7XG4gIHRyeSB7XG4gICAgdmFyIGluZm8gPSBnZW5ba2V5XShhcmcpO1xuICAgIHZhciB2YWx1ZSA9IGluZm8udmFsdWU7XG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgcmVqZWN0KGVycm9yKTtcbiAgICByZXR1cm47XG4gIH1cbiAgaWYgKGluZm8uZG9uZSkge1xuICAgIHJlc29sdmUodmFsdWUpO1xuICB9IGVsc2Uge1xuICAgIFByb21pc2UucmVzb2x2ZSh2YWx1ZSkudGhlbihfbmV4dCwgX3Rocm93KTtcbiAgfVxufVxuZnVuY3Rpb24gX2FzeW5jVG9HZW5lcmF0b3IoZm4pIHtcbiAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcbiAgICB2YXIgc2VsZiA9IHRoaXMsXG4gICAgICBhcmdzID0gYXJndW1lbnRzO1xuICAgIHJldHVybiBuZXcgUHJvbWlzZShmdW5jdGlvbiAocmVzb2x2ZSwgcmVqZWN0KSB7XG4gICAgICB2YXIgZ2VuID0gZm4uYXBwbHkoc2VsZiwgYXJncyk7XG4gICAgICBmdW5jdGlvbiBfbmV4dCh2YWx1ZSkge1xuICAgICAgICBhc3luY0dlbmVyYXRvclN0ZXAoZ2VuLCByZXNvbHZlLCByZWplY3QsIF9uZXh0LCBfdGhyb3csIFwibmV4dFwiLCB2YWx1ZSk7XG4gICAgICB9XG4gICAgICBmdW5jdGlvbiBfdGhyb3coZXJyKSB7XG4gICAgICAgIGFzeW5jR2VuZXJhdG9yU3RlcChnZW4sIHJlc29sdmUsIHJlamVjdCwgX25leHQsIF90aHJvdywgXCJ0aHJvd1wiLCBlcnIpO1xuICAgICAgfVxuICAgICAgX25leHQodW5kZWZpbmVkKTtcbiAgICB9KTtcbiAgfTtcbn1cbm1vZHVsZS5leHBvcnRzID0gX2FzeW5jVG9HZW5lcmF0b3IsIG1vZHVsZS5leHBvcnRzLl9fZXNNb2R1bGUgPSB0cnVlLCBtb2R1bGUuZXhwb3J0c1tcImRlZmF1bHRcIl0gPSBtb2R1bGUuZXhwb3J0czsiXSwibmFtZXMiOlsiYXN5bmNHZW5lcmF0b3JTdGVwIiwiZ2VuIiwicmVzb2x2ZSIsInJlamVjdCIsIl9uZXh0IiwiX3Rocm93Iiwia2V5IiwiYXJnIiwiaW5mbyIsInZhbHVlIiwiZXJyb3IiLCJkb25lIiwiUHJvbWlzZSIsInRoZW4iLCJfYXN5bmNUb0dlbmVyYXRvciIsImZuIiwic2VsZiIsImFyZ3MiLCJhcmd1bWVudHMiLCJhcHBseSIsImVyciIsInVuZGVmaW5lZCIsIm1vZHVsZSIsImV4cG9ydHMiLCJfX2VzTW9kdWxlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/@babel/runtime/helpers/asyncToGenerator.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/@babel/runtime/helpers/classApplyDescriptorGet.js":
/*!************************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/classApplyDescriptorGet.js ***!
  \************************************************************************/
/***/ ((module) => {

"use strict";
eval("\nfunction _classApplyDescriptorGet(receiver, descriptor) {\n    if (descriptor.get) {\n        return descriptor.get.call(receiver);\n    }\n    return descriptor.value;\n}\nmodule.exports = _classApplyDescriptorGet, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9jbGFzc0FwcGx5RGVzY3JpcHRvckdldC5qcyIsIm1hcHBpbmdzIjoiO0FBQUEsU0FBU0EseUJBQXlCQyxRQUFRLEVBQUVDLFVBQVU7SUFDcEQsSUFBSUEsV0FBV0MsS0FBSztRQUNsQixPQUFPRCxXQUFXQyxJQUFJQyxLQUFLSDtJQUM3QjtJQUNBLE9BQU9DLFdBQVdHO0FBQ3BCO0FBQ0FDLE9BQU9DLFVBQVVQLDBCQUEwQk0seUJBQXlCRSxHQUFHLE1BQU1GLHlCQUF5QixHQUFHQSxPQUFPQyIsInNvdXJjZXMiOlsid2VicGFjazovL2Z1bGxzdGFjay1yb2xlLWJhc2VkLW5leHRqcy0yLy4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvY2xhc3NBcHBseURlc2NyaXB0b3JHZXQuanM/ZjA0YyJdLCJzb3VyY2VzQ29udGVudCI6WyJmdW5jdGlvbiBfY2xhc3NBcHBseURlc2NyaXB0b3JHZXQocmVjZWl2ZXIsIGRlc2NyaXB0b3IpIHtcbiAgaWYgKGRlc2NyaXB0b3IuZ2V0KSB7XG4gICAgcmV0dXJuIGRlc2NyaXB0b3IuZ2V0LmNhbGwocmVjZWl2ZXIpO1xuICB9XG4gIHJldHVybiBkZXNjcmlwdG9yLnZhbHVlO1xufVxubW9kdWxlLmV4cG9ydHMgPSBfY2xhc3NBcHBseURlc2NyaXB0b3JHZXQsIG1vZHVsZS5leHBvcnRzLl9fZXNNb2R1bGUgPSB0cnVlLCBtb2R1bGUuZXhwb3J0c1tcImRlZmF1bHRcIl0gPSBtb2R1bGUuZXhwb3J0czsiXSwibmFtZXMiOlsiX2NsYXNzQXBwbHlEZXNjcmlwdG9yR2V0IiwicmVjZWl2ZXIiLCJkZXNjcmlwdG9yIiwiZ2V0IiwiY2FsbCIsInZhbHVlIiwibW9kdWxlIiwiZXhwb3J0cyIsIl9fZXNNb2R1bGUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/@babel/runtime/helpers/classApplyDescriptorGet.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/@babel/runtime/helpers/classApplyDescriptorSet.js":
/*!************************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/classApplyDescriptorSet.js ***!
  \************************************************************************/
/***/ ((module) => {

"use strict";
eval("\nfunction _classApplyDescriptorSet(receiver, descriptor, value) {\n    if (descriptor.set) {\n        descriptor.set.call(receiver, value);\n    } else {\n        if (!descriptor.writable) {\n            throw new TypeError(\"attempted to set read only private field\");\n        }\n        descriptor.value = value;\n    }\n}\nmodule.exports = _classApplyDescriptorSet, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9jbGFzc0FwcGx5RGVzY3JpcHRvclNldC5qcyIsIm1hcHBpbmdzIjoiO0FBQUEsU0FBU0EseUJBQXlCQyxRQUFRLEVBQUVDLFVBQVUsRUFBRUMsS0FBSztJQUMzRCxJQUFJRCxXQUFXRSxLQUFLO1FBQ2xCRixXQUFXRSxJQUFJQyxLQUFLSixVQUFVRTtJQUNoQyxPQUFPO1FBQ0wsSUFBSSxDQUFDRCxXQUFXSSxVQUFVO1lBQ3hCLE1BQU0sSUFBSUMsVUFBVTtRQUN0QjtRQUNBTCxXQUFXQyxRQUFRQTtJQUNyQjtBQUNGO0FBQ0FLLE9BQU9DLFVBQVVULDBCQUEwQlEseUJBQXlCRSxHQUFHLE1BQU1GLHlCQUF5QixHQUFHQSxPQUFPQyIsInNvdXJjZXMiOlsid2VicGFjazovL2Z1bGxzdGFjay1yb2xlLWJhc2VkLW5leHRqcy0yLy4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvY2xhc3NBcHBseURlc2NyaXB0b3JTZXQuanM/YjA0ZiJdLCJzb3VyY2VzQ29udGVudCI6WyJmdW5jdGlvbiBfY2xhc3NBcHBseURlc2NyaXB0b3JTZXQocmVjZWl2ZXIsIGRlc2NyaXB0b3IsIHZhbHVlKSB7XG4gIGlmIChkZXNjcmlwdG9yLnNldCkge1xuICAgIGRlc2NyaXB0b3Iuc2V0LmNhbGwocmVjZWl2ZXIsIHZhbHVlKTtcbiAgfSBlbHNlIHtcbiAgICBpZiAoIWRlc2NyaXB0b3Iud3JpdGFibGUpIHtcbiAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoXCJhdHRlbXB0ZWQgdG8gc2V0IHJlYWQgb25seSBwcml2YXRlIGZpZWxkXCIpO1xuICAgIH1cbiAgICBkZXNjcmlwdG9yLnZhbHVlID0gdmFsdWU7XG4gIH1cbn1cbm1vZHVsZS5leHBvcnRzID0gX2NsYXNzQXBwbHlEZXNjcmlwdG9yU2V0LCBtb2R1bGUuZXhwb3J0cy5fX2VzTW9kdWxlID0gdHJ1ZSwgbW9kdWxlLmV4cG9ydHNbXCJkZWZhdWx0XCJdID0gbW9kdWxlLmV4cG9ydHM7Il0sIm5hbWVzIjpbIl9jbGFzc0FwcGx5RGVzY3JpcHRvclNldCIsInJlY2VpdmVyIiwiZGVzY3JpcHRvciIsInZhbHVlIiwic2V0IiwiY2FsbCIsIndyaXRhYmxlIiwiVHlwZUVycm9yIiwibW9kdWxlIiwiZXhwb3J0cyIsIl9fZXNNb2R1bGUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/@babel/runtime/helpers/classApplyDescriptorSet.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/@babel/runtime/helpers/classCallCheck.js":
/*!***************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/classCallCheck.js ***!
  \***************************************************************/
/***/ ((module) => {

"use strict";
eval("\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\nmodule.exports = _classCallCheck, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9jbGFzc0NhbGxDaGVjay5qcyIsIm1hcHBpbmdzIjoiO0FBQUEsU0FBU0EsZ0JBQWdCQyxRQUFRLEVBQUVDLFdBQVc7SUFDNUMsSUFBSSxDQUFFRCxDQUFBQSxvQkFBb0JDLFdBQVUsR0FBSTtRQUN0QyxNQUFNLElBQUlDLFVBQVU7SUFDdEI7QUFDRjtBQUNBQyxPQUFPQyxVQUFVTCxpQkFBaUJJLHlCQUF5QkUsR0FBRyxNQUFNRix5QkFBeUIsR0FBR0EsT0FBT0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mdWxsc3RhY2stcm9sZS1iYXNlZC1uZXh0anMtMi8uL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2NsYXNzQ2FsbENoZWNrLmpzP2I3YWUiXSwic291cmNlc0NvbnRlbnQiOlsiZnVuY3Rpb24gX2NsYXNzQ2FsbENoZWNrKGluc3RhbmNlLCBDb25zdHJ1Y3Rvcikge1xuICBpZiAoIShpbnN0YW5jZSBpbnN0YW5jZW9mIENvbnN0cnVjdG9yKSkge1xuICAgIHRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIik7XG4gIH1cbn1cbm1vZHVsZS5leHBvcnRzID0gX2NsYXNzQ2FsbENoZWNrLCBtb2R1bGUuZXhwb3J0cy5fX2VzTW9kdWxlID0gdHJ1ZSwgbW9kdWxlLmV4cG9ydHNbXCJkZWZhdWx0XCJdID0gbW9kdWxlLmV4cG9ydHM7Il0sIm5hbWVzIjpbIl9jbGFzc0NhbGxDaGVjayIsImluc3RhbmNlIiwiQ29uc3RydWN0b3IiLCJUeXBlRXJyb3IiLCJtb2R1bGUiLCJleHBvcnRzIiwiX19lc01vZHVsZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/@babel/runtime/helpers/classCallCheck.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/@babel/runtime/helpers/classExtractFieldDescriptor.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/classExtractFieldDescriptor.js ***!
  \****************************************************************************/
/***/ ((module) => {

"use strict";
eval("\nfunction _classExtractFieldDescriptor(receiver, privateMap, action) {\n    if (!privateMap.has(receiver)) {\n        throw new TypeError(\"attempted to \" + action + \" private field on non-instance\");\n    }\n    return privateMap.get(receiver);\n}\nmodule.exports = _classExtractFieldDescriptor, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9jbGFzc0V4dHJhY3RGaWVsZERlc2NyaXB0b3IuanMiLCJtYXBwaW5ncyI6IjtBQUFBLFNBQVNBLDZCQUE2QkMsUUFBUSxFQUFFQyxVQUFVLEVBQUVDLE1BQU07SUFDaEUsSUFBSSxDQUFDRCxXQUFXRSxJQUFJSCxXQUFXO1FBQzdCLE1BQU0sSUFBSUksVUFBVSxrQkFBa0JGLFNBQVM7SUFDakQ7SUFDQSxPQUFPRCxXQUFXSSxJQUFJTDtBQUN4QjtBQUNBTSxPQUFPQyxVQUFVUiw4QkFBOEJPLHlCQUF5QkUsR0FBRyxNQUFNRix5QkFBeUIsR0FBR0EsT0FBT0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mdWxsc3RhY2stcm9sZS1iYXNlZC1uZXh0anMtMi8uL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2NsYXNzRXh0cmFjdEZpZWxkRGVzY3JpcHRvci5qcz9mYzc5Il0sInNvdXJjZXNDb250ZW50IjpbImZ1bmN0aW9uIF9jbGFzc0V4dHJhY3RGaWVsZERlc2NyaXB0b3IocmVjZWl2ZXIsIHByaXZhdGVNYXAsIGFjdGlvbikge1xuICBpZiAoIXByaXZhdGVNYXAuaGFzKHJlY2VpdmVyKSkge1xuICAgIHRocm93IG5ldyBUeXBlRXJyb3IoXCJhdHRlbXB0ZWQgdG8gXCIgKyBhY3Rpb24gKyBcIiBwcml2YXRlIGZpZWxkIG9uIG5vbi1pbnN0YW5jZVwiKTtcbiAgfVxuICByZXR1cm4gcHJpdmF0ZU1hcC5nZXQocmVjZWl2ZXIpO1xufVxubW9kdWxlLmV4cG9ydHMgPSBfY2xhc3NFeHRyYWN0RmllbGREZXNjcmlwdG9yLCBtb2R1bGUuZXhwb3J0cy5fX2VzTW9kdWxlID0gdHJ1ZSwgbW9kdWxlLmV4cG9ydHNbXCJkZWZhdWx0XCJdID0gbW9kdWxlLmV4cG9ydHM7Il0sIm5hbWVzIjpbIl9jbGFzc0V4dHJhY3RGaWVsZERlc2NyaXB0b3IiLCJyZWNlaXZlciIsInByaXZhdGVNYXAiLCJhY3Rpb24iLCJoYXMiLCJUeXBlRXJyb3IiLCJnZXQiLCJtb2R1bGUiLCJleHBvcnRzIiwiX19lc01vZHVsZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/@babel/runtime/helpers/classExtractFieldDescriptor.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/@babel/runtime/helpers/classPrivateFieldGet.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/classPrivateFieldGet.js ***!
  \*********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nvar classApplyDescriptorGet = __webpack_require__(/*! ./classApplyDescriptorGet.js */ \"(sc_server)/./node_modules/@babel/runtime/helpers/classApplyDescriptorGet.js\");\nvar classExtractFieldDescriptor = __webpack_require__(/*! ./classExtractFieldDescriptor.js */ \"(sc_server)/./node_modules/@babel/runtime/helpers/classExtractFieldDescriptor.js\");\nfunction _classPrivateFieldGet(receiver, privateMap) {\n    var descriptor = classExtractFieldDescriptor(receiver, privateMap, \"get\");\n    return classApplyDescriptorGet(receiver, descriptor);\n}\nmodule.exports = _classPrivateFieldGet, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9jbGFzc1ByaXZhdGVGaWVsZEdldC5qcyIsIm1hcHBpbmdzIjoiO0FBQUEsSUFBSUEsMEJBQTBCQyxtQkFBT0EsQ0FBQyxrSEFBOEI7QUFDcEUsSUFBSUMsOEJBQThCRCxtQkFBT0EsQ0FBQywwSEFBa0M7QUFDNUUsU0FBU0Usc0JBQXNCQyxRQUFRLEVBQUVDLFVBQVU7SUFDakQsSUFBSUMsYUFBYUosNEJBQTRCRSxVQUFVQyxZQUFZO0lBQ25FLE9BQU9MLHdCQUF3QkksVUFBVUU7QUFDM0M7QUFDQUMsT0FBT0MsVUFBVUwsdUJBQXVCSSx5QkFBeUJFLEdBQUcsTUFBTUYseUJBQXlCLEdBQUdBLE9BQU9DIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZnVsbHN0YWNrLXJvbGUtYmFzZWQtbmV4dGpzLTIvLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9jbGFzc1ByaXZhdGVGaWVsZEdldC5qcz8wNjgwIl0sInNvdXJjZXNDb250ZW50IjpbInZhciBjbGFzc0FwcGx5RGVzY3JpcHRvckdldCA9IHJlcXVpcmUoXCIuL2NsYXNzQXBwbHlEZXNjcmlwdG9yR2V0LmpzXCIpO1xudmFyIGNsYXNzRXh0cmFjdEZpZWxkRGVzY3JpcHRvciA9IHJlcXVpcmUoXCIuL2NsYXNzRXh0cmFjdEZpZWxkRGVzY3JpcHRvci5qc1wiKTtcbmZ1bmN0aW9uIF9jbGFzc1ByaXZhdGVGaWVsZEdldChyZWNlaXZlciwgcHJpdmF0ZU1hcCkge1xuICB2YXIgZGVzY3JpcHRvciA9IGNsYXNzRXh0cmFjdEZpZWxkRGVzY3JpcHRvcihyZWNlaXZlciwgcHJpdmF0ZU1hcCwgXCJnZXRcIik7XG4gIHJldHVybiBjbGFzc0FwcGx5RGVzY3JpcHRvckdldChyZWNlaXZlciwgZGVzY3JpcHRvcik7XG59XG5tb2R1bGUuZXhwb3J0cyA9IF9jbGFzc1ByaXZhdGVGaWVsZEdldCwgbW9kdWxlLmV4cG9ydHMuX19lc01vZHVsZSA9IHRydWUsIG1vZHVsZS5leHBvcnRzW1wiZGVmYXVsdFwiXSA9IG1vZHVsZS5leHBvcnRzOyJdLCJuYW1lcyI6WyJjbGFzc0FwcGx5RGVzY3JpcHRvckdldCIsInJlcXVpcmUiLCJjbGFzc0V4dHJhY3RGaWVsZERlc2NyaXB0b3IiLCJfY2xhc3NQcml2YXRlRmllbGRHZXQiLCJyZWNlaXZlciIsInByaXZhdGVNYXAiLCJkZXNjcmlwdG9yIiwibW9kdWxlIiwiZXhwb3J0cyIsIl9fZXNNb2R1bGUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/@babel/runtime/helpers/classPrivateFieldGet.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/@babel/runtime/helpers/classPrivateFieldSet.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/classPrivateFieldSet.js ***!
  \*********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nvar classApplyDescriptorSet = __webpack_require__(/*! ./classApplyDescriptorSet.js */ \"(sc_server)/./node_modules/@babel/runtime/helpers/classApplyDescriptorSet.js\");\nvar classExtractFieldDescriptor = __webpack_require__(/*! ./classExtractFieldDescriptor.js */ \"(sc_server)/./node_modules/@babel/runtime/helpers/classExtractFieldDescriptor.js\");\nfunction _classPrivateFieldSet(receiver, privateMap, value) {\n    var descriptor = classExtractFieldDescriptor(receiver, privateMap, \"set\");\n    classApplyDescriptorSet(receiver, descriptor, value);\n    return value;\n}\nmodule.exports = _classPrivateFieldSet, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9jbGFzc1ByaXZhdGVGaWVsZFNldC5qcyIsIm1hcHBpbmdzIjoiO0FBQUEsSUFBSUEsMEJBQTBCQyxtQkFBT0EsQ0FBQyxrSEFBOEI7QUFDcEUsSUFBSUMsOEJBQThCRCxtQkFBT0EsQ0FBQywwSEFBa0M7QUFDNUUsU0FBU0Usc0JBQXNCQyxRQUFRLEVBQUVDLFVBQVUsRUFBRUMsS0FBSztJQUN4RCxJQUFJQyxhQUFhTCw0QkFBNEJFLFVBQVVDLFlBQVk7SUFDbkVMLHdCQUF3QkksVUFBVUcsWUFBWUQ7SUFDOUMsT0FBT0E7QUFDVDtBQUNBRSxPQUFPQyxVQUFVTix1QkFBdUJLLHlCQUF5QkUsR0FBRyxNQUFNRix5QkFBeUIsR0FBR0EsT0FBT0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mdWxsc3RhY2stcm9sZS1iYXNlZC1uZXh0anMtMi8uL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2NsYXNzUHJpdmF0ZUZpZWxkU2V0LmpzP2E0ZjIiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIGNsYXNzQXBwbHlEZXNjcmlwdG9yU2V0ID0gcmVxdWlyZShcIi4vY2xhc3NBcHBseURlc2NyaXB0b3JTZXQuanNcIik7XG52YXIgY2xhc3NFeHRyYWN0RmllbGREZXNjcmlwdG9yID0gcmVxdWlyZShcIi4vY2xhc3NFeHRyYWN0RmllbGREZXNjcmlwdG9yLmpzXCIpO1xuZnVuY3Rpb24gX2NsYXNzUHJpdmF0ZUZpZWxkU2V0KHJlY2VpdmVyLCBwcml2YXRlTWFwLCB2YWx1ZSkge1xuICB2YXIgZGVzY3JpcHRvciA9IGNsYXNzRXh0cmFjdEZpZWxkRGVzY3JpcHRvcihyZWNlaXZlciwgcHJpdmF0ZU1hcCwgXCJzZXRcIik7XG4gIGNsYXNzQXBwbHlEZXNjcmlwdG9yU2V0KHJlY2VpdmVyLCBkZXNjcmlwdG9yLCB2YWx1ZSk7XG4gIHJldHVybiB2YWx1ZTtcbn1cbm1vZHVsZS5leHBvcnRzID0gX2NsYXNzUHJpdmF0ZUZpZWxkU2V0LCBtb2R1bGUuZXhwb3J0cy5fX2VzTW9kdWxlID0gdHJ1ZSwgbW9kdWxlLmV4cG9ydHNbXCJkZWZhdWx0XCJdID0gbW9kdWxlLmV4cG9ydHM7Il0sIm5hbWVzIjpbImNsYXNzQXBwbHlEZXNjcmlwdG9yU2V0IiwicmVxdWlyZSIsImNsYXNzRXh0cmFjdEZpZWxkRGVzY3JpcHRvciIsIl9jbGFzc1ByaXZhdGVGaWVsZFNldCIsInJlY2VpdmVyIiwicHJpdmF0ZU1hcCIsInZhbHVlIiwiZGVzY3JpcHRvciIsIm1vZHVsZSIsImV4cG9ydHMiLCJfX2VzTW9kdWxlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/@babel/runtime/helpers/classPrivateFieldSet.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/@babel/runtime/helpers/construct.js":
/*!**********************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/construct.js ***!
  \**********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nvar setPrototypeOf = __webpack_require__(/*! ./setPrototypeOf.js */ \"(sc_server)/./node_modules/@babel/runtime/helpers/setPrototypeOf.js\");\nvar isNativeReflectConstruct = __webpack_require__(/*! ./isNativeReflectConstruct.js */ \"(sc_server)/./node_modules/@babel/runtime/helpers/isNativeReflectConstruct.js\");\nfunction _construct(Parent, args, Class) {\n    if (isNativeReflectConstruct()) {\n        module.exports = _construct = Reflect.construct.bind(), module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n    } else {\n        module.exports = _construct = function _construct(Parent, args, Class) {\n            var a = [\n                null\n            ];\n            a.push.apply(a, args);\n            var Constructor = Function.bind.apply(Parent, a);\n            var instance = new Constructor();\n            if (Class) setPrototypeOf(instance, Class.prototype);\n            return instance;\n        }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n    }\n    return _construct.apply(null, arguments);\n}\nmodule.exports = _construct, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9jb25zdHJ1Y3QuanMiLCJtYXBwaW5ncyI6IjtBQUFBLElBQUlBLGlCQUFpQkMsbUJBQU9BLENBQUMsZ0dBQXFCO0FBQ2xELElBQUlDLDJCQUEyQkQsbUJBQU9BLENBQUMsb0hBQStCO0FBQ3RFLFNBQVNFLFdBQVdDLE1BQU0sRUFBRUMsSUFBSSxFQUFFQyxLQUFLO0lBQ3JDLElBQUlKLDRCQUE0QjtRQUM5QkssT0FBT0MsVUFBVUwsYUFBYU0sUUFBUUMsVUFBVUMsUUFBUUoseUJBQXlCSyxHQUFHLE1BQU1MLHlCQUF5QixHQUFHQSxPQUFPQztJQUMvSCxPQUFPO1FBQ0xELE9BQU9DLFVBQVVMLGFBQWEsU0FBU0EsV0FBV0MsTUFBTSxFQUFFQyxJQUFJLEVBQUVDLEtBQUs7WUFDbkUsSUFBSU8sSUFBSTtnQkFBQzthQUFLO1lBQ2RBLEVBQUVDLEtBQUtDLE1BQU1GLEdBQUdSO1lBQ2hCLElBQUlXLGNBQWNDLFNBQVNOLEtBQUtJLE1BQU1YLFFBQVFTO1lBQzlDLElBQUlLLFdBQVcsSUFBSUY7WUFDbkIsSUFBSVYsT0FBT04sZUFBZWtCLFVBQVVaLE1BQU1hO1lBQzFDLE9BQU9EO1FBQ1QsR0FBR1gseUJBQXlCSyxHQUFHLE1BQU1MLHlCQUF5QixHQUFHQSxPQUFPQztJQUMxRTtJQUNBLE9BQU9MLFdBQVdZLE1BQU0sTUFBTUs7QUFDaEM7QUFDQWIsT0FBT0MsVUFBVUwsWUFBWUkseUJBQXlCSyxHQUFHLE1BQU1MLHlCQUF5QixHQUFHQSxPQUFPQyIsInNvdXJjZXMiOlsid2VicGFjazovL2Z1bGxzdGFjay1yb2xlLWJhc2VkLW5leHRqcy0yLy4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvY29uc3RydWN0LmpzPzI5MWUiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIHNldFByb3RvdHlwZU9mID0gcmVxdWlyZShcIi4vc2V0UHJvdG90eXBlT2YuanNcIik7XG52YXIgaXNOYXRpdmVSZWZsZWN0Q29uc3RydWN0ID0gcmVxdWlyZShcIi4vaXNOYXRpdmVSZWZsZWN0Q29uc3RydWN0LmpzXCIpO1xuZnVuY3Rpb24gX2NvbnN0cnVjdChQYXJlbnQsIGFyZ3MsIENsYXNzKSB7XG4gIGlmIChpc05hdGl2ZVJlZmxlY3RDb25zdHJ1Y3QoKSkge1xuICAgIG1vZHVsZS5leHBvcnRzID0gX2NvbnN0cnVjdCA9IFJlZmxlY3QuY29uc3RydWN0LmJpbmQoKSwgbW9kdWxlLmV4cG9ydHMuX19lc01vZHVsZSA9IHRydWUsIG1vZHVsZS5leHBvcnRzW1wiZGVmYXVsdFwiXSA9IG1vZHVsZS5leHBvcnRzO1xuICB9IGVsc2Uge1xuICAgIG1vZHVsZS5leHBvcnRzID0gX2NvbnN0cnVjdCA9IGZ1bmN0aW9uIF9jb25zdHJ1Y3QoUGFyZW50LCBhcmdzLCBDbGFzcykge1xuICAgICAgdmFyIGEgPSBbbnVsbF07XG4gICAgICBhLnB1c2guYXBwbHkoYSwgYXJncyk7XG4gICAgICB2YXIgQ29uc3RydWN0b3IgPSBGdW5jdGlvbi5iaW5kLmFwcGx5KFBhcmVudCwgYSk7XG4gICAgICB2YXIgaW5zdGFuY2UgPSBuZXcgQ29uc3RydWN0b3IoKTtcbiAgICAgIGlmIChDbGFzcykgc2V0UHJvdG90eXBlT2YoaW5zdGFuY2UsIENsYXNzLnByb3RvdHlwZSk7XG4gICAgICByZXR1cm4gaW5zdGFuY2U7XG4gICAgfSwgbW9kdWxlLmV4cG9ydHMuX19lc01vZHVsZSA9IHRydWUsIG1vZHVsZS5leHBvcnRzW1wiZGVmYXVsdFwiXSA9IG1vZHVsZS5leHBvcnRzO1xuICB9XG4gIHJldHVybiBfY29uc3RydWN0LmFwcGx5KG51bGwsIGFyZ3VtZW50cyk7XG59XG5tb2R1bGUuZXhwb3J0cyA9IF9jb25zdHJ1Y3QsIG1vZHVsZS5leHBvcnRzLl9fZXNNb2R1bGUgPSB0cnVlLCBtb2R1bGUuZXhwb3J0c1tcImRlZmF1bHRcIl0gPSBtb2R1bGUuZXhwb3J0czsiXSwibmFtZXMiOlsic2V0UHJvdG90eXBlT2YiLCJyZXF1aXJlIiwiaXNOYXRpdmVSZWZsZWN0Q29uc3RydWN0IiwiX2NvbnN0cnVjdCIsIlBhcmVudCIsImFyZ3MiLCJDbGFzcyIsIm1vZHVsZSIsImV4cG9ydHMiLCJSZWZsZWN0IiwiY29uc3RydWN0IiwiYmluZCIsIl9fZXNNb2R1bGUiLCJhIiwicHVzaCIsImFwcGx5IiwiQ29uc3RydWN0b3IiLCJGdW5jdGlvbiIsImluc3RhbmNlIiwicHJvdG90eXBlIiwiYXJndW1lbnRzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/@babel/runtime/helpers/construct.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/@babel/runtime/helpers/createClass.js":
/*!************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/createClass.js ***!
  \************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nvar toPropertyKey = __webpack_require__(/*! ./toPropertyKey.js */ \"(sc_server)/./node_modules/@babel/runtime/helpers/toPropertyKey.js\");\nfunction _defineProperties(target, props) {\n    for(var i = 0; i < props.length; i++){\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, toPropertyKey(descriptor.key), descriptor);\n    }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n    Object.defineProperty(Constructor, \"prototype\", {\n        writable: false\n    });\n    return Constructor;\n}\nmodule.exports = _createClass, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9jcmVhdGVDbGFzcy5qcyIsIm1hcHBpbmdzIjoiO0FBQUEsSUFBSUEsZ0JBQWdCQyxtQkFBT0EsQ0FBQyw4RkFBb0I7QUFDaEQsU0FBU0Msa0JBQWtCQyxNQUFNLEVBQUVDLEtBQUs7SUFDdEMsSUFBSyxJQUFJQyxJQUFJLEdBQUdBLElBQUlELE1BQU1FLFFBQVFELElBQUs7UUFDckMsSUFBSUUsYUFBYUgsS0FBSyxDQUFDQyxFQUFFO1FBQ3pCRSxXQUFXQyxhQUFhRCxXQUFXQyxjQUFjO1FBQ2pERCxXQUFXRSxlQUFlO1FBQzFCLElBQUksV0FBV0YsWUFBWUEsV0FBV0csV0FBVztRQUNqREMsT0FBT0MsZUFBZVQsUUFBUUgsY0FBY08sV0FBV00sTUFBTU47SUFDL0Q7QUFDRjtBQUNBLFNBQVNPLGFBQWFDLFdBQVcsRUFBRUMsVUFBVSxFQUFFQyxXQUFXO0lBQ3hELElBQUlELFlBQVlkLGtCQUFrQmEsWUFBWUcsV0FBV0Y7SUFDekQsSUFBSUMsYUFBYWYsa0JBQWtCYSxhQUFhRTtJQUNoRE4sT0FBT0MsZUFBZUcsYUFBYSxhQUFhO1FBQzlDTCxVQUFVO0lBQ1o7SUFDQSxPQUFPSztBQUNUO0FBQ0FJLE9BQU9DLFVBQVVOLGNBQWNLLHlCQUF5QkUsR0FBRyxNQUFNRix5QkFBeUIsR0FBR0EsT0FBT0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mdWxsc3RhY2stcm9sZS1iYXNlZC1uZXh0anMtMi8uL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2NyZWF0ZUNsYXNzLmpzPzU0NmIiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIHRvUHJvcGVydHlLZXkgPSByZXF1aXJlKFwiLi90b1Byb3BlcnR5S2V5LmpzXCIpO1xuZnVuY3Rpb24gX2RlZmluZVByb3BlcnRpZXModGFyZ2V0LCBwcm9wcykge1xuICBmb3IgKHZhciBpID0gMDsgaSA8IHByb3BzLmxlbmd0aDsgaSsrKSB7XG4gICAgdmFyIGRlc2NyaXB0b3IgPSBwcm9wc1tpXTtcbiAgICBkZXNjcmlwdG9yLmVudW1lcmFibGUgPSBkZXNjcmlwdG9yLmVudW1lcmFibGUgfHwgZmFsc2U7XG4gICAgZGVzY3JpcHRvci5jb25maWd1cmFibGUgPSB0cnVlO1xuICAgIGlmIChcInZhbHVlXCIgaW4gZGVzY3JpcHRvcikgZGVzY3JpcHRvci53cml0YWJsZSA9IHRydWU7XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCwgdG9Qcm9wZXJ0eUtleShkZXNjcmlwdG9yLmtleSksIGRlc2NyaXB0b3IpO1xuICB9XG59XG5mdW5jdGlvbiBfY3JlYXRlQ2xhc3MoQ29uc3RydWN0b3IsIHByb3RvUHJvcHMsIHN0YXRpY1Byb3BzKSB7XG4gIGlmIChwcm90b1Byb3BzKSBfZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvci5wcm90b3R5cGUsIHByb3RvUHJvcHMpO1xuICBpZiAoc3RhdGljUHJvcHMpIF9kZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLCBzdGF0aWNQcm9wcyk7XG4gIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShDb25zdHJ1Y3RvciwgXCJwcm90b3R5cGVcIiwge1xuICAgIHdyaXRhYmxlOiBmYWxzZVxuICB9KTtcbiAgcmV0dXJuIENvbnN0cnVjdG9yO1xufVxubW9kdWxlLmV4cG9ydHMgPSBfY3JlYXRlQ2xhc3MsIG1vZHVsZS5leHBvcnRzLl9fZXNNb2R1bGUgPSB0cnVlLCBtb2R1bGUuZXhwb3J0c1tcImRlZmF1bHRcIl0gPSBtb2R1bGUuZXhwb3J0czsiXSwibmFtZXMiOlsidG9Qcm9wZXJ0eUtleSIsInJlcXVpcmUiLCJfZGVmaW5lUHJvcGVydGllcyIsInRhcmdldCIsInByb3BzIiwiaSIsImxlbmd0aCIsImRlc2NyaXB0b3IiLCJlbnVtZXJhYmxlIiwiY29uZmlndXJhYmxlIiwid3JpdGFibGUiLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImtleSIsIl9jcmVhdGVDbGFzcyIsIkNvbnN0cnVjdG9yIiwicHJvdG9Qcm9wcyIsInN0YXRpY1Byb3BzIiwicHJvdG90eXBlIiwibW9kdWxlIiwiZXhwb3J0cyIsIl9fZXNNb2R1bGUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/@babel/runtime/helpers/createClass.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/@babel/runtime/helpers/defineProperty.js":
/*!***************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/defineProperty.js ***!
  \***************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nvar toPropertyKey = __webpack_require__(/*! ./toPropertyKey.js */ \"(sc_server)/./node_modules/@babel/runtime/helpers/toPropertyKey.js\");\nfunction _defineProperty(obj, key, value) {\n    key = toPropertyKey(key);\n    if (key in obj) {\n        Object.defineProperty(obj, key, {\n            value: value,\n            enumerable: true,\n            configurable: true,\n            writable: true\n        });\n    } else {\n        obj[key] = value;\n    }\n    return obj;\n}\nmodule.exports = _defineProperty, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9kZWZpbmVQcm9wZXJ0eS5qcyIsIm1hcHBpbmdzIjoiO0FBQUEsSUFBSUEsZ0JBQWdCQyxtQkFBT0EsQ0FBQyw4RkFBb0I7QUFDaEQsU0FBU0MsZ0JBQWdCQyxHQUFHLEVBQUVDLEdBQUcsRUFBRUMsS0FBSztJQUN0Q0QsTUFBTUosY0FBY0k7SUFDcEIsSUFBSUEsT0FBT0QsS0FBSztRQUNkRyxPQUFPQyxlQUFlSixLQUFLQyxLQUFLO1lBQzlCQyxPQUFPQTtZQUNQRyxZQUFZO1lBQ1pDLGNBQWM7WUFDZEMsVUFBVTtRQUNaO0lBQ0YsT0FBTztRQUNMUCxHQUFHLENBQUNDLElBQUksR0FBR0M7SUFDYjtJQUNBLE9BQU9GO0FBQ1Q7QUFDQVEsT0FBT0MsVUFBVVYsaUJBQWlCUyx5QkFBeUJFLEdBQUcsTUFBTUYseUJBQXlCLEdBQUdBLE9BQU9DIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZnVsbHN0YWNrLXJvbGUtYmFzZWQtbmV4dGpzLTIvLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9kZWZpbmVQcm9wZXJ0eS5qcz9kOTQ2Il0sInNvdXJjZXNDb250ZW50IjpbInZhciB0b1Byb3BlcnR5S2V5ID0gcmVxdWlyZShcIi4vdG9Qcm9wZXJ0eUtleS5qc1wiKTtcbmZ1bmN0aW9uIF9kZWZpbmVQcm9wZXJ0eShvYmosIGtleSwgdmFsdWUpIHtcbiAga2V5ID0gdG9Qcm9wZXJ0eUtleShrZXkpO1xuICBpZiAoa2V5IGluIG9iaikge1xuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShvYmosIGtleSwge1xuICAgICAgdmFsdWU6IHZhbHVlLFxuICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiAgICAgIHdyaXRhYmxlOiB0cnVlXG4gICAgfSk7XG4gIH0gZWxzZSB7XG4gICAgb2JqW2tleV0gPSB2YWx1ZTtcbiAgfVxuICByZXR1cm4gb2JqO1xufVxubW9kdWxlLmV4cG9ydHMgPSBfZGVmaW5lUHJvcGVydHksIG1vZHVsZS5leHBvcnRzLl9fZXNNb2R1bGUgPSB0cnVlLCBtb2R1bGUuZXhwb3J0c1tcImRlZmF1bHRcIl0gPSBtb2R1bGUuZXhwb3J0czsiXSwibmFtZXMiOlsidG9Qcm9wZXJ0eUtleSIsInJlcXVpcmUiLCJfZGVmaW5lUHJvcGVydHkiLCJvYmoiLCJrZXkiLCJ2YWx1ZSIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZW51bWVyYWJsZSIsImNvbmZpZ3VyYWJsZSIsIndyaXRhYmxlIiwibW9kdWxlIiwiZXhwb3J0cyIsIl9fZXNNb2R1bGUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/@babel/runtime/helpers/defineProperty.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/@babel/runtime/helpers/extends.js":
/*!********************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/extends.js ***!
  \********************************************************/
/***/ ((module) => {

"use strict";
eval("\nfunction _extends() {\n    module.exports = _extends = Object.assign ? Object.assign.bind() : function(target) {\n        for(var i = 1; i < arguments.length; i++){\n            var source = arguments[i];\n            for(var key in source){\n                if (Object.prototype.hasOwnProperty.call(source, key)) {\n                    target[key] = source[key];\n                }\n            }\n        }\n        return target;\n    }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n    return _extends.apply(this, arguments);\n}\nmodule.exports = _extends, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9leHRlbmRzLmpzIiwibWFwcGluZ3MiOiI7QUFBQSxTQUFTQTtJQUNQQyxPQUFPQyxVQUFVRixXQUFXRyxPQUFPQyxTQUFTRCxPQUFPQyxPQUFPQyxTQUFTLFNBQVVDLE1BQU07UUFDakYsSUFBSyxJQUFJQyxJQUFJLEdBQUdBLElBQUlDLFVBQVVDLFFBQVFGLElBQUs7WUFDekMsSUFBSUcsU0FBU0YsU0FBUyxDQUFDRCxFQUFFO1lBQ3pCLElBQUssSUFBSUksT0FBT0QsT0FBUTtnQkFDdEIsSUFBSVAsT0FBT1MsVUFBVUMsZUFBZUMsS0FBS0osUUFBUUMsTUFBTTtvQkFDckRMLE1BQU0sQ0FBQ0ssSUFBSSxHQUFHRCxNQUFNLENBQUNDLElBQUk7Z0JBQzNCO1lBQ0Y7UUFDRjtRQUNBLE9BQU9MO0lBQ1QsR0FBR0wseUJBQXlCYyxHQUFHLE1BQU1kLHlCQUF5QixHQUFHQSxPQUFPQztJQUN4RSxPQUFPRixTQUFTZ0IsTUFBTSxJQUFJLEVBQUVSO0FBQzlCO0FBQ0FQLE9BQU9DLFVBQVVGLFVBQVVDLHlCQUF5QmMsR0FBRyxNQUFNZCx5QkFBeUIsR0FBR0EsT0FBT0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mdWxsc3RhY2stcm9sZS1iYXNlZC1uZXh0anMtMi8uL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2V4dGVuZHMuanM/ZDExZCJdLCJzb3VyY2VzQ29udGVudCI6WyJmdW5jdGlvbiBfZXh0ZW5kcygpIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSBfZXh0ZW5kcyA9IE9iamVjdC5hc3NpZ24gPyBPYmplY3QuYXNzaWduLmJpbmQoKSA6IGZ1bmN0aW9uICh0YXJnZXQpIHtcbiAgICBmb3IgKHZhciBpID0gMTsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKykge1xuICAgICAgdmFyIHNvdXJjZSA9IGFyZ3VtZW50c1tpXTtcbiAgICAgIGZvciAodmFyIGtleSBpbiBzb3VyY2UpIHtcbiAgICAgICAgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzb3VyY2UsIGtleSkpIHtcbiAgICAgICAgICB0YXJnZXRba2V5XSA9IHNvdXJjZVtrZXldO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICAgIHJldHVybiB0YXJnZXQ7XG4gIH0sIG1vZHVsZS5leHBvcnRzLl9fZXNNb2R1bGUgPSB0cnVlLCBtb2R1bGUuZXhwb3J0c1tcImRlZmF1bHRcIl0gPSBtb2R1bGUuZXhwb3J0cztcbiAgcmV0dXJuIF9leHRlbmRzLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG59XG5tb2R1bGUuZXhwb3J0cyA9IF9leHRlbmRzLCBtb2R1bGUuZXhwb3J0cy5fX2VzTW9kdWxlID0gdHJ1ZSwgbW9kdWxlLmV4cG9ydHNbXCJkZWZhdWx0XCJdID0gbW9kdWxlLmV4cG9ydHM7Il0sIm5hbWVzIjpbIl9leHRlbmRzIiwibW9kdWxlIiwiZXhwb3J0cyIsIk9iamVjdCIsImFzc2lnbiIsImJpbmQiLCJ0YXJnZXQiLCJpIiwiYXJndW1lbnRzIiwibGVuZ3RoIiwic291cmNlIiwia2V5IiwicHJvdG90eXBlIiwiaGFzT3duUHJvcGVydHkiLCJjYWxsIiwiX19lc01vZHVsZSIsImFwcGx5Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/@babel/runtime/helpers/extends.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/@babel/runtime/helpers/getPrototypeOf.js":
/*!***************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/getPrototypeOf.js ***!
  \***************************************************************/
/***/ ((module) => {

"use strict";
eval("\nfunction _getPrototypeOf(o) {\n    module.exports = _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {\n        return o.__proto__ || Object.getPrototypeOf(o);\n    }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n    return _getPrototypeOf(o);\n}\nmodule.exports = _getPrototypeOf, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9nZXRQcm90b3R5cGVPZi5qcyIsIm1hcHBpbmdzIjoiO0FBQUEsU0FBU0EsZ0JBQWdCQyxDQUFDO0lBQ3hCQyxPQUFPQyxVQUFVSCxrQkFBa0JJLE9BQU9DLGlCQUFpQkQsT0FBT0UsZUFBZUMsU0FBUyxTQUFTUCxnQkFBZ0JDLENBQUM7UUFDbEgsT0FBT0EsRUFBRU8sYUFBYUosT0FBT0UsZUFBZUw7SUFDOUMsR0FBR0MseUJBQXlCTyxHQUFHLE1BQU1QLHlCQUF5QixHQUFHQSxPQUFPQztJQUN4RSxPQUFPSCxnQkFBZ0JDO0FBQ3pCO0FBQ0FDLE9BQU9DLFVBQVVILGlCQUFpQkUseUJBQXlCTyxHQUFHLE1BQU1QLHlCQUF5QixHQUFHQSxPQUFPQyIsInNvdXJjZXMiOlsid2VicGFjazovL2Z1bGxzdGFjay1yb2xlLWJhc2VkLW5leHRqcy0yLy4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZ2V0UHJvdG90eXBlT2YuanM/OTAwMyJdLCJzb3VyY2VzQ29udGVudCI6WyJmdW5jdGlvbiBfZ2V0UHJvdG90eXBlT2Yobykge1xuICBtb2R1bGUuZXhwb3J0cyA9IF9nZXRQcm90b3R5cGVPZiA9IE9iamVjdC5zZXRQcm90b3R5cGVPZiA/IE9iamVjdC5nZXRQcm90b3R5cGVPZi5iaW5kKCkgOiBmdW5jdGlvbiBfZ2V0UHJvdG90eXBlT2Yobykge1xuICAgIHJldHVybiBvLl9fcHJvdG9fXyB8fCBPYmplY3QuZ2V0UHJvdG90eXBlT2Yobyk7XG4gIH0sIG1vZHVsZS5leHBvcnRzLl9fZXNNb2R1bGUgPSB0cnVlLCBtb2R1bGUuZXhwb3J0c1tcImRlZmF1bHRcIl0gPSBtb2R1bGUuZXhwb3J0cztcbiAgcmV0dXJuIF9nZXRQcm90b3R5cGVPZihvKTtcbn1cbm1vZHVsZS5leHBvcnRzID0gX2dldFByb3RvdHlwZU9mLCBtb2R1bGUuZXhwb3J0cy5fX2VzTW9kdWxlID0gdHJ1ZSwgbW9kdWxlLmV4cG9ydHNbXCJkZWZhdWx0XCJdID0gbW9kdWxlLmV4cG9ydHM7Il0sIm5hbWVzIjpbIl9nZXRQcm90b3R5cGVPZiIsIm8iLCJtb2R1bGUiLCJleHBvcnRzIiwiT2JqZWN0Iiwic2V0UHJvdG90eXBlT2YiLCJnZXRQcm90b3R5cGVPZiIsImJpbmQiLCJfX3Byb3RvX18iLCJfX2VzTW9kdWxlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/@babel/runtime/helpers/getPrototypeOf.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/@babel/runtime/helpers/inherits.js":
/*!*********************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/inherits.js ***!
  \*********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nvar setPrototypeOf = __webpack_require__(/*! ./setPrototypeOf.js */ \"(sc_server)/./node_modules/@babel/runtime/helpers/setPrototypeOf.js\");\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function\");\n    }\n    subClass.prototype = Object.create(superClass && superClass.prototype, {\n        constructor: {\n            value: subClass,\n            writable: true,\n            configurable: true\n        }\n    });\n    Object.defineProperty(subClass, \"prototype\", {\n        writable: false\n    });\n    if (superClass) setPrototypeOf(subClass, superClass);\n}\nmodule.exports = _inherits, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9pbmhlcml0cy5qcyIsIm1hcHBpbmdzIjoiO0FBQUEsSUFBSUEsaUJBQWlCQyxtQkFBT0EsQ0FBQyxnR0FBcUI7QUFDbEQsU0FBU0MsVUFBVUMsUUFBUSxFQUFFQyxVQUFVO0lBQ3JDLElBQUksT0FBT0EsZUFBZSxjQUFjQSxlQUFlLE1BQU07UUFDM0QsTUFBTSxJQUFJQyxVQUFVO0lBQ3RCO0lBQ0FGLFNBQVNHLFlBQVlDLE9BQU9DLE9BQU9KLGNBQWNBLFdBQVdFLFdBQVc7UUFDckVHLGFBQWE7WUFDWEMsT0FBT1A7WUFDUFEsVUFBVTtZQUNWQyxjQUFjO1FBQ2hCO0lBQ0Y7SUFDQUwsT0FBT00sZUFBZVYsVUFBVSxhQUFhO1FBQzNDUSxVQUFVO0lBQ1o7SUFDQSxJQUFJUCxZQUFZSixlQUFlRyxVQUFVQztBQUMzQztBQUNBVSxPQUFPQyxVQUFVYixXQUFXWSx5QkFBeUJFLEdBQUcsTUFBTUYseUJBQXlCLEdBQUdBLE9BQU9DIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZnVsbHN0YWNrLXJvbGUtYmFzZWQtbmV4dGpzLTIvLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9pbmhlcml0cy5qcz9mMzViIl0sInNvdXJjZXNDb250ZW50IjpbInZhciBzZXRQcm90b3R5cGVPZiA9IHJlcXVpcmUoXCIuL3NldFByb3RvdHlwZU9mLmpzXCIpO1xuZnVuY3Rpb24gX2luaGVyaXRzKHN1YkNsYXNzLCBzdXBlckNsYXNzKSB7XG4gIGlmICh0eXBlb2Ygc3VwZXJDbGFzcyAhPT0gXCJmdW5jdGlvblwiICYmIHN1cGVyQ2xhc3MgIT09IG51bGwpIHtcbiAgICB0aHJvdyBuZXcgVHlwZUVycm9yKFwiU3VwZXIgZXhwcmVzc2lvbiBtdXN0IGVpdGhlciBiZSBudWxsIG9yIGEgZnVuY3Rpb25cIik7XG4gIH1cbiAgc3ViQ2xhc3MucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShzdXBlckNsYXNzICYmIHN1cGVyQ2xhc3MucHJvdG90eXBlLCB7XG4gICAgY29uc3RydWN0b3I6IHtcbiAgICAgIHZhbHVlOiBzdWJDbGFzcyxcbiAgICAgIHdyaXRhYmxlOiB0cnVlLFxuICAgICAgY29uZmlndXJhYmxlOiB0cnVlXG4gICAgfVxuICB9KTtcbiAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHN1YkNsYXNzLCBcInByb3RvdHlwZVwiLCB7XG4gICAgd3JpdGFibGU6IGZhbHNlXG4gIH0pO1xuICBpZiAoc3VwZXJDbGFzcykgc2V0UHJvdG90eXBlT2Yoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpO1xufVxubW9kdWxlLmV4cG9ydHMgPSBfaW5oZXJpdHMsIG1vZHVsZS5leHBvcnRzLl9fZXNNb2R1bGUgPSB0cnVlLCBtb2R1bGUuZXhwb3J0c1tcImRlZmF1bHRcIl0gPSBtb2R1bGUuZXhwb3J0czsiXSwibmFtZXMiOlsic2V0UHJvdG90eXBlT2YiLCJyZXF1aXJlIiwiX2luaGVyaXRzIiwic3ViQ2xhc3MiLCJzdXBlckNsYXNzIiwiVHlwZUVycm9yIiwicHJvdG90eXBlIiwiT2JqZWN0IiwiY3JlYXRlIiwiY29uc3RydWN0b3IiLCJ2YWx1ZSIsIndyaXRhYmxlIiwiY29uZmlndXJhYmxlIiwiZGVmaW5lUHJvcGVydHkiLCJtb2R1bGUiLCJleHBvcnRzIiwiX19lc01vZHVsZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/@babel/runtime/helpers/inherits.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/@babel/runtime/helpers/interopRequireDefault.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/interopRequireDefault.js ***!
  \**********************************************************************/
/***/ ((module) => {

"use strict";
eval("\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        \"default\": obj\n    };\n}\nmodule.exports = _interopRequireDefault, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9pbnRlcm9wUmVxdWlyZURlZmF1bHQuanMiLCJtYXBwaW5ncyI6IjtBQUFBLFNBQVNBLHVCQUF1QkMsR0FBRztJQUNqQyxPQUFPQSxPQUFPQSxJQUFJQyxhQUFhRCxNQUFNO1FBQ25DLFdBQVdBO0lBQ2I7QUFDRjtBQUNBRSxPQUFPQyxVQUFVSix3QkFBd0JHLHlCQUF5QkQsR0FBRyxNQUFNQyx5QkFBeUIsR0FBR0EsT0FBT0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mdWxsc3RhY2stcm9sZS1iYXNlZC1uZXh0anMtMi8uL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2ludGVyb3BSZXF1aXJlRGVmYXVsdC5qcz9lZThjIl0sInNvdXJjZXNDb250ZW50IjpbImZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7XG4gIHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7XG4gICAgXCJkZWZhdWx0XCI6IG9ialxuICB9O1xufVxubW9kdWxlLmV4cG9ydHMgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0LCBtb2R1bGUuZXhwb3J0cy5fX2VzTW9kdWxlID0gdHJ1ZSwgbW9kdWxlLmV4cG9ydHNbXCJkZWZhdWx0XCJdID0gbW9kdWxlLmV4cG9ydHM7Il0sIm5hbWVzIjpbIl9pbnRlcm9wUmVxdWlyZURlZmF1bHQiLCJvYmoiLCJfX2VzTW9kdWxlIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/@babel/runtime/helpers/interopRequireDefault.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/@babel/runtime/helpers/isNativeFunction.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/isNativeFunction.js ***!
  \*****************************************************************/
/***/ ((module) => {

"use strict";
eval("\nfunction _isNativeFunction(fn) {\n    return Function.toString.call(fn).indexOf(\"[native code]\") !== -1;\n}\nmodule.exports = _isNativeFunction, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9pc05hdGl2ZUZ1bmN0aW9uLmpzIiwibWFwcGluZ3MiOiI7QUFBQSxTQUFTQSxrQkFBa0JDLEVBQUU7SUFDM0IsT0FBT0MsU0FBU0MsU0FBU0MsS0FBS0gsSUFBSUksUUFBUSxxQkFBcUIsQ0FBQztBQUNsRTtBQUNBQyxPQUFPQyxVQUFVUCxtQkFBbUJNLHlCQUF5QkUsR0FBRyxNQUFNRix5QkFBeUIsR0FBR0EsT0FBT0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mdWxsc3RhY2stcm9sZS1iYXNlZC1uZXh0anMtMi8uL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2lzTmF0aXZlRnVuY3Rpb24uanM/OGM4NSJdLCJzb3VyY2VzQ29udGVudCI6WyJmdW5jdGlvbiBfaXNOYXRpdmVGdW5jdGlvbihmbikge1xuICByZXR1cm4gRnVuY3Rpb24udG9TdHJpbmcuY2FsbChmbikuaW5kZXhPZihcIltuYXRpdmUgY29kZV1cIikgIT09IC0xO1xufVxubW9kdWxlLmV4cG9ydHMgPSBfaXNOYXRpdmVGdW5jdGlvbiwgbW9kdWxlLmV4cG9ydHMuX19lc01vZHVsZSA9IHRydWUsIG1vZHVsZS5leHBvcnRzW1wiZGVmYXVsdFwiXSA9IG1vZHVsZS5leHBvcnRzOyJdLCJuYW1lcyI6WyJfaXNOYXRpdmVGdW5jdGlvbiIsImZuIiwiRnVuY3Rpb24iLCJ0b1N0cmluZyIsImNhbGwiLCJpbmRleE9mIiwibW9kdWxlIiwiZXhwb3J0cyIsIl9fZXNNb2R1bGUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/@babel/runtime/helpers/isNativeFunction.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/@babel/runtime/helpers/isNativeReflectConstruct.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/isNativeReflectConstruct.js ***!
  \*************************************************************************/
/***/ ((module) => {

"use strict";
eval("\nfunction _isNativeReflectConstruct() {\n    if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n    if (Reflect.construct.sham) return false;\n    if (typeof Proxy === \"function\") return true;\n    try {\n        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {}));\n        return true;\n    } catch (e) {\n        return false;\n    }\n}\nmodule.exports = _isNativeReflectConstruct, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9pc05hdGl2ZVJlZmxlY3RDb25zdHJ1Y3QuanMiLCJtYXBwaW5ncyI6IjtBQUFBLFNBQVNBO0lBQ1AsSUFBSSxPQUFPQyxZQUFZLGVBQWUsQ0FBQ0EsUUFBUUMsV0FBVyxPQUFPO0lBQ2pFLElBQUlELFFBQVFDLFVBQVVDLE1BQU0sT0FBTztJQUNuQyxJQUFJLE9BQU9DLFVBQVUsWUFBWSxPQUFPO0lBQ3hDLElBQUk7UUFDRkMsUUFBUUMsVUFBVUMsUUFBUUMsS0FBS1AsUUFBUUMsVUFBVUcsU0FBUyxFQUFFLEVBQUUsWUFBYTtRQUMzRSxPQUFPO0lBQ1QsRUFBRSxPQUFPSSxHQUFHO1FBQ1YsT0FBTztJQUNUO0FBQ0Y7QUFDQUMsT0FBT0MsVUFBVVgsMkJBQTJCVSx5QkFBeUJFLEdBQUcsTUFBTUYseUJBQXlCLEdBQUdBLE9BQU9DIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZnVsbHN0YWNrLXJvbGUtYmFzZWQtbmV4dGpzLTIvLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9pc05hdGl2ZVJlZmxlY3RDb25zdHJ1Y3QuanM/MWQ1NCJdLCJzb3VyY2VzQ29udGVudCI6WyJmdW5jdGlvbiBfaXNOYXRpdmVSZWZsZWN0Q29uc3RydWN0KCkge1xuICBpZiAodHlwZW9mIFJlZmxlY3QgPT09IFwidW5kZWZpbmVkXCIgfHwgIVJlZmxlY3QuY29uc3RydWN0KSByZXR1cm4gZmFsc2U7XG4gIGlmIChSZWZsZWN0LmNvbnN0cnVjdC5zaGFtKSByZXR1cm4gZmFsc2U7XG4gIGlmICh0eXBlb2YgUHJveHkgPT09IFwiZnVuY3Rpb25cIikgcmV0dXJuIHRydWU7XG4gIHRyeSB7XG4gICAgQm9vbGVhbi5wcm90b3R5cGUudmFsdWVPZi5jYWxsKFJlZmxlY3QuY29uc3RydWN0KEJvb2xlYW4sIFtdLCBmdW5jdGlvbiAoKSB7fSkpO1xuICAgIHJldHVybiB0cnVlO1xuICB9IGNhdGNoIChlKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG59XG5tb2R1bGUuZXhwb3J0cyA9IF9pc05hdGl2ZVJlZmxlY3RDb25zdHJ1Y3QsIG1vZHVsZS5leHBvcnRzLl9fZXNNb2R1bGUgPSB0cnVlLCBtb2R1bGUuZXhwb3J0c1tcImRlZmF1bHRcIl0gPSBtb2R1bGUuZXhwb3J0czsiXSwibmFtZXMiOlsiX2lzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCIsIlJlZmxlY3QiLCJjb25zdHJ1Y3QiLCJzaGFtIiwiUHJveHkiLCJCb29sZWFuIiwicHJvdG90eXBlIiwidmFsdWVPZiIsImNhbGwiLCJlIiwibW9kdWxlIiwiZXhwb3J0cyIsIl9fZXNNb2R1bGUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/@babel/runtime/helpers/isNativeReflectConstruct.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/@babel/runtime/helpers/possibleConstructorReturn.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/possibleConstructorReturn.js ***!
  \**************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nvar _typeof = (__webpack_require__(/*! ./typeof.js */ \"(sc_server)/./node_modules/@babel/runtime/helpers/typeof.js\")[\"default\"]);\nvar assertThisInitialized = __webpack_require__(/*! ./assertThisInitialized.js */ \"(sc_server)/./node_modules/@babel/runtime/helpers/assertThisInitialized.js\");\nfunction _possibleConstructorReturn(self, call) {\n    if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n        return call;\n    } else if (call !== void 0) {\n        throw new TypeError(\"Derived constructors may only return object or undefined\");\n    }\n    return assertThisInitialized(self);\n}\nmodule.exports = _possibleConstructorReturn, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuLmpzIiwibWFwcGluZ3MiOiI7QUFBQSxJQUFJQSxVQUFVQyxrSEFBaUM7QUFDL0MsSUFBSUMsd0JBQXdCRCxtQkFBT0EsQ0FBQyw4R0FBNEI7QUFDaEUsU0FBU0UsMkJBQTJCQyxJQUFJLEVBQUVDLElBQUk7SUFDNUMsSUFBSUEsUUFBU0wsQ0FBQUEsUUFBUUssVUFBVSxZQUFZLE9BQU9BLFNBQVMsVUFBUyxHQUFJO1FBQ3RFLE9BQU9BO0lBQ1QsT0FBTyxJQUFJQSxTQUFTLEtBQUssR0FBRztRQUMxQixNQUFNLElBQUlDLFVBQVU7SUFDdEI7SUFDQSxPQUFPSixzQkFBc0JFO0FBQy9CO0FBQ0FHLE9BQU9DLFVBQVVMLDRCQUE0QkkseUJBQXlCRSxHQUFHLE1BQU1GLHlCQUF5QixHQUFHQSxPQUFPQyIsInNvdXJjZXMiOlsid2VicGFjazovL2Z1bGxzdGFjay1yb2xlLWJhc2VkLW5leHRqcy0yLy4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvcG9zc2libGVDb25zdHJ1Y3RvclJldHVybi5qcz8wZWI5Il0sInNvdXJjZXNDb250ZW50IjpbInZhciBfdHlwZW9mID0gcmVxdWlyZShcIi4vdHlwZW9mLmpzXCIpW1wiZGVmYXVsdFwiXTtcbnZhciBhc3NlcnRUaGlzSW5pdGlhbGl6ZWQgPSByZXF1aXJlKFwiLi9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQuanNcIik7XG5mdW5jdGlvbiBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybihzZWxmLCBjYWxsKSB7XG4gIGlmIChjYWxsICYmIChfdHlwZW9mKGNhbGwpID09PSBcIm9iamVjdFwiIHx8IHR5cGVvZiBjYWxsID09PSBcImZ1bmN0aW9uXCIpKSB7XG4gICAgcmV0dXJuIGNhbGw7XG4gIH0gZWxzZSBpZiAoY2FsbCAhPT0gdm9pZCAwKSB7XG4gICAgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkRlcml2ZWQgY29uc3RydWN0b3JzIG1heSBvbmx5IHJldHVybiBvYmplY3Qgb3IgdW5kZWZpbmVkXCIpO1xuICB9XG4gIHJldHVybiBhc3NlcnRUaGlzSW5pdGlhbGl6ZWQoc2VsZik7XG59XG5tb2R1bGUuZXhwb3J0cyA9IF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuLCBtb2R1bGUuZXhwb3J0cy5fX2VzTW9kdWxlID0gdHJ1ZSwgbW9kdWxlLmV4cG9ydHNbXCJkZWZhdWx0XCJdID0gbW9kdWxlLmV4cG9ydHM7Il0sIm5hbWVzIjpbIl90eXBlb2YiLCJyZXF1aXJlIiwiYXNzZXJ0VGhpc0luaXRpYWxpemVkIiwiX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4iLCJzZWxmIiwiY2FsbCIsIlR5cGVFcnJvciIsIm1vZHVsZSIsImV4cG9ydHMiLCJfX2VzTW9kdWxlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/@babel/runtime/helpers/possibleConstructorReturn.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/@babel/runtime/helpers/regeneratorRuntime.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/regeneratorRuntime.js ***!
  \*******************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nvar _typeof = (__webpack_require__(/*! ./typeof.js */ \"(sc_server)/./node_modules/@babel/runtime/helpers/typeof.js\")[\"default\"]);\nfunction _regeneratorRuntime() {\n    \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ \n    module.exports = _regeneratorRuntime = function _regeneratorRuntime() {\n        return exports;\n    }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n    var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, defineProperty = Object.defineProperty || function(obj, key, desc) {\n        obj[key] = desc.value;\n    }, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n    function define(obj, key, value) {\n        return Object.defineProperty(obj, key, {\n            value: value,\n            enumerable: !0,\n            configurable: !0,\n            writable: !0\n        }), obj[key];\n    }\n    try {\n        define({}, \"\");\n    } catch (err) {\n        define = function define(obj, key, value) {\n            return obj[key] = value;\n        };\n    }\n    function wrap(innerFn, outerFn, self, tryLocsList) {\n        var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []);\n        return defineProperty(generator, \"_invoke\", {\n            value: makeInvokeMethod(innerFn, self, context)\n        }), generator;\n    }\n    function tryCatch(fn, obj, arg) {\n        try {\n            return {\n                type: \"normal\",\n                arg: fn.call(obj, arg)\n            };\n        } catch (err) {\n            return {\n                type: \"throw\",\n                arg: err\n            };\n        }\n    }\n    exports.wrap = wrap;\n    var ContinueSentinel = {};\n    function Generator() {}\n    function GeneratorFunction() {}\n    function GeneratorFunctionPrototype() {}\n    var IteratorPrototype = {};\n    define(IteratorPrototype, iteratorSymbol, function() {\n        return this;\n    });\n    var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n    NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype);\n    var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype);\n    function defineIteratorMethods(prototype) {\n        [\n            \"next\",\n            \"throw\",\n            \"return\"\n        ].forEach(function(method) {\n            define(prototype, method, function(arg) {\n                return this._invoke(method, arg);\n            });\n        });\n    }\n    function AsyncIterator(generator, PromiseImpl) {\n        function invoke(method, arg, resolve, reject) {\n            var record = tryCatch(generator[method], generator, arg);\n            if (\"throw\" !== record.type) {\n                var result = record.arg, value = result.value;\n                return value && \"object\" == _typeof(value) && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function(value) {\n                    invoke(\"next\", value, resolve, reject);\n                }, function(err) {\n                    invoke(\"throw\", err, resolve, reject);\n                }) : PromiseImpl.resolve(value).then(function(unwrapped) {\n                    result.value = unwrapped, resolve(result);\n                }, function(error) {\n                    return invoke(\"throw\", error, resolve, reject);\n                });\n            }\n            reject(record.arg);\n        }\n        var previousPromise;\n        defineProperty(this, \"_invoke\", {\n            value: function value(method, arg) {\n                function callInvokeWithMethodAndArg() {\n                    return new PromiseImpl(function(resolve, reject) {\n                        invoke(method, arg, resolve, reject);\n                    });\n                }\n                return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();\n            }\n        });\n    }\n    function makeInvokeMethod(innerFn, self, context) {\n        var state = \"suspendedStart\";\n        return function(method, arg) {\n            if (\"executing\" === state) throw new Error(\"Generator is already running\");\n            if (\"completed\" === state) {\n                if (\"throw\" === method) throw arg;\n                return doneResult();\n            }\n            for(context.method = method, context.arg = arg;;){\n                var delegate = context.delegate;\n                if (delegate) {\n                    var delegateResult = maybeInvokeDelegate(delegate, context);\n                    if (delegateResult) {\n                        if (delegateResult === ContinueSentinel) continue;\n                        return delegateResult;\n                    }\n                }\n                if (\"next\" === context.method) context.sent = context._sent = context.arg;\n                else if (\"throw\" === context.method) {\n                    if (\"suspendedStart\" === state) throw state = \"completed\", context.arg;\n                    context.dispatchException(context.arg);\n                } else \"return\" === context.method && context.abrupt(\"return\", context.arg);\n                state = \"executing\";\n                var record = tryCatch(innerFn, self, context);\n                if (\"normal\" === record.type) {\n                    if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue;\n                    return {\n                        value: record.arg,\n                        done: context.done\n                    };\n                }\n                \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg);\n            }\n        };\n    }\n    function maybeInvokeDelegate(delegate, context) {\n        var methodName = context.method, method = delegate.iterator[methodName];\n        if (undefined === method) return context.delegate = null, \"throw\" === methodName && delegate.iterator[\"return\"] && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method) || \"return\" !== methodName && (context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a '\" + methodName + \"' method\")), ContinueSentinel;\n        var record = tryCatch(method, delegate.iterator, context.arg);\n        if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel;\n        var info = record.arg;\n        return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel);\n    }\n    function pushTryEntry(locs) {\n        var entry = {\n            tryLoc: locs[0]\n        };\n        1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry);\n    }\n    function resetTryEntry(entry) {\n        var record = entry.completion || {};\n        record.type = \"normal\", delete record.arg, entry.completion = record;\n    }\n    function Context(tryLocsList) {\n        this.tryEntries = [\n            {\n                tryLoc: \"root\"\n            }\n        ], tryLocsList.forEach(pushTryEntry, this), this.reset(!0);\n    }\n    function values(iterable) {\n        if (iterable) {\n            var iteratorMethod = iterable[iteratorSymbol];\n            if (iteratorMethod) return iteratorMethod.call(iterable);\n            if (\"function\" == typeof iterable.next) return iterable;\n            if (!isNaN(iterable.length)) {\n                var i = -1, next = function next() {\n                    for(; ++i < iterable.length;)if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next;\n                    return next.value = undefined, next.done = !0, next;\n                };\n                return next.next = next;\n            }\n        }\n        return {\n            next: doneResult\n        };\n    }\n    function doneResult() {\n        return {\n            value: undefined,\n            done: !0\n        };\n    }\n    return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, \"constructor\", {\n        value: GeneratorFunctionPrototype,\n        configurable: !0\n    }), defineProperty(GeneratorFunctionPrototype, \"constructor\", {\n        value: GeneratorFunction,\n        configurable: !0\n    }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function(genFun) {\n        var ctor = \"function\" == typeof genFun && genFun.constructor;\n        return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name));\n    }, exports.mark = function(genFun) {\n        return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun;\n    }, exports.awrap = function(arg) {\n        return {\n            __await: arg\n        };\n    }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function() {\n        return this;\n    }), exports.AsyncIterator = AsyncIterator, exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n        void 0 === PromiseImpl && (PromiseImpl = Promise);\n        var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl);\n        return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function(result) {\n            return result.done ? result.value : iter.next();\n        });\n    }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function() {\n        return this;\n    }), define(Gp, \"toString\", function() {\n        return \"[object Generator]\";\n    }), exports.keys = function(val) {\n        var object = Object(val), keys = [];\n        for(var key in object)keys.push(key);\n        return keys.reverse(), function next() {\n            for(; keys.length;){\n                var key = keys.pop();\n                if (key in object) return next.value = key, next.done = !1, next;\n            }\n            return next.done = !0, next;\n        };\n    }, exports.values = values, Context.prototype = {\n        constructor: Context,\n        reset: function reset(skipTempReset) {\n            if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for(var name in this)\"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined);\n        },\n        stop: function stop() {\n            this.done = !0;\n            var rootRecord = this.tryEntries[0].completion;\n            if (\"throw\" === rootRecord.type) throw rootRecord.arg;\n            return this.rval;\n        },\n        dispatchException: function dispatchException(exception) {\n            if (this.done) throw exception;\n            var context = this;\n            function handle(loc, caught) {\n                return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught;\n            }\n            for(var i = this.tryEntries.length - 1; i >= 0; --i){\n                var entry = this.tryEntries[i], record = entry.completion;\n                if (\"root\" === entry.tryLoc) return handle(\"end\");\n                if (entry.tryLoc <= this.prev) {\n                    var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\");\n                    if (hasCatch && hasFinally) {\n                        if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0);\n                        if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc);\n                    } else if (hasCatch) {\n                        if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0);\n                    } else {\n                        if (!hasFinally) throw new Error(\"try statement without catch or finally\");\n                        if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc);\n                    }\n                }\n            }\n        },\n        abrupt: function abrupt(type, arg) {\n            for(var i = this.tryEntries.length - 1; i >= 0; --i){\n                var entry = this.tryEntries[i];\n                if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) {\n                    var finallyEntry = entry;\n                    break;\n                }\n            }\n            finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null);\n            var record = finallyEntry ? finallyEntry.completion : {};\n            return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record);\n        },\n        complete: function complete(record, afterLoc) {\n            if (\"throw\" === record.type) throw record.arg;\n            return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel;\n        },\n        finish: function finish(finallyLoc) {\n            for(var i = this.tryEntries.length - 1; i >= 0; --i){\n                var entry = this.tryEntries[i];\n                if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel;\n            }\n        },\n        \"catch\": function _catch(tryLoc) {\n            for(var i = this.tryEntries.length - 1; i >= 0; --i){\n                var entry = this.tryEntries[i];\n                if (entry.tryLoc === tryLoc) {\n                    var record = entry.completion;\n                    if (\"throw\" === record.type) {\n                        var thrown = record.arg;\n                        resetTryEntry(entry);\n                    }\n                    return thrown;\n                }\n            }\n            throw new Error(\"illegal catch attempt\");\n        },\n        delegateYield: function delegateYield(iterable, resultName, nextLoc) {\n            return this.delegate = {\n                iterator: values(iterable),\n                resultName: resultName,\n                nextLoc: nextLoc\n            }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel;\n        }\n    }, exports;\n}\nmodule.exports = _regeneratorRuntime, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/@babel/runtime/helpers/regeneratorRuntime.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/@babel/runtime/helpers/setPrototypeOf.js":
/*!***************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/setPrototypeOf.js ***!
  \***************************************************************/
/***/ ((module) => {

"use strict";
eval("\nfunction _setPrototypeOf(o, p) {\n    module.exports = _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n        o.__proto__ = p;\n        return o;\n    }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n    return _setPrototypeOf(o, p);\n}\nmodule.exports = _setPrototypeOf, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9zZXRQcm90b3R5cGVPZi5qcyIsIm1hcHBpbmdzIjoiO0FBQUEsU0FBU0EsZ0JBQWdCQyxDQUFDLEVBQUVDLENBQUM7SUFDM0JDLE9BQU9DLFVBQVVKLGtCQUFrQkssT0FBT0MsaUJBQWlCRCxPQUFPQyxlQUFlQyxTQUFTLFNBQVNQLGdCQUFnQkMsQ0FBQyxFQUFFQyxDQUFDO1FBQ3JIRCxFQUFFTyxZQUFZTjtRQUNkLE9BQU9EO0lBQ1QsR0FBR0UseUJBQXlCTSxHQUFHLE1BQU1OLHlCQUF5QixHQUFHQSxPQUFPQztJQUN4RSxPQUFPSixnQkFBZ0JDLEdBQUdDO0FBQzVCO0FBQ0FDLE9BQU9DLFVBQVVKLGlCQUFpQkcseUJBQXlCTSxHQUFHLE1BQU1OLHlCQUF5QixHQUFHQSxPQUFPQyIsInNvdXJjZXMiOlsid2VicGFjazovL2Z1bGxzdGFjay1yb2xlLWJhc2VkLW5leHRqcy0yLy4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvc2V0UHJvdG90eXBlT2YuanM/MDUyNiJdLCJzb3VyY2VzQ29udGVudCI6WyJmdW5jdGlvbiBfc2V0UHJvdG90eXBlT2YobywgcCkge1xuICBtb2R1bGUuZXhwb3J0cyA9IF9zZXRQcm90b3R5cGVPZiA9IE9iamVjdC5zZXRQcm90b3R5cGVPZiA/IE9iamVjdC5zZXRQcm90b3R5cGVPZi5iaW5kKCkgOiBmdW5jdGlvbiBfc2V0UHJvdG90eXBlT2YobywgcCkge1xuICAgIG8uX19wcm90b19fID0gcDtcbiAgICByZXR1cm4gbztcbiAgfSwgbW9kdWxlLmV4cG9ydHMuX19lc01vZHVsZSA9IHRydWUsIG1vZHVsZS5leHBvcnRzW1wiZGVmYXVsdFwiXSA9IG1vZHVsZS5leHBvcnRzO1xuICByZXR1cm4gX3NldFByb3RvdHlwZU9mKG8sIHApO1xufVxubW9kdWxlLmV4cG9ydHMgPSBfc2V0UHJvdG90eXBlT2YsIG1vZHVsZS5leHBvcnRzLl9fZXNNb2R1bGUgPSB0cnVlLCBtb2R1bGUuZXhwb3J0c1tcImRlZmF1bHRcIl0gPSBtb2R1bGUuZXhwb3J0czsiXSwibmFtZXMiOlsiX3NldFByb3RvdHlwZU9mIiwibyIsInAiLCJtb2R1bGUiLCJleHBvcnRzIiwiT2JqZWN0Iiwic2V0UHJvdG90eXBlT2YiLCJiaW5kIiwiX19wcm90b19fIiwiX19lc01vZHVsZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/@babel/runtime/helpers/setPrototypeOf.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/@babel/runtime/helpers/toPrimitive.js":
/*!************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/toPrimitive.js ***!
  \************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nvar _typeof = (__webpack_require__(/*! ./typeof.js */ \"(sc_server)/./node_modules/@babel/runtime/helpers/typeof.js\")[\"default\"]);\nfunction _toPrimitive(input, hint) {\n    if (_typeof(input) !== \"object\" || input === null) return input;\n    var prim = input[Symbol.toPrimitive];\n    if (prim !== undefined) {\n        var res = prim.call(input, hint || \"default\");\n        if (_typeof(res) !== \"object\") return res;\n        throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n    }\n    return (hint === \"string\" ? String : Number)(input);\n}\nmodule.exports = _toPrimitive, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy90b1ByaW1pdGl2ZS5qcyIsIm1hcHBpbmdzIjoiO0FBQUEsSUFBSUEsVUFBVUMsa0hBQWlDO0FBQy9DLFNBQVNDLGFBQWFDLEtBQUssRUFBRUMsSUFBSTtJQUMvQixJQUFJSixRQUFRRyxXQUFXLFlBQVlBLFVBQVUsTUFBTSxPQUFPQTtJQUMxRCxJQUFJRSxPQUFPRixLQUFLLENBQUNHLE9BQU9DLFlBQVk7SUFDcEMsSUFBSUYsU0FBU0csV0FBVztRQUN0QixJQUFJQyxNQUFNSixLQUFLSyxLQUFLUCxPQUFPQyxRQUFRO1FBQ25DLElBQUlKLFFBQVFTLFNBQVMsVUFBVSxPQUFPQTtRQUN0QyxNQUFNLElBQUlFLFVBQVU7SUFDdEI7SUFDQSxPQUFPLENBQUNQLFNBQVMsV0FBV1EsU0FBU0MsTUFBSyxFQUFHVjtBQUMvQztBQUNBVyxPQUFPQyxVQUFVYixjQUFjWSx5QkFBeUJFLEdBQUcsTUFBTUYseUJBQXlCLEdBQUdBLE9BQU9DIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZnVsbHN0YWNrLXJvbGUtYmFzZWQtbmV4dGpzLTIvLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy90b1ByaW1pdGl2ZS5qcz85OTM3Il0sInNvdXJjZXNDb250ZW50IjpbInZhciBfdHlwZW9mID0gcmVxdWlyZShcIi4vdHlwZW9mLmpzXCIpW1wiZGVmYXVsdFwiXTtcbmZ1bmN0aW9uIF90b1ByaW1pdGl2ZShpbnB1dCwgaGludCkge1xuICBpZiAoX3R5cGVvZihpbnB1dCkgIT09IFwib2JqZWN0XCIgfHwgaW5wdXQgPT09IG51bGwpIHJldHVybiBpbnB1dDtcbiAgdmFyIHByaW0gPSBpbnB1dFtTeW1ib2wudG9QcmltaXRpdmVdO1xuICBpZiAocHJpbSAhPT0gdW5kZWZpbmVkKSB7XG4gICAgdmFyIHJlcyA9IHByaW0uY2FsbChpbnB1dCwgaGludCB8fCBcImRlZmF1bHRcIik7XG4gICAgaWYgKF90eXBlb2YocmVzKSAhPT0gXCJvYmplY3RcIikgcmV0dXJuIHJlcztcbiAgICB0aHJvdyBuZXcgVHlwZUVycm9yKFwiQEB0b1ByaW1pdGl2ZSBtdXN0IHJldHVybiBhIHByaW1pdGl2ZSB2YWx1ZS5cIik7XG4gIH1cbiAgcmV0dXJuIChoaW50ID09PSBcInN0cmluZ1wiID8gU3RyaW5nIDogTnVtYmVyKShpbnB1dCk7XG59XG5tb2R1bGUuZXhwb3J0cyA9IF90b1ByaW1pdGl2ZSwgbW9kdWxlLmV4cG9ydHMuX19lc01vZHVsZSA9IHRydWUsIG1vZHVsZS5leHBvcnRzW1wiZGVmYXVsdFwiXSA9IG1vZHVsZS5leHBvcnRzOyJdLCJuYW1lcyI6WyJfdHlwZW9mIiwicmVxdWlyZSIsIl90b1ByaW1pdGl2ZSIsImlucHV0IiwiaGludCIsInByaW0iLCJTeW1ib2wiLCJ0b1ByaW1pdGl2ZSIsInVuZGVmaW5lZCIsInJlcyIsImNhbGwiLCJUeXBlRXJyb3IiLCJTdHJpbmciLCJOdW1iZXIiLCJtb2R1bGUiLCJleHBvcnRzIiwiX19lc01vZHVsZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/@babel/runtime/helpers/toPrimitive.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/@babel/runtime/helpers/toPropertyKey.js":
/*!**************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/toPropertyKey.js ***!
  \**************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nvar _typeof = (__webpack_require__(/*! ./typeof.js */ \"(sc_server)/./node_modules/@babel/runtime/helpers/typeof.js\")[\"default\"]);\nvar toPrimitive = __webpack_require__(/*! ./toPrimitive.js */ \"(sc_server)/./node_modules/@babel/runtime/helpers/toPrimitive.js\");\nfunction _toPropertyKey(arg) {\n    var key = toPrimitive(arg, \"string\");\n    return _typeof(key) === \"symbol\" ? key : String(key);\n}\nmodule.exports = _toPropertyKey, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy90b1Byb3BlcnR5S2V5LmpzIiwibWFwcGluZ3MiOiI7QUFBQSxJQUFJQSxVQUFVQyxrSEFBaUM7QUFDL0MsSUFBSUMsY0FBY0QsbUJBQU9BLENBQUMsMEZBQWtCO0FBQzVDLFNBQVNFLGVBQWVDLEdBQUc7SUFDekIsSUFBSUMsTUFBTUgsWUFBWUUsS0FBSztJQUMzQixPQUFPSixRQUFRSyxTQUFTLFdBQVdBLE1BQU1DLE9BQU9EO0FBQ2xEO0FBQ0FFLE9BQU9DLFVBQVVMLGdCQUFnQkkseUJBQXlCRSxHQUFHLE1BQU1GLHlCQUF5QixHQUFHQSxPQUFPQyIsInNvdXJjZXMiOlsid2VicGFjazovL2Z1bGxzdGFjay1yb2xlLWJhc2VkLW5leHRqcy0yLy4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvdG9Qcm9wZXJ0eUtleS5qcz9lOWQ3Il0sInNvdXJjZXNDb250ZW50IjpbInZhciBfdHlwZW9mID0gcmVxdWlyZShcIi4vdHlwZW9mLmpzXCIpW1wiZGVmYXVsdFwiXTtcbnZhciB0b1ByaW1pdGl2ZSA9IHJlcXVpcmUoXCIuL3RvUHJpbWl0aXZlLmpzXCIpO1xuZnVuY3Rpb24gX3RvUHJvcGVydHlLZXkoYXJnKSB7XG4gIHZhciBrZXkgPSB0b1ByaW1pdGl2ZShhcmcsIFwic3RyaW5nXCIpO1xuICByZXR1cm4gX3R5cGVvZihrZXkpID09PSBcInN5bWJvbFwiID8ga2V5IDogU3RyaW5nKGtleSk7XG59XG5tb2R1bGUuZXhwb3J0cyA9IF90b1Byb3BlcnR5S2V5LCBtb2R1bGUuZXhwb3J0cy5fX2VzTW9kdWxlID0gdHJ1ZSwgbW9kdWxlLmV4cG9ydHNbXCJkZWZhdWx0XCJdID0gbW9kdWxlLmV4cG9ydHM7Il0sIm5hbWVzIjpbIl90eXBlb2YiLCJyZXF1aXJlIiwidG9QcmltaXRpdmUiLCJfdG9Qcm9wZXJ0eUtleSIsImFyZyIsImtleSIsIlN0cmluZyIsIm1vZHVsZSIsImV4cG9ydHMiLCJfX2VzTW9kdWxlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/@babel/runtime/helpers/toPropertyKey.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/@babel/runtime/helpers/typeof.js":
/*!*******************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/typeof.js ***!
  \*******************************************************/
/***/ ((module) => {

"use strict";
eval("\nfunction _typeof(obj) {\n    \"@babel/helpers - typeof\";\n    return module.exports = _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function(obj) {\n        return typeof obj;\n    } : function(obj) {\n        return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports, _typeof(obj);\n}\nmodule.exports = _typeof, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy90eXBlb2YuanMiLCJtYXBwaW5ncyI6IjtBQUFBLFNBQVNBLFFBQVFDLEdBQUc7SUFDbEI7SUFFQSxPQUFPLE9BQVFFLFVBQVVILFVBQVUsY0FBYyxPQUFPSSxVQUFVLFlBQVksT0FBT0EsT0FBT0MsV0FBVyxTQUFVSixHQUFHO1FBQ2xILE9BQU8sT0FBT0E7SUFDaEIsSUFBSSxTQUFVQSxHQUFHO1FBQ2YsT0FBT0EsT0FBTyxjQUFjLE9BQU9HLFVBQVVILElBQUlLLGdCQUFnQkYsVUFBVUgsUUFBUUcsT0FBT0csWUFBWSxXQUFXLE9BQU9OO0lBQzFILEdBQUdDLHlCQUF5Qk0sR0FBRyxNQUFNTix5QkFBeUIsR0FBR0EsT0FBT0MsU0FBVUgsUUFBUUM7QUFDNUY7QUFDQUMsT0FBT0MsVUFBVUgsU0FBU0UseUJBQXlCTSxHQUFHLE1BQU1OLHlCQUF5QixHQUFHQSxPQUFPQyIsInNvdXJjZXMiOlsid2VicGFjazovL2Z1bGxzdGFjay1yb2xlLWJhc2VkLW5leHRqcy0yLy4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvdHlwZW9mLmpzP2YzM2UiXSwic291cmNlc0NvbnRlbnQiOlsiZnVuY3Rpb24gX3R5cGVvZihvYmopIHtcbiAgXCJAYmFiZWwvaGVscGVycyAtIHR5cGVvZlwiO1xuXG4gIHJldHVybiAobW9kdWxlLmV4cG9ydHMgPSBfdHlwZW9mID0gXCJmdW5jdGlvblwiID09IHR5cGVvZiBTeW1ib2wgJiYgXCJzeW1ib2xcIiA9PSB0eXBlb2YgU3ltYm9sLml0ZXJhdG9yID8gZnVuY3Rpb24gKG9iaikge1xuICAgIHJldHVybiB0eXBlb2Ygb2JqO1xuICB9IDogZnVuY3Rpb24gKG9iaikge1xuICAgIHJldHVybiBvYmogJiYgXCJmdW5jdGlvblwiID09IHR5cGVvZiBTeW1ib2wgJiYgb2JqLmNvbnN0cnVjdG9yID09PSBTeW1ib2wgJiYgb2JqICE9PSBTeW1ib2wucHJvdG90eXBlID8gXCJzeW1ib2xcIiA6IHR5cGVvZiBvYmo7XG4gIH0sIG1vZHVsZS5leHBvcnRzLl9fZXNNb2R1bGUgPSB0cnVlLCBtb2R1bGUuZXhwb3J0c1tcImRlZmF1bHRcIl0gPSBtb2R1bGUuZXhwb3J0cyksIF90eXBlb2Yob2JqKTtcbn1cbm1vZHVsZS5leHBvcnRzID0gX3R5cGVvZiwgbW9kdWxlLmV4cG9ydHMuX19lc01vZHVsZSA9IHRydWUsIG1vZHVsZS5leHBvcnRzW1wiZGVmYXVsdFwiXSA9IG1vZHVsZS5leHBvcnRzOyJdLCJuYW1lcyI6WyJfdHlwZW9mIiwib2JqIiwibW9kdWxlIiwiZXhwb3J0cyIsIlN5bWJvbCIsIml0ZXJhdG9yIiwiY29uc3RydWN0b3IiLCJwcm90b3R5cGUiLCJfX2VzTW9kdWxlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/@babel/runtime/helpers/typeof.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/@babel/runtime/helpers/wrapNativeSuper.js":
/*!****************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/wrapNativeSuper.js ***!
  \****************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nvar getPrototypeOf = __webpack_require__(/*! ./getPrototypeOf.js */ \"(sc_server)/./node_modules/@babel/runtime/helpers/getPrototypeOf.js\");\nvar setPrototypeOf = __webpack_require__(/*! ./setPrototypeOf.js */ \"(sc_server)/./node_modules/@babel/runtime/helpers/setPrototypeOf.js\");\nvar isNativeFunction = __webpack_require__(/*! ./isNativeFunction.js */ \"(sc_server)/./node_modules/@babel/runtime/helpers/isNativeFunction.js\");\nvar construct = __webpack_require__(/*! ./construct.js */ \"(sc_server)/./node_modules/@babel/runtime/helpers/construct.js\");\nfunction _wrapNativeSuper(Class) {\n    var _cache = typeof Map === \"function\" ? new Map() : undefined;\n    module.exports = _wrapNativeSuper = function _wrapNativeSuper(Class) {\n        if (Class === null || !isNativeFunction(Class)) return Class;\n        if (typeof Class !== \"function\") {\n            throw new TypeError(\"Super expression must either be null or a function\");\n        }\n        if (typeof _cache !== \"undefined\") {\n            if (_cache.has(Class)) return _cache.get(Class);\n            _cache.set(Class, Wrapper);\n        }\n        function Wrapper() {\n            return construct(Class, arguments, getPrototypeOf(this).constructor);\n        }\n        Wrapper.prototype = Object.create(Class.prototype, {\n            constructor: {\n                value: Wrapper,\n                enumerable: false,\n                writable: true,\n                configurable: true\n            }\n        });\n        return setPrototypeOf(Wrapper, Class);\n    }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n    return _wrapNativeSuper(Class);\n}\nmodule.exports = _wrapNativeSuper, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy93cmFwTmF0aXZlU3VwZXIuanMiLCJtYXBwaW5ncyI6IjtBQUFBLElBQUlBLGlCQUFpQkMsbUJBQU9BLENBQUMsZ0dBQXFCO0FBQ2xELElBQUlDLGlCQUFpQkQsbUJBQU9BLENBQUMsZ0dBQXFCO0FBQ2xELElBQUlFLG1CQUFtQkYsbUJBQU9BLENBQUMsb0dBQXVCO0FBQ3RELElBQUlHLFlBQVlILG1CQUFPQSxDQUFDLHNGQUFnQjtBQUN4QyxTQUFTSSxpQkFBaUJDLEtBQUs7SUFDN0IsSUFBSUMsU0FBUyxPQUFPQyxRQUFRLGFBQWEsSUFBSUEsUUFBUUM7SUFDckRDLE9BQU9DLFVBQVVOLG1CQUFtQixTQUFTQSxpQkFBaUJDLEtBQUs7UUFDakUsSUFBSUEsVUFBVSxRQUFRLENBQUNILGlCQUFpQkcsUUFBUSxPQUFPQTtRQUN2RCxJQUFJLE9BQU9BLFVBQVUsWUFBWTtZQUMvQixNQUFNLElBQUlNLFVBQVU7UUFDdEI7UUFDQSxJQUFJLE9BQU9MLFdBQVcsYUFBYTtZQUNqQyxJQUFJQSxPQUFPTSxJQUFJUCxRQUFRLE9BQU9DLE9BQU9PLElBQUlSO1lBQ3pDQyxPQUFPUSxJQUFJVCxPQUFPVTtRQUNwQjtRQUNBLFNBQVNBO1lBQ1AsT0FBT1osVUFBVUUsT0FBT1csV0FBV2pCLGVBQWUsSUFBSSxFQUFFa0I7UUFDMUQ7UUFDQUYsUUFBUUcsWUFBWUMsT0FBT0MsT0FBT2YsTUFBTWEsV0FBVztZQUNqREQsYUFBYTtnQkFDWEksT0FBT047Z0JBQ1BPLFlBQVk7Z0JBQ1pDLFVBQVU7Z0JBQ1ZDLGNBQWM7WUFDaEI7UUFDRjtRQUNBLE9BQU92QixlQUFlYyxTQUFTVjtJQUNqQyxHQUFHSSx5QkFBeUJnQixHQUFHLE1BQU1oQix5QkFBeUIsR0FBR0EsT0FBT0M7SUFDeEUsT0FBT04saUJBQWlCQztBQUMxQjtBQUNBSSxPQUFPQyxVQUFVTixrQkFBa0JLLHlCQUF5QmdCLEdBQUcsTUFBTWhCLHlCQUF5QixHQUFHQSxPQUFPQyIsInNvdXJjZXMiOlsid2VicGFjazovL2Z1bGxzdGFjay1yb2xlLWJhc2VkLW5leHRqcy0yLy4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvd3JhcE5hdGl2ZVN1cGVyLmpzP2Y1MjEiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIGdldFByb3RvdHlwZU9mID0gcmVxdWlyZShcIi4vZ2V0UHJvdG90eXBlT2YuanNcIik7XG52YXIgc2V0UHJvdG90eXBlT2YgPSByZXF1aXJlKFwiLi9zZXRQcm90b3R5cGVPZi5qc1wiKTtcbnZhciBpc05hdGl2ZUZ1bmN0aW9uID0gcmVxdWlyZShcIi4vaXNOYXRpdmVGdW5jdGlvbi5qc1wiKTtcbnZhciBjb25zdHJ1Y3QgPSByZXF1aXJlKFwiLi9jb25zdHJ1Y3QuanNcIik7XG5mdW5jdGlvbiBfd3JhcE5hdGl2ZVN1cGVyKENsYXNzKSB7XG4gIHZhciBfY2FjaGUgPSB0eXBlb2YgTWFwID09PSBcImZ1bmN0aW9uXCIgPyBuZXcgTWFwKCkgOiB1bmRlZmluZWQ7XG4gIG1vZHVsZS5leHBvcnRzID0gX3dyYXBOYXRpdmVTdXBlciA9IGZ1bmN0aW9uIF93cmFwTmF0aXZlU3VwZXIoQ2xhc3MpIHtcbiAgICBpZiAoQ2xhc3MgPT09IG51bGwgfHwgIWlzTmF0aXZlRnVuY3Rpb24oQ2xhc3MpKSByZXR1cm4gQ2xhc3M7XG4gICAgaWYgKHR5cGVvZiBDbGFzcyAhPT0gXCJmdW5jdGlvblwiKSB7XG4gICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKFwiU3VwZXIgZXhwcmVzc2lvbiBtdXN0IGVpdGhlciBiZSBudWxsIG9yIGEgZnVuY3Rpb25cIik7XG4gICAgfVxuICAgIGlmICh0eXBlb2YgX2NhY2hlICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICBpZiAoX2NhY2hlLmhhcyhDbGFzcykpIHJldHVybiBfY2FjaGUuZ2V0KENsYXNzKTtcbiAgICAgIF9jYWNoZS5zZXQoQ2xhc3MsIFdyYXBwZXIpO1xuICAgIH1cbiAgICBmdW5jdGlvbiBXcmFwcGVyKCkge1xuICAgICAgcmV0dXJuIGNvbnN0cnVjdChDbGFzcywgYXJndW1lbnRzLCBnZXRQcm90b3R5cGVPZih0aGlzKS5jb25zdHJ1Y3Rvcik7XG4gICAgfVxuICAgIFdyYXBwZXIucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShDbGFzcy5wcm90b3R5cGUsIHtcbiAgICAgIGNvbnN0cnVjdG9yOiB7XG4gICAgICAgIHZhbHVlOiBXcmFwcGVyLFxuICAgICAgICBlbnVtZXJhYmxlOiBmYWxzZSxcbiAgICAgICAgd3JpdGFibGU6IHRydWUsXG4gICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZVxuICAgICAgfVxuICAgIH0pO1xuICAgIHJldHVybiBzZXRQcm90b3R5cGVPZihXcmFwcGVyLCBDbGFzcyk7XG4gIH0sIG1vZHVsZS5leHBvcnRzLl9fZXNNb2R1bGUgPSB0cnVlLCBtb2R1bGUuZXhwb3J0c1tcImRlZmF1bHRcIl0gPSBtb2R1bGUuZXhwb3J0cztcbiAgcmV0dXJuIF93cmFwTmF0aXZlU3VwZXIoQ2xhc3MpO1xufVxubW9kdWxlLmV4cG9ydHMgPSBfd3JhcE5hdGl2ZVN1cGVyLCBtb2R1bGUuZXhwb3J0cy5fX2VzTW9kdWxlID0gdHJ1ZSwgbW9kdWxlLmV4cG9ydHNbXCJkZWZhdWx0XCJdID0gbW9kdWxlLmV4cG9ydHM7Il0sIm5hbWVzIjpbImdldFByb3RvdHlwZU9mIiwicmVxdWlyZSIsInNldFByb3RvdHlwZU9mIiwiaXNOYXRpdmVGdW5jdGlvbiIsImNvbnN0cnVjdCIsIl93cmFwTmF0aXZlU3VwZXIiLCJDbGFzcyIsIl9jYWNoZSIsIk1hcCIsInVuZGVmaW5lZCIsIm1vZHVsZSIsImV4cG9ydHMiLCJUeXBlRXJyb3IiLCJoYXMiLCJnZXQiLCJzZXQiLCJXcmFwcGVyIiwiYXJndW1lbnRzIiwiY29uc3RydWN0b3IiLCJwcm90b3R5cGUiLCJPYmplY3QiLCJjcmVhdGUiLCJ2YWx1ZSIsImVudW1lcmFibGUiLCJ3cml0YWJsZSIsImNvbmZpZ3VyYWJsZSIsIl9fZXNNb2R1bGUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/@babel/runtime/helpers/wrapNativeSuper.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/@babel/runtime/regenerator/index.js":
/*!**********************************************************!*\
  !*** ./node_modules/@babel/runtime/regenerator/index.js ***!
  \**********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("// TODO(Babel 8): Remove this file.\n\nvar runtime = __webpack_require__(/*! ../helpers/regeneratorRuntime */ \"(sc_server)/./node_modules/@babel/runtime/helpers/regeneratorRuntime.js\")();\nmodule.exports = runtime;\n// Copied from https://github.com/facebook/regenerator/blob/main/packages/runtime/runtime.js#L736=\ntry {\n    regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n    if (typeof globalThis === \"object\") {\n        globalThis.regeneratorRuntime = runtime;\n    } else {\n        Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvcmVnZW5lcmF0b3IvaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQUEsbUNBQW1DOztBQUVuQyxJQUFJQSxVQUFVQyxtQkFBT0EsQ0FBQyw4R0FBK0I7QUFDckRDLE9BQU9DLFVBQVVIO0FBRWpCLGtHQUFrRztBQUNsRyxJQUFJO0lBQ0ZJLHFCQUFxQko7QUFDdkIsRUFBRSxPQUFPSyxzQkFBc0I7SUFDN0IsSUFBSSxPQUFPQyxlQUFlLFVBQVU7UUFDbENBLFdBQVdGLHFCQUFxQko7SUFDbEMsT0FBTztRQUNMTyxTQUFTLEtBQUssMEJBQTBCUDtJQUMxQztBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZnVsbHN0YWNrLXJvbGUtYmFzZWQtbmV4dGpzLTIvLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvcmVnZW5lcmF0b3IvaW5kZXguanM/ODE0NCJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBUT0RPKEJhYmVsIDgpOiBSZW1vdmUgdGhpcyBmaWxlLlxuXG52YXIgcnVudGltZSA9IHJlcXVpcmUoXCIuLi9oZWxwZXJzL3JlZ2VuZXJhdG9yUnVudGltZVwiKSgpO1xubW9kdWxlLmV4cG9ydHMgPSBydW50aW1lO1xuXG4vLyBDb3BpZWQgZnJvbSBodHRwczovL2dpdGh1Yi5jb20vZmFjZWJvb2svcmVnZW5lcmF0b3IvYmxvYi9tYWluL3BhY2thZ2VzL3J1bnRpbWUvcnVudGltZS5qcyNMNzM2PVxudHJ5IHtcbiAgcmVnZW5lcmF0b3JSdW50aW1lID0gcnVudGltZTtcbn0gY2F0Y2ggKGFjY2lkZW50YWxTdHJpY3RNb2RlKSB7XG4gIGlmICh0eXBlb2YgZ2xvYmFsVGhpcyA9PT0gXCJvYmplY3RcIikge1xuICAgIGdsb2JhbFRoaXMucmVnZW5lcmF0b3JSdW50aW1lID0gcnVudGltZTtcbiAgfSBlbHNlIHtcbiAgICBGdW5jdGlvbihcInJcIiwgXCJyZWdlbmVyYXRvclJ1bnRpbWUgPSByXCIpKHJ1bnRpbWUpO1xuICB9XG59XG4iXSwibmFtZXMiOlsicnVudGltZSIsInJlcXVpcmUiLCJtb2R1bGUiLCJleHBvcnRzIiwicmVnZW5lcmF0b3JSdW50aW1lIiwiYWNjaWRlbnRhbFN0cmljdE1vZGUiLCJnbG9iYWxUaGlzIiwiRnVuY3Rpb24iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/@babel/runtime/regenerator/index.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/openid-client/package.json":
/*!*************************************************!*\
  !*** ./node_modules/openid-client/package.json ***!
  \*************************************************/
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"name":"openid-client","version":"5.4.2","description":"OpenID Connect Relying Party (RP, Client) implementation for Node.js runtime, supports passportjs","keywords":["auth","authentication","basic","certified","client","connect","dynamic","electron","hybrid","identity","implicit","oauth","oauth2","oidc","openid","passport","relying party","strategy"],"homepage":"https://github.com/panva/node-openid-client","repository":"panva/node-openid-client","funding":{"url":"https://github.com/sponsors/panva"},"license":"MIT","author":"Filip Skokan <panva.ip@gmail.com>","exports":{"types":"./types/index.d.ts","import":"./lib/index.mjs","require":"./lib/index.js"},"main":"./lib/index.js","types":"./types/index.d.ts","files":["lib","types/index.d.ts"],"scripts":{"format":"npx prettier --loglevel silent --write ./lib ./test ./certification ./types","test":"mocha test/**/*.test.js"},"dependencies":{"jose":"^4.14.1","lru-cache":"^6.0.0","object-hash":"^2.2.0","oidc-token-hash":"^5.0.3"},"devDependencies":{"@types/node":"^16.18.24","@types/passport":"^1.0.12","base64url":"^3.0.1","chai":"^4.3.7","jose2":"npm:jose@^2.0.6","mocha":"^10.2.0","nock":"^13.3.0","prettier":"^2.8.8","readable-mock-req":"^0.2.2","sinon":"^9.2.4","timekeeper":"^2.2.0"},"standard-version":{"scripts":{"postchangelog":"sed -i \'\' -e \'s/### \\\\[/## [/g\' CHANGELOG.md"},"types":[{"type":"feat","section":"Features"},{"type":"fix","section":"Fixes"},{"type":"chore","hidden":true},{"type":"docs","hidden":true},{"type":"style","hidden":true},{"type":"refactor","section":"Refactor","hidden":false},{"type":"perf","section":"Performance","hidden":false},{"type":"test","hidden":true}]}}');

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = (__webpack_exec__("(sc_server)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fauth%2F%5B...nextauth%5D%2Froute&page=%2Fapi%2Fauth%2F%5B...nextauth%5D%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fauth%2F%5B...nextauth%5D%2Froute.js&appDir=%2Fhome%2Fubuntu%2FDesktop%2Fall-mern-stack%2Ffullstack-role-based-nextjs-nextauth%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2Fhome%2Fubuntu%2FDesktop%2Fall-mern-stack%2Ffullstack-role-based-nextjs-nextauth&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=!"));
module.exports = __webpack_exports__;

})();